var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AggregateResult.html",[0,0.282,1,2.326]],["body/interfaces/AggregateResult.html",[0,0.535,1,3.37,2,1.19,3,0.072,4,0.072,5,0.072,6,1.595,7,3.334,8,1.108,9,4.324,10,4.671,11,0.007,12,0.385,13,0.785,14,5.329,15,2.688,16,1.425,17,0.008,18,1.676,19,0.714,20,1.645,21,4.443,22,2.907,23,0.124,24,2.757,25,2.916,26,3.075,27,3.356,28,1.79,29,2.806,30,3.334,31,3.334,32,2.916,33,2.069,34,3.585,35,3.176,36,1.748,37,3.886,38,3.176,39,3.176,40,3.039,41,2.916,42,3.039,43,3.176,44,2.916,45,4.055,46,1.784,47,1.341,48,0.876,49,1.595,50,3.483,51,2.069,52,2.705,53,0.632,54,3.039,55,1.87,56,2.806,57,2.916,58,3.176,59,4.049,60,3.739,61,3.886,62,3.886,63,4.205,64,4.554,65,1.294,66,3.37,67,3.739,68,1.872,69,1.872,70,2.614,71,2.806,72,2.614,73,2.499,74,2.806,75,4.233,76,3.039,77,3.039,78,3.739,79,3.739,80,2.705,81,3.176,82,1.527,83,2.308,84,2.705,85,3.039,86,3.176,87,0.789,88,3.334,89,2.377,90,3.039,91,3.176,92,2.182,93,3.167,94,2.916,95,2.875,96,2.916,97,2.308,98,3.176,99,0.005,100,0.004]],["title/components/AppComponent.html",[101,0.726,102,1.436]],["body/components/AppComponent.html",[3,0.086,4,0.071,5,0.047,8,0.484,11,0.005,12,0.457,13,0.581,15,1.974,16,0.976,17,0.008,19,0.403,20,1.082,23,0.047,24,1.355,26,2.276,33,2.04,34,1.469,36,1.801,47,1.422,48,1.494,49,2.106,51,1.355,52,1.772,53,0.623,55,0.919,56,1.837,65,1.446,67,3.974,73,1.645,93,1.556,99,0.004,100,0.006,101,1.345,102,2.061,103,2.282,104,1,105,1.045,106,1.092,107,0.938,108,3.241,109,4.327,110,4.327,111,4.882,112,3.47,113,3.688,114,2.524,115,4.882,116,3.288,117,3.066,118,2.301,119,2.494,120,1.608,121,5.872,122,1.645,123,4.882,124,5.872,125,2.428,126,5.872,127,1.276,128,1.471,129,1.391,130,3.241,131,1.384,132,3.961,133,3.288,134,4.722,135,3.961,136,1.946,137,3.21,138,4.882,139,4.882,140,4.882,141,2.519,142,3.961,143,3.241,144,2.416,145,1.384,146,3.47,147,3.288,148,1.935,149,4.882,150,0.341,151,0.359,152,2.344,153,1.429,154,1.656,155,2.63,156,1.469,157,5.566,158,2.63,159,3.288,160,3.956,161,2.873,162,2.304,163,2.449,164,3.47,165,3.241,166,2.449,167,3.288,168,2.873,169,1.852,170,2.873,171,2.449,172,3.961,173,2.061,174,2.873,175,1.656,176,2.449,177,2.061,178,3.241,179,0.101,180,1.682,181,1.226,182,3.688,183,1.995,184,2.449,185,2.873,186,3.241,187,3.241,188,3.241,189,2.873,190,3.241,191,2.63,192,1.91,193,3.09,194,2.82,195,3.688,196,7.367,197,1.174,198,5.205,199,2.332,200,4.882,201,3.241,202,2.449,203,3.241,204,0.958,205,1.363,206,3.241,207,3.241,208,3.241,209,3.241,210,3.241,211,3.241,212,2.63,213,2.63,214,3.241,215,1.772,216,1.045,217,2.08,218,3.241,219,0.55,220,3.241,221,3.241,222,3.241,223,2.449,224,1.867,225,2.304,226,5.688,227,3.961,228,2.304,229,3.241,230,3.241,231,5.688,232,2.449,233,1.32,234,3.241,235,1.91,236,1.117,237,1.656,238,1.772,239,2.276,240,2.416,241,3.241,242,4.882,243,3.241,244,3.241,245,4.882,246,3.241,247,1.276,248,1.772,249,2.578,250,3.241,251,4.882,252,1.356,253,1.736,254,3.241,255,4.882,256,3.241,257,3.241,258,3.241,259,1.837,260,3.241,261,2.183,262,4.882,263,4.882,264,4.327,265,4.882,266,4.882,267,4.882,268,3.09,269,1.604,270,1.91,271,2.362,272,2.717,273,3.133,274,2.767,275,2.094,276,2.449,277,1.355,278,2.63,279,2.212,280,2.183,281,2.073,282,1.91,283,2.152,284,1.892,285,3.101,286,1.511,287,3.241,288,2.304,289,2.578,290,1.413,291,2.416,292,2.578,293,2.494,294,2.63,295,1.712,296,1.511,297,2.668,298,1.656,299,2.82,300,1.355,301,1.511,302,1.429,303,2.183,304,3.241,305,1.91,306,2.578,307,1.99,308,1.837,309,1.712,310,2.873,311,2.63,312,2.183,313,2.873,314,2.873,315,2.63,316,3.241,317,0.539,318,1.506,319,1.573,320,1.092,321,2.202,322,1.092,323,1.092,324,1.022,325,1.092,326,1.022,327,1.092,328,1.022,329,1.231,330,1.092,331,1.022,332,1.045,333,1.092,334,1.022,335,1.092,336,1.022,337,1.092,338,1.022,339,1.092,340,1.022,341,1.978,342,1.092,343,1.022,344,1.645,345,1.022,346,1.068,347,1.092,348,1.022,349,1.506,350,1.645,351,1.022,352,1.092,353,1.022,354,1.092,355,1.022,356,1.022,357,1.092,358,1.022,359,1.092,360,1.022,361,1.645,362,1.022,363,1.092,364,1.022,365,1.092,366,1.022,367,1.092,368,1.045,369,1.092,370,1.022,371,1.092,372,1.022,373,1.092,374,1.022,375,1.022,376,1.092,377,1.022,378,1.022,379,1.092,380,1.092]],["title/modules/AppModule.html",[381,0.651,382,3.44]],["body/modules/AppModule.html",[3,0.08,4,0.08,5,0.08,11,0.005,17,0.008,23,0.08,99,0.006,100,0.005,102,2.919,136,1.515,150,0.385,151,0.604,170,4.835,171,4.121,174,4.835,175,2.787,179,0.17,204,1.613,226,4.427,231,4.427,317,0.907,381,0.78,382,7.248,383,1.547,384,1.547,385,2.349,386,2.3,387,2.079,388,1.648,389,4.835,390,4.835,391,4.835,392,4.835,393,6.188,394,6.188,395,5.864,396,5.587,397,6.188,398,6.188,399,5.864,400,6.188,401,6.188,402,6.188,403,1.993,404,1.453,405,5.455,406,2.169,407,2.123,408,3.843,409,2.787,410,6.231,411,4.997,412,6.231,413,4.835,414,5.455,415,5.455,416,5.455,417,4.835,418,5.455,419,4.835,420,3.878,421,4.835,422,5.455,423,3.501,424,5.455,425,4.835,426,4.427,427,3.878,428,4.427,429,5.455,430,4.997,431,5.455,432,5.455,433,4.427,434,5.455,435,6.231,436,5.455,437,4.427,438,4.427]],["title/modules/BodyModule.html",[381,0.651,393,3.236]],["body/modules/BodyModule.html",[3,0.098,4,0.098,5,0.098,11,0.006,17,0.008,23,0.098,99,0.007,100,0.006,128,1.69,150,0.35,151,0.747,179,0.21,204,1.996,317,1.122,381,0.965,383,1.913,384,1.913,385,2.423,386,1.996,387,1.996,388,2.585,393,6.588,403,2.274,404,1.798,406,2.475,407,2.423,439,5.982,440,5.982,441,5.982,442,6.763,443,6.749,444,2.764,445,2.274,446,5.476,447,6.749]],["title/classes/BodyUI.html",[179,0.142,448,3.44]],["body/classes/BodyUI.html",[0,0.224,3,0.053,4,0.053,5,0.053,6,2.892,8,0.541,11,0.003,12,0.282,13,0.631,16,1.031,17,0.008,18,0.999,19,0.74,20,1.757,23,0.077,28,0.787,36,1.478,46,1.766,53,0.98,87,1.343,99,0.004,100,0.003,118,1.301,125,2.818,127,1.722,128,2.278,129,1.899,145,1.504,150,0.314,153,1.598,156,1.642,179,0.195,197,1.275,205,1.758,219,1.346,236,1.828,252,1.772,301,2.925,302,1.598,329,0.683,403,1.778,448,4.007,449,1.852,450,6.778,451,3.212,452,4.701,453,3.573,454,4.225,455,2.806,456,5.455,457,4.711,458,7.026,459,5.559,460,5.559,461,5.559,462,5.559,463,5.559,464,5.559,465,5.304,466,5.304,467,5.304,468,5.304,469,5.304,470,1.194,471,4.701,472,2.431,473,5.304,474,1.922,475,3.256,476,1.39,477,3.625,478,3.625,479,3.625,480,4.842,481,4.701,482,3.625,483,4.67,484,3.625,485,4.701,486,3.625,487,3.625,488,4.701,489,3.625,490,3.625,491,4.701,492,4.99,493,5.09,494,3.012,495,4.443,496,3.625,497,4.739,498,1.441,499,4.701,500,3.625,501,4.701,502,3.625,503,1.914,504,4.701,505,3.625,506,4.701,507,3.625,508,2.403,509,5.559,510,4.701,511,4.701,512,2.055,513,2.326,514,2.225,515,2.055,516,3.212,517,1.598,518,2.941,519,2.135,520,2.326,521,1.69,522,2.055,523,2.135,524,2.326,525,3.105,526,3.212,527,3.212,528,2.135,529,3.212,530,1.515,531,3.212,532,3.212,533,3.212,534,3.212,535,3.212,536,2.225,537,3.212,538,3.212,539,3.212,540,4.701,541,3.212,542,3.212,543,3.212,544,1.74,545,1.981,546,1.642,547,2.326,548,3.212,549,4.701,550,3.212,551,2.441,552,3.212,553,4.701,554,3.212,555,2.801,556,5.559,557,4.701,558,4.701,559,3.212,560,3.212,561,6.141,562,4.701,563,3.212,564,5.559,565,1.339,566,3.212,567,3.212,568,4.701,569,3.212,570,3.212,571,3.212,572,3.404,573,3.212,574,3.212,575,3.212,576,4.701,577,5.559,578,2.555,579,6.511,580,4.701,581,4.701,582,4.701,583,3.212,584,3.212,585,3.212,586,3.212,587,2.941,588,3.212,589,3.212,590,3.212,591,3.212,592,3.212,593,1.44,594,3.212,595,3.212,596,3.212,597,2.441,598,3.212,599,2.738,600,3.212,601,3.212,602,3.212]],["title/classes/BodyUILayer.html",[179,0.142,456,3.236]],["body/classes/BodyUILayer.html",[0,0.273,3,0.089,4,0.064,5,0.064,6,2.551,11,0.004,12,0.343,13,0.726,16,1.326,17,0.008,18,1.611,19,0.653,20,0.977,23,0.089,28,1.638,36,1.978,46,1.813,53,0.779,69,2.306,87,0.702,95,1.708,99,0.005,100,0.004,125,2.157,127,0.958,128,1.983,129,1.605,141,1.452,145,2.244,150,0.343,179,0.137,197,1.466,205,1.272,216,1.965,219,1.425,236,1.519,240,2.182,247,1.72,252,1.741,253,1.303,282,2.597,329,1.148,449,2.252,450,5.981,454,5.333,456,5.36,474,1.104,476,1.114,480,4.275,492,3.743,497,3.33,498,1.371,512,2.499,513,3.913,514,2.706,525,3.919,530,1.842,544,3.356,545,3.332,546,2.763,561,4.606,565,2.581,578,3.072,593,3.144,599,3.33,603,3.133,604,2.548,605,6.195,606,3.081,607,6.195,608,6.097,609,6.684,610,6.684,611,4.408,612,5.403,613,4.408,614,4.408,615,4.408,616,3.907,617,5.403,618,6.195,619,3.577,620,2.969,621,3.907,622,3.577,623,5.403,624,3.907,625,3.577,626,6.195,627,3.577,628,5.403,629,3.577,630,3.907,631,3.133,632,3.577,633,3.907,634,3.907,635,3.907,636,3.907,637,3.907,638,3.907,639,2.829,640,3.33,641,5.697,642,4.606,643,4.606,644,5.697,645,3.33,646,3.33,647,4.606,648,3.33,649,4.443,650,1.997,651,5.403,652,5.403,653,2.055,654,3.907,655,3.907,656,3.907,657,6.195,658,3.907,659,3.907,660,5.403,661,3.907,662,3.907,663,3.907,664,5.403,665,4.333,666,5.403,667,3.577,668,3.907,669,2.328,670,3.907,671,6.195,672,3.907,673,3.907,674,3.907,675,3.907,676,3.33,677,5.403,678,5.403,679,3.907,680,5.403,681,5.697,682,3.907,683,5.403,684,3.907,685,3.33,686,2.829,687,3.907,688,3.907,689,3.907,690,3.907,691,5.403,692,6.195,693,6.195,694,5.403,695,5.403,696,5.403,697,3.907,698,3.907,699,3.907,700,3.907,701,3.907,702,3.907,703,3.907,704,2.829,705,3.907,706,3.907,707,3.33,708,3.907,709,3.907,710,3.33,711,3.907,712,3.907,713,3.907]],["title/interfaces/BodyUIProps.html",[0,0.282,518,3.695]],["body/interfaces/BodyUIProps.html",[0,0.28,2,1.089,3,0.066,4,0.066,5,0.066,6,1.46,11,0.004,12,0.352,13,0.739,16,1.263,17,0.008,18,1.17,19,0.585,23,0.091,28,1.657,36,1.464,46,1.922,99,0.005,100,0.004,118,1.112,125,2.609,128,1.776,145,1.761,150,0.338,153,1.997,156,2.053,179,0.194,205,1.667,219,1.436,236,2.141,252,1.906,301,2.112,302,1.997,329,0.853,403,2.01,448,3.422,450,3.422,451,4.015,452,4.015,453,3.051,454,4.185,455,2.639,456,5.04,457,4.352,458,7.085,459,4.015,460,4.015,461,4.015,462,4.015,463,4.015,464,4.015,471,4.015,472,1.755,475,2.781,476,1.392,480,4.68,481,4.015,483,4.494,485,4.015,488,4.015,491,4.015,493,3.675,495,4.369,497,3.422,499,4.015,501,4.015,504,4.015,506,4.015,508,2.053,509,6.284,510,5.506,511,5.506,512,2.568,513,2.907,514,2.781,515,2.568,516,4.015,517,1.997,518,5.041,519,4.494,520,4.55,521,3.557,522,4.019,523,2.669,524,2.907,525,3.51,526,4.015,527,4.015,528,2.669,529,4.015,530,1.893,531,4.015,532,4.015,533,4.015,534,4.015,535,4.015,536,2.781,537,4.015,538,4.015,539,4.015,540,5.506,541,4.015,542,4.015,543,4.015,544,2.175,545,2.476,546,2.053,547,2.907,548,4.015,549,5.506,550,4.015,551,3.051,552,4.015,553,5.506,554,4.015,555,3.28,556,6.284,557,5.506,558,5.506,559,4.015,560,4.015,561,6.505,562,5.506,563,4.015,564,6.284,565,1.673,566,4.015,567,4.015,568,5.506,569,4.015,570,4.015,571,4.015,572,3.987,573,4.015,574,4.015,575,4.015,576,5.506,577,6.284,578,2.888,579,7.085,580,5.506,581,5.506,582,5.506,583,4.015,584,4.015,585,4.015,586,4.015,587,3.675,588,4.015,589,4.015,590,4.015,591,4.015,592,4.015,593,1.799,594,4.015,595,4.015,596,4.015,597,3.051,598,4.015,599,3.422,600,4.015,601,4.015,602,4.015]],["title/components/BodyUiComponent.html",[101,0.726,324,1.436]],["body/components/BodyUiComponent.html",[3,0.097,4,0.059,5,0.059,11,0.003,12,0.313,13,0.681,17,0.008,19,0.656,23,0.059,28,0.875,36,1.348,47,1.384,48,1.408,53,0.926,55,1.142,65,1.306,68,2.164,73,2.907,81,2.584,87,0.912,99,0.005,100,0.006,101,1.22,102,1.27,103,1.622,104,1.243,105,1.298,106,1.357,107,1.166,114,1.968,117,3.119,118,2.328,120,1.885,122,1.928,125,1.243,127,0.875,128,2.186,129,1.742,136,1.118,144,2.832,148,1.327,150,0.313,151,0.446,152,1.934,160,5.512,161,3.569,162,2.862,163,3.042,167,4.882,168,3.569,169,1.27,173,1.27,177,1.27,179,0.125,184,3.042,197,1.376,205,1.512,216,1.844,219,1.231,224,1.773,253,1.191,277,1.683,290,1.166,295,2.126,317,0.669,318,1.766,319,1.844,320,1.357,321,2.442,322,1.357,323,1.357,324,2.286,325,1.357,326,1.27,327,1.357,328,1.27,329,1.365,330,1.357,331,1.27,332,1.298,333,1.357,334,1.27,335,1.357,336,1.27,337,1.357,338,1.27,339,1.357,340,1.27,341,2.243,342,1.357,343,1.27,344,1.928,345,1.27,346,1.327,347,1.357,348,1.27,349,2.455,350,1.928,351,1.27,352,1.357,353,1.27,354,1.357,355,1.27,356,1.27,357,1.357,358,1.27,359,1.357,360,1.27,361,1.928,362,1.27,363,1.357,364,1.27,365,1.357,366,1.27,367,1.357,368,1.298,369,1.357,370,1.27,371,1.357,372,1.27,373,1.357,374,1.27,375,1.27,376,1.357,377,1.27,378,1.27,379,1.357,380,1.357,446,6.786,448,6.182,454,5.157,455,2.011,470,1.327,472,2.579,474,1.433,476,0.912,494,1.934,498,1.123,508,1.825,519,3.371,587,4.643,653,2.668,665,4.067,714,7.412,715,4.027,716,2.522,717,4.484,718,6.656,719,5.722,720,6.656,721,5.722,722,4.882,723,2.331,724,2.391,725,6.656,726,3.042,727,5.722,728,4.027,729,4.643,730,3.672,731,5.072,732,3.672,733,5.072,734,2.711,735,4.027,736,2.113,737,5.722,738,4.027,739,4.027,740,5.442,741,5.722,742,4.323,743,4.027,744,2.713,745,2.518,746,2.331,747,4.027,748,4.027,749,4.027,750,4.027,751,4.027,752,4.027,753,4.027,754,2.472,755,2.584,756,2.057,757,4.027,758,4.027,759,4.027,760,4.027,761,4.027,762,4.027,763,2.372,764,4.027,765,4.201,766,4.027,767,6.656,768,4.027,769,5.152,770,4.027,771,4.027,772,4.027,773,4.027,774,4.027,775,4.027,776,4.027,777,5.722,778,4.027,779,4.027,780,4.027,781,5.722,782,4.027,783,5.722,784,5.722,785,4.027,786,2.472]],["title/modules/BodyUiModule.html",[381,0.651,442,3.236]],["body/modules/BodyUiModule.html",[3,0.099,4,0.099,5,0.099,11,0.006,17,0.008,23,0.099,99,0.007,100,0.006,128,1.695,150,0.351,151,0.749,179,0.211,204,2.001,317,1.125,324,3.001,381,0.968,383,1.919,384,1.919,385,2.588,386,2.001,387,2.001,388,2.588,403,2.278,404,1.803,406,2.089,407,2.427,442,6.592,444,2.769,445,2.28,446,5.492,714,5.999,787,5.999,788,5.999,789,5.999,790,6.769,791,6.769]],["title/classes/CCFDatabase.html",[179,0.142,792,2.922]],["body/classes/CCFDatabase.html",[0,0.179,1,1.476,2,0.695,3,0.042,4,0.042,5,0.042,6,2.767,8,1.228,9,3.365,11,0.005,12,0.225,13,0.532,16,1.228,17,0.008,18,0.842,19,0.708,20,1.212,23,0.08,24,3.325,25,2.634,26,1.347,27,1.821,28,1.648,32,1.702,34,2.79,36,2.088,45,2.444,47,1.113,48,0.511,50,1.525,53,1.034,65,1.208,66,2.284,68,2.663,69,3.247,73,3.22,80,3.365,83,3.777,85,2.744,87,1.291,92,2.411,94,2.634,95,3.298,96,2.634,99,0.006,100,0.006,118,1.097,127,1.337,128,1.12,129,1.811,131,1.267,145,1.745,150,0.336,152,3.526,179,0.09,180,2.121,181,1.691,183,2.113,194,4.046,197,1.075,219,1.045,236,2.426,237,3.979,240,3.047,247,1.728,249,2.361,252,1.421,253,1.322,259,1.637,449,1.476,470,0.952,474,2.029,476,1.061,480,1.637,498,1.73,606,1.97,620,1.946,650,3.947,653,2.084,665,5.655,716,1.97,792,3.951,793,6.101,794,2.56,795,3.962,796,5.005,797,2.744,798,3.962,799,4.132,800,4.471,801,4.132,802,3.627,803,4.438,804,3.962,805,4.471,806,3.222,807,2.889,808,5.883,809,4.471,810,5.03,811,4.132,812,2.889,813,4.847,814,2.889,815,3.887,816,3.849,817,3.962,818,4.438,819,2.889,820,4.995,821,3.962,822,2.889,823,3.011,824,4.519,825,3.627,826,3.962,827,3.377,828,3.962,829,2.889,830,3.962,831,5.456,832,2.889,833,3.962,834,2.889,835,5.958,836,4.847,837,2.889,838,2.634,839,2.889,840,3.627,841,2.889,842,3.962,843,3.357,844,3.627,845,3.377,846,2.889,847,2.744,848,4.995,849,1.918,850,2.869,851,3.962,852,2.889,853,3.962,854,2.889,855,3.962,856,2.344,857,2.56,858,2.56,859,2.56,860,1.773,861,2.344,862,2.56,863,2.56,864,4.743,865,2.56,866,2.56,867,2.56,868,2.56,869,2.56,870,2.56,871,2.053,872,1.476,873,2.56,874,2.182,875,4.847,876,2.182,877,3.962,878,1.54,879,3.962,880,3.377,881,3.779,882,1.946,883,3.627,884,3.962,885,2.56,886,3.962,887,1.854,888,2.56,889,2.56,890,2.56,891,2.344,892,2.56,893,2.56,894,2.182,895,6.724,896,2.344,897,2.56,898,2.56,899,2.56,900,2.344,901,3.962,902,2.56,903,2.56,904,2.56,905,2.56,906,2.56,907,3.962,908,2.56,909,2.56,910,2.56,911,2.56,912,2.56,913,2.56,914,2.56,915,2.56,916,2.053,917,2.56,918,2.56,919,2.56,920,2.56,921,2.56,922,3.962,923,2.56,924,2.56,925,2.626,926,4.847,927,2.56,928,2.56,929,3.178,930,2.56,931,2.56,932,2.56,933,2.56,934,2.56,935,2.56,936,2.56,937,2.56,938,2.56,939,2.56,940,2.56,941,2.56]],["title/interfaces/CCFDatabaseOptions.html",[0,0.282,808,3.44]],["body/interfaces/CCFDatabaseOptions.html",[0,0.219,1,1.808,2,1.253,3,0.052,4,0.052,5,0.052,6,1.14,8,0.528,9,2.848,11,0.005,12,0.275,13,0.62,16,1.355,17,0.008,18,0.666,19,0.68,23,0.09,24,3.04,25,2.084,26,1.65,27,1.441,28,1.482,32,2.084,34,3.658,36,2.094,45,2.848,47,0.942,48,0.626,50,1.868,65,1.022,66,1.808,68,2.34,69,3.17,73,3.172,80,2.848,83,3.668,85,3.199,87,0.83,92,2.297,94,2.084,95,3.129,96,2.084,99,0.006,100,0.006,118,1.279,127,0.769,128,0.886,131,1.003,145,1.754,150,0.352,152,3.493,179,0.11,180,1.796,181,1.338,183,2.217,194,3.778,219,1.159,236,2.131,237,3.887,240,2.579,247,1.82,249,1.868,252,1.575,253,1.541,259,2.006,476,1.159,480,2.006,498,1.644,606,3.008,620,3.51,650,3.448,653,2.429,665,5.17,716,1.56,792,3.344,793,2.515,794,3.136,795,3.136,796,4.397,799,2.673,801,2.673,803,2.871,806,3.644,808,5.495,810,5.155,811,3.937,813,4.618,815,3.704,816,3.73,817,3.136,818,4.228,820,5.019,821,3.136,823,2.383,825,2.871,826,3.136,827,2.673,828,3.136,830,3.136,831,5.482,833,3.136,835,5.537,836,4.618,838,2.084,840,2.871,842,3.136,843,3.199,844,2.871,845,2.673,847,2.172,848,4.228,849,1.518,850,2.271,851,3.136,853,3.136,855,3.136,856,2.871,857,3.136,858,3.136,859,3.136,860,2.172,861,2.871,862,3.136,863,3.136,864,5.125,865,3.136,866,3.136,867,3.136,868,3.136,869,3.136,870,3.136,871,2.515,872,1.808,873,3.136,874,2.673,875,6.744,876,3.937,877,6.447,878,2.351,879,6.447,880,5.495,881,4.956,882,3.51,883,5.902,884,6.447,885,4.618,886,6.447,887,3.344,888,6.048,889,3.136,890,3.136,891,2.871,892,3.136,893,3.136,894,2.673,895,7.155,896,2.871,897,3.136,898,3.136,899,3.136,900,2.871,901,4.618,902,3.136,903,3.136,904,3.136,905,3.136,906,3.136,907,4.618,908,3.136,909,3.136,910,3.136,911,3.136,912,3.136,913,3.136,914,3.136,915,3.136,916,2.515,917,3.136,918,3.136,919,3.136,920,3.136,921,3.136,922,4.618,923,3.136,924,3.136,925,2.97,926,5.482,927,3.136,928,3.136,929,3.704,930,3.136,931,3.136,932,3.136,933,3.136,934,3.136,935,3.136,936,3.136,937,3.136,938,3.136,939,3.136,940,3.136,941,3.136]],["title/classes/CCFSpatialGraph.html",[179,0.142,811,3.44]],["body/classes/CCFSpatialGraph.html",[3,0.065,4,0.102,5,0.065,6,2.763,11,0.005,12,0.346,13,0.73,16,1.257,17,0.008,18,1.323,19,0.718,23,0.09,53,1.014,80,2.432,83,4.182,84,3.354,87,1.266,99,0.005,100,0.004,118,1.506,127,0.966,129,1.791,150,0.356,152,2.136,179,0.139,197,1.475,205,1.788,216,1.434,219,1.495,236,2.42,237,2.273,247,1.725,252,1.027,253,2.077,259,3.981,272,1.724,449,2.273,470,1.466,474,1.989,476,1.119,498,1.559,513,5.4,514,2.731,544,2.136,545,2.432,546,2.016,555,3.998,578,3.084,649,2.621,763,2.621,765,3.709,769,4.992,792,4.859,793,6.094,796,4.992,811,4.636,816,4.342,864,2.997,871,3.162,872,2.273,896,3.61,925,3.372,929,3.162,942,4.449,943,6.136,944,6.136,945,6.136,946,7.571,947,6.136,948,3.943,949,6.136,950,4.636,951,7.571,952,6.136,953,4.449,954,6.136,955,5.646,956,4.449,957,6.136,958,6.136,959,5.668,960,4.449,961,5.646,962,4.449,963,6.136,964,7.943,965,4.449,966,7.024,967,3.61,968,5.438,969,4.449,970,3.943,971,4.449,972,4.449,973,5.438,974,4.449,975,3.943,976,3.943,977,3.162,978,3.61,979,4.449,980,4.449,981,6.136,982,6.225,983,6.445,984,4.449,985,3.61,986,3.361,987,3.61,988,3.61,989,3.037,990,4.449,991,4.449,992,4.449,993,4.449,994,4.449,995,4.449,996,4.449,997,3.943,998,4.449,999,4.449,1000,4.449,1001,4.449,1002,4.449,1003,4.449,1004,4.449,1005,4.449,1006,2.522,1007,4.449,1008,3.61,1009,2.621,1010,7.024,1011,4.449,1012,7.024,1013,7.024,1014,4.449,1015,4.449,1016,4.449,1017,4.449,1018,4.449,1019,4.449,1020,4.449,1021,4.449,1022,4.449,1023,4.449,1024,4.449,1025,4.449,1026,4.449,1027,6.136,1028,5.699,1029,4.449,1030,4.449,1031,4.449,1032,4.449]],["title/classes/CCFSpatialScene.html",[179,0.142,815,3.236]],["body/classes/CCFSpatialScene.html",[0,0.225,2,0.875,3,0.053,4,0.078,5,0.053,6,2.623,11,0.004,12,0.283,16,1.24,17,0.008,18,1.386,19,0.685,20,0.807,23,0.078,28,1.155,45,1.989,46,1.663,53,1.014,61,3.133,62,3.133,66,1.859,73,3.078,74,3.015,83,3.87,87,1.265,90,2.234,99,0.004,100,0.003,118,1.305,127,1.502,128,2.038,129,1.69,145,2.307,150,0.314,152,1.747,179,0.113,197,1.279,219,1.451,237,1.859,240,2.633,247,1.724,252,2.072,253,2.272,272,1.41,329,1.628,449,1.859,470,1.199,472,2.436,474,1.988,476,0.847,480,5.027,498,1.508,513,3.413,514,2.234,525,4.522,555,3.32,578,3.381,639,3.413,640,5.806,641,5.806,642,4.018,643,4.018,644,4.018,645,4.018,646,5.225,647,4.018,648,4.018,676,2.749,685,4.018,707,2.749,710,5.558,763,3.704,765,4.383,769,5.9,792,4.438,793,5.784,804,4.714,815,3.781,816,4.673,824,4.722,845,4.018,850,2.335,864,2.451,871,2.586,872,1.859,929,3.781,948,3.225,950,4.018,967,2.952,977,2.586,978,2.952,983,5.97,985,2.952,986,2.749,987,2.952,988,2.952,1006,2.062,1008,2.952,1033,3.225,1034,5.319,1035,5.319,1036,5.319,1037,5.319,1038,5.319,1039,3.638,1040,4.714,1041,3.638,1042,4.714,1043,3.638,1044,4.714,1045,3.638,1046,4.714,1047,3.638,1048,3.638,1049,4.714,1050,6.129,1051,3.638,1052,2.586,1053,6.521,1054,4.714,1055,3.225,1056,3.225,1057,3.225,1058,6.129,1059,6.521,1060,4.714,1061,4.714,1062,7.035,1063,3.225,1064,4.714,1065,3.225,1066,3.225,1067,3.225,1068,2.749,1069,3.225,1070,3.225,1071,3.225,1072,3.225,1073,3.225,1074,2.952,1075,3.225,1076,3.225,1077,4.714,1078,3.225,1079,3.225,1080,7.212,1081,4.316,1082,4.714,1083,4.714,1084,4.316,1085,4.714,1086,3.225,1087,4.714,1088,3.225,1089,4.714,1090,4.714,1091,3.225,1092,3.225,1093,3.225,1094,3.225,1095,3.225,1096,3.225,1097,3.225,1098,3.225,1099,3.225,1100,3.781,1101,3.225,1102,6.521,1103,4.714,1104,3.225,1105,3.225,1106,3.225,1107,4.714,1108,4.438,1109,3.225,1110,3.225,1111,3.225,1112,4.018,1113,2.234,1114,3.225,1115,2.586,1116,3.225,1117,3.225,1118,3.225,1119,3.225,1120,3.225,1121,1.747,1122,3.225,1123,3.225,1124,3.225,1125,3.225,1126,3.225,1127,3.225,1128,3.225]],["title/interfaces/ChannelConfig.html",[0,0.282,1129,2.922]],["body/interfaces/ChannelConfig.html",[0,0.422,2,0.849,3,0.076,4,0.052,5,0.052,6,1.139,11,0.006,12,0.405,13,0.62,16,1.136,17,0.008,18,1.726,19,0.701,23,0.111,28,1.708,46,1.64,47,0.941,48,0.625,92,3.204,95,2.817,99,0.004,100,0.003,125,1.09,141,2.036,145,1.476,150,0.297,179,0.11,205,1.683,216,1.678,219,1.474,235,2.081,247,1.917,252,1.574,271,2.719,281,2.325,329,1.369,455,2.53,457,4.463,472,2.017,475,3.195,476,0.563,495,3.727,512,2.003,515,2.003,517,2.724,519,4.283,520,2.267,522,2.003,523,4.935,524,2.267,525,3.059,528,3.641,530,2.583,536,3.195,547,2.267,572,5.047,604,1.476,650,3.294,653,3.389,669,3.839,686,2.267,736,2.809,860,2.169,925,1.696,989,2.577,1129,3.966,1130,2.38,1131,2.169,1132,3.714,1133,3.598,1134,3.484,1135,4.593,1136,4.283,1137,3.966,1138,2.003,1139,2.267,1140,3.066,1141,3.195,1142,3.066,1143,3.195,1144,2.511,1145,2.511,1146,3.34,1147,4.463,1148,2.511,1149,2.511,1150,3.506,1151,4.163,1152,2.511,1153,3.34,1154,3.34,1155,4.393,1156,4.123,1157,3.195,1158,2.169,1159,2.169,1160,3.727,1161,5.167,1162,4.593,1163,3.7,1164,4.163,1165,2.511,1166,2.511,1167,2.511,1168,4.163,1169,2.003,1170,4.393,1171,4.393,1172,2.38,1173,2.38,1174,3.506,1175,4.376,1176,3.7,1177,2.267,1178,2.38,1179,2.511,1180,2.267,1181,4.393,1182,2.38,1183,5.516,1184,3.506,1185,3.506,1186,3.865,1187,2.267,1188,2.511,1189,2.511,1190,2.511,1191,2.511,1192,2.511,1193,2.511,1194,2.38,1195,2.511,1196,2.38,1197,3.7,1198,3.7,1199,2.511,1200,2.511,1201,4.847,1202,2.511,1203,2.38,1204,2.511,1205,2.511,1206,2.511,1207,2.38,1208,2.511,1209,2.511,1210,3.7,1211,3.7,1212,2.511,1213,2.511,1214,2.38,1215,4.393,1216,2.511,1217,3.066,1218,2.511,1219,3.7,1220,2.267,1221,2.267,1222,2.511,1223,2.38,1224,2.511,1225,3.7,1226,3.7,1227,4.393,1228,2.38,1229,2.511,1230,2.511,1231,2.267,1232,3.34,1233,2.511,1234,2.511,1235,2.511,1236,2.511,1237,2.511,1238,2.38,1239,2.511,1240,2.003,1241,2.511,1242,2.511,1243,2.511,1244,2.511,1245,2.511,1246,2.38,1247,2.511,1248,2.38,1249,3.506,1250,2.511,1251,2.511,1252,2.511,1253,2.511,1254,2.38,1255,2.511,1256,2.511,1257,2.511,1258,2.511,1259,2.511,1260,2.267,1261,2.511,1262,2.511,1263,3.7,1264,2.511,1265,2.511]],["title/components/CheckboxComponent.html",[101,0.726,326,1.436]],["body/components/CheckboxComponent.html",[3,0.097,4,0.058,5,0.058,8,0.852,11,0.003,12,0.312,15,2.523,16,1.27,17,0.008,19,0.631,20,1.472,23,0.058,24,3.023,46,1.372,47,1.381,48,1.406,49,1.292,53,0.848,55,1.137,65,1.303,69,2.736,73,2.237,82,1.761,87,0.639,89,2.739,99,0.005,100,0.006,101,1.218,102,1.264,103,1.617,104,1.237,105,1.292,106,1.351,107,1.161,114,1.964,117,3.118,118,2.322,120,1.88,122,1.922,127,0.871,128,1.004,129,1.627,131,1.617,136,1.113,144,2.824,146,4.055,148,1.321,150,0.233,151,0.444,159,5.627,169,1.264,173,1.264,177,1.264,179,0.125,180,1.966,183,1.489,197,1.372,199,2.266,205,1.19,219,0.681,224,1.769,232,4.31,233,3.236,236,1.966,248,3.118,259,3.234,268,2.927,269,1.985,275,2.448,281,1.186,284,2.573,286,1.87,290,1.161,291,3.287,292,2.117,295,2.117,308,2.273,309,2.117,311,3.254,317,0.667,318,1.761,319,1.839,320,1.351,321,2.437,322,1.351,323,1.351,324,1.264,325,1.351,326,2.281,327,1.351,328,1.264,329,1.44,330,1.351,331,1.264,332,1.292,333,1.351,334,1.264,335,1.351,336,1.264,337,1.351,338,1.264,339,1.351,340,1.264,341,2.237,342,1.351,343,1.264,344,1.922,345,1.264,346,1.321,347,1.351,348,1.264,349,1.761,350,1.922,351,1.264,352,1.351,353,1.264,354,1.351,355,1.264,356,1.264,357,1.351,358,1.264,359,1.351,360,1.264,361,1.922,362,1.264,363,1.351,364,1.264,365,1.351,366,1.264,367,1.351,368,1.292,369,1.351,370,1.264,371,1.351,372,1.264,373,1.351,374,1.264,375,1.264,376,1.351,377,1.264,378,1.264,379,1.351,380,1.351,474,1.004,476,0.639,498,0.787,503,3.82,521,2.66,723,2.324,724,2.384,734,2.705,736,2.107,745,2.736,746,2.324,1028,3.254,1266,4.01,1267,5.705,1268,5.056,1269,7.944,1270,5.705,1271,7.93,1272,6.641,1273,5.705,1274,5.705,1275,5.388,1276,4.01,1277,5.705,1278,5.705,1279,5.705,1280,5.705,1281,4.01,1282,4.629,1283,5.87,1284,4.31,1285,4.01,1286,3.361,1287,7.64,1288,4.055,1289,6.412,1290,4.01,1291,4.629,1292,5.705,1293,7.234,1294,6.589,1295,4.01,1296,3.843,1297,4.31,1298,5.705,1299,4.31,1300,4.262,1301,3.661,1302,5.705,1303,5.705,1304,3.254,1305,4.01,1306,5.388,1307,4.01,1308,3.554,1309,4.01,1310,4.01,1311,4.01,1312,4.01,1313,3.254,1314,1.87,1315,4.01,1316,2.462,1317,2.462,1318,2.85,1319,4.055,1320,3.554,1321,4.01,1322,4.01]],["title/modules/CheckboxModule.html",[381,0.651,1323,3.236]],["body/modules/CheckboxModule.html",[3,0.099,4,0.099,5,0.099,11,0.006,17,0.008,23,0.099,99,0.007,100,0.006,150,0.363,151,0.748,179,0.211,204,1.999,317,1.124,326,3.001,381,0.966,383,1.916,384,1.916,385,2.587,386,1.999,387,1.999,388,2.587,403,2.276,404,1.8,406,2.086,407,2.425,444,2.766,445,2.277,1304,5.484,1323,6.59,1324,5.99,1325,5.99,1326,5.99,1327,6.759,1328,7.115,1329,6.759]],["title/components/ColorBarComponent.html",[101,0.726,328,1.436]],["body/components/ColorBarComponent.html",[3,0.097,4,0.059,5,0.059,8,0.858,11,0.005,12,0.519,16,1.146,17,0.008,19,0.551,20,1.48,23,0.059,45,2.212,46,0.973,47,1.386,48,1.41,49,1.304,53,0.852,55,1.147,65,1.31,82,2.06,87,0.645,99,0.005,100,0.006,101,1.222,102,1.276,103,1.628,104,1.249,105,1.304,106,1.364,107,1.172,114,1.974,117,3.127,118,2.324,120,1.892,122,1.935,127,1.45,128,1.014,129,1.783,136,1.124,144,3.304,148,1.334,150,0.235,151,0.448,169,1.276,173,1.276,177,1.276,179,0.126,197,1.381,205,0.844,219,0.975,224,2.387,238,3.971,239,4.248,252,0.934,268,1.784,271,1.364,275,1.737,281,2.148,290,1.172,300,1.692,301,1.887,302,1.784,303,3.868,317,0.673,318,1.772,319,1.851,320,1.364,321,2.447,322,1.364,323,1.364,324,1.276,325,1.364,326,1.276,327,1.364,328,2.291,329,1.783,330,1.364,331,1.276,332,1.304,333,1.364,334,1.276,335,1.364,336,1.276,337,1.364,338,1.276,339,1.364,340,1.276,341,2.249,342,1.364,343,1.276,344,1.935,345,1.276,346,1.334,347,1.364,348,1.276,349,1.772,350,1.935,351,1.276,352,1.364,353,1.276,354,1.364,355,1.276,356,1.276,357,1.364,358,1.276,359,1.364,360,1.276,361,1.935,362,1.276,363,1.364,364,1.276,365,1.364,366,1.276,367,1.364,368,1.304,369,1.364,370,1.276,371,1.364,372,1.276,373,1.364,374,1.276,375,1.276,376,1.364,377,1.276,378,1.276,379,1.364,380,1.364,474,1.014,476,0.645,498,1.425,565,2.683,723,2.339,724,2.4,734,2.719,745,2.901,746,2.339,1286,2.384,1314,2.678,1330,4.829,1331,3.86,1332,6.435,1333,4.048,1334,6.795,1335,3.686,1336,6.675,1337,5.743,1338,5.09,1339,6.675,1340,3.611,1341,6.675,1342,6.675,1343,6.675,1344,3.255,1345,6.675,1346,4.048,1347,3.033,1348,4.048,1349,3.526,1350,3.932,1351,4.048,1352,4.048,1353,5.743,1354,4.048,1355,5.09,1356,3.587,1357,4.048,1358,2.137,1359,4.048,1360,4.048,1361,4.048,1362,4.662,1363,3.587,1364,4.048,1365,4.048,1366,4.048,1367,5.743,1368,5.09,1369,5.09,1370,5.743,1371,2.485,1372,2.597,1373,3.587,1374,4.082,1375,3.686,1376,2.212,1377,4.048,1378,2.212,1379,2.068,1380,2.212,1381,3.058]],["title/modules/ColorBarModule.html",[381,0.651,1382,3.067]],["body/modules/ColorBarModule.html",[3,0.099,4,0.099,5,0.099,11,0.006,17,0.008,23,0.099,99,0.007,100,0.006,150,0.35,151,0.748,179,0.211,204,1.999,317,1.124,328,3.001,329,1.273,381,0.966,383,1.916,384,1.916,385,2.587,386,1.999,387,1.999,388,2.587,403,2.276,404,1.8,406,2.086,407,2.425,444,2.766,445,2.277,1330,3.831,1331,3.063,1332,5.106,1382,6.245,1383,5.99,1384,5.99,1385,5.99,1386,6.759,1387,6.759]],["title/components/ColorPickerLauncherComponent.html",[101,0.726,331,1.436]],["body/components/ColorPickerLauncherComponent.html",[3,0.105,4,0.068,5,0.068,8,0.701,11,0.004,12,0.365,13,0.758,17,0.008,19,0.525,23,0.068,47,1.543,48,1.558,53,0.813,55,1.331,65,1.417,89,3.057,99,0.005,100,0.006,101,1.36,102,1.481,103,1.805,104,1.449,105,1.513,106,1.582,107,1.359,114,2.136,117,3.151,118,2.347,120,2.098,122,2.145,128,1.176,129,1.355,134,4.288,136,1.304,148,1.547,150,0.26,151,0.52,169,1.481,173,1.481,177,1.481,179,0.146,194,3.057,224,2.156,233,2.593,271,1.582,272,1.82,281,1.388,290,1.359,296,2.189,298,3.253,300,1.962,301,2.189,302,2.07,317,0.781,318,1.965,319,2.052,320,1.582,321,2.609,322,1.582,323,1.582,324,1.481,325,1.582,326,1.481,327,1.582,328,1.481,329,1.748,330,1.582,331,2.442,332,2.98,333,1.582,334,1.481,335,1.582,336,1.481,337,1.582,338,1.481,339,1.582,340,1.481,341,2.433,342,1.582,343,1.481,344,2.145,345,1.481,346,1.547,347,1.582,348,1.481,349,1.965,350,2.145,351,1.481,352,1.582,353,1.481,354,1.582,355,1.481,356,1.481,357,1.582,358,1.481,359,1.582,360,1.481,361,2.145,362,1.481,363,1.582,364,1.481,365,1.582,366,1.481,367,1.582,368,1.513,369,1.582,370,1.481,371,1.582,372,1.481,373,1.582,374,1.481,375,1.481,376,1.582,377,1.481,378,1.481,379,1.582,380,1.582,476,0.748,517,3.828,723,2.593,724,2.661,732,4.085,734,2.942,745,2.408,746,3.154,1164,4.288,1301,4.085,1314,2.968,1330,4.094,1331,3.273,1369,5.642,1376,2.566,1388,5.861,1389,4.695,1390,5.166,1391,4.525,1392,5.642,1393,6.366,1394,6.366,1395,3.609,1396,3.609,1397,6.366,1398,7.223,1399,6.366,1400,4.865,1401,3.69,1402,4.695,1403,4.695,1404,5.642,1405,4.809,1406,3.253,1407,4.809,1408,2.662,1409,2.882,1410,4.695,1411,3.81]],["title/modules/ColorPickerLauncherModule.html",[381,0.651,1412,3.236]],["body/modules/ColorPickerLauncherModule.html",[3,0.096,4,0.096,5,0.096,11,0.005,17,0.008,23,0.096,99,0.007,100,0.005,150,0.359,151,0.727,179,0.205,204,1.943,224,2.103,317,1.093,329,1.487,331,2.991,332,2.727,381,0.94,383,1.863,384,1.863,385,2.556,386,1.943,387,1.943,388,2.556,403,2.238,404,1.75,406,2.436,407,2.384,444,2.72,445,2.214,1330,3.725,1331,2.978,1388,5.333,1412,6.652,1413,5.825,1414,5.825,1415,5.825,1416,5.825,1417,6.481,1418,6.572,1419,6.572,1420,5.333,1421,6.572]],["title/interfaces/ColorScheme.html",[0,0.282,1340,2.063]],["body/interfaces/ColorScheme.html",[0,0.427,2,1.661,3,0.101,4,0.101,5,0.101,11,0.006,12,0.537,13,0.968,16,1.377,17,0.008,18,1.627,19,0.774,23,0.101,53,1.139,99,0.007,100,0.006,1340,3.684,1350,5.256,1362,5.546,1372,5.726,1375,5.546,1422,6.906,1423,6.906]],["title/interfaces/ColorScheme-1.html",[0,0.235,253,1.121,1340,1.719]],["body/interfaces/ColorScheme-1.html",[0,0.365,2,1.014,3,0.086,4,0.062,5,0.062,8,0.63,11,0.004,12,0.531,13,0.704,16,1.206,17,0.008,18,1.393,19,0.759,23,0.131,36,1.393,47,0.762,51,1.762,53,1.164,69,1.595,82,1.824,99,0.005,100,0.004,127,1.913,131,1.935,219,1.495,224,2.367,236,1.453,239,2.756,252,2.011,253,2.576,329,1.285,530,1.762,736,1.557,1330,2.39,1331,1.911,1340,4.059,1350,5.418,1362,5.652,1372,5.851,1375,5.923,1406,2.154,1424,3.737,1425,4.216,1426,4.465,1427,5.239,1428,5.239,1429,5.239,1430,3.737,1431,3.737,1432,5.239,1433,3.737,1434,5.239,1435,3.737,1436,3.737,1437,3.737,1438,7.722,1439,7.722,1440,6.192,1441,7.722,1442,7.722,1443,5.239,1444,5.239,1445,3.737,1446,3.737,1447,3.737,1448,3.737,1449,3.737,1450,3.737,1451,6.049,1452,3.737,1453,3.737,1454,3.737,1455,5.239,1456,3.737,1457,3.737,1458,3.737,1459,6.049,1460,3.737,1461,3.737,1462,3.737,1463,3.737,1464,3.737,1465,5.239,1466,3.737,1467,3.737,1468,6.049,1469,3.737,1470,3.737,1471,3.737,1472,3.737,1473,3.737,1474,3.737,1475,3.737,1476,6.049,1477,3.737,1478,3.737,1479,3.737,1480,3.737,1481,3.737,1482,3.737,1483,3.737,1484,6.049,1485,3.737,1486,3.737,1487,3.737,1488,3.737,1489,3.737,1490,3.737,1491,3.737,1492,3.737,1493,6.049,1494,3.737,1495,3.737,1496,3.737,1497,3.737,1498,3.737,1499,3.737,1500,3.737,1501,3.737,1502,6.049,1503,3.737,1504,3.737,1505,3.737,1506,3.737,1507,3.737,1508,3.737,1509,3.737,1510,3.737,1511,6.049,1512,3.737,1513,3.737,1514,3.737,1515,3.737,1516,3.737,1517,3.737,1518,3.737,1519,2.706,1520,2.997,1521,2.154,1522,3.185,1523,3.737]],["title/components/ColorSchemeContentsComponent.html",[101,0.726,334,1.436]],["body/components/ColorSchemeContentsComponent.html",[3,0.079,4,0.041,5,0.041,8,0.655,11,0.002,12,0.341,13,0.83,15,0.852,16,0.805,17,0.008,18,1.595,19,0.652,20,1.967,23,0.041,24,1.834,33,1.834,47,1.19,48,1.288,49,1.959,53,0.93,55,0.799,65,1.057,68,2.037,69,3.045,87,1.049,93,1.354,99,0.004,100,0.004,101,1.049,102,0.889,103,1.244,104,0.87,105,0.909,106,0.95,107,0.816,114,1.593,117,3.027,118,2.254,120,1.446,122,1.478,127,0.953,128,0.706,129,1.834,131,1.723,135,3.56,136,0.783,144,3.008,145,1.723,148,0.929,150,0.249,151,0.312,159,3.628,169,0.889,173,0.889,177,0.889,179,0.088,183,0.736,197,1.055,199,1.12,205,1.679,213,3.56,219,0.914,224,2.516,233,1.787,238,2.398,239,2.046,247,1.17,252,0.651,253,1.593,268,2.902,269,2.172,270,2.585,271,1.815,272,1.093,275,1.21,277,2.251,279,2.984,281,1.947,282,2.585,284,2.552,286,3.394,290,0.816,293,2.752,299,1.354,300,2.752,301,1.315,302,2.902,305,1.661,306,1.489,308,1.599,309,1.489,317,0.469,318,1.354,319,1.414,320,0.95,321,2.048,322,0.95,323,0.95,324,0.889,325,0.95,326,0.889,327,0.95,328,0.889,329,1.645,330,0.95,331,0.889,332,0.909,333,0.95,334,1.917,335,0.95,336,0.889,337,0.95,338,0.889,339,0.95,340,0.889,341,1.815,342,0.95,343,0.889,344,1.478,345,0.889,346,0.929,347,0.95,348,0.889,349,1.354,350,1.478,351,0.889,352,0.95,353,0.889,354,0.95,355,0.889,356,0.889,357,0.95,358,0.889,359,0.95,360,0.889,361,1.478,362,0.889,363,0.95,364,0.889,365,0.95,366,0.889,367,0.95,368,0.909,369,0.95,370,0.889,371,0.95,372,0.889,373,0.95,374,0.889,375,0.889,376,0.95,377,0.889,378,0.889,379,0.95,380,0.95,455,1.627,470,1.775,472,1.7,474,1.649,476,1.336,498,1.551,517,3.892,565,1.621,723,1.787,724,1.834,734,2.194,736,2.78,745,2.299,746,1.787,1121,1.354,1133,4.047,1288,3.119,1291,3.56,1301,3.9,1314,2.834,1330,4.918,1331,3.931,1334,2.288,1335,2.816,1338,3.889,1340,3.298,1344,2.487,1349,2.694,1356,3.889,1358,4.318,1371,3.307,1374,2.004,1376,1.541,1378,1.541,1379,2.242,1380,2.398,1381,2.13,1400,4.094,1401,3.105,1406,2.242,1409,1.731,1519,3.457,1524,7.04,1525,2.82,1526,3.56,1527,4.388,1528,4.388,1529,4.931,1530,5.386,1531,4.388,1532,5.386,1533,5.386,1534,6.078,1535,6.078,1536,4.774,1537,4.37,1538,5.386,1539,5.386,1540,5.959,1541,2.82,1542,4.388,1543,2.82,1544,3.119,1545,1.988,1546,2.82,1547,3.315,1548,3.889,1549,2.82,1550,3.119,1551,2.82,1552,2.82,1553,6.123,1554,2.82,1555,4.388,1556,3.119,1557,3.315,1558,2.585,1559,2.242,1560,2.82,1561,2.82,1562,2.82,1563,4.591,1564,2.82,1565,2.82,1566,2.82,1567,2.82,1568,5.387,1569,2.82,1570,2.82,1571,2.82,1572,2.82,1573,5.387,1574,2.82,1575,2.82,1576,2.82,1577,2.82,1578,2.82,1579,2.82,1580,4.32,1581,2.82,1582,2.82,1583,6.078,1584,2.82,1585,2.82,1586,2.82,1587,2.82,1588,2.82,1589,2.82,1590,5.386,1591,2.499,1592,2.499,1593,2.499,1594,2.499,1595,2.499,1596,2.82,1597,2.82,1598,2.82,1599,4.388,1600,2.004,1601,2.82,1602,2.82,1603,2.82,1604,1.731,1605,1.9,1606,3.119,1607,2.004,1608,2.956,1609,1.9,1610,2.288,1611,2.288,1612,1.599,1613,1.541,1614,4.388,1615,2.004,1616,2.499,1617,3.889,1618,2.288,1619,2.288,1620,2.82,1621,2.499]],["title/modules/ColorSchemeContentsModule.html",[381,0.651,1622,3.236]],["body/modules/ColorSchemeContentsModule.html",[3,0.093,4,0.093,5,0.093,11,0.005,17,0.008,23,0.093,99,0.006,100,0.005,150,0.371,151,0.708,179,0.199,204,1.891,224,2.227,317,1.063,329,1.462,334,2.981,381,0.914,383,1.813,384,1.813,385,2.526,386,1.891,387,1.891,388,2.526,396,5.814,403,2.201,404,1.703,406,2.396,407,2.346,426,5.189,427,4.546,428,5.189,444,2.676,445,2.154,1133,3.166,1330,3.625,1331,2.898,1332,4.831,1382,6.103,1524,5.189,1580,4.546,1622,6.693,1623,5.668,1624,5.668,1625,6.395,1626,5.668,1627,6.395,1628,6.882,1629,6.395,1630,5.668]],["title/components/ColorSchemePopupComponent.html",[101,0.726,336,1.436]],["body/components/ColorSchemePopupComponent.html",[3,0.093,4,0.055,5,0.055,8,0.559,11,0.003,12,0.291,13,0.924,17,0.008,19,0.64,20,1.417,23,0.055,47,1.345,48,1.417,49,1.75,53,0.816,55,1.061,65,1.254,87,1.018,99,0.005,100,0.005,101,1.186,102,1.181,103,1.54,104,1.156,105,1.207,106,1.262,107,1.084,114,1.89,117,3.111,118,2.31,120,1.789,122,1.83,127,1.388,128,0.938,129,1.78,136,1.04,145,1.54,148,1.234,150,0.261,151,0.414,169,1.181,173,1.181,177,1.181,179,0.117,183,0.977,197,1.306,205,1.333,215,2.969,219,0.922,224,2.504,233,2.212,247,0.813,248,2.969,269,3.47,274,2.123,277,2.671,283,1.65,286,2.98,290,1.084,296,2.532,299,1.798,317,0.622,318,1.676,319,2.737,320,1.262,321,2.362,322,1.262,323,1.262,324,1.181,325,1.262,326,1.181,327,1.262,328,1.181,329,1.638,330,1.262,331,1.181,332,1.207,333,1.262,334,1.181,335,1.262,336,2.211,337,1.262,338,1.181,339,1.262,340,1.181,341,2.153,342,1.262,343,1.181,344,1.83,345,1.181,346,1.234,347,1.262,348,1.181,349,1.676,350,1.83,351,1.181,352,1.262,353,1.181,354,1.262,355,1.181,356,1.181,357,1.262,358,1.181,359,1.262,360,1.181,361,1.83,362,1.181,363,1.262,364,1.181,365,1.262,366,1.181,367,1.262,368,1.207,369,1.262,370,1.181,371,1.262,372,1.181,373,1.262,374,1.181,375,1.181,376,1.262,377,1.181,378,1.181,379,1.262,380,1.262,455,1.93,474,0.938,476,0.597,493,5.185,494,1.798,498,0.735,503,3.702,517,3.615,522,3.079,544,1.798,555,1.977,565,2.589,578,1.525,606,2.394,649,2.206,723,2.212,724,2.27,730,3.485,734,2.603,740,5.29,742,4.103,744,2.522,745,2.417,746,2.855,824,2.403,1286,3.2,1291,4.407,1330,4.813,1331,3.848,1335,5.753,1340,2.896,1371,3.923,1400,4.305,1401,3.265,1409,2.299,1420,6.89,1519,4.101,1537,5.185,1544,5.517,1548,4.814,1550,3.86,1612,2.123,1631,3.745,1632,6.391,1633,5.431,1634,7.01,1635,8.36,1636,7.762,1637,4.814,1638,4.814,1639,3.745,1640,4.303,1641,3.334,1642,3.745,1643,4.814,1644,3.745,1645,2.829,1646,4.814,1647,3.319,1648,3.745,1649,4.814,1650,4.814,1651,4.983,1652,4.103,1653,5.431,1654,5.431,1655,3.745,1656,4.814,1657,3.745,1658,6.213,1659,5.431,1660,3.745,1661,3.745,1662,3.485,1663,3.485,1664,3.745,1665,4.103,1666,3.038,1667,3.319,1668,3.319,1669,3.319,1670,3.745,1671,4.814,1672,3.745,1673,3.745,1674,3.745,1675,5.431,1676,3.745,1677,3.745,1678,3.745,1679,3.038,1680,2.829]],["title/modules/ColorSchemePopupModule.html",[381,0.651,1417,3.236]],["body/modules/ColorSchemePopupModule.html",[3,0.096,4,0.096,5,0.096,11,0.005,17,0.008,23,0.096,99,0.007,100,0.005,150,0.359,151,0.727,179,0.205,204,1.943,224,2.391,317,1.093,329,1.487,336,2.991,381,0.94,383,1.863,384,1.863,385,2.556,386,1.943,387,1.943,388,2.556,403,2.238,404,1.75,406,2.436,407,2.384,444,2.72,445,2.214,1330,3.725,1331,2.978,1417,6.652,1420,5.333,1524,5.333,1622,6.481,1681,5.825,1682,5.825,1683,6.572,1684,5.825,1685,6.572,1686,6.572,1687,6.572]],["title/interfaces/ColorSchemeSelection.html",[0,0.282,1522,3.44]],["body/interfaces/ColorSchemeSelection.html",[0,0.37,2,1.033,3,0.101,4,0.063,5,0.063,8,0.642,11,0.004,12,0.61,13,0.713,16,0.895,17,0.008,18,1.405,19,0.741,23,0.131,36,1.012,51,2.503,53,1.139,69,1.625,82,1.326,99,0.005,100,0.004,127,1.92,131,1.218,219,1.5,224,2.409,236,2.064,239,3.477,252,2.019,253,2.586,329,1.405,736,2.212,1330,2.435,1331,1.947,1340,4.098,1350,5.293,1362,5.456,1372,5.722,1375,5.866,1406,3.06,1424,3.808,1426,3.246,1427,5.308,1428,5.308,1429,5.308,1430,3.808,1431,3.808,1432,5.308,1433,3.808,1434,5.308,1435,3.808,1436,3.808,1437,3.808,1438,7.751,1439,7.751,1440,6.216,1441,7.751,1442,7.751,1443,5.308,1444,5.308,1445,3.808,1446,3.808,1447,3.808,1448,3.808,1449,3.808,1450,3.808,1451,6.111,1452,3.808,1453,3.808,1454,3.808,1455,5.308,1456,3.808,1457,3.808,1458,3.808,1459,6.111,1460,3.808,1461,3.808,1462,3.808,1463,3.808,1464,3.808,1465,5.308,1466,3.808,1467,3.808,1468,6.111,1469,3.808,1470,3.808,1471,3.808,1472,3.808,1473,3.808,1474,3.808,1475,3.808,1476,6.111,1477,3.808,1478,3.808,1479,3.808,1480,3.808,1481,3.808,1482,3.808,1483,3.808,1484,6.111,1485,3.808,1486,3.808,1487,3.808,1488,3.808,1489,3.808,1490,3.808,1491,3.808,1492,3.808,1493,6.111,1494,3.808,1495,3.808,1496,3.808,1497,3.808,1498,3.808,1499,3.808,1500,3.808,1501,3.808,1502,6.111,1503,3.808,1504,3.808,1505,3.808,1506,3.808,1507,3.808,1508,3.808,1509,3.808,1510,3.808,1511,6.111,1512,3.808,1513,3.808,1514,3.808,1515,3.808,1516,3.808,1517,3.808,1518,3.808,1519,2.757,1520,4.257,1521,3.06,1522,4.524,1523,6.61]],["title/components/ContainerComponent.html",[101,0.726,338,1.436]],["body/components/ContainerComponent.html",[3,0.086,4,0.048,5,0.048,8,0.88,11,0.003,12,0.381,13,0.583,17,0.008,18,0.923,19,0.65,20,1.086,23,0.048,46,1.575,47,1.27,48,1.306,49,1.05,51,1.361,53,0.837,55,0.923,65,1.156,82,1.512,87,0.781,99,0.004,100,0.005,101,1.329,102,1.027,103,2.092,104,1.005,105,1.05,106,1.097,107,0.943,109,4.342,114,2.551,117,3.067,118,2.292,120,1.614,122,1.651,125,1.005,127,1.064,128,0.816,129,1.819,131,1.389,136,0.904,145,2.171,148,1.073,150,0.302,151,0.36,153,1.436,156,1.476,169,1.027,173,1.027,177,2.066,179,0.219,180,1.688,181,1.853,183,1.709,192,4.838,197,1.178,205,1.366,216,1.579,219,1.112,224,1.569,247,1.423,252,0.752,253,1.741,273,3.144,274,1.846,275,3.667,277,2.936,283,3.836,290,0.943,314,2.887,317,0.541,318,2.022,319,1.579,320,1.097,321,2.207,322,1.097,323,1.097,324,1.027,325,1.097,326,1.027,327,1.097,328,1.027,329,1.234,330,1.097,331,1.027,332,1.05,333,1.097,334,1.027,335,1.097,336,1.027,337,1.097,338,2.066,339,1.097,340,2.066,341,1.984,342,1.097,343,1.027,344,1.651,345,1.027,346,1.073,347,1.097,348,1.027,349,1.512,350,1.651,351,1.027,352,1.097,353,1.027,354,1.097,355,1.027,356,1.027,357,1.097,358,1.027,359,1.097,360,1.027,361,1.651,362,1.027,363,1.097,364,1.027,365,1.097,366,1.027,367,1.097,368,1.05,369,1.097,370,1.027,371,1.097,372,1.027,373,1.097,374,1.027,375,1.027,376,1.097,377,1.027,378,1.027,379,1.097,380,1.097,387,1.449,455,2.743,470,1.073,474,1.227,476,0.938,494,2.828,498,1.503,503,3.897,578,1.996,716,2.159,717,3.967,722,4.413,755,4.204,786,1.999,849,2.102,878,1.688,1344,2.777,1372,3.144,1395,2.777,1396,2.777,1408,1.846,1521,3.347,1545,2.969,1559,2.503,1613,1.78,1680,2.46,1688,3.257,1689,3.338,1690,4.342,1691,4.899,1692,3.9,1693,5.889,1694,4.899,1695,3.477,1696,5.889,1697,5.889,1698,5.785,1699,3.975,1700,3.713,1701,6.551,1702,3.701,1703,5.889,1704,3.975,1705,4.656,1706,4.656,1707,4.899,1708,2.503,1709,3.589,1710,3.482,1711,3.257,1712,4.899,1713,3.79,1714,3.257,1715,4.342,1716,4.899,1717,3.701,1718,3.701,1719,3.701,1720,3.257,1721,3.482,1722,4.899,1723,4.899,1724,3.257,1725,3.482,1726,3.257,1727,4.899,1728,3.11,1729,3.257,1730,3.3,1731,7.658,1732,4.899,1733,5.806,1734,3.257,1735,4.342,1736,6.551,1737,4.899,1738,3.257,1739,3.701,1740,4.342,1741,4.899,1742,3.257,1743,4.449,1744,3.701,1745,3.257,1746,3.257,1747,3.975,1748,3.257,1749,3.257,1750,3.257,1751,2.315,1752,3.257,1753,2.887,1754,2.887,1755,2.46,1756,2.643,1757,2.09,1758,3.257,1759,2.887,1760,4.342,1761,3.257,1762,2.887,1763,3.257,1764,3.257,1765,3.469,1766,3.469,1767,3.257,1768,2.315,1769,3.257,1770,2.315,1771,2.315,1772,3.257,1773,3.257,1774,3.257,1775,2.194,1776,2.643,1777,2.887,1778,2.643,1779,2.46,1780,3.257,1781,3.257,1782,4.342,1783,2.194,1784,3.975,1785,3.257,1786,3.257,1787,2.46,1788,3.257,1789,3.257,1790,3.257,1791,4.899,1792,4.899,1793,3.257,1794,3.257,1795,3.257,1796,3.257,1797,3.257,1798,3.257,1799,3.257,1800,2.315,1801,2.887,1802,2.887]],["title/components/ContentComponent.html",[101,0.726,340,1.436]],["body/components/ContentComponent.html",[3,0.085,4,0.046,5,0.046,8,0.966,11,0.003,12,0.374,13,0.572,17,0.008,18,1.376,19,0.533,20,1.683,23,0.046,46,1.67,47,1.255,48,1.294,49,1.023,53,0.887,55,0.9,65,1.138,82,2.255,87,0.924,99,0.004,100,0.005,101,1.275,102,1.001,103,1.362,104,1.483,105,1.023,106,1.069,107,0.919,114,2.643,117,3.06,118,2.287,120,1.583,125,0.98,127,1.698,128,0.795,129,1.789,131,1.362,136,0.881,141,1.91,145,2.152,148,1.046,150,0.284,151,0.351,153,1.399,169,1.001,173,1.001,177,2.191,179,0.216,180,1.656,181,1.817,183,1.981,192,4.092,193,3.062,197,1.155,199,2.759,205,1.524,216,1.023,219,1.289,224,1.544,247,1.405,248,2.626,252,1.604,253,0.939,271,1.069,273,2.037,277,2.702,281,2.367,282,2.831,283,3.785,284,3.464,290,0.919,293,3.734,306,2.537,310,2.813,312,2.138,317,0.528,318,1.995,319,1.549,320,1.069,321,2.178,322,1.069,323,1.069,324,1.001,325,1.069,326,1.001,327,1.069,328,1.001,329,1.218,330,1.069,331,1.001,332,1.023,333,1.069,334,1.001,335,1.069,336,1.001,337,1.069,338,1.001,339,1.069,340,2.039,341,1.953,342,1.069,343,1.001,344,1.619,345,1.001,346,1.046,347,1.069,348,1.001,349,1.483,350,1.619,351,1.001,352,1.069,353,1.001,354,1.069,355,1.001,356,1.001,357,1.069,358,1.001,359,1.069,360,1.001,361,1.619,362,1.001,363,1.069,364,1.001,365,1.069,366,1.001,367,1.069,368,1.023,369,1.069,370,1.001,371,1.069,372,1.001,373,1.069,374,1.001,375,1.001,376,1.069,377,1.001,378,1.001,379,1.069,380,1.069,404,0.845,455,2.616,470,1.046,474,1.452,476,0.766,498,1.363,503,3.859,565,2.566,716,2.118,763,1.87,765,3.062,849,2.062,878,1.656,1009,2.831,1121,1.524,1186,2.724,1300,1.87,1358,3.414,1374,2.256,1379,2.962,1395,2.724,1396,2.724,1408,1.799,1521,3.304,1545,2.177,1559,1.622,1613,1.735,1615,2.256,1680,2.398,1689,3.287,1692,3.618,1698,5.735,1699,3.899,1700,3.665,1702,3.63,1704,3.899,1705,4.596,1706,4.596,1708,2.455,1709,3.304,1710,3.415,1713,3.618,1717,3.63,1718,3.63,1719,3.63,1725,3.415,1740,4.259,1743,4.38,1744,3.63,1751,2.256,1755,2.398,1765,4.472,1766,4.306,1770,2.256,1771,2.256,1779,2.398,1783,2.138,1787,2.398,1800,2.256,1803,3.174,1804,4.805,1805,7.094,1806,4.705,1807,6.466,1808,4.805,1809,4.805,1810,4.805,1811,6.466,1812,5.798,1813,5.798,1814,4.805,1815,3.237,1816,3.174,1817,3.899,1818,3.174,1819,3.174,1820,4.805,1821,3.174,1822,3.174,1823,3.899,1824,3.174,1825,3.899,1826,3.899,1827,3.174,1828,3.174,1829,4.259,1830,5.798,1831,4.805,1832,5.089,1833,3.174,1834,3.174,1835,3.899,1836,2.813,1837,2.831,1838,2.813,1839,2.576,1840,3.174,1841,3.174,1842,3.174,1843,3.174,1844,3.174,1845,3.174,1846,3.174,1847,4.805,1848,3.174,1849,3.174,1850,3.174,1851,3.174,1852,3.174,1853,3.174,1854,2.576,1855,4.805,1856,3.174,1857,4.805,1858,1.87,1859,3.174,1860,2.037,1861,2.138,1862,3.174,1863,3.174,1864,3.174,1865,5.798,1866,3.174,1867,3.174,1868,4.805,1869,3.174,1870,3.174,1871,4.805,1872,3.174,1873,3.174,1874,3.174,1875,2.576,1876,3.174,1877,2.813,1878,2.398]],["title/interfaces/ContentContainerChanged.html",[0,0.282,1879,3.067]],["body/interfaces/ContentContainerChanged.html",[0,0.504,2,1.284,3,0.078,4,0.078,5,0.078,8,0.797,11,0.004,12,0.415,13,0.825,17,0.008,18,1.306,19,0.786,23,0.134,46,1.667,53,0.682,82,2.139,97,3.589,99,0.006,100,0.004,101,1.346,103,1.965,114,2.743,116,3.596,131,1.513,141,1.759,150,0.218,179,0.166,192,4.084,215,2.918,219,0.906,233,3.319,275,2.974,281,2.05,283,3.98,284,2.687,290,1.546,296,2.489,476,1.105,544,2.563,546,2.419,578,2.175,593,3.354,849,3.303,872,3.542,878,2.389,1009,3.145,1559,3.542,1692,3.811,1695,2.643,1708,2.728,1709,3.542,1713,4.592,1728,3.661,1783,3.596,1832,4.256,1858,3.145,1860,3.426,1879,5.186,1880,3.795,1881,5.099,1882,4.928,1883,4.928,1884,5.472,1885,3.795,1886,4.67,1887,3.795,1888,3.277,1889,4.801,1890,4.928,1891,4.033,1892,4.033,1893,4.67,1894,4.67,1895,4.084,1896,4.033,1897,4.033,1898,4.928,1899,3.426,1900,3.795]],["title/modules/CoreModule.html",[381,0.651,394,3.236]],["body/modules/CoreModule.html",[3,0.093,4,0.093,5,0.093,11,0.005,17,0.008,23,0.093,87,1.02,99,0.006,100,0.005,119,3.272,150,0.365,151,0.709,179,0.199,204,1.893,317,1.065,381,1.196,383,1.815,384,1.815,385,1.934,386,1.893,387,1.893,388,2.527,394,6.721,403,2.203,404,1.706,406,2.398,407,2.347,476,1.02,1768,4.552,1901,5.676,1902,5.676,1903,5.676,1904,6.721,1905,6.441,1906,6.441,1907,6.404,1908,7.772,1909,5.196,1910,5.524,1911,6.404,1912,6.404,1913,6.404,1914,4.838,1915,8.368,1916,6.404,1917,5.196,1918,6.404]],["title/interfaces/DataSource.html",[0,0.282,92,2.007]],["body/interfaces/DataSource.html",[0,0.538,1,2.428,2,1.142,3,0.069,4,0.069,5,0.069,6,2.508,7,3.201,8,1.085,9,3.972,10,4.936,11,0.007,12,0.369,14,3.201,15,2.53,16,1.417,17,0.008,18,1.613,19,0.718,20,1.423,21,3.201,22,2.094,23,0.122,24,3.037,25,2.799,26,2.992,27,3.311,28,1.766,29,2.693,30,3.201,31,3.201,32,2.799,33,1.986,34,3.526,35,3.049,36,1.712,37,3.781,38,3.049,39,3.049,40,2.917,41,2.799,42,2.917,43,3.049,44,2.799,45,3.972,46,1.747,47,1.406,48,0.841,49,1.531,50,3.389,51,1.986,52,2.597,53,0.994,54,2.917,55,1.819,56,2.693,57,2.799,58,3.049,59,3.94,60,3.638,61,3.781,62,3.781,63,4.119,64,4.461,65,1.259,66,3.279,67,3.638,68,1.797,69,1.797,70,2.509,71,2.693,72,2.509,73,2.973,74,2.693,75,4.119,76,2.917,77,2.917,78,3.638,79,3.638,80,2.597,81,3.049,82,1.466,83,2.215,84,2.597,85,2.917,86,3.049,87,1.24,88,3.201,89,2.282,90,2.917,91,4.119,92,2.829,93,3.737,94,3.781,95,3.246,96,3.781,97,2.992,98,4.119,99,0.005,100,0.004,129,1.547,197,1.543,217,3.049,474,1.82,498,1.426,799,4.848,801,4.848,802,5.207,824,4.119,1919,4.752,1920,4.752,1921,4.752]],["title/interfaces/DataSource-1.html",[0,0.235,92,1.672,253,1.121]],["body/interfaces/DataSource-1.html",[0,0.422,2,0.853,3,0.106,4,0.052,5,0.052,6,1.143,11,0.006,12,0.406,13,0.621,16,1.137,17,0.008,18,1.636,19,0.717,23,0.111,28,1.71,46,1.255,47,0.943,48,0.628,92,3.356,95,2.821,99,0.004,100,0.003,125,1.094,141,2.041,145,1.48,150,0.298,179,0.11,205,1.685,216,1.682,219,1.475,235,2.089,247,1.918,252,1.577,271,2.722,281,2.328,329,0.983,455,2.533,457,4.47,472,2.023,475,3.204,476,0.565,495,3.734,512,2.01,515,2.01,517,2.73,519,4.289,520,2.276,522,2.01,523,4.94,524,2.276,525,3.066,528,3.649,530,2.588,536,3.204,547,2.276,572,5.053,604,1.482,650,3.299,653,3.395,669,3.845,686,2.276,736,2.812,860,2.177,925,1.703,989,2.584,1129,3.35,1130,2.389,1131,2.177,1132,2.667,1133,2.584,1134,3.49,1135,4.602,1136,4.289,1137,3.975,1138,2.01,1139,2.276,1140,4.024,1141,4.194,1142,4.024,1143,4.194,1144,2.521,1145,2.521,1146,3.35,1147,4.47,1148,2.521,1149,2.521,1150,3.516,1151,4.172,1152,2.521,1153,3.35,1154,3.35,1155,4.402,1156,4.127,1157,3.204,1158,2.177,1159,2.177,1160,3.734,1161,5.175,1162,4.602,1163,3.71,1164,4.172,1165,2.521,1166,2.521,1167,2.521,1168,4.172,1169,2.01,1170,4.402,1171,4.402,1172,2.389,1173,2.389,1174,3.516,1175,4.384,1176,3.71,1177,2.276,1178,2.389,1179,2.521,1180,2.276,1181,4.402,1182,2.389,1183,5.52,1184,3.516,1185,3.516,1186,3.872,1187,2.276,1188,2.521,1189,2.521,1190,2.521,1191,2.521,1192,2.521,1193,2.521,1194,2.389,1195,2.521,1196,2.389,1197,3.71,1198,3.71,1199,2.521,1200,2.521,1201,4.856,1202,2.521,1203,2.389,1204,2.521,1205,2.521,1206,2.521,1207,2.389,1208,2.521,1209,2.521,1210,3.71,1211,3.71,1212,2.521,1213,2.521,1214,2.389,1215,4.402,1216,2.521,1217,3.075,1218,2.521,1219,3.71,1220,2.276,1221,2.276,1222,2.521,1223,2.389,1224,2.521,1225,3.71,1226,3.71,1227,4.402,1228,2.389,1229,2.521,1230,2.521,1231,2.276,1232,3.35,1233,2.521,1234,2.521,1235,2.521,1236,2.521,1237,2.521,1238,2.389,1239,2.521,1240,2.01,1241,2.521,1242,2.521,1243,2.521,1244,2.521,1245,2.521,1246,2.389,1247,2.521,1248,2.389,1249,3.516,1250,2.521,1251,2.521,1252,2.521,1253,2.521,1254,2.389,1255,2.521,1256,2.521,1257,2.521,1258,2.521,1259,2.521,1260,2.276,1261,2.521,1262,2.521,1263,3.71,1264,2.521,1265,2.521]],["title/injectables/DataSourceService.html",[160,3.067,1922,1.722]],["body/injectables/DataSourceService.html",[1,2.145,3,0.061,4,0.099,5,0.061,8,1.162,9,3.221,11,0.006,12,0.326,13,0.701,16,1.017,17,0.008,19,0.697,23,0.061,24,2.463,26,1.957,27,2.4,28,0.912,36,1.9,47,1.334,50,2.217,53,0.943,65,1.156,68,1.588,69,2.229,70,4.258,72,4.596,73,3.136,87,1.176,91,3.782,92,3.001,94,3.471,95,3.125,96,3.471,97,2.747,98,3.782,99,0.005,100,0.007,118,1.03,119,2.145,129,1.829,137,5.003,150,0.318,151,0.465,152,4.225,153,1.85,160,3.969,162,6.187,179,0.131,180,2.03,181,2.229,183,1.926,194,2.829,197,1.417,217,3.782,219,0.713,236,2.03,238,4.407,247,1.689,381,0.6,455,2.435,470,2.243,474,1.849,476,0.939,498,1.708,578,1.71,593,1.667,650,3.085,653,1.957,792,5.174,799,4.452,801,4.452,802,4.781,803,4.781,808,5.875,810,4.452,824,4.37,840,4.781,843,3.617,844,4.781,849,2.528,878,2.03,950,5.578,1240,3.34,1319,2.984,1558,4.979,1640,2.577,1747,4.781,1888,4.532,1922,2.229,1923,2.473,1924,8.704,1925,4.198,1926,6.809,1927,7.383,1928,7.383,1929,5.893,1930,4.198,1931,4.198,1932,7.383,1933,4.198,1934,4.198,1935,4.198,1936,5.223,1937,7.383,1938,4.198,1939,5.893,1940,4.198,1941,3.72,1942,3.171,1943,3.72,1944,2.694,1945,5.893,1946,4.198,1947,4.198,1948,4.198,1949,7.383,1950,4.198,1951,6.809,1952,4.198,1953,5.893,1954,3.171,1955,4.198,1956,5.893,1957,3.72,1958,3.72,1959,4.198,1960,4.198,1961,3.72,1962,6.809,1963,4.198,1964,7.383,1965,4.198,1966,4.198,1967,4.198,1968,4.198]],["title/injectables/DataState.html",[167,3.067,1922,1.722]],["body/injectables/DataState.html",[0,0.186,1,1.54,3,0.044,4,0.099,5,0.044,8,1.07,9,3.442,10,5.117,11,0.006,12,0.359,13,0.55,17,0.008,18,0.568,19,0.591,20,1.864,23,0.092,24,2.632,26,1.406,36,2.127,46,0.725,53,0.915,60,1.709,65,0.907,66,2.361,67,1.709,71,4.061,72,4.602,73,3.154,74,1.709,76,1.851,77,1.851,78,1.709,79,1.709,87,1.141,99,0.004,100,0.003,118,0.74,125,2.873,127,1.804,129,1.855,131,2.031,133,3.112,137,4.311,141,2.652,142,3.749,145,0.855,146,2.143,150,0.323,151,0.334,152,1.448,153,1.329,154,1.54,155,2.446,156,1.366,160,4.242,162,2.143,163,2.278,166,3.491,167,3.112,179,0.094,180,1.592,181,1.748,183,2.058,197,1.111,205,1.313,216,2.403,219,0.784,233,1.882,237,1.54,247,1.556,249,2.966,253,0.892,309,1.592,349,0.93,455,2.65,470,0.993,472,2.177,474,1.7,476,1.226,483,4.824,494,3.024,495,4.205,498,1.579,515,1.709,545,2.526,604,1.931,736,3.219,756,2.361,843,3.866,874,4.757,878,2.17,989,1.492,1006,1.709,1186,3.184,1358,2.44,1406,2.361,1520,2.143,1641,1.851,1708,1.54,1756,4.558,1757,1.935,1765,1.776,1888,3.449,1899,1.935,1922,1.748,1923,1.776,1969,2.446,1970,4.095,1971,3.784,1972,4.979,1973,4.979,1974,4.979,1975,6.399,1976,6.018,1977,6.609,1978,6.018,1979,4.979,1980,4.979,1981,6.018,1982,6.018,1983,4.095,1984,2.672,1985,3.015,1986,4.095,1987,3.015,1988,6.609,1989,4.095,1990,3.015,1991,4.095,1992,3.015,1993,4.095,1994,3.449,1995,3.015,1996,6.349,1997,3.015,1998,5.092,1999,3.015,2000,3.015,2001,6.349,2002,4.095,2003,4.095,2004,3.015,2005,6.05,2006,4.095,2007,3.015,2008,6.242,2009,4.095,2010,3.015,2011,4.095,2012,4.095,2013,3.015,2014,4.095,2015,3.015,2016,3.015,2017,4.095,2018,4.979,2019,4.095,2020,4.095,2021,4.095,2022,4.979,2023,4.095,2024,4.979,2025,6.018,2026,4.979,2027,3.015,2028,4.095,2029,4.095,2030,3.015,2031,4.095,2032,3.015,2033,2.837,2034,1.851,2035,1.851,2036,1.54,2037,4.095,2038,4.095,2039,2.672,2040,2.672,2041,4.095,2042,2.446,2043,2.278,2044,2.672,2045,4.095,2046,2.672,2047,2.672,2048,2.672,2049,2.278,2050,2.278,2051,2.672,2052,2.143,2053,4.558,2054,5.412,2055,2.446,2056,2.446,2057,2.672,2058,1.851,2059,2.031,2060,2.672,2061,2.672,2062,2.672,2063,4.095,2064,2.672,2065,2.672,2066,2.672,2067,2.672,2068,2.446,2069,1.935,2070,2.672,2071,2.278,2072,2.672,2073,2.672,2074,2.672,2075,2.672,2076,2.446,2077,2.031,2078,2.031,2079,2.672,2080,2.672,2081,2.672,2082,2.672,2083,4.095,2084,2.672,2085,2.672,2086,2.672,2087,2.672,2088,2.672,2089,2.672,2090,2.672,2091,2.672,2092,2.672,2093,2.672,2094,2.672,2095,2.672,2096,2.672]],["title/interfaces/DataStateModel.html",[0,0.282,2076,3.695]],["body/interfaces/DataStateModel.html",[0,0.237,1,1.955,2,0.92,3,0.056,4,0.103,5,0.056,8,0.571,9,3.015,10,5.033,11,0.006,12,0.429,13,0.657,17,0.008,18,0.721,19,0.316,20,1.223,23,0.103,24,2.305,26,1.784,36,2.106,46,0.92,53,0.489,60,2.169,65,0.751,66,1.955,67,2.169,71,3.667,72,4.505,73,3.157,74,2.169,76,2.349,77,2.349,78,2.169,79,2.169,87,0.61,99,0.005,100,0.003,118,0.939,125,2.719,127,0.831,131,1.834,133,2.577,137,4.103,141,2.769,142,3.104,145,1.085,146,2.719,150,0.344,151,0.423,152,1.837,153,1.686,154,1.955,155,3.104,156,1.734,160,3.716,162,2.719,163,2.89,166,4.167,167,2.577,179,0.119,180,1.318,181,1.447,183,2.193,205,1.349,216,2.598,219,0.937,233,1.558,237,2.818,247,1.699,249,3.416,253,1.131,309,2.02,349,1.181,455,2.362,472,1.483,476,1.196,483,4.86,495,4.103,498,1.534,515,2.169,545,3.015,604,1.599,736,3.191,756,2.818,843,3.386,874,4.167,878,1.901,989,1.894,1006,2.169,1186,3.667,1358,2.02,1406,1.955,1520,2.719,1641,2.349,1708,1.955,1756,5.249,1757,2.455,1765,2.254,1888,3.971,1899,2.455,1922,2.086,1969,3.104,1970,3.391,1971,3.716,1972,3.391,1973,3.391,1974,3.391,1975,5.249,1976,4.889,1977,4.889,1978,4.889,1979,3.391,1980,3.391,1981,3.391,1982,4.889,1986,3.391,1988,6.276,1989,3.391,1991,3.391,1993,3.391,1994,3.386,1996,5.734,1998,4.598,2001,5.734,2002,3.391,2003,3.391,2005,5.745,2006,3.391,2008,5.745,2009,3.391,2011,3.391,2012,3.391,2014,3.391,2017,3.391,2018,4.889,2019,3.391,2020,3.391,2021,3.391,2022,4.889,2023,3.391,2024,4.889,2025,6.276,2026,4.889,2028,3.391,2029,3.391,2031,3.391,2033,3.386,2034,2.349,2035,2.349,2036,1.955,2037,4.889,2038,4.889,2039,3.391,2040,3.391,2041,4.889,2042,3.104,2043,2.89,2044,3.391,2045,4.889,2046,3.391,2047,3.391,2048,3.391,2049,2.89,2050,2.89,2051,3.391,2052,2.719,2053,5.249,2054,5.907,2055,3.104,2056,3.104,2057,3.391,2058,2.349,2059,2.577,2060,3.391,2061,3.391,2062,3.391,2063,4.889,2064,3.391,2065,3.391,2066,3.391,2067,3.391,2068,3.104,2069,2.455,2070,3.391,2071,2.89,2072,3.391,2073,3.391,2074,3.391,2075,3.391,2076,4.476,2077,2.577,2078,2.577,2079,3.391,2080,3.391,2081,3.391,2082,3.391,2083,4.889,2084,3.391,2085,3.391,2086,3.391,2087,3.391,2088,3.391,2089,3.391,2090,3.391,2091,3.391,2092,3.391,2093,3.391,2094,3.391,2095,3.391,2096,3.391]],["title/interfaces/DefaultIconDefinition.html",[0,0.282,2097,4.036]],["body/interfaces/DefaultIconDefinition.html",[0,0.37,2,1.437,3,0.087,4,0.087,5,0.087,8,0.893,11,0.005,12,0.465,13,0.887,16,1.4,17,0.008,19,0.701,23,0.109,33,3.958,34,4.175,51,3.113,53,1.167,68,3.371,73,2.014,87,1.456,99,0.006,100,0.005,127,1.298,182,4.515,219,1.015,236,2.567,259,3.388,288,5.295,318,2.789,827,4.515,1557,4.515,1641,3.669,2097,7.192,2098,4.85,2099,5.977,2100,5.977,2101,4.85,2102,7.449,2103,5.977,2104,5.977,2105,4.85,2106,5.297,2107,5.977,2108,5.977,2109,7.334,2110,5.627,2111,6.893,2112,6.418,2113,6.044,2114,5.977,2115,4.85,2116,4.85,2117,5.977,2118,5.977,2119,5.977,2120,5.297]],["title/interfaces/DrawerContainersChanged.html",[0,0.282,1886,3.067]],["body/interfaces/DrawerContainersChanged.html",[0,0.503,2,1.278,3,0.078,4,0.078,5,0.078,8,0.794,11,0.004,12,0.413,13,0.823,17,0.008,18,1.302,19,0.786,23,0.134,46,1.662,53,0.679,82,2.133,97,3.582,99,0.006,100,0.004,101,1.296,103,2.178,114,2.764,116,3.58,131,1.507,141,1.751,150,0.217,179,0.166,192,4.968,215,2.905,219,0.902,233,3.314,275,2.966,281,2.044,283,3.586,284,2.679,290,1.539,296,2.478,476,0.847,544,2.552,546,2.408,578,2.816,593,3.496,849,2.966,872,3.532,878,2.382,1009,4.072,1559,3.532,1692,3.803,1695,2.631,1708,2.715,1709,3.532,1713,4.589,1728,3.65,1783,3.58,1832,4.244,1858,3.131,1860,3.411,1879,4.656,1880,3.778,1881,5.093,1882,4.913,1883,4.913,1884,5.46,1885,3.778,1886,5.175,1887,4.913,1888,4.244,1889,4.793,1890,4.913,1891,4.015,1892,4.015,1893,4.656,1894,4.656,1895,4.072,1896,4.015,1897,4.015,1898,4.913,1899,3.411,1900,3.778]],["title/interfaces/DrawerInitialized.html",[0,0.282,1893,3.067]],["body/interfaces/DrawerInitialized.html",[0,0.506,2,1.3,3,0.079,4,0.079,5,0.079,8,0.807,11,0.004,12,0.42,13,0.832,17,0.008,18,1.316,19,0.786,23,0.134,46,1.68,53,0.69,82,2.157,97,3.611,99,0.006,100,0.004,101,1.234,103,1.981,114,2.759,116,3.641,131,1.532,141,1.781,150,0.221,179,0.168,192,4.117,215,2.955,219,0.918,233,3.155,275,2.999,281,2.066,283,3.609,284,2.708,290,1.565,296,2.52,476,0.861,544,2.596,546,2.45,578,2.202,593,3.076,849,2.999,872,3.571,878,2.408,1009,3.185,1559,3.571,1692,3.834,1695,2.676,1708,2.762,1709,3.571,1713,4.599,1728,3.69,1783,3.641,1832,4.29,1858,3.185,1860,3.469,1879,4.708,1880,3.842,1881,5.116,1882,4.968,1883,4.968,1884,5.505,1885,3.842,1886,4.708,1887,3.842,1888,3.319,1889,4.824,1890,4.968,1891,5.28,1892,5.28,1893,5.217,1894,4.708,1895,4.117,1896,4.084,1897,4.084,1898,4.968,1899,3.469,1900,3.842]],["title/modules/DrawerModule.html",[381,0.651,395,3.067]],["body/modules/DrawerModule.html",[3,0.088,4,0.088,5,0.088,11,0.005,17,0.008,23,0.088,99,0.006,100,0.005,136,1.672,150,0.378,151,0.667,177,2.958,179,0.188,204,1.781,290,1.743,317,1.001,338,2.958,340,2.958,377,2.958,381,0.861,383,1.707,384,1.707,385,2.46,386,1.781,387,2.213,388,2.46,395,6.401,403,2.122,404,1.604,406,1.858,407,2.261,408,4.091,409,3.077,410,6.633,411,5.32,412,6.633,413,5.338,437,4.887,438,4.887,1754,5.338,1755,4.55,1885,4.281,2121,5.338,2122,5.338,2123,5.338,2124,6.022,2125,5.32,2126,5.32,2127,6.022,2128,5.338,2129,5.338]],["title/interfaces/DrawerToggled.html",[0,0.282,1894,3.067]],["body/interfaces/DrawerToggled.html",[0,0.497,2,1.238,3,0.075,4,0.075,5,0.075,8,0.769,11,0.004,12,0.4,13,0.806,17,0.008,18,1.614,19,0.788,23,0.133,46,2.06,53,0.657,82,2.48,97,3.527,99,0.006,100,0.004,101,1.205,103,1.919,114,2.78,116,3.468,131,1.919,141,2.23,150,0.211,179,0.16,192,3.988,215,3.7,219,0.874,233,3.273,275,2.905,281,2.534,283,3.542,284,3.321,290,1.96,296,3.156,476,0.82,544,2.472,546,2.333,578,2.097,593,3.004,849,2.905,872,3.459,878,2.333,1009,3.033,1559,3.459,1692,3.744,1695,2.548,1708,3.459,1709,3.459,1713,4.569,1728,3.575,1783,3.468,1832,5.261,1858,3.033,1860,3.304,1879,4.56,1880,3.659,1881,4.918,1882,4.812,1883,4.812,1884,5.376,1885,3.659,1886,4.56,1887,3.659,1888,3.16,1889,4.734,1890,4.812,1891,3.889,1892,3.889,1893,4.56,1894,5.095,1895,5.048,1896,5.114,1897,5.114,1898,4.812,1899,3.304,1900,3.659]],["title/components/DropdownComponent.html",[101,0.726,343,1.436]],["body/components/DropdownComponent.html",[3,0.092,4,0.053,5,0.053,8,0.797,11,0.003,12,0.284,13,0.635,15,2.226,16,1.261,17,0.008,19,0.635,20,1.806,22,3.503,23,0.053,47,1.332,48,1.362,53,0.805,55,1.035,65,1.236,69,2.383,87,0.582,99,0.004,100,0.005,101,1.266,102,1.152,103,1.512,104,1.127,105,1.177,106,1.23,107,1.057,114,1.863,117,3.096,118,2.309,120,1.757,122,1.797,125,1.127,127,0.793,128,0.915,129,1.692,131,1.512,136,1.014,144,2.64,147,2.46,148,1.203,150,0.149,151,0.404,159,4.964,169,1.152,173,1.152,177,1.152,179,0.114,183,0.953,193,3.054,197,1.282,199,2.119,205,1.445,224,1.678,228,2.596,239,3.798,252,1.599,253,1.08,261,2.46,268,1.61,271,2.334,272,2.441,277,1.526,279,1.655,281,2.409,282,3.712,286,3.23,289,3.891,290,1.057,291,4.032,292,3.327,293,2.725,295,2.816,297,3.444,298,1.866,299,3.025,300,3.321,308,4.177,309,3.891,317,0.607,318,1.646,319,1.719,320,1.23,321,2.334,322,1.23,323,1.23,324,1.152,325,1.23,326,1.152,327,1.23,328,1.152,329,1.388,330,1.23,331,1.152,332,1.177,333,1.23,334,1.152,335,1.23,336,1.152,337,1.23,338,1.152,339,1.23,340,1.152,341,2.123,342,1.23,343,2.185,344,1.797,345,1.152,346,1.203,347,1.23,348,1.152,349,1.646,350,1.797,351,1.152,352,1.23,353,1.152,354,1.23,355,1.152,356,1.152,357,1.23,358,1.152,359,1.23,360,1.152,361,1.797,362,1.152,363,1.23,364,1.152,365,1.23,366,1.152,367,1.23,368,1.177,369,1.23,370,1.152,371,1.23,372,1.152,373,1.23,374,1.152,375,1.152,376,1.23,377,1.152,378,1.152,379,1.23,380,1.23,453,4.244,474,0.915,476,1.004,498,1.047,723,2.172,724,2.229,734,2.566,736,1.97,745,2.621,746,2.172,847,4.878,916,3.791,1108,3.423,1113,4.524,1275,5.112,1294,6.154,1306,2.964,1316,2.242,1317,2.242,1347,2.816,1349,3.274,1358,2.816,1376,1.996,1378,2.915,1379,2.725,1380,2.915,1526,6.61,1529,4.328,1544,3.791,1559,2.725,1604,2.242,1605,2.46,1606,3.791,1607,2.596,1608,4.244,1609,2.46,1612,2.07,1658,4.727,1817,5.622,1837,2.152,2130,3.652,2131,6.942,2132,5.584,2133,4.727,2134,6.3,2135,5.334,2136,6.928,2137,3.652,2138,4.727,2139,3.652,2140,5.334,2141,3.652,2142,3.652,2143,5.334,2144,3.652,2145,3.652,2146,6.141,2147,5.622,2148,3.652,2149,5.334,2150,3.652,2151,4.727,2152,5.334,2153,3.652,2154,4.727,2155,5.979,2156,2.759,2157,2.964,2158,4.727,2159,3.237,2160,2.964,2161,2.964,2162,2.759,2163,5.622,2164,2.759,2165,4.727,2166,2.964,2167,3.652,2168,3.237,2169,3.237,2170,3.652,2171,2.964,2172,3.652,2173,4.328,2174,2.07,2175,3.652,2176,3.237,2177,2.964,2178,3.237,2179,3.237,2180,3.237]],["title/modules/DropdownModule.html",[381,0.651,2181,3.236]],["body/modules/DropdownModule.html",[3,0.098,4,0.098,5,0.098,11,0.006,17,0.008,22,2.95,23,0.098,99,0.007,100,0.006,150,0.369,151,0.741,179,0.208,204,1.979,317,1.113,343,2.997,381,0.957,383,1.897,384,1.897,385,2.576,386,1.979,387,1.979,388,2.576,403,2.262,404,1.783,406,2.065,407,2.41,444,2.75,445,2.255,2181,6.577,2182,5.931,2183,5.931,2184,5.931,2185,6.692,2186,6.029,2187,5.056,2188,6.475,2189,5.43,2190,5.931]],["title/components/DualSliderComponent.html",[101,0.726,345,1.436]],["body/components/DualSliderComponent.html",[3,0.064,4,0.03,5,0.03,8,0.845,11,0.002,12,0.162,13,0.608,15,2.035,16,0.845,17,0.008,18,1.269,19,0.653,20,1.796,22,2.493,23,0.03,47,1.022,48,1.078,49,1.963,51,1.44,53,0.823,55,0.591,63,1.953,65,0.863,69,2.85,71,1.953,75,4.481,82,1.577,87,0.814,93,1.654,99,0.003,100,0.004,101,1.146,102,0.658,103,0.977,104,1.358,105,1.11,106,0.703,107,0.604,114,1.301,117,2.925,118,2.191,120,1.135,122,1.161,127,0.956,128,0.522,129,1.82,131,1.726,134,2.964,136,0.579,144,2.529,145,1.603,147,5.171,148,0.687,150,0.209,151,0.231,159,4.969,169,0.658,173,0.658,177,0.658,179,0.065,180,1.76,181,1.303,183,1.476,193,1.94,197,0.828,199,1.748,202,6.495,205,1.671,219,1.144,223,2.602,224,1.172,228,1.483,233,2.48,235,1.229,239,1.606,247,1.229,249,1.819,252,1.612,253,1.301,268,2.84,269,1.705,270,2.029,271,2.052,272,1.335,274,1.182,277,1.44,279,2.315,281,2.065,282,3.332,283,0.919,284,2.192,286,2.052,289,2.986,290,0.604,291,2.799,292,2.986,293,3.292,295,1.101,296,2.839,297,1.883,298,1.066,299,2.453,300,2.545,302,3.322,305,2.592,306,1.819,307,1.281,308,2.896,309,2.698,317,0.347,318,1.063,319,2.429,320,0.703,321,1.721,322,0.703,323,0.703,324,0.658,325,0.703,326,0.658,327,0.703,328,0.658,329,1.065,330,0.703,331,0.658,332,0.672,333,0.703,334,0.658,335,0.703,336,0.658,337,0.703,338,0.658,339,0.703,340,0.658,341,1.482,342,0.703,343,0.658,344,1.161,345,1.611,346,2.37,347,0.703,348,0.658,349,1.063,350,1.161,351,0.658,352,0.703,353,0.658,354,0.703,355,0.658,356,0.658,357,0.703,358,0.658,359,0.703,360,0.658,361,1.161,362,0.658,363,0.703,364,0.658,365,0.703,366,0.658,367,0.703,368,0.672,369,0.703,370,0.658,371,0.703,372,0.658,373,0.703,374,0.658,375,0.658,376,0.703,377,0.658,378,0.658,379,0.703,380,0.703,427,6.111,453,2.32,455,2.173,470,1.135,474,1.28,476,0.701,494,1.654,498,1.37,503,4.053,522,1.953,544,2.113,555,1.101,565,2.579,578,1.403,606,2.252,631,2.449,649,2.592,669,2.324,716,1.518,723,1.403,724,1.44,730,2.211,734,1.792,736,1.887,740,4.788,742,2.602,744,1.405,745,2.303,746,1.403,847,3.472,849,2.89,878,1.187,900,1.693,916,2.449,1108,2.211,1113,3.472,1121,1.654,1133,4.564,1275,3.57,1284,1.576,1288,2.449,1306,1.693,1308,1.849,1314,2.382,1316,2.115,1317,2.115,1320,1.849,1334,1.693,1344,1.953,1349,3.738,1358,3.687,1378,1.883,1379,1.76,1380,1.883,1406,2.61,1521,1.76,1529,2.795,1545,1.561,1559,1.066,1568,4.528,1573,3.9,1580,3.631,1591,3.053,1592,3.9,1593,1.849,1594,1.849,1595,1.849,1604,1.281,1605,1.405,1606,2.449,1607,1.483,1608,3.441,1609,1.405,1612,1.182,1637,3.053,1638,3.053,1640,1.281,1645,1.576,1646,4.528,1647,1.849,1649,3.053,1650,3.053,1651,2.449,1652,2.602,1662,2.211,1665,3.324,1666,1.693,1667,1.849,1668,1.849,1669,3.9,1679,2.795,1689,3.206,1700,2.896,1725,2.449,1765,2.029,1766,1.229,1802,3.053,1817,4.589,1837,1.229,1858,3.01,1888,3.136,2138,3.053,2146,3.053,2147,2.795,2151,3.053,2154,3.053,2155,2.795,2156,1.576,2157,2.795,2158,1.849,2159,1.849,2160,1.693,2161,1.693,2162,1.576,2163,4.145,2164,2.602,2165,3.053,2168,1.849,2169,1.849,2171,1.693,2176,3.053,2177,1.693,2178,1.849,2179,1.849,2191,7.62,2192,2.086,2193,3.9,2194,4.4,2195,3.445,2196,4.4,2197,6.736,2198,6.09,2199,6.736,2200,6.983,2201,6.443,2202,5.655,2203,5.109,2204,5.109,2205,3.053,2206,3.445,2207,3.445,2208,6.09,2209,5.109,2210,5.109,2211,4.4,2212,5.655,2213,2.086,2214,3.445,2215,3.053,2216,3.445,2217,2.449,2218,2.086,2219,3.445,2220,2.086,2221,2.086,2222,2.602,2223,3.445,2224,2.086,2225,2.086,2226,3.445,2227,3.445,2228,3.053,2229,3.445,2230,2.086,2231,2.602,2232,3.053,2233,4.528,2234,2.086,2235,3.445,2236,2.086,2237,3.445,2238,3.053,2239,2.086,2240,5.655,2241,2.086,2242,6.443,2243,5.109,2244,4.4,2245,3.445,2246,2.086,2247,2.086,2248,3.053,2249,2.086,2250,3.445,2251,2.086,2252,2.086,2253,2.086,2254,5.109,2255,3.053,2256,2.086,2257,3.053,2258,2.086,2259,2.086,2260,2.086,2261,3.445,2262,2.086,2263,2.795,2264,4.4,2265,3.445,2266,2.086,2267,2.086,2268,2.086,2269,3.445,2270,3.445,2271,1.693,2272,1.849,2273,2.086,2274,2.086,2275,2.086,2276,2.086,2277,3.445,2278,2.086,2279,2.086,2280,2.086,2281,2.086,2282,2.086,2283,2.086,2284,2.086,2285,2.086,2286,2.086,2287,3.445,2288,2.086,2289,3.445,2290,2.086,2291,3.445,2292,2.086,2293,2.086,2294,2.086,2295,2.086,2296,2.086,2297,2.086,2298,2.086,2299,2.086,2300,2.086,2301,2.086,2302,3.445,2303,4.4,2304,3.445,2305,4.4,2306,2.086,2307,2.086,2308,2.086,2309,5.109,2310,2.086,2311,2.086,2312,2.086,2313,3.445,2314,3.445,2315,3.445,2316,2.086,2317,2.086,2318,2.086,2319,2.086,2320,3.445,2321,2.086,2322,2.086,2323,2.086,2324,1.849,2325,2.086,2326,3.445,2327,1.693,2328,2.086,2329,2.086,2330,1.14,2331,2.086]],["title/modules/DualSliderModule.html",[381,0.651,396,2.922]],["body/modules/DualSliderModule.html",[3,0.094,4,0.094,5,0.094,11,0.005,17,0.008,22,2.853,23,0.094,99,0.007,100,0.005,150,0.379,151,0.717,179,0.202,204,1.914,317,1.076,345,2.985,346,2.133,381,0.925,383,1.835,384,1.835,385,2.539,386,1.914,387,1.914,388,2.539,396,5.899,403,2.218,404,1.724,406,1.998,407,2.363,427,4.601,444,2.696,445,2.181,1133,3.204,1580,4.601,1628,6.933,2186,5.91,2187,4.89,2188,6.348,2189,5.253,2191,5.737,2271,5.253,2272,5.737,2332,5.737,2333,5.737,2334,5.737,2335,6.474,2336,7.823,2337,7.823,2338,6.474]],["title/interfaces/ExtDeckProps.html",[0,0.282,1150,3.067]],["body/interfaces/ExtDeckProps.html",[0,0.423,2,0.857,3,0.076,4,0.052,5,0.052,6,1.149,11,0.006,12,0.407,13,0.624,16,1.208,17,0.008,18,1.638,19,0.681,23,0.111,28,1.713,46,1.26,47,0.947,48,0.631,87,0.835,92,3.216,95,2.828,99,0.004,100,0.003,125,1.1,141,2.047,145,1.485,150,0.299,179,0.111,205,1.688,216,1.689,219,1.477,235,2.1,247,1.92,252,1.581,271,2.726,281,2.332,329,0.987,455,2.536,457,4.479,472,2.03,475,3.814,476,0.568,495,3.743,512,2.021,515,2.021,517,2.738,519,4.766,520,2.288,522,3.522,523,4.946,524,2.288,525,3.075,528,3.66,530,2.596,536,3.216,547,2.288,572,5.061,604,2.19,650,3.306,653,3.402,669,3.853,686,2.288,736,2.818,860,2.188,925,1.712,989,2.594,1129,3.362,1130,2.401,1131,2.188,1132,2.677,1133,2.594,1134,3.499,1135,4.613,1136,4.299,1137,3.987,1138,2.021,1139,2.288,1140,3.087,1141,3.216,1142,3.087,1143,3.216,1144,2.534,1145,2.534,1146,3.362,1147,4.479,1148,2.534,1149,2.534,1150,4.185,1151,4.185,1152,2.534,1153,3.362,1154,3.362,1155,4.416,1156,4.134,1157,3.216,1158,2.188,1159,2.188,1160,3.743,1161,5.186,1162,4.613,1163,3.724,1164,4.185,1165,2.534,1166,2.534,1167,2.534,1168,4.185,1169,2.021,1170,4.416,1171,4.416,1172,2.401,1173,2.401,1174,3.529,1175,4.395,1176,3.724,1177,2.288,1178,2.401,1179,2.534,1180,2.288,1181,4.416,1182,2.401,1183,5.526,1184,3.529,1185,3.529,1186,3.882,1187,2.288,1188,2.534,1189,2.534,1190,2.534,1191,2.534,1192,2.534,1193,2.534,1194,2.401,1195,2.534,1196,2.401,1197,3.724,1198,3.724,1199,2.534,1200,2.534,1201,4.868,1202,2.534,1203,2.401,1204,2.534,1205,2.534,1206,2.534,1207,2.401,1208,2.534,1209,2.534,1210,3.724,1211,3.724,1212,2.534,1213,2.534,1214,2.401,1215,4.416,1216,2.534,1217,3.087,1218,2.534,1219,3.724,1220,2.288,1221,2.288,1222,2.534,1223,2.401,1224,2.534,1225,3.724,1226,3.724,1227,4.416,1228,2.401,1229,2.534,1230,2.534,1231,2.288,1232,3.362,1233,2.534,1234,2.534,1235,2.534,1236,2.534,1237,2.534,1238,2.401,1239,2.534,1240,2.021,1241,2.534,1242,2.534,1243,2.534,1244,2.534,1245,2.534,1246,2.401,1247,2.534,1248,2.401,1249,3.529,1250,2.534,1251,2.534,1252,2.534,1253,2.534,1254,2.401,1255,2.534,1256,2.534,1257,2.534,1258,2.534,1259,2.534,1260,2.288,1261,2.534,1262,2.534,1263,3.724,1264,2.534,1265,2.534]],["title/interfaces/Filter.html",[0,0.282,73,1.534]],["body/interfaces/Filter.html",[0,0.524,1,2.339,2,1.101,3,0.067,4,0.067,5,0.067,6,1.475,7,3.084,8,1.065,9,3.42,10,4.344,11,0.007,12,0.356,13,0.745,14,3.084,15,2.502,16,1.425,17,0.008,18,1.728,19,0.753,20,1.387,21,3.084,22,2.018,23,0.121,24,2.615,25,2.697,26,2.917,27,3.268,28,1.743,29,2.595,30,3.084,31,3.084,32,2.697,33,1.913,34,3.472,35,2.938,36,1.68,37,3.686,38,2.938,39,2.938,40,2.81,41,2.697,42,2.81,43,2.938,44,2.697,45,4.189,46,2.039,47,1.288,48,0.81,49,1.475,50,3.304,51,1.913,52,2.502,53,0.585,54,2.81,55,1.774,56,2.595,57,2.697,58,2.938,59,4.376,60,4.548,61,4.514,62,4.514,63,4.344,64,4.704,65,1.399,66,3.642,67,4.548,68,1.731,69,2.367,70,3.304,71,3.547,72,3.304,73,2.582,74,4.041,75,4.918,76,4.704,77,4.704,78,4.695,79,4.695,80,3.42,81,4.918,82,1.931,83,2.917,84,3.42,85,4.704,86,4.016,87,1.375,88,4.215,89,3.004,90,4.704,91,2.938,92,2.018,93,3.004,94,2.697,95,2.763,96,2.697,97,2.134,98,2.938,99,0.005,100,0.004]],["title/components/FiltersContentComponent.html",[101,0.726,348,1.436]],["body/components/FiltersContentComponent.html",[3,0.097,4,0.059,5,0.059,8,0.853,11,0.003,12,0.312,16,0.993,17,0.008,19,0.631,20,1.696,23,0.059,46,1.373,47,1.382,48,1.407,49,2.465,53,0.849,55,1.139,65,1.304,68,2.16,70,3.016,73,2.939,87,0.64,99,0.005,100,0.006,101,1.219,102,1.267,103,2.052,104,1.24,105,1.295,106,1.353,107,1.163,114,1.965,117,3.118,118,2.328,120,1.882,122,1.924,128,1.006,129,1.692,136,1.115,144,3.934,148,1.323,150,0.164,151,0.445,169,1.267,173,1.267,177,1.267,179,0.125,183,1.49,193,1.77,197,1.373,205,1.51,224,1.77,233,2.327,236,1.968,268,2.93,269,1.988,274,4.505,275,1.723,279,2.588,281,2.141,283,2.518,284,2.576,289,2.121,290,1.163,295,3.51,296,3.375,298,2.918,299,3.476,300,2.778,301,1.873,302,1.77,303,3.848,317,0.668,318,1.763,319,1.841,320,1.353,321,2.439,322,1.353,323,1.353,324,1.267,325,1.353,326,1.267,327,1.353,328,1.267,329,1.441,330,1.353,331,1.267,332,1.295,333,1.353,334,1.267,335,1.353,336,1.267,337,1.353,338,1.267,339,1.353,340,1.267,341,2.239,342,1.353,343,1.267,344,1.924,345,1.267,346,1.882,347,1.353,348,2.283,349,2.882,350,1.924,351,1.267,352,1.353,353,1.267,354,1.353,355,1.267,356,1.267,357,1.353,358,1.267,359,1.353,360,1.267,361,1.924,362,1.267,363,1.353,364,1.267,365,1.353,366,1.267,367,1.353,368,1.295,369,1.353,370,1.267,371,1.353,372,1.267,373,1.353,374,1.267,375,1.267,376,1.353,377,1.267,378,1.267,379,1.353,380,1.353,474,1.006,476,1.154,498,1.121,593,2.64,669,4.318,723,2.327,724,2.387,729,4.635,730,3.666,734,3.115,736,2.11,745,2.514,746,2.707,1113,3.506,1133,1.988,1156,2.918,1301,3.666,1318,2.855,1335,3.666,1349,3.506,1358,3.016,1376,2.196,1378,2.196,1379,2.052,1380,2.196,1521,2.918,1563,4.315,1604,2.466,1605,2.706,1608,2.706,1609,2.706,1610,3.259,1621,5.062,1662,3.666,1806,5.393,1983,5.062,2131,3.259,2161,3.259,2180,3.56,2339,6.177,2340,6.635,2341,3.56,2342,5.062,2343,5.062,2344,7.24,2345,5.891,2346,5.891,2347,3.56,2348,4.017,2349,3.56,2350,3.56,2351,5.062,2352,4.017,2353,7.24,2354,5.712,2355,4.017,2356,5.712,2357,7.24,2358,5.062,2359,4.017,2360,4.017,2361,5.712,2362,4.017,2363,4.017,2364,4.017,2365,4.017,2366,4.017,2367,4.017,2368,3.56,2369,5.712]],["title/modules/FiltersContentModule.html",[381,0.651,2370,3.236]],["body/modules/FiltersContentModule.html",[3,0.093,4,0.093,5,0.093,11,0.005,17,0.008,23,0.093,99,0.006,100,0.005,150,0.371,151,0.708,179,0.199,204,1.891,317,1.063,348,2.981,349,1.973,381,0.914,383,1.813,384,1.813,385,2.526,386,1.891,387,1.891,388,2.526,396,5.814,403,2.201,404,1.703,406,2.396,407,2.346,426,5.189,427,4.546,428,5.189,444,2.676,445,2.154,1323,6.439,2181,6.439,2339,4.831,2340,5.189,2370,6.742,2371,5.668,2372,5.668,2373,6.395,2374,5.668,2375,5.668,2376,6.395,2377,6.395,2378,5.668]],["title/components/FiltersPopoverComponent.html",[101,0.726,169,1.436]],["body/components/FiltersPopoverComponent.html",[3,0.094,4,0.056,5,0.056,8,0.822,11,0.003,12,0.502,13,0.655,17,0.008,19,0.583,20,0.845,23,0.056,46,1.323,47,1.355,48,1.383,51,2.955,53,0.825,55,1.081,65,1.267,68,2.674,73,2.382,82,2.182,87,0.608,99,0.005,100,0.005,101,1.195,102,1.203,103,1.56,104,1.177,105,2.081,106,1.285,107,1.104,114,2.217,117,3.106,118,2.314,120,1.813,122,1.854,127,0.828,128,1.771,129,1.714,133,4.762,136,1.059,144,3.5,148,1.256,150,0.156,151,0.422,169,2.229,171,6.227,173,1.203,177,1.203,179,0.119,183,0.995,193,1.681,197,1.323,199,2.186,202,6.523,205,1.629,216,1.774,223,4.158,224,1.72,236,1.896,238,3.008,252,1.271,253,1.128,271,1.854,275,2.361,277,3.133,279,1.728,281,2.31,282,3.804,285,2.014,289,2.906,290,1.104,295,2.014,297,3.008,298,1.948,299,3.101,300,2.955,301,1.778,302,1.681,303,2.569,317,0.634,318,1.698,319,1.774,320,1.285,321,2.382,322,1.285,323,1.285,324,1.203,325,1.285,326,1.203,327,1.285,328,1.203,329,1.332,330,1.285,331,1.203,332,1.229,333,1.285,334,1.203,335,1.285,336,1.203,337,1.285,338,1.203,339,1.285,340,1.203,341,2.175,342,1.285,343,1.203,344,1.854,345,1.203,346,1.256,347,1.285,348,1.203,349,2.886,350,1.854,351,1.203,352,1.285,353,1.203,354,1.285,355,1.203,356,1.203,357,1.285,358,1.203,359,1.285,360,1.203,361,1.854,362,1.203,363,1.285,364,1.203,365,1.285,366,1.203,367,1.285,368,1.229,369,1.285,370,1.203,371,1.285,372,1.203,373,1.285,374,1.203,375,1.203,376,1.285,377,1.203,378,1.203,379,1.285,380,1.285,474,0.955,476,0.608,498,1.267,565,2.385,723,2.242,724,2.3,729,4.466,730,3.532,731,4.878,732,3.532,733,4.878,734,2.63,736,2.611,745,2.442,746,2.242,786,3.964,916,3.912,1100,2.711,1113,4.602,1156,3.83,1300,3.242,1335,4.811,1378,2.085,1379,1.948,1380,2.085,1440,2.711,1521,2.812,1563,4.158,1604,5.155,1605,2.569,1606,3.912,1607,2.711,1608,2.569,1609,2.569,1612,2.162,1613,3.008,1641,3.379,1663,3.532,1679,3.094,1837,4.744,1875,5.24,1895,3.804,2164,4.878,2173,3.094,2339,6.227,2345,4.878,2346,5.723,2358,3.38,2379,3.38,2380,5.723,2381,4.878,2382,6.457,2383,7.07,2384,7.07,2385,6.457,2386,3.814,2387,5.737,2388,4.878,2389,3.814,2390,3.814,2391,5.504,2392,3.814,2393,6.266,2394,3.814,2395,3.814,2396,3.814,2397,6.457,2398,3.814,2399,3.814,2400,4.878,2401,3.814,2402,3.814,2403,3.814,2404,3.814,2405,3.814,2406,5.504,2407,3.814,2408,3.38]],["title/modules/FiltersPopoverModule.html",[381,0.651,397,3.236]],["body/modules/FiltersPopoverModule.html",[3,0.096,4,0.096,5,0.096,11,0.005,17,0.008,23,0.096,99,0.007,100,0.005,150,0.367,151,0.727,169,2.991,171,4.965,172,5.333,179,0.205,204,1.943,317,1.093,349,2.436,381,0.94,383,1.863,384,1.863,385,2.556,386,1.943,387,1.943,388,2.556,397,6.652,403,2.238,404,1.75,406,2.436,407,2.384,408,4.315,409,3.358,444,2.72,445,2.214,2339,4.965,2340,5.333,2370,6.481,2409,5.825,2410,5.825,2411,6.572,2412,5.825,2413,5.825,2414,5.333]],["title/classes/FlatNode.html",[179,0.142,2415,4.036]],["body/classes/FlatNode.html",[3,0.079,4,0.079,5,0.079,8,1.161,11,0.005,12,0.423,15,2.566,16,1.049,17,0.008,18,1.639,19,0.677,23,0.079,46,1.688,53,0.896,65,1.778,82,2.166,87,1.119,99,0.006,100,0.005,101,1.119,107,2.596,125,1.68,129,1.747,131,1.99,150,0.223,179,0.17,180,2.829,181,2.655,183,2.142,184,4.112,194,3.371,197,1.688,236,2.998,247,1.688,252,1.257,449,2.781,470,1.793,474,1.758,476,1.354,498,1.611,508,4.311,606,3.425,1344,3.979,1355,6.222,2215,6.222,2255,6.222,2415,7.276,2416,8.497,2417,4.824,2418,6.887,2419,5.443,2420,4.522,2421,7.606,2422,5.443,2423,9.138,2424,6.846,2425,7.02,2426,5.443,2427,5.443,2428,5.443,2429,7.02,2430,5.443,2431,5.443,2432,7.02,2433,4.505,2434,5.443,2435,5.443,2436,5.443]],["title/components/HeaderComponent.html",[101,0.726,351,1.436]],["body/components/HeaderComponent.html",[3,0.117,4,0.06,5,0.06,8,0.619,11,0.003,12,0.322,16,0.873,17,0.008,19,0.639,23,0.06,33,1.733,34,2.647,36,1.376,37,4.731,46,1.405,47,1.399,48,1.422,49,2.367,53,0.746,55,1.175,60,3.311,63,3.311,64,3.586,65,1.327,73,2.608,93,2.805,99,0.005,100,0.006,101,1.078,102,1.308,103,1.656,104,1.28,105,1.336,106,1.397,107,1.2,113,5.848,114,2,117,3.125,118,2.333,120,1.925,122,1.968,128,1.038,129,1.648,136,1.151,148,1.366,150,0.17,151,0.459,169,1.308,173,1.308,177,1.308,179,0.129,191,4.74,199,1.647,224,1.802,252,1.349,253,1.226,268,3.412,271,2.608,272,1.607,276,3.132,280,2.793,281,2.289,283,1.828,284,2.264,285,3.572,286,2.724,289,2.189,290,1.2,291,2.052,292,3.085,293,2.118,294,6.281,296,3.609,299,1.991,300,2.827,301,1.933,302,1.828,305,3.442,306,3.572,307,2.545,308,2.35,309,2.189,317,0.689,318,1.803,319,1.883,320,1.397,321,2.474,322,1.397,323,1.397,324,1.308,325,1.397,326,1.308,327,1.397,328,1.308,329,1.458,330,1.397,331,1.308,332,1.336,333,1.397,334,1.308,335,1.397,336,1.308,337,1.397,338,1.308,339,1.397,340,1.308,341,2.279,342,1.397,343,1.308,344,1.968,345,1.308,346,1.366,347,1.397,348,1.308,349,2.389,350,1.968,351,2.316,352,1.397,353,1.308,354,1.397,355,1.308,356,1.308,357,1.397,358,1.308,359,1.397,360,1.308,361,1.968,362,1.308,363,1.397,364,1.308,365,1.397,366,1.308,367,1.397,368,1.336,369,1.397,370,1.308,371,1.397,372,1.308,373,1.397,374,1.308,375,1.308,376,1.397,377,1.308,378,1.308,379,1.397,380,1.397,476,0.931,723,2.379,724,2.441,734,3.153,736,2.712,745,2.777,746,2.755,881,4.152,882,4.556,883,5.488,1156,2.985,1284,3.132,1286,3.442,1301,3.749,1347,3.085,1376,2.266,1378,2.266,1379,2.118,1380,2.266,1395,3.311,1396,3.311,1408,2.35,1520,5.219,1563,4.413,1662,5.154,1762,5.178,1837,2.443,2116,5.958,2162,3.132,2174,2.35,2330,2.266,2437,4.146,2438,7.343,2439,5.178,2440,5.178,2441,6.764,2442,5.842,2443,6.764,2444,6.764,2445,6.764,2446,4.146,2447,4.146,2448,4.146,2449,5.842,2450,4.146,2451,4.146,2452,7.741,2453,5.842,2454,5.842,2455,5.842,2456,5.842,2457,5.842,2458,5.178,2459,5.842,2460,5.842,2461,3.675,2462,4.146,2463,3.364,2464,4.146,2465,4.146,2466,3.675,2467,3.675,2468,4.146,2469,4.146,2470,4.146,2471,4.146,2472,4.146,2473,4.146,2474,4.146]],["title/modules/HeaderModule.html",[381,0.651,1904,3.236]],["body/modules/HeaderModule.html",[3,0.094,4,0.094,5,0.094,11,0.005,17,0.008,23,0.094,99,0.006,100,0.005,150,0.379,151,0.713,179,0.201,204,1.904,317,1.07,351,2.984,381,0.92,383,1.825,384,1.825,385,2.533,386,1.904,387,1.904,388,2.533,403,2.21,404,1.715,406,2.406,407,2.355,408,4.262,409,3.289,419,5.706,444,2.687,445,2.169,1904,6.631,2475,5.706,2476,5.706,2477,5.706,2478,5.706,2479,6.45,2480,6.439,2481,6.911,2482,5.706,2483,7.797,2484,6.439,2485,6.911,2486,5.706,2487,5.224,2488,6.439,2489,6.439]],["title/classes/HuBMAPEntity.html",[179,0.142,2490,4.036]],["body/classes/HuBMAPEntity.html",[3,0.026,4,0.026,5,0.026,6,2.824,8,0.779,10,1.023,11,0.002,12,0.237,13,0.363,15,1.82,16,1.386,17,0.008,18,1.193,19,0.738,20,0.4,22,0.795,23,0.058,27,0.735,28,1.563,29,1.023,32,1.063,34,3.093,35,2.544,36,1.949,38,1.158,39,1.158,40,2.434,41,2.336,42,1.107,44,1.063,46,0.734,47,0.326,48,0.54,49,0.581,52,3.839,53,0.506,54,4.051,55,1.124,59,1.873,60,4.08,61,3.334,62,3.334,63,4.167,64,4.051,67,2.643,68,1.5,78,3.208,83,2.954,84,2.549,87,1.119,95,0.699,99,0.003,100,0.002,118,0.443,127,0.392,128,0.764,129,1.859,145,0.865,150,0.232,179,0.056,183,1.217,189,1.599,193,1.345,197,0.734,199,1.212,216,1.278,217,4.066,219,1.404,236,1.796,237,2.891,247,0.861,252,1.204,253,2.283,272,1.807,283,0.795,293,0.922,449,0.922,470,0.594,474,0.452,476,0.902,497,2.305,498,0.778,508,0.817,565,0.666,578,2.305,593,1.212,597,4.268,606,1.345,620,1.215,650,0.817,653,1.848,669,1.611,681,1.363,726,1.363,736,0.666,796,1.282,797,3.201,806,2.747,816,2.549,818,2.476,820,3.217,824,2.544,850,1.158,856,1.464,860,1.873,861,1.464,876,1.363,878,0.622,880,3.523,881,4.312,882,1.215,894,1.363,977,1.282,1052,3.706,1068,2.305,1074,1.464,1081,1.464,1084,1.464,1100,3.314,1121,3.042,1134,0.922,1156,0.922,1240,1.023,1268,1.599,1296,1.215,1426,1.363,1556,1.282,1640,1.107,1733,4.621,2106,2.704,2490,2.704,2491,7.766,2492,1.599,2493,3.051,2494,3.051,2495,2.704,2496,5.214,2497,4.663,2498,6.826,2499,3.965,2500,5.214,2501,3.965,2502,7.024,2503,3.965,2504,6.027,2505,3.965,2506,5.659,2507,5.659,2508,5.616,2509,3.965,2510,6.826,2511,3.965,2512,3.965,2513,4.663,2514,7.22,2515,6.599,2516,3.051,2517,1.804,2518,1.804,2519,1.804,2520,3.051,2521,1.804,2522,1.804,2523,1.804,2524,1.804,2525,1.804,2526,1.804,2527,1.804,2528,4.23,2529,3.965,2530,1.804,2531,1.804,2532,1.804,2533,1.804,2534,1.804,2535,1.804,2536,1.804,2537,1.804,2538,1.804,2539,1.804,2540,1.804,2541,1.804,2542,1.804,2543,1.804,2544,1.804,2545,1.804,2546,4.89,2547,1.804,2548,6.027,2549,1.804,2550,1.804,2551,1.804,2552,2.055,2553,3.051,2554,2.169,2555,1.804,2556,1.599,2557,1.363,2558,1.804,2559,1.107,2560,1.804,2561,3.051,2562,1.804,2563,1.804,2564,3.217,2565,1.599,2566,3.965,2567,1.804,2568,1.804,2569,1.804,2570,1.804,2571,8.212,2572,6.336,2573,4.663,2574,6.336,2575,6.027,2576,6.336,2577,6.336,2578,6.336,2579,4.133,2580,5.214,2581,5.214,2582,5.214,2583,5.214,2584,6.336,2585,8.733,2586,3.783,2587,4.663,2588,6.336,2589,4.133,2590,4.663,2591,4.663,2592,4.663,2593,7.197,2594,6.336,2595,6.336,2596,4.663,2597,6.336,2598,4.133,2599,6.336,2600,4.663,2601,4.663,2602,2.704,2603,1.804,2604,1.804,2605,1.804,2606,6.336,2607,1.804,2608,3.051,2609,1.804,2610,3.051,2611,5.659,2612,4.663,2613,4.663,2614,1.804,2615,1.804,2616,1.804,2617,1.804,2618,1.804,2619,1.804,2620,3.965,2621,1.804,2622,3.051,2623,3.051,2624,3.051,2625,1.804,2626,1.804,2627,1.804,2628,3.051,2629,2.704,2630,1.804,2631,1.804,2632,1.804,2633,1.804,2634,1.804,2635,1.804,2636,1.804,2637,3.051,2638,1.804,2639,3.051,2640,7.611,2641,1.804,2642,3.051,2643,3.051,2644,3.051,2645,3.051,2646,1.804,2647,3.051,2648,1.804,2649,1.804,2650,3.051,2651,1.804,2652,3.051,2653,3.051,2654,1.804,2655,3.051,2656,1.804,2657,3.051,2658,1.804,2659,3.051,2660,1.804,2661,3.051,2662,1.804,2663,3.051,2664,1.804,2665,3.051,2666,1.804,2667,1.804,2668,1.804,2669,1.804,2670,1.804,2671,1.804,2672,3.051,2673,3.051,2674,1.804,2675,1.804,2676,1.804,2677,1.804,2678,1.215,2679,1.804,2680,1.804,2681,1.804,2682,1.804,2683,1.804,2684,1.804,2685,1.804,2686,1.804,2687,3.051,2688,1.804,2689,1.804,2690,1.804,2691,1.804,2692,1.804,2693,1.804,2694,1.804,2695,1.804,2696,3.051,2697,1.804,2698,3.965,2699,1.804,2700,4.663,2701,1.804,2702,4.663,2703,1.804,2704,3.051,2705,3.051,2706,3.051,2707,1.804,2708,3.051,2709,1.804,2710,1.804,2711,3.965,2712,1.804,2713,1.804,2714,1.804,2715,3.051,2716,1.804,2717,1.804,2718,1.804,2719,1.804,2720,1.804,2721,1.804,2722,6.336,2723,1.804,2724,1.804,2725,1.804,2726,3.051,2727,1.599,2728,3.051,2729,1.804,2730,1.804,2731,1.804,2732,3.051,2733,3.051,2734,1.804,2735,3.051,2736,3.051,2737,3.965,2738,1.804,2739,1.804,2740,3.965,2741,1.804,2742,1.804,2743,1.804,2744,3.965,2745,1.804,2746,1.804,2747,1.804,2748,3.051,2749,1.804,2750,1.804,2751,1.804,2752,1.804,2753,3.965,2754,1.804,2755,1.804,2756,1.804,2757,5.214,2758,1.804,2759,1.804,2760,1.599,2761,1.804,2762,1.804,2763,1.804,2764,1.804,2765,4.133,2766,1.804,2767,1.804,2768,1.464,2769,1.282,2770,1.804,2771,1.804,2772,1.804,2773,1.804,2774,1.804,2775,1.804,2776,1.804,2777,1.804,2778,1.804,2779,1.804,2780,1.804,2781,1.804,2782,1.804,2783,3.051,2784,1.804,2785,1.804,2786,3.965,2787,1.804,2788,1.804,2789,1.804,2790,3.051,2791,1.804,2792,1.804,2793,1.804,2794,3.051,2795,1.804,2796,1.804,2797,1.804,2798,1.804,2799,1.804,2800,1.804,2801,1.804,2802,1.804,2803,6.336,2804,5.659,2805,1.804,2806,6.027,2807,3.051,2808,1.804,2809,3.051,2810,1.804,2811,1.804,2812,1.804,2813,1.804,2814,1.804,2815,1.804,2816,3.965,2817,1.804,2818,3.051,2819,1.804,2820,3.051,2821,1.804,2822,1.464,2823,1.804,2824,1.804,2825,1.804,2826,1.804,2827,1.804,2828,1.804,2829,1.804,2830,1.599,2831,1.804,2832,1.804,2833,1.804,2834,1.804,2835,1.804,2836,1.804,2837,1.804,2838,1.804,2839,1.804,2840,1.282,2841,1.804,2842,1.282,2843,1.804,2844,3.051,2845,1.804,2846,1.804,2847,1.804,2848,1.804,2849,1.804,2850,1.804,2851,1.804,2852,1.804,2853,1.804,2854,1.804,2855,1.804,2856,1.804,2857,1.804,2858,1.804,2859,1.804,2860,3.965,2861,4.663,2862,4.663,2863,1.804,2864,3.051,2865,3.051,2866,3.051,2867,3.051,2868,1.804,2869,1.804,2870,1.804,2871,1.804,2872,1.804,2873,1.804,2874,1.804,2875,1.464,2876,1.599,2877,1.804,2878,1.804,2879,1.804,2880,1.804,2881,1.804,2882,1.804,2883,1.804,2884,1.804,2885,1.804,2886,1.804,2887,1.804,2888,1.804,2889,1.804,2890,1.804]],["title/interfaces/IconDefinition.html",[0,0.282,2891,3.695]],["body/interfaces/IconDefinition.html",[0,0.269,2,1.047,3,0.064,4,0.064,5,0.064,8,0.651,11,0.004,12,0.339,13,0.72,16,1.274,17,0.008,19,0.619,20,0.966,23,0.088,33,3.923,34,4.08,46,1.454,51,2.527,53,1.157,68,3.085,87,1.38,99,0.005,100,0.004,127,1.313,131,1.969,136,1.209,141,2.472,145,1.969,150,0.342,151,0.482,179,0.136,180,1.501,181,1.647,183,2.128,195,3.29,205,0.908,219,1.448,236,2.083,247,1.853,249,2.3,288,5.333,291,2.993,318,2.758,409,2.225,411,3.096,455,2.266,476,0.963,498,1.472,565,3.013,593,2.98,604,1.82,756,3.089,878,1.501,925,2.091,1147,4.606,1296,5.31,1640,3.712,1645,3.29,1914,3.29,1917,3.534,1922,2.287,1971,4.073,1994,3.712,1998,3.096,2033,3.712,2034,2.674,2035,2.674,2036,2.225,2078,2.934,2098,3.534,2101,6.921,2105,6.088,2109,7.252,2110,5.955,2111,6.788,2112,5.668,2113,4.906,2115,4.906,2217,3.096,2891,6.788,2892,3.534,2893,3.86,2894,5.359,2895,6.65,2896,6.65,2897,6.155,2898,5.359,2899,3.86,2900,3.29,2901,7.23,2902,3.86,2903,5.359,2904,3.86,2905,3.29,2906,3.86,2907,3.86,2908,3.86,2909,3.86,2910,3.86,2911,5.359,2912,4.906,2913,3.86,2914,3.86,2915,3.86,2916,3.86,2917,3.86,2918,5.359,2919,3.86,2920,3.86,2921,3.86,2922,3.534,2923,3.86,2924,3.86,2925,3.86,2926,3.86,2927,3.86,2928,3.86,2929,3.86,2930,4.568,2931,3.86,2932,3.86,2933,3.86,2934,3.86,2935,3.86,2936,3.86,2937,3.86,2938,3.29,2939,3.86,2940,3.86]],["title/injectables/IconRegistryState.html",[1922,1.722,2900,3.44]],["body/injectables/IconRegistryState.html",[0,0.246,3,0.058,4,0.058,5,0.058,8,1.076,11,0.003,12,0.309,16,1.138,17,0.008,19,0.628,20,0.881,23,0.083,33,3.898,34,3.843,46,1.732,51,1.66,53,1.155,68,2.499,87,1.262,99,0.005,100,0.003,127,1.435,129,1.621,131,2.245,136,1.103,141,2.609,145,2.159,150,0.334,151,0.44,179,0.124,180,1.953,181,2.144,183,2.066,195,4.282,197,1.363,205,0.829,219,1.415,236,1.369,247,1.81,249,2.993,288,5.121,291,3.566,318,2.617,409,2.03,411,2.824,455,2.599,470,1.309,474,1.908,476,0.633,494,1.908,498,1.635,565,3.078,593,3.025,604,2.369,756,2.896,878,1.953,925,3.172,1147,4.422,1296,5.613,1640,4.422,1645,4.282,1914,3.001,1917,4.599,1922,2.144,1923,2.341,1971,4.45,1994,4.056,1998,4.028,2033,3.479,2034,2.439,2035,2.439,2036,2.03,2078,2.676,2098,6.426,2101,6.882,2105,6.762,2109,6.762,2110,5.442,2111,6.762,2112,4.282,2113,3.224,2115,4.599,2217,4.028,2891,7.249,2892,6.426,2893,3.521,2894,3.521,2895,5.023,2896,5.023,2897,7.019,2898,6.385,2899,3.521,2900,4.282,2901,7.625,2902,5.023,2903,6.385,2904,5.023,2905,4.282,2906,3.521,2907,3.521,2908,3.521,2909,3.521,2910,5.023,2911,6.385,2912,5.845,2913,5.023,2914,3.521,2915,5.023,2916,6.385,2917,5.023,2918,5.023,2919,3.521,2920,3.521,2921,3.521,2922,3.224,2923,3.521,2924,3.521,2925,3.521,2926,3.521,2927,3.521,2928,3.521,2929,3.521,2930,5.442,2931,5.856,2932,3.521,2933,3.521,2934,3.521,2935,3.521,2936,3.521,2937,3.521,2938,4.282,2939,5.856,2940,3.521,2941,5.668,2942,3.973,2943,3.973,2944,3.973,2945,3.973,2946,3.973,2947,3.973,2948,3.973,2949,3.973]],["title/interfaces/IdObject.html",[0,0.282,2950,3.44]],["body/interfaces/IdObject.html",[0,0.531,2,1.243,3,0.075,4,0.075,5,0.075,8,0.772,11,0.004,12,0.402,13,0.808,15,2.431,16,1.249,17,0.008,19,0.427,20,1.902,22,3.684,23,0.117,28,1.995,51,3.168,53,1.068,65,1.64,99,0.006,100,0.004,150,0.278,154,2.642,183,1.349,216,2.765,219,1.538,247,1.123,472,2.631,498,1.015,508,3.888,521,4,604,2.161,754,4.941,1300,5.489,2420,3.469,2433,3.318,2552,6.404,2559,3.174,2678,3.483,2950,6.081,2951,4.195,2952,4.195,2953,6.531,2954,5.726,2955,4.195,2956,4.573,2957,5.509,2958,5.509,2959,5.388,2960,5.509,2961,4.195,2962,6.783,2963,6.783,2964,5.509,2965,4.195,2966,4.195,2967,6.151,2968,4.195,2969,4.195,2970,4.195,2971,4.195,2972,5.509,2973,4.195,2974,4.195,2975,4.195,2976,4.195,2977,4.195,2978,4.195,2979,4.195,2980,3.675,2981,5.509,2982,4.195,2983,4.195,2984,4.195,2985,4.195,2986,4.195,2987,3.483,2988,4.195]],["title/classes/ImageViewer.html",[179,0.142,1169,2.581]],["body/classes/ImageViewer.html",[0,0.359,3,0.06,4,0.038,5,0.038,6,2.949,11,0.005,12,0.319,13,0.489,16,1.005,17,0.008,18,1.621,19,0.739,20,1.621,23,0.098,28,1.532,46,1.227,47,1.657,48,0.459,53,0.962,87,1.2,92,3.224,95,2.99,99,0.003,100,0.002,125,1.575,127,1.589,129,1.943,141,1.681,145,1.165,150,0.259,179,0.081,197,0.988,205,1.753,216,1.324,219,1.38,235,3.42,247,1.808,252,1.34,271,2.698,281,2.281,329,0.774,449,1.325,455,2.729,457,4.623,470,0.855,472,2.249,474,1.886,475,2.523,476,0.413,494,1.973,495,3.679,498,1.633,512,1.47,515,1.47,517,2.559,519,3.727,520,1.665,522,1.47,523,4.996,524,1.665,525,2.526,528,3.727,530,2.644,536,3.563,547,1.665,572,4.526,604,1.084,650,3.772,653,2.95,669,3.341,686,1.665,736,2.486,860,1.592,925,1.245,989,2.034,1129,2.637,1130,6.162,1131,1.592,1132,2.099,1133,2.034,1134,3.232,1135,3.91,1136,3.965,1137,3.725,1138,1.47,1139,1.665,1140,2.421,1141,2.523,1142,2.421,1143,2.523,1144,1.844,1145,1.844,1146,3.725,1147,4.132,1148,1.844,1149,1.844,1150,2.768,1151,3.437,1152,1.844,1153,3.725,1154,3.725,1155,3.627,1156,4.091,1157,3.133,1158,1.592,1159,1.592,1160,3.855,1161,5.012,1162,3.91,1163,2.921,1164,3.437,1165,1.844,1166,1.844,1167,1.844,1168,4.75,1169,2.329,1170,3.627,1171,3.627,1172,3.437,1173,3.437,1174,2.768,1175,4.319,1176,2.921,1177,3.275,1178,3.437,1179,1.844,1180,3.275,1181,3.627,1182,3.437,1183,5.883,1184,3.91,1185,3.91,1186,3.815,1187,2.637,1188,1.844,1189,1.844,1190,1.844,1191,1.844,1192,1.844,1193,1.844,1194,3.91,1195,1.844,1196,2.768,1197,2.921,1198,2.921,1199,1.844,1200,1.844,1201,4.126,1202,1.844,1203,2.768,1204,1.844,1205,1.844,1206,1.844,1207,1.747,1208,1.844,1209,1.844,1210,2.921,1211,2.921,1212,1.844,1213,1.844,1214,2.768,1215,3.627,1216,1.844,1217,2.421,1218,1.844,1219,2.921,1220,3.725,1221,3.725,1222,1.844,1223,1.747,1224,1.844,1225,2.921,1226,2.921,1227,3.627,1228,3.91,1229,1.844,1230,1.844,1231,3.725,1232,2.637,1233,1.844,1234,1.844,1235,1.844,1236,1.844,1237,1.844,1238,3.437,1239,1.844,1240,1.47,1241,1.844,1242,1.844,1243,1.844,1244,1.844,1245,1.844,1246,2.768,1247,1.844,1248,2.768,1249,3.91,1250,1.844,1251,1.844,1252,1.844,1253,1.844,1254,3.91,1255,1.844,1256,1.844,1257,1.844,1258,1.844,1259,1.844,1260,2.637,1261,1.844,1262,1.844,1263,2.921,1264,1.844,1265,1.844,1344,2.329,2989,3.642,2990,3.642,2991,3.642,2992,3.642,2993,3.642,2994,4.109,2995,2.594,2996,2.594,2997,2.594,2998,2.594,2999,2.594,3000,2.594,3001,2.594,3002,2.594,3003,2.594,3004,2.594,3005,2.594,3006,2.594,3007,2.594,3008,2.594,3009,2.594,3010,2.299,3011,2.594,3012,2.299,3013,2.594,3014,2.594,3015,2.594,3016,2.594,3017,2.594,3018,2.594,3019,2.594,3020,2.594,3021,2.299,3022,2.594,3023,2.594,3024,2.594,3025,2.594,3026,2.594,3027,2.594,3028,2.299,3029,2.594,3030,2.594,3031,2.594,3032,2.594,3033,2.594,3034,2.594,3035,2.594]],["title/components/ImageViewerAccordionComponent.html",[101,0.726,353,1.436]],["body/components/ImageViewerAccordionComponent.html",[3,0.098,4,0.059,5,0.059,8,0.609,11,0.003,12,0.317,15,2.024,16,0.862,17,0.008,19,0.635,20,1.485,23,0.059,24,2.412,36,1.36,47,1.64,48,1.659,49,2.159,53,0.737,55,2.264,65,1.315,99,0.005,100,0.006,101,1.068,102,1.285,103,2.264,104,1.258,105,1.313,106,1.373,107,1.18,113,3.079,114,1.981,117,3.121,118,2.325,120,1.901,122,1.944,127,1.254,128,1.021,129,1.551,131,1.636,136,1.131,144,2.857,148,1.343,150,0.274,151,0.451,169,1.285,173,1.285,175,3.929,177,1.285,179,0.127,193,2.544,199,2.292,224,2.048,233,2.351,252,1.332,268,3.619,269,2.017,270,2.401,271,2.257,272,1.579,273,2.615,275,1.748,277,2.412,281,1.981,283,3.212,284,2.824,285,3.047,286,3.124,289,2.152,290,1.18,291,3.607,292,3.047,293,2.082,295,2.152,300,2.8,306,3.047,307,4.473,308,2.31,309,2.152,317,0.677,318,1.781,319,1.86,320,1.373,321,2.455,322,1.373,323,1.373,324,1.285,325,1.373,326,1.285,327,1.373,328,1.285,329,1.448,330,1.373,331,1.285,332,1.313,333,1.373,334,1.285,335,1.373,336,1.285,337,1.373,338,1.285,339,1.373,340,1.285,341,2.257,342,1.373,343,1.285,344,1.944,345,1.285,346,1.343,347,1.373,348,1.285,349,1.781,350,1.944,351,1.285,352,1.373,353,2.298,354,1.373,355,1.285,356,1.285,357,1.373,358,1.285,359,1.373,360,1.285,361,1.944,362,1.285,363,1.373,364,1.285,365,1.373,366,1.285,367,1.373,368,1.313,369,1.373,370,1.285,371,1.373,372,1.285,373,1.373,374,1.285,375,1.285,376,1.373,377,1.285,378,1.285,379,1.373,380,1.373,476,0.92,492,2.502,517,1.796,521,2.691,530,3.566,546,1.847,723,2.351,724,2.412,732,3.703,734,3.133,745,2.534,746,3.133,786,2.502,1314,3.124,1316,2.502,1317,2.502,1319,4.102,1331,1.847,1340,1.847,1347,3.047,1371,2.502,1376,2.228,1378,2.228,1379,2.082,1380,2.228,1400,4.513,1401,3.423,1406,2.948,1409,2.502,1545,2.615,1559,2.948,1619,3.307,1765,2.401,1766,2.401,1936,3.612,2155,3.307,2166,6.663,2174,3.271,2330,2.228,2418,5.115,3036,3.929,3037,6.24,3038,4.075,3039,7.287,3040,6.7,3041,5.771,3042,5.062,3043,4.075,3044,4.075,3045,4.075,3046,4.683,3047,4.075,3048,5.771,3049,5.771,3050,6.7,3051,3.612,3052,3.079,3053,3.612,3054,3.612,3055,3.612,3056,5.115]],["title/modules/ImageViewerAccordionModule.html",[381,0.651,3057,3.236]],["body/modules/ImageViewerAccordionModule.html",[3,0.095,4,0.095,5,0.095,11,0.005,17,0.008,23,0.095,47,1.422,48,1.587,99,0.007,100,0.005,150,0.367,151,0.723,175,3.339,179,0.204,204,1.933,317,1.087,353,2.989,381,0.934,383,1.853,384,1.853,385,2.55,386,1.933,387,1.933,388,2.55,403,2.231,404,1.741,406,2.428,407,2.377,444,2.711,445,2.202,3036,3.339,3037,5.303,3057,6.647,3058,5.793,3059,5.793,3060,5.793,3061,5.793,3062,6.134,3063,6.536,3064,7.868,3065,6.536,3066,6.536,3067,4.938,3068,5.793]],["title/components/ImageViewerContentComponent.html",[101,0.726,355,1.436]],["body/components/ImageViewerContentComponent.html",[3,0.107,4,0.06,5,0.06,8,0.612,11,0.003,12,0.318,17,0.008,19,0.636,23,0.06,24,2.421,36,1.816,47,1.641,48,1.682,49,1.32,50,3.548,53,0.74,55,1.161,65,1.318,99,0.005,100,0.006,101,1.071,102,1.292,103,2.268,104,1.264,105,1.32,106,1.38,107,1.186,113,3.095,114,1.987,117,3.123,118,2.328,120,1.908,122,1.951,127,1.258,128,1.026,129,1.703,131,1.642,136,1.137,144,3.615,148,1.35,150,0.299,151,0.453,152,1.967,169,1.292,173,1.292,175,4.201,177,1.292,179,0.128,193,2.553,197,1.393,199,2.301,205,1.208,224,2.131,233,2.359,252,0.946,268,2.553,271,1.38,279,1.856,283,3.397,285,4.069,286,1.91,289,4.342,290,1.186,292,2.163,296,3.133,297,2.239,298,2.093,299,1.967,300,1.712,301,1.91,302,1.806,307,2.515,317,0.681,318,1.787,319,1.867,320,1.38,321,2.461,322,1.38,323,1.38,324,1.292,325,1.38,326,1.292,327,1.38,328,1.292,329,1.376,330,1.38,331,1.292,332,1.32,333,1.38,334,1.292,335,1.38,336,1.292,337,1.38,338,1.292,339,1.38,340,1.292,341,2.264,342,1.38,343,1.292,344,1.951,345,1.292,346,1.35,347,1.38,348,1.292,349,1.787,350,1.951,351,1.292,352,1.38,353,1.292,354,1.38,355,2.303,356,1.292,357,1.38,358,1.292,359,1.38,360,1.292,361,1.951,362,1.292,363,1.38,364,1.292,365,1.38,366,1.292,367,1.38,368,1.32,369,1.38,370,1.292,371,1.38,372,1.292,373,1.38,374,1.292,375,1.292,376,1.38,377,1.292,378,1.292,379,1.38,380,1.38,476,1.071,498,0.804,517,1.806,521,2.7,530,3.437,723,2.359,724,2.421,732,3.717,734,3.35,745,2.541,746,3.258,1314,1.91,1316,2.515,1317,2.515,1340,1.856,1347,3.058,1400,4.526,1401,3.433,1406,2.959,1409,2.515,1545,2.625,1559,2.959,1651,4.117,1663,5.557,1766,2.413,1806,5.452,2174,3.283,2341,3.631,2343,5.133,2347,3.631,2349,3.631,2350,3.631,2393,5.133,2400,3.631,2528,4.7,3036,4.201,3042,5.076,3046,4.7,3069,6.213,3070,7.706,3071,7.706,3072,4.096,3073,4.096,3074,4.096,3075,4.096,3076,4.096,3077,5.792,3078,5.133,3079,4.096]],["title/modules/ImageViewerContentModule.html",[381,0.651,3080,3.067]],["body/modules/ImageViewerContentModule.html",[3,0.095,4,0.095,5,0.095,11,0.005,17,0.008,23,0.095,47,1.42,48,1.586,99,0.007,100,0.005,150,0.367,151,0.721,175,3.33,179,0.203,204,1.927,317,1.084,355,2.988,381,0.932,383,1.848,384,1.848,385,2.547,386,1.927,387,1.927,388,2.547,403,2.227,404,1.736,406,2.424,407,2.373,408,4.294,409,3.33,444,2.707,445,2.196,2375,5.777,2378,5.777,3036,3.33,3037,5.289,3057,6.468,3069,4.924,3080,6.296,3081,5.777,3082,5.777,3083,6.518,3084,5.777,3085,6.518]],["title/interfaces/ImageViewerData.html",[0,0.282,50,2.404]],["body/interfaces/ImageViewerData.html",[0,0.531,1,2.455,2,1.155,3,0.07,4,0.07,5,0.07,6,1.548,7,3.236,8,1.092,9,3.534,10,4.431,11,0.007,12,0.374,13,0.77,14,3.236,15,2.7,16,1.43,17,0.008,18,1.617,19,0.765,20,1.433,21,3.236,22,2.118,23,0.123,24,2.702,25,2.83,26,3.015,27,3.497,28,1.959,29,2.723,30,3.236,31,3.236,32,2.83,33,2.008,34,3.542,35,3.083,36,1.842,37,3.809,38,3.083,39,3.083,40,2.949,41,2.83,42,2.949,43,3.083,44,2.83,45,3.995,46,1.757,47,1.474,48,1.145,49,2.084,50,3.859,51,2.702,52,3.534,53,0.826,54,4.799,55,2.382,56,2.723,57,2.83,58,3.083,59,3.969,60,3.665,61,3.809,62,3.809,63,4.143,64,4.486,65,1.269,66,3.303,67,3.665,68,1.817,69,1.817,70,2.537,71,2.723,72,2.537,73,2.462,74,2.723,75,4.149,76,2.949,77,2.949,78,3.665,79,3.665,80,2.626,81,3.083,82,1.483,83,2.24,84,2.626,85,2.949,86,3.083,87,0.766,88,3.236,89,2.307,90,2.949,91,3.083,92,2.118,93,3.105,94,2.83,95,2.832,96,2.83,97,2.24,98,3.083,99,0.005,100,0.004,492,3.969]],["title/classes/ImageViewerLayer.html",[179,0.142,1401,2.326]],["body/classes/ImageViewerLayer.html",[0,0.29,3,0.068,4,0.068,5,0.068,11,0.004,12,0.562,13,0.758,15,2.445,16,1.341,17,0.008,18,1.704,19,0.734,20,1.892,23,0.113,28,1.758,33,3.019,36,1.5,46,1.946,48,1.636,53,0.6,82,2.229,87,0.748,99,0.005,100,0.004,127,1.813,129,1.959,145,1.331,150,0.192,179,0.146,180,2.194,197,1.531,199,1.865,219,1.081,224,1.924,226,5.166,227,6.284,228,5.134,239,3.611,247,1.383,248,3.48,252,1.47,253,1.882,272,2.799,298,4.135,300,3.019,329,1.741,449,2.399,470,1.547,472,1.82,474,1.176,498,1.519,565,2.99,603,3.337,716,2.806,726,4.809,1340,3.989,1344,3.609,1349,4.434,1350,2.766,1362,4.085,1372,3.013,1375,3.013,1379,3.253,1390,5.166,1401,3.253,1407,5.457,1540,5.504,1553,5.753,1600,5.504,1656,4.161,2678,3.163,3086,7.501,3087,5.134,3088,5.85,3089,5.504,3090,7.223,3091,6.864,3092,7.223,3093,6.284,3094,6.366,3095,5.642,3096,5.166,3097,4.695,3098,4.695,3099,4.695,3100,4.695,3101,4.695,3102,4.695,3103,4.695,3104,4.695,3105,4.695,3106,4.695,3107,4.161,3108,3.81,3109,4.695,3110,4.695,3111,6.402,3112,6.402,3113,4.695,3114,4.695,3115,4.695,3116,3.81,3117,4.161,3118,4.161,3119,4.161,3120,4.161,3121,4.161,3122,4.161,3123,4.161,3124,4.161,3125,4.161,3126,4.161,3127,4.161,3128,4.161,3129,4.161,3130,4.161]],["title/components/ImageViewerLayersComponent.html",[101,0.726,356,1.436]],["body/components/ImageViewerLayersComponent.html",[3,0.091,4,0.053,5,0.053,8,1.031,11,0.003,12,0.282,13,0.913,16,0.792,17,0.008,19,0.633,23,0.053,24,3.569,28,1.152,47,1.59,48,1.648,49,2.021,51,2.215,53,0.938,55,1.027,65,1.23,68,2.005,69,2.005,82,1.118,87,0.999,89,2.545,93,1.739,99,0.004,100,0.005,101,1.17,102,1.142,103,1.503,104,1.118,105,1.167,106,1.22,107,1.049,112,4.905,114,1.854,117,3.099,118,2.304,120,1.747,122,1.786,127,1.152,128,0.907,129,1.633,131,1.777,133,4.648,134,3.571,136,1.005,144,2.624,148,1.193,150,0.257,151,0.401,169,1.142,173,1.142,175,4.049,177,1.142,179,0.113,183,1.916,197,1.275,205,1.439,216,1.708,224,1.956,225,2.574,232,4.005,233,2.991,235,2.134,236,2.16,239,3.577,247,0.787,248,2.897,268,2.336,269,1.793,271,1.786,272,1.403,274,3.005,281,1.071,283,1.596,285,1.912,290,1.049,295,1.912,300,1.514,305,2.134,306,1.912,307,2.223,317,0.602,318,1.636,319,1.708,320,1.22,321,2.325,322,1.22,323,1.22,324,1.142,325,1.22,326,1.142,327,1.22,328,1.142,329,1.531,330,1.22,331,1.142,332,1.167,333,1.22,334,1.142,335,1.22,336,1.142,337,1.22,338,1.142,339,1.22,340,1.142,341,2.112,342,1.22,343,1.142,344,1.786,345,1.142,346,1.193,347,1.22,348,1.142,349,1.636,350,1.786,351,1.142,352,1.22,353,1.142,354,1.22,355,1.142,356,2.176,357,1.22,358,1.142,359,1.22,360,1.142,361,1.786,362,1.142,363,1.22,364,1.142,365,1.22,366,1.142,367,1.22,368,1.167,369,1.22,370,1.142,371,1.22,372,1.142,373,1.22,374,1.142,375,1.142,376,1.22,377,1.142,378,1.142,379,1.22,380,1.22,474,1.57,476,1.1,498,1.354,503,3.311,517,4.01,530,3.786,723,2.159,724,2.215,734,2.991,745,2.005,746,2.554,1132,2.708,1271,4.698,1288,4.905,1296,3.571,1297,4.005,1301,2.324,1314,2.471,1318,2.574,1331,1.641,1340,2.841,1347,2.799,1358,2.799,1371,2.223,1376,1.98,1400,4.223,1401,4.528,1405,4.005,1407,5.213,1409,2.223,1521,2.708,1547,5.213,1557,4.737,1558,4.065,1559,2.708,1643,4.698,1665,2.736,1718,4.005,1887,3.768,1958,4.698,2217,3.768,2228,4.698,2387,4.301,2388,4.698,3036,4.049,3042,4.737,3067,5.988,3089,4.905,3131,3.622,3132,5.301,3133,5.301,3134,5.301,3135,6.27,3136,5.301,3137,5.301,3138,5.301,3139,5.301,3140,3.622,3141,5.301,3142,5.301,3143,5.301,3144,3.622,3145,5.301,3146,3.622,3147,5.301,3148,3.622,3149,4.698,3150,5.301,3151,5.301,3152,3.622,3153,5.301,3154,3.622,3155,5.301,3156,5.301,3157,3.571,3158,3.21,3159,3.622,3160,3.622,3161,2.736,3162,3.622,3163,3.622,3164,3.622,3165,4.698,3166,3.21,3167,2.939]],["title/modules/ImageViewerLayersModule.html",[381,0.651,3062,3.067]],["body/modules/ImageViewerLayersModule.html",[3,0.093,4,0.093,5,0.093,11,0.005,17,0.008,23,0.093,47,1.153,48,1.479,99,0.006,100,0.005,150,0.37,151,0.706,175,3.259,179,0.199,204,1.886,224,1.699,317,1.06,329,1.201,332,2.499,356,2.98,381,0.912,383,1.808,384,1.808,385,2.523,386,1.886,387,1.886,388,2.523,403,2.198,404,1.699,406,2.392,407,2.342,444,2.671,445,2.149,1304,5.175,1328,6.871,1331,2.89,1388,5.175,1412,6.435,3036,3.259,3062,6.341,3067,4.818,3168,5.653,3169,5.653,3170,5.653,3171,5.653,3172,6.435,3173,6.378,3174,6.378,3175,5.175,3176,6.378,3177,6.378]],["title/components/ImageViewerLegendComponent.html",[101,0.726,358,1.436]],["body/components/ImageViewerLegendComponent.html",[3,0.102,4,0.065,5,0.065,8,0.662,11,0.004,12,0.345,13,0.729,17,0.008,19,0.578,23,0.065,24,2.93,47,1.642,48,1.67,49,2.259,53,0.895,55,1.257,56,3.974,65,1.375,68,1.677,87,0.706,93,2.939,99,0.005,100,0.006,101,1.117,102,1.398,103,2.249,104,1.368,105,1.429,106,1.493,107,1.283,114,2.073,117,3.139,118,2.338,120,2.016,122,2.062,128,1.11,129,1.609,131,1.987,136,1.231,148,1.46,150,0.25,151,0.491,169,1.398,173,1.398,175,4.053,177,1.398,179,0.138,199,2.431,205,0.925,224,1.867,239,2.853,247,0.963,268,3.496,269,2.194,270,2.611,271,2.362,272,1.718,281,1.311,284,2.372,285,2.341,290,1.283,292,2.341,293,2.265,297,2.423,300,1.852,305,3.606,306,3.232,317,1.397,318,1.889,319,1.973,320,1.493,321,2.547,322,1.493,323,1.493,324,1.398,325,1.493,326,1.398,327,1.493,328,1.398,329,1.494,330,1.493,331,1.398,332,1.429,333,1.493,334,1.398,335,1.493,336,1.398,337,1.493,338,1.398,339,1.493,340,1.398,341,2.362,342,1.493,343,1.398,344,2.062,345,1.398,346,1.46,347,1.493,348,1.398,349,1.889,350,2.062,351,1.398,352,1.493,353,1.398,354,1.493,355,1.398,356,1.398,357,1.493,358,2.384,359,1.493,360,1.398,361,2.062,362,1.398,363,1.493,364,1.398,365,1.493,366,1.398,367,1.493,368,1.429,369,1.493,370,1.398,371,1.493,372,1.398,373,1.493,374,1.398,375,1.398,376,1.493,377,1.398,378,1.398,379,1.493,380,1.493,455,2.117,474,1.11,498,0.87,517,1.954,530,3.715,544,2.128,545,2.423,546,2.009,649,2.611,723,2.493,732,4.499,745,2.315,1314,3.524,1319,4.35,1344,3.469,1350,3.606,1376,2.423,1395,3.469,1396,3.469,1401,4.053,1408,2.513,1409,2.721,1411,3.597,2157,3.597,3036,4.053,3052,3.349,3165,5.424,3178,6.436,3179,4.433,3180,5.424,3181,7.01,3182,6.12,3183,6.213,3184,6.12,3185,4.433,3186,3.929,3187,4.433,3188,3.929,3189,3.929,3190,5.424,3191,4.433,3192,4.433,3193,4.433,3194,4.433]],["title/modules/ImageViewerLegendModule.html",[381,0.651,3195,3.236]],["body/modules/ImageViewerLegendModule.html",[3,0.098,4,0.098,5,0.098,11,0.006,17,0.008,23,0.098,47,1.22,48,1.515,99,0.007,100,0.006,150,0.35,151,0.747,175,3.448,179,0.21,204,1.996,317,1.122,358,3,381,0.965,383,1.913,384,1.913,385,2.585,386,1.996,387,1.996,388,2.585,403,2.274,404,1.798,406,2.083,407,2.423,444,2.764,445,2.274,3036,3.448,3178,5.476,3195,6.588,3196,5.982,3197,5.982,3198,5.982,3199,6.749,3200,6.749]],["title/modules/ImageViewerModule.html",[381,0.651,398,3.236]],["body/modules/ImageViewerModule.html",[3,0.091,4,0.091,5,0.091,11,0.005,17,0.008,23,0.091,47,1.494,48,1.594,99,0.006,100,0.005,150,0.362,151,0.689,175,3.182,176,4.705,179,0.194,204,1.841,317,1.035,381,0.89,383,1.765,384,1.765,385,2.308,386,1.841,387,2.259,388,2.497,398,6.76,403,2.166,404,1.659,406,2.358,407,2.308,417,5.519,2414,5.053,3036,3.182,3062,6.347,3067,4.705,3068,5.519,3069,4.705,3080,6.347,3201,5.519,3202,5.519,3203,5.519,3204,6.697,3205,6.064,3206,6.228,3207,5.519]],["title/components/ImageViewerPopoverComponent.html",[101,0.726,173,1.436]],["body/components/ImageViewerPopoverComponent.html",[3,0.088,4,0.05,5,0.05,8,0.903,11,0.007,12,0.394,13,0.603,15,1.529,16,0.756,17,0.008,19,0.619,20,1.484,23,0.05,26,3.803,28,1.455,33,1.423,36,2.01,40,3.712,41,2.983,44,2.005,47,1.668,48,1.681,49,1.632,50,3.962,53,0.914,54,2.09,55,1.435,65,1.186,69,1.915,82,1.563,87,0.963,89,2.431,99,0.004,100,0.005,101,1.141,102,1.073,103,1.898,104,1.05,105,1.097,106,1.147,107,0.985,114,2.117,117,3.079,118,2.297,120,1.668,122,1.706,125,1.05,127,1.455,128,0.852,129,1.699,134,4.511,136,0.945,141,2.688,145,0.965,148,1.121,150,0.247,151,0.377,152,1.634,169,1.073,173,2.112,175,4.168,176,6.163,177,1.073,179,0.106,183,1.578,184,2.571,193,3.155,197,1.218,202,3.825,205,1.565,215,2.768,216,1.097,219,1.027,224,1.611,233,2.063,238,2.768,239,2.361,252,1.169,253,1.006,268,2.952,269,1.685,270,2.005,271,2.412,272,2.595,273,3.25,274,2.87,275,1.46,276,2.571,277,1.423,278,2.762,279,2.74,280,2.293,281,2.117,284,2.774,285,3.962,288,2.419,290,0.985,291,1.685,292,1.797,293,1.739,294,2.762,296,1.587,297,2.768,298,1.739,299,2.903,300,1.423,301,1.587,302,1.5,303,2.293,312,4.073,317,0.842,318,1.563,319,1.632,320,1.147,321,2.256,322,1.147,323,1.147,324,1.073,325,1.147,326,1.073,327,1.147,328,1.073,329,1.413,330,1.147,331,1.073,332,1.097,333,1.147,334,1.073,335,1.147,336,1.073,337,1.147,338,1.073,339,1.147,340,1.073,341,2.037,342,1.147,343,1.073,344,1.706,345,1.073,346,1.121,347,1.147,348,1.073,349,1.563,350,1.706,351,1.073,352,1.147,353,1.073,354,1.147,355,1.073,356,1.073,357,1.147,358,1.073,359,1.147,360,1.073,361,1.706,362,1.073,363,1.147,364,1.073,365,1.147,366,1.073,367,1.147,368,1.097,369,1.147,370,1.073,371,1.147,372,1.073,373,1.147,374,1.073,375,1.073,376,1.147,377,1.073,378,1.073,379,1.147,380,1.147,404,0.907,455,2.023,470,1.121,474,1.514,498,1.405,565,2.233,578,1.386,620,3.411,849,2.173,1100,2.419,1113,3.109,1132,2.587,1300,2.005,1335,3.25,1381,2.571,1391,3.599,1395,2.87,1396,2.87,1405,3.825,1408,1.929,1521,2.587,1613,1.861,1663,4.297,1705,4.76,1706,4.76,1710,3.599,1784,4.109,1832,3.109,1837,3.562,1875,2.762,1877,3.017,1878,2.571,1895,2.005,2231,3.825,2379,3.017,2380,5.359,2381,4.488,2830,3.017,2905,3.825,3036,4.168,3208,5.064,3209,5.064,3210,6.047,3211,6.047,3212,5.064,3213,3.404,3214,4.76,3215,5.064,3216,3.404,3217,4.109,3218,5.064,3219,3.404,3220,5.064,3221,3.404,3222,6.047,3223,3.404,3224,6.047,3225,3.404,3226,3.404,3227,3.404,3228,5.064,3229,3.404,3230,3.404,3231,5.064,3232,3.404,3233,3.404,3234,3.404,3235,3.404,3236,3.404,3237,3.404,3238,3.404,3239,3.404]],["title/modules/ImageViewerPopoverModule.html",[381,0.651,3204,3.236]],["body/modules/ImageViewerPopoverModule.html",[3,0.09,4,0.09,5,0.09,11,0.005,17,0.008,23,0.09,47,1.491,48,1.613,99,0.006,100,0.005,150,0.373,151,0.687,172,5.033,173,2.97,175,3.169,176,4.686,179,0.193,204,1.834,317,1.031,381,0.887,383,1.758,384,1.758,385,2.492,386,1.834,387,1.834,388,2.492,395,6.058,403,2.161,404,1.652,406,2.352,407,2.302,425,5.498,444,2.626,445,2.09,2413,5.498,2414,5.033,3036,3.169,3069,4.686,3080,6.058,3178,5.033,3195,6.393,3204,6.758,3205,6.058,3207,5.498,3240,5.498,3241,5.498,3242,6.203,3243,5.498,3244,6.203]],["title/interfaces/ImageViewerProps.html",[0,0.282,1158,2.795]],["body/interfaces/ImageViewerProps.html",[0,0.416,2,0.824,3,0.074,4,0.05,5,0.05,6,1.105,11,0.006,12,0.396,13,0.606,16,1.242,17,0.008,18,1.676,19,0.73,23,0.11,28,1.807,46,1.224,47,0.92,48,0.607,87,1.361,92,3.433,95,2.782,99,0.004,100,0.003,125,1.058,141,2.366,145,1.443,150,0.294,179,0.107,205,1.669,216,1.641,219,1.466,235,2.02,247,1.907,252,1.551,271,2.843,281,2.459,329,0.959,455,2.512,457,4.407,472,2.604,475,3.125,476,0.546,495,3.673,512,1.943,515,1.943,517,2.676,519,4.713,520,3.897,522,1.943,523,4.9,524,2.2,525,3.006,528,3.577,530,2.538,536,3.125,547,2.2,572,4.998,604,1.433,650,3.253,653,3.347,669,3.791,686,2.2,736,2.778,860,2.105,925,1.646,989,2.52,1129,3.267,1130,2.309,1131,2.105,1132,2.601,1133,2.52,1134,3.433,1135,4.527,1136,4.23,1137,3.897,1138,1.943,1139,2.2,1140,2.999,1141,3.125,1142,2.999,1143,3.125,1144,2.437,1145,2.437,1146,3.267,1147,4.407,1148,2.437,1149,2.437,1150,3.429,1151,4.09,1152,2.437,1153,3.267,1154,3.267,1155,4.316,1156,4.087,1157,3.125,1158,3.125,1159,4.125,1160,4.257,1161,5.687,1162,5.246,1163,3.618,1164,4.09,1165,2.437,1166,2.437,1167,2.437,1168,4.09,1169,1.943,1170,4.316,1171,4.316,1172,2.309,1173,2.309,1174,3.429,1175,4.313,1176,3.618,1177,2.2,1178,2.309,1179,2.437,1180,2.2,1181,4.316,1182,2.309,1183,5.482,1184,3.429,1185,3.429,1186,3.809,1187,2.2,1188,2.437,1189,2.437,1190,2.437,1191,2.437,1192,2.437,1193,2.437,1194,2.309,1195,2.437,1196,2.309,1197,3.618,1198,3.618,1199,2.437,1200,2.437,1201,4.777,1202,2.437,1203,2.309,1204,2.437,1205,2.437,1206,2.437,1207,2.309,1208,2.437,1209,2.437,1210,3.618,1211,3.618,1212,2.437,1213,2.437,1214,2.309,1215,4.316,1216,2.437,1217,2.999,1218,2.437,1219,3.618,1220,2.2,1221,2.2,1222,2.437,1223,2.309,1224,2.437,1225,3.618,1226,3.618,1227,4.316,1228,2.309,1229,2.437,1230,2.437,1231,2.2,1232,3.267,1233,2.437,1234,2.437,1235,2.437,1236,2.437,1237,2.437,1238,2.309,1239,2.437,1240,1.943,1241,2.437,1242,2.437,1243,2.437,1244,2.437,1245,2.437,1246,2.309,1247,2.437,1248,2.309,1249,3.429,1250,2.437,1251,2.437,1252,2.437,1253,2.437,1254,2.309,1255,2.437,1256,2.437,1257,2.437,1258,2.437,1259,2.437,1260,2.2,1261,2.437,1262,2.437,1263,3.618,1264,2.437,1265,2.437]],["title/components/InfoButtonComponent.html",[101,0.726,360,1.436]],["body/components/InfoButtonComponent.html",[3,0.136,4,0.07,5,0.07,8,0.966,11,0.004,12,0.374,17,0.008,19,0.397,23,0.07,33,2.704,36,1.133,47,1.475,48,1.488,53,0.934,55,1.363,65,1.435,87,0.766,89,3.107,99,0.005,100,0.006,101,1.368,102,1.517,103,1.834,104,1.484,105,1.55,106,1.62,107,1.392,114,2.162,117,3.155,118,2.35,120,2.132,122,2.18,125,1.484,128,1.204,129,1.377,136,1.335,148,1.585,150,0.299,151,0.532,169,1.517,173,1.517,177,1.517,179,0.15,180,2.229,181,2.447,183,1.255,197,1.556,205,1.35,224,1.948,281,1.422,290,1.392,296,3.919,301,2.242,302,2.12,317,0.8,318,1.997,319,2.085,320,1.62,321,2.635,322,1.62,323,1.62,324,1.517,325,1.62,326,1.517,327,1.62,328,1.517,329,1.537,330,1.62,331,1.517,332,1.55,333,1.62,334,1.517,335,1.62,336,1.517,337,1.62,338,1.517,339,1.62,340,1.517,341,2.463,342,1.62,343,1.517,344,2.18,345,1.517,346,1.585,347,1.62,348,1.517,349,1.997,350,2.18,351,1.517,352,1.62,353,1.517,354,1.62,355,1.517,356,1.517,357,1.62,358,1.517,359,1.62,360,2.466,361,2.18,362,2.04,363,1.62,364,1.517,365,1.62,366,1.517,367,1.62,368,1.55,369,1.62,370,1.517,371,1.62,372,1.517,373,1.62,374,1.517,375,1.517,376,1.62,377,1.517,378,1.517,379,1.62,380,1.62,420,3.418,470,1.585,474,1.204,498,0.944,849,2.776,878,2.229,1006,2.726,1391,4.599,1544,4.599,1662,4.152,1837,2.833,2466,4.263,2487,5.933,3245,5.524,3246,4.263,3247,6.346,3248,6.931,3249,6.481,3250,5.735,3251,7.821,3252,4.809,3253,7.821,3254,4.809,3255,7.233,3256,4.599,3257,4.809,3258,6.47,3259,3.902,3260,4.263,3261,4.809,3262,4.809,3263,6.47]],["title/modules/InfoButtonModule.html",[381,0.651,2479,3.236]],["body/modules/InfoButtonModule.html",[3,0.124,4,0.096,5,0.096,11,0.005,17,0.008,23,0.096,99,0.007,100,0.005,150,0.368,151,0.728,179,0.205,204,1.946,317,1.094,360,2.991,381,0.941,383,1.866,384,1.866,385,2.557,386,1.946,387,1.946,388,2.557,399,6.144,403,2.24,404,1.753,406,2.438,407,2.386,408,4.319,409,3.362,420,4.678,421,5.833,444,2.722,445,2.217,2129,5.833,2479,6.654,2487,5.34,3245,4.972,3264,5.833,3265,5.833,3266,6.581,3267,5.833,3268,6.581]],["title/components/InfoDialogComponent.html",[101,0.726,362,1.436]],["body/components/InfoDialogComponent.html",[0,0.396,3,0.125,4,0.045,5,0.084,8,0.856,11,0.003,12,0.446,13,0.564,17,0.008,19,0.473,23,0.045,29,4.112,33,1.301,36,2.064,47,1.245,48,1.284,49,1.004,52,2.589,53,0.732,55,0.883,65,1.352,79,2.684,83,2.985,87,0.496,89,2.274,99,0.004,100,0.005,101,1.363,102,0.982,103,1.342,104,0.961,105,1.004,106,1.049,107,0.901,114,1.694,117,3.055,118,2.324,120,1.56,122,1.595,128,1.435,129,1.363,131,1.625,136,0.864,147,3.19,148,1.026,150,0.194,151,0.345,169,0.982,173,0.982,177,0.982,179,0.097,180,2.374,181,1.791,183,1.236,195,4.329,197,1.656,199,1.881,205,0.988,216,1.526,224,1.526,225,3.366,248,2.589,252,1.478,271,1.595,275,2.032,279,2.597,283,1.372,284,3.012,285,3.026,286,2.985,289,3.026,290,0.901,291,1.541,292,3.637,293,3.271,297,1.702,298,1.591,301,1.452,302,1.372,308,1.765,309,1.644,317,0.518,318,1.461,319,1.526,320,1.049,321,2.157,322,1.049,323,1.049,324,0.982,325,1.049,326,0.982,327,1.049,328,0.982,329,1.297,330,1.049,331,0.982,332,1.004,333,1.049,334,0.982,335,1.049,336,0.982,337,1.049,338,0.982,339,1.049,340,0.982,341,1.931,342,1.049,343,0.982,344,1.595,345,0.982,346,1.026,347,1.049,348,0.982,349,1.461,350,1.595,351,0.982,352,1.049,353,0.982,354,1.049,355,0.982,356,0.982,357,1.049,358,0.982,359,1.049,360,0.982,361,1.595,362,2.019,363,1.049,364,0.982,365,1.049,366,0.982,367,1.049,368,1.004,369,1.049,370,0.982,371,1.049,372,0.982,373,1.049,374,0.982,375,0.982,376,1.049,377,0.982,378,0.982,379,1.049,380,1.049,420,4.896,470,1.56,474,0.78,494,1.495,498,0.611,545,2.589,546,1.411,593,2.543,745,2.422,755,3.039,797,4.454,806,2.79,849,2.955,881,5.341,1068,3.578,1132,3.271,1282,3.843,1286,3.772,1313,2.527,1314,2.985,1316,1.912,1317,1.912,1391,3.366,1426,4.837,1550,6.081,1615,2.213,1617,2.76,1652,3.578,1663,4.656,1680,2.352,1957,5.675,2052,3.366,2112,5.871,2116,2.527,2120,6.43,2342,4.197,3052,2.352,3108,3.843,3180,4.197,3245,5.204,3247,6.306,3255,7.504,3259,2.527,3269,3.114,3270,4.736,3271,3.366,3272,4.736,3273,4.736,3274,5.731,3275,4.736,3276,6.888,3277,3.114,3278,6.888,3279,3.114,3280,5.731,3281,5.079,3282,5.731,3283,3.114,3284,4.736,3285,3.114,3286,3.114,3287,2.098,3288,3.114,3289,3.114,3290,4.736,3291,7.771,3292,6.403,3293,7.255,3294,4.736,3295,4.736,3296,4.736,3297,4.736,3298,4.736,3299,4.736,3300,4.736,3301,4.736,3302,2.907,3303,4.736,3304,4.736,3305,4.736,3306,4.736,3307,4.736,3308,4.736,3309,5.886,3310,5.886,3311,5.196,3312,4.736,3313,4.736,3314,4.736,3315,4.736,3316,4.736,3317,4.197,3318,5.675,3319,4.736,3320,6.403,3321,6.403,3322,6.403,3323,5.675,3324,3.843,3325,4.736,3326,6.403,3327,3.843,3328,5.886,3329,3.578,3330,6.403,3331,4.736,3332,4.736,3333,4.197,3334,4.736,3335,3.843,3336,4.736,3337,3.039,3338,4.736,3339,4.736,3340,4.736,3341,4.736,3342,4.736,3343,4.736,3344,3.578,3345,4.736,3346,4.736,3347,4.736,3348,4.736,3349,4.197,3350,4.197,3351,4.197,3352,4.736,3353,4.736,3354,6.403,3355,6.403,3356,4.736,3357,4.736,3358,4.197,3359,6.684,3360,4.736,3361,4.736,3362,4.736,3363,4.736,3364,4.736,3365,4.736,3366,4.197,3367,4.197,3368,4.736,3369,4.736,3370,4.736,3371,4.736,3372,4.736,3373,4.736,3374,4.736,3375,4.736,3376,4.736,3377,4.736,3378,4.736,3379,4.736,3380,4.736,3381,6.403,3382,4.736,3383,4.197,3384,4.197,3385,4.736,3386,3.114,3387,4.736,3388,3.114,3389,3.114,3390,3.114,3391,3.114,3392,3.114]],["title/modules/InfoDialogModule.html",[381,0.651,399,3.067]],["body/modules/InfoDialogModule.html",[3,0.116,4,0.097,5,0.097,11,0.006,17,0.008,23,0.097,99,0.007,100,0.006,150,0.369,151,0.74,179,0.208,204,1.976,317,1.111,362,2.997,381,0.955,383,1.894,384,1.894,385,2.574,386,1.976,387,1.976,388,2.574,399,6.231,403,2.26,404,1.78,406,2.062,407,2.408,408,4.359,409,3.414,420,4.75,444,2.748,445,2.251,3245,5.049,3259,5.423,3260,5.923,3393,5.923,3394,5.923,3395,5.923,3396,6.683,3397,7.974]],["title/classes/InitializationState.html",[179,0.142,3398,4.036]],["body/classes/InitializationState.html",[3,0.036,4,0.036,5,0.036,8,0.368,11,0.002,12,0.192,13,0.47,17,0.008,18,0.743,19,0.543,20,1.368,23,0.036,46,1.9,53,0.63,68,2.935,82,2.133,95,3.007,99,0.003,100,0.002,101,1.049,103,0.699,105,0.794,114,2.678,117,0.812,118,0.968,120,0.812,122,0.83,125,1.74,127,1.225,129,1.401,131,1.118,141,2.83,145,2.2,146,1.752,150,0.252,151,0.273,153,1.086,177,1.556,179,0.154,180,0.849,181,0.932,183,1.803,193,1.739,194,3.16,197,0.949,199,1.567,205,1.697,215,4.446,216,1.59,219,1.29,223,2.981,225,2.804,233,1.004,236,1.359,247,1.839,252,1.853,277,2.357,281,2.405,284,3.152,290,0.714,299,1.183,312,2.658,318,1.218,319,2.227,404,1.051,449,1.259,455,2.675,474,0.988,476,1.101,498,1.291,503,2.978,544,3.794,546,3.58,565,2.652,593,0.979,606,2.174,649,4.363,650,2.555,653,2.3,716,1.086,717,2.658,722,1.66,734,1.004,736,1.822,740,2.804,745,2.133,746,2.815,763,1.452,765,1.301,786,2.422,810,2.981,849,1.693,872,2.52,878,0.849,1108,1.582,1121,1.183,1300,3.322,1301,1.582,1379,3.531,1395,1.397,1396,1.397,1408,1.397,1521,2.016,1544,1.752,1545,1.117,1557,1.862,1558,2.906,1652,1.862,1663,2.532,1666,2,1689,2.236,1690,2.184,1692,2.442,1695,2.442,1698,3.727,1700,1.397,1704,2,1705,2.804,1706,2.804,1709,2.016,1710,1.752,1713,2.442,1715,2.184,1717,1.862,1719,1.862,1721,2.804,1725,1.752,1728,2.083,1730,1.66,1743,2.981,1744,1.862,1747,3.201,1751,1.752,1765,4.231,1766,4.231,1770,1.752,1771,1.752,1775,1.66,1776,2,1777,2.184,1778,2,1779,1.862,1782,3.497,1787,1.862,1805,2.184,1823,2,1826,2,1832,4.764,1835,2,1836,2.184,1837,2.324,1838,2.184,1839,2,1854,2,1858,3.634,1860,2.532,1861,1.66,1878,2.981,1895,4.728,1900,3.507,2054,1.862,2058,1.513,2059,2.658,2069,2.532,2163,5.006,2231,1.862,2263,2,3217,6.009,3271,3.507,3398,4.372,3399,2.184,3400,3.945,3401,4.933,3402,6.911,3403,5.64,3404,5.64,3405,3.945,3406,4.933,3407,2.465,3408,2.465,3409,2.465,3410,2.465,3411,2.465,3412,2.465,3413,4.933,3414,2.465,3415,2.465,3416,2.184,3417,4.372,3418,6.125,3419,4.372,3420,4.372,3421,5.833,3422,4.372,3423,5.468,3424,3.497,3425,4.372,3426,5.64,3427,3.945,3428,5.64,3429,3.945,3430,2.465,3431,2,3432,2.465,3433,2.465,3434,2.465,3435,2.465,3436,2.465,3437,2.465,3438,2.465,3439,3.945,3440,2.465,3441,3.945,3442,2.465,3443,2.465,3444,2.465,3445,2.184,3446,6.169,3447,2.465,3448,2.465,3449,2.465,3450,4.372,3451,2.184,3452,3.497,3453,3.945,3454,2.465,3455,6.582,3456,2.465,3457,3.945,3458,2.465,3459,2.465,3460,2.465,3461,4.933,3462,2.465,3463,2.465,3464,2.465,3465,2.465,3466,4.933,3467,2.465,3468,2.465,3469,3.497,3470,2.465,3471,2.465,3472,2.465,3473,6.582,3474,3.945,3475,5.64,3476,3.945,3477,3.945,3478,2.465,3479,4.933,3480,3.945,3481,2.465,3482,2.465,3483,2.465,3484,2.465,3485,3.945,3486,3.945,3487,2.465,3488,2.465,3489,4.933,3490,2.465,3491,2.465,3492,2.465,3493,2.465,3494,2.465,3495,2.465,3496,2.184,3497,2.465,3498,2.465,3499,2.465,3500,4.998,3501,4.933,3502,5.64,3503,3.945,3504,3.945,3505,2.465,3506,2.465,3507,2.465,3508,2.465,3509,2.465,3510,2.465,3511,2.184,3512,2.184,3513,2.465,3514,6.582,3515,3.945,3516,2.465,3517,2.465,3518,2.465,3519,2.465,3520,2.465,3521,2.465,3522,2.465,3523,2.465,3524,1.752,3525,2.465,3526,2.465,3527,3.945,3528,2.465,3529,2.465,3530,2.465,3531,2.465,3532,2.465,3533,2.465,3534,3.945,3535,4.933,3536,2.465,3537,2.465,3538,3.945,3539,2.465,3540,2.465,3541,4.933,3542,4.933,3543,4.933,3544,4.372,3545,2.465,3546,4.933,3547,4.933,3548,2.465,3549,2.465]],["title/interfaces/JsonOntologyNode.html",[0,0.282,2956,3.067]],["body/interfaces/JsonOntologyNode.html",[0,0.512,2,1.209,3,0.073,4,0.073,5,0.073,8,0.751,11,0.004,12,0.391,13,0.793,15,2.502,16,1.117,17,0.008,19,0.617,20,1.887,22,3.651,23,0.116,28,1.887,51,2.786,53,1.058,65,1.67,87,1.062,99,0.006,100,0.004,150,0.273,154,2.569,183,1.312,216,2.744,219,1.53,247,1.092,472,2.583,498,0.987,508,3.936,521,4.202,604,2.786,754,4.887,1300,5.491,2420,3.405,2433,3.227,2552,6.41,2559,3.087,2678,3.387,2950,6.431,2951,4.08,2952,4.08,2953,6.46,2954,6.561,2955,5.408,2956,5.036,2957,6.721,2958,6.721,2959,5.659,2960,6.721,2961,4.08,2962,6.721,2963,6.721,2964,5.408,2965,4.08,2966,4.08,2967,6.067,2968,4.08,2969,4.08,2970,4.08,2971,4.08,2972,5.408,2973,4.08,2974,4.08,2975,4.08,2976,4.08,2977,4.08,2978,4.08,2979,4.08,2980,3.574,2981,5.408,2982,4.08,2983,4.08,2984,4.08,2985,4.08,2986,4.08,2987,3.387,2988,4.08]],["title/interfaces/ListResult.html",[0,0.282,26,2.123]],["body/interfaces/ListResult.html",[0,0.522,1,2.297,2,1.081,3,0.066,4,0.066,5,0.066,6,1.449,7,3.028,8,1.191,9,3.378,10,4.311,11,0.007,12,0.349,13,0.736,14,3.028,15,2.666,16,1.434,17,0.008,18,1.589,19,0.769,20,1.37,21,3.028,22,1.981,23,0.12,24,2.951,25,3.641,26,3.293,27,3.437,28,1.936,29,3.503,30,4.163,31,5.122,32,3.641,33,2.583,34,3.895,35,4.88,36,1.878,37,4.48,38,4.88,39,4.88,40,4.668,41,4.48,42,4.335,43,4.532,44,4.16,45,4.612,46,1.917,47,1.276,48,0.796,49,1.449,50,3.263,51,1.879,52,2.457,53,0.574,54,2.76,55,1.752,56,2.548,57,2.648,58,2.885,59,3.794,60,3.503,61,3.641,62,3.641,63,4.003,64,4.335,65,1.213,66,3.157,67,3.503,68,1.7,69,1.7,70,2.374,71,2.548,72,2.374,73,2.379,74,2.548,75,3.966,76,2.76,77,2.76,78,3.503,79,3.503,80,2.457,81,2.885,82,1.387,83,2.096,84,2.457,85,2.76,86,2.885,87,1.458,88,3.028,89,2.159,90,2.76,91,2.885,92,1.981,93,2.967,94,2.648,95,2.737,96,2.648,97,2.096,98,2.885,99,0.005,100,0.004]],["title/interfaces/Message.html",[0,0.282,1713,2.254]],["body/interfaces/Message.html",[0,0.367,2,1.019,3,0.062,4,0.133,5,0.062,8,0.633,11,0.004,12,0.33,13,0.706,17,0.008,18,1.47,19,0.667,23,0.118,27,3.02,28,1.757,36,1.398,46,1.019,69,1.603,73,1.428,82,1.308,87,0.945,97,1.976,99,0.005,100,0.004,104,2.112,119,3.031,125,2.112,127,0.921,131,1.202,137,4.9,145,1.202,150,0.28,151,0.469,153,1.868,156,1.921,179,0.185,180,2.359,181,1.603,183,2.246,194,3.287,205,1.238,219,1.007,247,1.695,252,0.979,455,2.443,470,1.397,476,1.244,483,4.368,498,1.531,521,3.639,593,3.298,606,1.868,716,1.868,754,2.602,823,2.855,838,3.495,878,2.92,887,2.72,925,2.035,989,4.11,1160,3.741,1217,3.495,1545,1.921,1558,4.033,1689,3.363,1692,2.937,1695,4.317,1700,2.403,1708,2.166,1709,4.504,1713,4.697,1728,3.133,1730,2.855,1757,2.72,1775,3.996,1815,2.855,1861,3.996,1881,4.765,1889,5.194,1910,4.217,1922,2.244,1944,3.807,2058,2.602,2069,2.72,2125,3.013,2126,4.217,3157,4.995,3287,2.855,3524,3.013,3550,3.202,3551,4.482,3552,4.217,3553,3.202,3554,3.202,3555,5.896,3556,4.865,3557,3.202,3558,4.482,3559,3.013,3560,3.202,3561,3.202,3562,4.482,3563,3.202,3564,3.202,3565,3.202,3566,3.202,3567,3.202,3568,4.482,3569,3.202,3570,3.202,3571,3.202,3572,3.202,3573,4.217,3574,3.202,3575,4.482,3576,2.855,3577,3.202,3578,3.202,3579,3.202,3580,3.202,3581,3.202,3582,3.202,3583,3.202,3584,5.171,3585,3.202,3586,3.202,3587,3.202,3588,3.202,3589,3.202,3590,3.202,3591,3.202,3592,3.202]],["title/classes/MessageChannel.html",[179,0.142,1728,2.404]],["body/classes/MessageChannel.html",[0,0.337,3,0.055,4,0.133,5,0.055,8,1.113,11,0.003,12,0.292,13,0.648,17,0.008,18,1.463,19,0.677,20,0.833,23,0.113,27,3.035,28,1.525,36,0.885,46,0.903,53,0.897,69,1.421,73,1.265,82,1.159,87,1.238,97,2.538,99,0.005,100,0.003,104,1.976,119,2.781,125,1.976,127,1.183,129,1.706,131,1.543,137,5.071,145,1.065,150,0.262,151,0.416,153,1.656,156,1.702,179,0.17,180,2.568,181,1.421,183,2.183,194,3.731,197,1.309,205,1.335,219,0.924,247,1.619,252,1.257,449,1.919,455,2.567,470,1.794,474,1.758,476,1.238,483,4.722,498,1.667,521,3.474,593,3.419,606,2.822,716,1.656,754,3.342,823,2.53,838,2.213,878,2.829,887,2.411,925,1.804,989,3.968,1160,4.247,1217,3.207,1545,1.702,1558,4.578,1689,3.086,1692,2.695,1695,4.347,1700,2.129,1708,2.781,1709,4.65,1713,4.686,1728,3.381,1730,2.53,1757,2.411,1775,3.667,1815,3.667,1861,3.667,1881,4.836,1889,5.071,1910,3.869,1922,2.059,1944,3.493,1984,3.329,2058,3.342,2069,2.411,2125,2.67,2126,3.869,3157,5.02,3287,2.53,3524,3.869,3550,2.838,3551,2.838,3552,3.869,3553,2.838,3554,2.838,3555,5.63,3556,4.551,3557,2.838,3558,4.112,3559,2.67,3560,2.838,3561,4.112,3562,5.63,3563,4.112,3564,4.112,3565,4.112,3566,2.838,3567,2.838,3568,4.112,3569,4.112,3570,4.112,3571,5.304,3572,2.838,3573,4.99,3574,4.112,3575,4.112,3576,3.667,3577,4.112,3578,2.838,3579,5.304,3580,2.838,3581,2.838,3582,2.838,3583,2.838,3584,4.837,3585,2.838,3586,2.838,3587,2.838,3588,2.838,3589,2.838,3590,2.838,3591,2.838,3592,2.838,3593,3.329,3594,5.444,3595,5.444,3596,5.444,3597,5.444,3598,3.756,3599,3.756,3600,3.756,3601,3.756,3602,3.756]],["title/injectables/MessageService.html",[1692,2.254,1922,1.722]],["body/injectables/MessageService.html",[0,0.352,3,0.058,4,0.131,5,0.058,8,0.991,11,0.003,12,0.311,13,0.678,17,0.008,18,1.25,19,0.655,20,0.887,23,0.116,27,2.702,28,1.441,36,0.943,46,0.963,53,0.728,69,1.514,73,1.349,82,1.235,87,1.152,97,1.866,99,0.005,100,0.003,104,2.047,119,2.911,125,2.047,127,1.238,129,1.626,131,1.135,137,4.889,145,1.135,150,0.271,151,0.443,153,1.764,156,1.814,179,0.178,180,2.491,181,2.155,183,2.217,194,3.186,197,1.37,205,1.384,219,0.967,247,1.659,252,0.924,455,2.603,470,1.877,474,1.427,476,1.302,483,4.5,498,1.603,521,3.893,593,3.245,606,1.764,716,1.764,754,2.457,798,5.05,823,3.838,838,2.358,878,3.034,887,2.569,925,3.186,989,3.781,1160,3.627,1217,3.909,1545,2.582,1558,3.909,1689,3.23,1692,3.781,1695,4.428,1700,4.098,1708,2.045,1709,4.57,1713,4.69,1728,3.503,1730,3.838,1757,3.657,1775,3.838,1815,2.697,1861,3.838,1881,4.677,1889,4.919,1910,4.05,1922,2.155,1923,2.358,1944,3.657,2058,2.457,2069,3.657,2125,2.845,2126,4.05,3157,4.469,3287,2.697,3524,2.845,3550,3.024,3551,3.024,3552,4.05,3553,3.024,3554,3.024,3555,5.998,3556,5.43,3557,3.024,3558,4.305,3559,2.845,3560,3.024,3561,3.024,3562,4.305,3563,3.024,3564,3.024,3565,3.024,3566,3.024,3567,3.024,3568,4.305,3569,3.024,3570,3.024,3571,3.024,3572,3.024,3573,4.05,3574,3.024,3575,4.305,3576,2.697,3577,3.024,3578,3.024,3579,3.024,3580,3.024,3581,4.305,3582,3.024,3583,3.024,3584,5.012,3585,3.024,3586,3.024,3587,3.024,3588,3.024,3589,4.305,3590,3.024,3591,4.305,3592,3.024,3593,3.548,3603,4.003,3604,5.698,3605,4.003,3606,4.003,3607,4.003]],["title/interfaces/MessageServiceConfig.html",[0,0.282,3556,3.236]],["body/interfaces/MessageServiceConfig.html",[0,0.371,2,1.035,3,0.063,4,0.131,5,0.063,8,0.643,11,0.004,12,0.335,13,0.714,17,0.008,18,1.3,19,0.616,23,0.119,27,2.811,28,1.499,36,1.014,46,1.659,69,2.268,73,1.45,82,1.851,87,0.955,97,2.007,99,0.005,100,0.004,104,2.13,119,3.064,125,2.13,127,0.935,131,1.22,137,4.912,145,1.22,150,0.282,151,0.476,153,1.897,156,1.95,179,0.187,180,2.378,181,1.628,183,2.254,194,3.314,205,1.251,219,1.018,247,1.705,252,0.994,455,2.455,470,1.418,476,1.251,483,4.397,498,1.54,521,3.789,593,3.117,606,1.897,716,1.897,754,2.642,823,2.899,838,2.536,878,2.977,887,2.762,925,2.067,989,3.885,1160,3.772,1217,3.533,1545,1.95,1558,4.066,1689,3.399,1692,2.968,1695,4.276,1700,2.44,1708,2.199,1709,4.557,1713,4.676,1728,3.166,1730,2.899,1757,2.762,1775,4.039,1815,2.899,1861,4.039,1881,4.624,1889,5.011,1910,4.262,1922,2.268,1944,3.848,2058,2.642,2069,2.762,2125,3.059,2126,4.262,3157,4.649,3287,2.899,3524,3.059,3550,3.252,3551,3.252,3552,4.262,3553,3.252,3554,3.252,3555,6.14,3556,5.306,3557,4.53,3558,5.929,3559,3.059,3560,3.252,3561,3.252,3562,4.53,3563,3.252,3564,3.252,3565,3.252,3566,3.252,3567,3.252,3568,4.53,3569,3.252,3570,3.252,3571,3.252,3572,3.252,3573,4.262,3574,3.252,3575,4.53,3576,2.899,3577,3.252,3578,3.252,3579,3.252,3580,3.252,3581,3.252,3582,3.252,3583,3.252,3584,5.214,3585,3.252,3586,3.252,3587,3.252,3588,3.252,3589,3.252,3590,3.252,3591,3.252,3592,3.252]],["title/interfaces/OMEZarrInfo.html",[0,0.282,1141,2.795]],["body/interfaces/OMEZarrInfo.html",[0,0.443,2,1.349,3,0.125,4,0.104,5,0.082,6,1.808,11,0.005,12,0.436,13,0.852,16,1.331,17,0.008,18,1.484,19,0.724,23,0.125,34,4.161,47,1.424,48,1.267,95,2.774,99,0.006,100,0.005,127,1.219,150,0.23,216,2.307,219,1.456,247,1.863,606,3.155,650,3.243,653,3.999,763,3.305,765,4.765,872,2.866,1121,2.694,1136,4.643,1138,3.18,1139,4.593,1140,4.217,1141,5.097,1142,4.643,1143,4.839,1240,3.18,1768,3.987,2050,4.238,2769,6.233,2938,4.238,3344,4.238,3608,4.238,3609,4.972,3610,4.972,3611,6.343,3612,6.395,3613,4.552,3614,4.552,3615,4.552,3616,4.552,3617,4.552,3618,4.552,3619,4.552,3620,4.552,3621,4.552,3622,4.972,3623,6.986,3624,4.972,3625,4.972,3626,4.972,3627,4.972,3628,4.972,3629,4.972,3630,4.972,3631,4.972,3632,4.972,3633,4.552,3634,4.972,3635,4.972,3636,4.972,3637,4.972,3638,4.972,3639,4.972,3640,4.972,3641,4.972,3642,4.972,3643,4.972,3644,4.972,3645,4.972,3646,4.972]],["title/interfaces/OldRuiData.html",[0,0.282,2564,3.695]],["body/interfaces/OldRuiData.html",[0,0.279,2,1.086,3,0.066,4,0.066,5,0.066,6,1.456,8,0.675,11,0.004,12,0.351,13,0.738,15,2.302,16,1.385,17,0.008,18,1.644,19,0.762,23,0.09,27,3.104,28,1.538,29,4.676,36,2.081,52,3.87,53,0.973,87,0.72,99,0.005,100,0.004,118,1.108,150,0.185,183,1.988,216,1.998,219,1.202,236,2.752,247,1.347,253,2.093,261,4.176,272,1.75,277,2.591,278,3.665,293,3.168,476,0.72,492,5.064,498,1.217,551,5.133,555,2.385,578,2.525,593,2.812,681,3.412,816,2.469,849,2.66,876,4.684,891,5.031,959,3.043,961,3.211,977,3.211,986,4.684,989,2.236,997,4.003,1052,6.006,1121,3.399,1289,5.495,1613,4.165,2424,3.412,2546,5.031,2554,5.032,2564,6.48,2565,5.495,2602,4.003,2678,3.043,2727,5.495,2765,6.754,2822,3.665,2840,5.676,2842,3.211,2875,3.665,3096,5.031,3256,4.407,3337,3.979,3647,4.517,3648,4.517,3649,6.2,3650,7.62,3651,7.62,3652,7.62,3653,7.62,3654,7.62,3655,7.62,3656,7.62,3657,7.986,3658,7.62,3659,4.684,3660,6.2,3661,6.2,3662,5.756,3663,4.003,3664,6.2,3665,4.517,3666,4.517,3667,4.517,3668,3.665,3669,4.517,3670,4.517,3671,4.517,3672,7.986,3673,6.2,3674,4.517,3675,4.517,3676,4.517,3677,4.517,3678,4.517,3679,4.517,3680,4.517,3681,4.517,3682,6.2,3683,6.2,3684,6.2,3685,6.2,3686,6.2,3687,6.2,3688,3.412,3689,3.412,3690,3.412,3691,4.517,3692,6.2,3693,4.517,3694,3.412,3695,4.517,3696,3.412,3697,4.517,3698,3.412,3699,4.517,3700,3.412,3701,4.517,3702,3.412,3703,3.412,3704,3.412,3705,3.412,3706,3.412,3707,4.517,3708,3.412,3709,4.517,3710,3.412,3711,4.517,3712,3.412,3713,4.517,3714,3.412,3715,4.517,3716,3.412,3717,4.517,3718,3.412,3719,4.517,3720,3.412,3721,4.517,3722,3.412,3723,4.517,3724,3.412]],["title/modules/OntologyExplorationModule.html",[381,0.651,400,3.236]],["body/modules/OntologyExplorationModule.html",[3,0.093,4,0.093,5,0.093,11,0.005,17,0.008,23,0.093,65,1.636,99,0.006,100,0.005,150,0.364,151,0.703,179,0.198,204,1.878,317,1.056,381,0.908,383,1.801,384,1.801,385,1.919,386,1.878,387,1.878,388,2.519,400,6.737,403,2.192,404,1.692,406,2.387,407,2.336,423,4.077,444,2.665,445,2.14,3725,5.63,3726,5.63,3727,5.63,3728,6.363,3729,6.714,3730,6.363,3731,4.279,3732,6.352,3733,3.9,3734,5.63,3735,5.154,3736,6.352,3737,4.799,3738,5.63]],["title/interfaces/OntologyNode.html",[0,0.282,2420,2.326]],["body/interfaces/OntologyNode.html",[0,0.393,2,1.527,3,0.093,4,0.093,5,0.093,8,0.949,11,0.005,12,0.494,13,0.921,15,2.791,16,1.423,17,0.008,19,0.734,23,0.093,27,3.534,28,1.885,65,1.636,99,0.006,100,0.005,107,1.839,119,3.951,249,4.084,508,4.263,521,4.217,578,3.15,1284,5.843,2174,4.384,2417,5.63,2420,3.951,2433,5.569,2959,5.497,2987,5.845,3157,5.21,3739,5.63,3740,6.275]],["title/components/OntologySearchComponent.html",[101,0.726,364,1.436]],["body/components/OntologySearchComponent.html",[3,0.079,4,0.042,5,0.042,8,1.046,11,0.006,12,0.344,13,0.527,15,1.847,16,0.989,17,0.008,18,0.834,19,0.623,20,1.898,22,3.559,23,0.042,28,0.962,47,1.196,48,1.24,49,1.971,53,0.933,55,0.809,57,2.608,65,1.68,73,1.828,87,1.055,99,0.004,100,0.007,101,1.165,102,0.899,103,1.255,104,0.88,105,0.919,106,0.961,107,0.826,114,1.604,117,3.03,118,2.266,120,1.459,122,1.491,127,0.962,128,0.714,129,1.719,136,0.792,137,3.829,144,2.191,148,0.94,150,0.309,151,0.316,153,1.257,154,1.457,156,1.292,158,2.314,169,0.899,173,0.899,177,0.899,179,0.089,180,1.525,181,2.934,183,1.727,193,1.951,194,2.936,197,1.064,198,3.924,205,1.654,215,2.965,216,2.258,219,0.752,224,1.445,239,3.408,240,2.191,247,1.179,252,1.94,253,2.071,268,1.257,271,2.06,272,1.105,273,1.83,275,1.224,279,2.458,280,1.921,281,2.071,284,2.715,285,2.865,286,2.529,290,0.826,291,3.997,297,1.559,299,3.178,300,3.374,303,4.719,308,3.075,309,2.865,315,2.314,317,0.474,318,1.366,319,1.427,320,0.961,321,2.06,322,0.961,323,0.961,324,0.899,325,0.961,326,0.899,327,0.961,328,0.899,329,1.152,330,0.961,331,0.899,332,0.919,333,0.961,334,0.899,335,0.961,336,0.899,337,0.961,338,0.899,339,0.961,340,0.899,341,1.828,342,0.961,343,0.899,344,1.491,345,0.899,346,0.94,347,0.961,348,0.899,349,1.366,350,1.491,351,0.899,352,0.961,353,0.899,354,0.961,355,0.899,356,0.899,357,0.961,358,0.899,359,0.961,360,0.899,361,1.491,362,0.899,363,0.961,364,1.928,365,0.961,366,0.899,367,0.961,368,0.919,369,0.961,370,0.899,371,0.961,372,0.899,373,0.961,374,0.899,375,0.899,376,0.961,377,0.899,378,0.899,379,0.961,380,0.961,423,5.262,453,1.921,470,0.94,474,1.658,476,0.864,498,1.482,503,3.229,508,3.174,565,1.635,716,1.951,724,1.85,734,2.21,745,1.079,746,2.491,765,2.338,797,2.718,806,5.335,824,1.83,843,1.751,847,5.033,878,1.525,894,2.155,1134,2.262,1240,1.617,1283,3.592,1286,3.602,1294,4.619,1314,2.851,1347,2.338,1349,2.718,1376,3.618,1380,1.559,1615,2.027,1618,2.314,1663,2.841,1753,3.924,1765,2.608,1766,2.608,2008,3.592,2042,2.314,2058,2.718,2068,4.402,2156,2.155,2160,2.314,2162,2.155,2171,3.592,2177,2.314,2222,3.344,2238,3.924,2327,2.314,2330,1.559,2420,3.124,2467,2.528,2559,1.751,2930,3.344,2959,3.147,3053,7.59,3055,2.528,3056,2.528,3351,3.924,3544,3.924,3573,3.147,3731,5.523,3733,5.1,3741,2.852,3742,4.427,3743,3.924,3744,4.808,3745,5.425,3746,4.427,3747,5.425,3748,5.425,3749,7.555,3750,7.309,3751,4.427,3752,5.42,3753,4.427,3754,4.427,3755,4.427,3756,2.852,3757,4.705,3758,4.427,3759,5.425,3760,5.371,3761,2.852,3762,4.427,3763,3.592,3764,4.427,3765,5.99,3766,2.852,3767,4.427,3768,4.427,3769,2.852,3770,4.427,3771,4.427,3772,4.427,3773,7.005,3774,2.852,3775,4.427,3776,4.427,3777,4.427,3778,2.852,3779,6.115,3780,4.427,3781,2.852,3782,4.427,3783,2.852,3784,5.425,3785,2.852,3786,4.427,3787,4.427,3788,2.852,3789,2.314,3790,2.528,3791,2.852,3792,2.528,3793,2.528,3794,2.852,3795,2.852,3796,2.852,3797,2.852,3798,2.852,3799,2.314,3800,2.852,3801,2.852,3802,2.852,3803,2.852,3804,2.852,3805,2.852,3806,2.852,3807,2.852,3808,2.852,3809,2.852,3810,2.852,3811,2.852,3812,2.852,3813,4.427,3814,4.427,3815,4.427,3816,4.427,3817,6.115,3818,2.314,3819,2.852,3820,2.852,3821,2.852,3822,4.427,3823,2.528]],["title/modules/OntologySearchModule.html",[381,0.651,3728,3.067]],["body/modules/OntologySearchModule.html",[3,0.094,4,0.094,5,0.094,11,0.005,17,0.008,22,2.849,23,0.094,65,1.268,99,0.007,100,0.005,150,0.379,151,0.716,179,0.201,204,1.912,317,1.075,364,2.985,381,0.924,383,1.833,384,1.833,385,2.538,386,1.912,387,1.912,388,2.538,403,2.216,404,1.722,406,1.995,407,2.361,408,4.272,409,3.303,423,4.149,444,2.693,445,2.178,2186,5.905,2187,4.884,3728,6.19,3731,4.355,3733,3.969,3789,5.245,3790,5.73,3824,5.73,3825,5.73,3826,5.73,3827,6.465,3828,7.817,3829,7.817,3830,7.817,3831,7.817,3832,6.465,3833,6.465]],["title/injectables/OntologySearchService.html",[1922,1.722,3757,3.236]],["body/injectables/OntologySearchService.html",[0,0.276,3,0.042,4,0.042,5,0.042,8,1.097,11,0.006,12,0.619,13,0.532,15,2.663,16,1.355,17,0.008,18,1.03,19,0.656,20,0.991,23,0.103,28,1.648,36,1.288,53,0.899,57,2.634,65,1.768,73,1.506,87,1.122,99,0.004,100,0.006,107,1.928,119,3.876,128,1.37,129,1.615,131,0.819,132,2.344,137,3.64,141,2.028,150,0.331,151,0.32,153,1.273,154,2.794,156,1.309,179,0.09,180,2.121,181,2.069,183,2.273,194,2.147,197,1.075,205,1.284,212,3.627,216,2.146,219,1.375,236,0.995,237,4.065,240,4.312,247,1.595,248,2.444,249,3.718,259,1.637,455,2.011,470,0.952,472,1.119,474,1.763,476,0.871,498,1.635,508,4.083,521,2.87,593,1.147,631,3.178,704,3.51,736,2.02,755,2.869,756,1.476,765,3.516,806,5.359,838,1.702,843,5.048,847,2.744,849,1.918,850,2.869,878,2.121,1006,1.637,1134,1.476,1299,2.182,1347,1.525,1545,2.026,1556,2.053,1641,1.773,1739,3.377,1909,2.344,1922,2.329,1923,1.702,1942,2.182,1944,1.854,1954,4.651,2036,1.476,2043,2.182,2049,2.182,2059,3.011,2071,2.182,2174,1.637,2222,4.651,2330,3.365,2420,4.549,2424,2.182,2433,5.106,2463,6.156,2552,1.946,2559,1.773,2629,3.962,2768,3.627,2956,1.946,2980,2.053,2987,1.946,3271,2.053,3302,1.773,3337,2.869,3431,2.344,3576,1.946,3733,4.781,3740,2.344,3757,4.376,3760,2.344,3763,2.344,3765,4.132,3799,3.627,3818,3.627,3834,6.319,3835,2.344,3836,3.962,3837,3.962,3838,4.132,3839,4.471,3840,4.471,3841,4.471,3842,5.456,3843,2.889,3844,5.456,3845,4.869,3846,4.471,3847,5.901,3848,3.962,3849,2.889,3850,3.962,3851,3.962,3852,7.667,3853,2.889,3854,3.962,3855,3.962,3856,5.456,3857,3.962,3858,3.962,3859,2.889,3860,3.962,3861,3.962,3862,2.889,3863,2.889,3864,3.962,3865,3.962,3866,5.456,3867,2.889,3868,3.962,3869,3.962,3870,2.182,3871,2.56,3872,2.56,3873,2.56,3874,2.56,3875,3.962,3876,2.56,3877,2.182,3878,4.147,3879,2.56,3880,2.56,3881,4.847,3882,1.946,3883,3.627,3884,2.344,3885,2.56,3886,5.901,3887,3.377,3888,3.377,3889,2.56,3890,2.56,3891,3.962,3892,2.56,3893,2.56,3894,2.56,3895,2.56,3896,2.56,3897,2.56,3898,2.56,3899,2.56,3900,2.56,3901,2.56,3902,2.56,3903,2.56,3904,5.456,3905,2.56,3906,2.56,3907,2.56,3908,4.847,3909,4.847,3910,3.962,3911,2.56,3912,2.56,3913,3.962,3914,2.56,3915,4.847,3916,2.56,3917,2.344,3918,2.56,3919,2.56,3920,2.56,3921,2.56,3922,2.56,3923,2.56,3924,2.56,3925,2.56,3926,2.56,3927,2.56,3928,2.56,3929,2.56,3930,2.56,3931,2.56,3932,2.56,3933,3.962,3934,2.56,3935,2.56,3936,2.56,3937,2.56,3938,2.56,3939,2.56,3940,2.56,3941,2.56,3942,2.56,3943,2.56,3944,2.56,3945,2.56,3946,3.962,3947,2.56,3948,3.962,3949,3.962,3950,3.962,3951,3.962,3952,2.56,3953,2.56,3954,2.56,3955,2.56,3956,2.56,3957,2.56,3958,3.962,3959,3.962,3960,2.56,3961,2.344,3962,2.56,3963,2.56]],["title/interfaces/OntologySelection.html",[0,0.282,157,3.44]],["body/interfaces/OntologySelection.html",[0,0.429,2,1.668,3,0.101,4,0.101,5,0.101,11,0.006,12,0.539,13,0.97,15,2.699,16,1.379,17,0.008,19,0.714,23,0.101,28,1.941,65,1.361,99,0.007,100,0.006,150,0.284,157,6.158,508,3.143,578,3.526,2420,4.565,2760,7.918,3739,6.148,3964,6.937]],["title/components/OntologySelectionComponent.html",[101,0.726,366,1.436]],["body/components/OntologySelectionComponent.html",[3,0.094,4,0.055,5,0.055,8,0.963,11,0.003,12,0.296,13,0.654,16,0.821,17,0.008,19,0.68,23,0.055,24,2.296,36,1.294,47,1.354,48,1.382,49,1.771,53,0.902,55,1.078,65,1.852,66,3.987,73,1.851,87,0.875,99,0.005,100,0.006,101,1.375,102,1.2,103,2.002,104,1.174,105,1.226,106,1.282,107,2.568,114,1.907,117,3.106,118,2.313,120,1.81,122,1.851,125,1.174,128,0.953,129,1.754,131,1.557,134,5.257,135,4.458,136,1.056,141,1.81,148,1.253,150,0.329,151,0.421,157,5.335,158,4.458,159,5.813,169,1.2,173,1.2,177,1.2,179,0.119,180,1.893,181,2.078,182,4.15,183,1.683,197,1.321,205,1.146,219,0.646,224,1.718,232,4.15,237,4.354,238,3.003,239,3.841,240,1.883,290,1.101,317,0.632,318,1.695,319,1.771,320,1.282,321,2.379,322,1.282,323,1.282,324,1.2,325,1.282,326,1.2,327,1.282,328,1.2,329,1.33,330,1.282,331,1.2,332,1.226,333,1.282,334,1.2,335,1.282,336,1.2,337,1.282,338,1.2,339,1.282,340,1.2,341,2.173,342,1.282,343,1.2,344,1.851,345,1.2,346,1.253,347,1.282,348,1.2,349,1.695,350,1.851,351,1.2,352,1.282,353,1.2,354,1.282,355,1.2,356,1.2,357,1.282,358,1.2,359,1.282,360,1.2,361,1.851,362,1.2,363,1.282,364,1.2,365,1.282,366,2.227,367,1.282,368,2.276,369,1.282,370,1.2,371,1.282,372,1.2,373,1.282,374,1.2,375,1.2,376,1.282,377,1.2,378,1.2,379,1.282,380,1.282,423,5.386,455,1.149,470,1.81,474,1.376,476,0.606,494,1.827,498,0.746,503,2.901,508,3.537,565,2.029,606,2.422,723,2.238,724,2.296,730,3.526,734,2.627,736,2.029,744,2.563,745,2.952,746,2.238,797,3.959,806,4.598,878,2.222,1134,2.807,1156,4.209,1404,4.869,1405,4.15,1406,2.807,1521,3.608,1954,4.15,2036,1.944,2174,3.114,2420,3.987,3731,5.654,3733,2.335,3735,6.81,3737,2.874,3743,5.715,3757,6.057,3792,3.372,3793,3.372,3845,2.441,3878,2.563,3961,3.087,3965,3.804,3966,5.494,3967,6.449,3968,5.494,3969,6.449,3970,6.449,3971,6.449,3972,3.804,3973,5.494,3974,3.804,3975,5.494,3976,3.804,3977,3.804,3978,5.494,3979,5.494,3980,3.804,3981,3.804,3982,5.494,3983,3.804,3984,3.804,3985,3.372,3986,3.804,3987,3.804]],["title/modules/OntologySelectionModule.html",[381,0.651,3729,3.236]],["body/modules/OntologySelectionModule.html",[3,0.094,4,0.094,5,0.094,11,0.005,17,0.008,23,0.094,65,1.649,99,0.007,100,0.005,150,0.366,151,0.716,179,0.201,204,1.912,317,1.075,366,2.985,381,0.924,383,1.833,384,1.833,385,2.538,386,1.912,387,1.912,388,2.538,403,2.216,404,1.722,406,2.412,407,2.361,423,4.149,444,2.693,445,2.178,3728,6.118,3729,6.703,3730,6.118,3731,4.355,3733,3.969,3734,5.73,3735,5.245,3737,4.884,3738,5.73,3988,5.73,3989,5.73,3990,6.465,3991,5.73,3992,6.465,3993,6.465]],["title/injectables/OntologyState.html",[1922,1.722,3845,2.922]],["body/injectables/OntologyState.html",[0,0.348,3,0.082,4,0.082,5,0.082,8,1.071,11,0.005,12,0.438,13,0.854,16,1.071,17,0.008,19,0.464,20,1.59,23,0.105,27,2.293,28,1.223,36,1.326,53,0.916,65,1.824,87,0.897,99,0.006,100,0.005,107,2.541,119,4.387,125,2.709,127,1.558,129,1.681,141,3.004,150,0.359,151,0.623,154,2.876,156,2.551,179,0.175,183,1.469,197,1.725,205,1.496,240,4.47,474,1.41,476,1.143,494,2.703,498,1.105,508,3.767,604,2.998,704,3.613,756,3.665,797,5.389,1721,5.099,1922,2.713,1923,3.317,1971,5.318,1994,4.847,2033,4.404,2034,3.456,2035,3.456,2036,2.876,2077,3.792,2420,3.665,3838,5.964,3845,4.604,3877,4.253,3878,5.6,3887,4.253,3888,4.253,3994,4.99,3995,7.174,3996,6.358,3997,5.63,3998,7.368,3999,6.358,4000,5.63,4001,6.358,4002,5.63,4003,4.99]],["title/interfaces/OntologyStateModel.html",[0,0.282,3878,3.067]],["body/interfaces/OntologyStateModel.html",[0,0.366,2,1.423,3,0.086,4,0.086,5,0.086,8,0.884,11,0.005,12,0.46,13,0.881,16,1.264,17,0.008,19,0.698,23,0.108,27,3.015,28,1.285,36,1.744,53,0.756,65,1.789,99,0.006,100,0.005,107,2.339,119,4.659,125,2.284,141,2.972,150,0.364,151,0.655,154,3.023,156,2.681,179,0.184,183,1.544,205,1.234,240,4.553,476,0.943,492,4.544,508,3.836,604,2.473,704,4.751,756,3.782,797,4.544,1721,4.206,1922,2.8,1971,4.986,1994,4.544,2033,4.544,2034,3.633,2035,3.633,2036,3.023,2077,3.986,2420,3.782,3838,4.47,3845,3.797,3877,4.47,3878,5.442,3887,5.592,3888,5.592,3994,5.245,3996,5.245,3998,6.561,3999,5.245,4001,5.245,4003,5.245]],["title/modules/OntologyTreeModule.html",[381,0.651,3730,3.067]],["body/modules/OntologyTreeModule.html",[3,0.095,4,0.095,5,0.095,11,0.005,17,0.008,23,0.095,65,1.282,99,0.007,100,0.005,150,0.377,151,0.723,179,0.204,204,1.933,317,1.087,368,3.055,381,0.934,383,1.853,384,1.853,385,2.55,386,1.933,387,1.933,388,2.55,403,2.231,404,1.741,406,2.017,407,2.377,408,4.301,409,3.339,423,4.194,444,2.711,445,2.202,2481,6.974,2482,5.793,2485,6.974,2486,5.793,3730,6.203,3731,4.403,3737,4.938,3985,5.793,4004,5.793,4005,5.793,4006,5.793,4007,6.536,4008,7.868,4009,6.536]],["title/classes/PictureInPictureViewer.html",[179,0.142,4010,3.44]],["body/classes/PictureInPictureViewer.html",[0,0.218,3,0.051,4,0.051,5,0.051,6,2.197,11,0.003,12,0.274,13,0.619,16,0.527,17,0.008,18,1.6,19,0.748,20,1.789,23,0.09,28,1.13,46,1.251,47,1.374,48,0.921,53,1.052,87,1.312,92,2.723,95,3.192,99,0.004,100,0.003,125,1.605,127,1.753,129,1.985,145,1.751,150,0.213,179,0.11,193,1.556,197,1.251,205,1.683,219,1.442,235,3.639,247,1.481,252,1.961,271,2.448,277,1.475,281,2.016,284,1.368,286,1.646,329,0.665,449,1.804,455,2.739,457,4.185,470,1.163,472,2.394,474,2.063,476,0.829,494,2.498,495,2.844,498,1.754,517,1.556,523,4.632,525,3.763,528,3.065,530,2.174,536,3.194,604,2.582,650,4.026,669,2.747,1112,2.667,1131,2.167,1132,1.804,1133,1.747,1134,1.804,1136,3.639,1137,3.339,1138,2.001,1146,3.339,1147,2.167,1153,3.339,1154,3.339,1156,3.483,1157,3.194,1158,3.194,1159,4.461,1160,1.93,1168,4.592,1169,5.285,1172,3.504,1173,3.504,1175,3.339,1177,3.339,1178,3.504,1180,2.266,1182,3.504,1183,5.984,1184,3.504,1185,3.504,1186,2.949,1187,3.339,1194,4.161,1196,2.378,1203,2.378,1214,2.378,1220,5.045,1221,5.045,1228,4.161,1231,3.964,1238,3.504,1246,2.378,1248,2.378,1249,3.504,1254,4.161,1260,2.266,1695,2.575,2078,2.378,2557,2.667,2989,4.611,2990,4.611,2991,4.611,2992,4.611,2993,4.611,3010,3.129,3012,3.129,3021,3.129,4010,3.93,4011,5.531,4012,5.531,4013,5.531,4014,3.53,4015,9.266,4016,3.53,4017,3.53,4018,3.53,4019,3.53,4020,3.53,4021,3.53,4022,3.53,4023,3.53,4024,3.53,4025,3.53,4026,3.53,4027,3.53,4028,3.53,4029,3.53,4030,3.53,4031,3.53,4032,3.53,4033,3.53,4034,3.53,4035,3.53,4036,3.53,4037,3.53,4038,3.53,4039,3.53,4040,3.53,4041,3.53,4042,3.53,4043,3.53,4044,3.53,4045,6.041,4046,6.041,4047,3.129,4048,4.221,4049,5.166,4050,4.611,4051,3.129,4052,3.129,4053,3.129,4054,4.611,4055,3.129,4056,3.129,4057,4.611,4058,5.475,4059,5.475,4060,5.475,4061,3.129,4062,3.129,4063,3.129,4064,3.129,4065,3.129,4066,6.041,4067,3.129,4068,3.129]],["title/interfaces/PictureInPictureViewerProps.html",[0,0.282,4013,3.695]],["body/interfaces/PictureInPictureViewerProps.html",[0,0.333,2,1.294,3,0.079,4,0.079,5,0.079,6,1.734,11,0.004,12,0.418,13,0.829,16,0.804,17,0.008,18,1.595,19,0.575,23,0.113,28,1.514,46,1.294,47,1.397,48,1.233,95,2.7,99,0.006,100,0.004,145,2.191,150,0.285,179,0.168,193,2.372,219,1.559,247,1.776,252,2.12,271,2.604,277,2.249,281,2.285,284,2.085,286,2.509,329,1.013,472,2.085,476,1.11,523,4.105,525,4.293,604,3.23,650,3.158,669,3.68,1112,4.065,1131,3.303,1132,2.749,1133,2.664,1136,4.105,1137,3.453,1138,3.05,1157,3.303,1158,4.744,1159,5.197,1169,3.95,1175,4.472,1180,3.453,1183,4.472,1187,3.453,1220,3.453,1221,3.453,1695,3.449,2078,3.625,2557,4.065,4010,4.065,4011,4.366,4012,4.366,4013,6.271,4045,7.244,4046,7.244,4047,4.769,4048,6.632,4049,6.36,4050,6.176,4051,4.769,4052,4.769,4053,4.769,4054,6.176,4055,4.769,4056,4.769,4057,6.176,4058,6.849,4059,6.849,4060,6.849,4061,4.769,4062,4.769,4063,4.769,4064,4.769,4065,4.769,4066,7.244,4067,4.769,4068,4.769]],["title/interfaces/PureImageViewerLayer.html",[0,0.282,3087,3.236]],["body/interfaces/PureImageViewerLayer.html",[0,0.335,2,1.301,3,0.079,4,0.079,5,0.079,11,0.005,12,0.602,13,0.833,15,2.624,16,1.388,17,0.008,18,1.775,19,0.763,23,0.119,28,1.887,33,2.262,36,1.275,46,2.125,48,0.958,82,1.67,99,0.006,100,0.005,145,1.534,150,0.221,179,0.169,180,1.865,199,2.15,219,1.187,224,1.863,227,5.675,228,3.847,239,3.954,247,1.519,248,2.958,252,1.249,253,1.6,272,2.71,298,3.573,300,2.262,329,1.731,472,2.097,565,2.862,603,3.847,716,2.385,726,4.088,1340,4.166,1349,3.322,1350,3.188,1362,4.488,1372,3.473,1375,3.473,1379,2.765,1390,4.391,1401,2.765,1407,4.088,1540,6.029,1553,6.029,1600,6.029,3086,4.391,3087,5.508,3088,6.408,3089,6.029,3091,4.797,3093,5.675,3095,4.797,3096,4.391,3111,4.797,3112,4.797,3116,4.391,3117,4.797,3118,4.797,3119,4.797,3120,4.797,3121,4.797,3122,4.797,3123,4.797,3124,4.797,3125,4.797,3126,4.797,3127,4.797,3128,4.797,3129,4.797,3130,4.797]],["title/components/ResultsBrowserComponent.html",[101,0.726,370,1.436]],["body/components/ResultsBrowserComponent.html",[1,3.043,3,0.087,4,0.048,5,0.048,8,0.496,11,0.007,12,0.258,13,0.591,15,1.501,16,0.742,17,0.008,19,0.654,20,1.101,23,0.048,24,2.959,26,3.302,36,1.815,46,1.195,47,1.28,48,1.403,49,2.395,53,0.761,55,0.941,65,1.169,68,1.879,82,2.546,87,0.529,89,2.386,93,2.386,99,0.004,100,0.008,101,1.228,102,1.046,103,1.408,104,1.024,105,1.069,106,1.118,107,0.961,112,3.531,114,1.761,117,3.072,118,2.292,120,1.637,122,1.674,127,0.721,128,0.831,129,1.756,131,2.246,133,4.454,136,2.326,141,1.637,148,1.093,150,0.244,151,0.367,152,1.593,169,1.046,173,1.046,177,1.046,179,0.103,197,1.195,199,1.973,205,1.379,213,4.031,224,1.586,233,1.352,238,2.716,239,2.316,249,2.623,252,1.147,253,0.981,259,2.816,268,3.492,269,2.948,270,1.955,271,2.006,275,2.555,276,2.507,277,1.387,279,2.251,281,1.761,284,2.308,285,3.492,286,3.905,289,1.752,290,0.961,292,1.752,299,1.593,305,1.955,312,2.235,313,2.941,315,2.692,317,0.552,318,2.041,319,1.601,320,1.118,321,2.228,322,1.118,323,1.118,324,1.046,325,1.118,326,1.046,327,1.118,328,1.046,329,1.245,330,1.118,331,1.046,332,1.069,333,1.118,334,1.046,335,1.118,336,1.046,337,1.118,338,1.046,339,1.118,340,1.046,341,2.006,342,1.118,343,1.046,344,1.674,345,1.046,346,1.093,347,1.118,348,1.046,349,1.533,350,1.674,351,1.046,352,1.118,353,1.046,354,1.118,355,1.046,356,1.046,357,1.118,358,1.046,359,1.118,360,1.046,361,1.674,362,1.046,363,1.118,364,1.046,365,1.118,366,1.046,367,1.118,368,1.069,369,1.118,370,2.085,371,1.118,372,1.046,373,1.118,374,1.046,375,1.046,376,1.118,377,1.046,378,1.046,379,1.118,380,1.118,430,6.445,474,0.831,476,0.529,494,1.593,498,0.975,546,1.504,565,1.835,716,2.19,717,4.012,722,4.454,723,2.024,724,2.076,730,3.188,732,3.188,734,2.426,744,2.235,745,3.168,746,2.693,1134,2.538,1135,5.006,1282,4.031,1286,2.927,1297,3.753,1314,1.547,1316,2.037,1317,2.037,1318,4.233,1319,3.531,1347,2.623,1362,4.945,1363,4.403,1374,2.359,1547,4.996,1558,2.927,1604,2.037,1612,1.881,1641,3.05,1651,3.531,1662,3.188,1801,4.403,1829,4.403,1858,2.927,1975,4.832,2193,5.278,2205,4.403,2217,3.531,2232,4.403,2233,5.861,2324,4.403,2330,1.814,2387,5.365,2408,4.403,2440,5.861,3052,4.499,3149,4.403,3823,2.941,4069,6.328,4070,3.318,4071,4.968,4072,6.613,4073,8.102,4074,4.968,4075,4.968,4076,5.956,4077,4.968,4078,5.956,4079,5.956,4080,5.956,4081,5.956,4082,7.081,4083,5.956,4084,3.318,4085,3.318,4086,3.318,4087,4.968,4088,3.318,4089,4.968,4090,3.318,4091,4.968,4092,3.318,4093,4.968,4094,8.377,4095,4.968,4096,4.968,4097,4.968,4098,3.318,4099,4.968,4100,4.968,4101,4.968,4102,3.318,4103,4.968,4104,4.968,4105,4.968,4106,3.318,4107,5.956,4108,4.968,4109,3.318,4110,4.968,4111,4.968,4112,2.941,4113,3.318,4114,3.318,4115,3.318,4116,4.968,4117,3.318,4118,3.318,4119,4.968,4120,4.968,4121,5.956,4122,2.941,4123,2.941,4124,2.941,4125,3.318]],["title/components/ResultsBrowserItemComponent.html",[101,0.726,372,1.436]],["body/components/ResultsBrowserItemComponent.html",[3,0.111,4,0.058,5,0.058,8,1.077,11,0.007,12,0.31,15,1.998,17,0.008,19,0.468,23,0.058,26,3.085,36,1.699,37,4.249,41,3.898,42,2.445,43,2.556,44,2.346,47,1.574,48,1.476,49,1.83,51,2.373,53,0.725,55,1.129,56,4.088,65,1.298,68,1.507,89,2.726,93,2.726,99,0.005,100,0.007,101,1.3,102,1.256,103,1.61,104,1.229,105,1.284,106,1.342,107,1.153,112,4.036,114,1.956,117,3.116,118,2.324,120,1.871,122,1.913,127,1.233,128,0.998,129,1.408,131,2.045,136,2.535,148,1.312,150,0.232,151,0.441,152,1.912,169,1.256,173,1.256,177,1.256,179,0.124,183,1.039,193,1.756,197,1.365,199,1.582,205,1.184,215,4.167,224,1.762,236,2.28,248,3.103,268,2.916,269,1.972,271,2.229,272,1.543,273,3.644,274,2.258,279,1.805,280,2.683,281,2.254,284,2.2,285,2.103,289,2.103,290,1.153,292,3.494,293,2.035,295,2.103,300,1.665,301,2.647,302,2.503,317,0.662,318,1.752,319,1.83,320,1.342,321,2.43,322,1.342,323,1.342,324,1.256,325,1.342,326,1.256,327,1.342,328,1.256,329,1.358,330,1.342,331,1.256,332,1.284,333,1.342,334,1.256,335,1.342,336,1.256,337,1.342,338,1.256,339,1.342,340,1.256,341,2.229,342,1.342,343,1.256,344,1.913,345,1.256,346,1.312,347,1.342,348,1.256,349,1.752,350,1.913,351,1.256,352,1.342,353,1.256,354,1.342,355,1.256,356,1.256,357,1.342,358,1.256,359,1.342,360,1.256,361,1.913,362,1.256,363,1.342,364,1.256,365,1.342,366,1.256,367,1.342,368,1.284,369,1.342,370,2.086,371,1.342,372,2.274,373,1.342,374,1.256,375,1.256,376,1.342,377,1.256,378,1.256,379,1.342,380,1.342,430,5.126,476,0.905,498,0.782,546,1.805,723,2.313,724,2.373,734,2.695,736,1.471,745,2.728,746,2.938,763,2.346,765,3.494,769,5.126,1169,3.218,1283,4.607,1300,3.345,1313,3.232,1314,2.647,1316,3.486,1317,2.445,1318,2.831,1378,2.177,1380,2.177,1392,3.53,1545,2.573,1547,4.289,1611,3.232,1618,5.368,1640,2.445,1651,4.703,1662,2.556,2327,3.232,2330,2.177,2439,5.032,2458,6.392,3046,4.607,3054,3.53,3078,5.032,3166,3.53,3167,3.232,4069,5.449,4122,3.53,4126,5.852,4127,3.983,4128,6.616,4129,5.678,4130,7.212,4131,6.616,4132,3.983,4133,6.392,4134,3.983,4135,5.678,4136,3.983,4137,5.678,4138,5.678,4139,5.678,4140,3.983,4141,5.678,4142,5.678,4143,5.678,4144,3.983,4145,3.983,4146,3.983,4147,3.983,4148,3.983,4149,3.983,4150,3.983,4151,3.983,4152,3.983]],["title/modules/ResultsBrowserItemModule.html",[381,0.651,4153,3.236]],["body/modules/ResultsBrowserItemModule.html",[3,0.097,4,0.097,5,0.097,11,0.006,17,0.008,23,0.097,99,0.007,100,0.007,136,2.365,150,0.361,151,0.739,179,0.208,204,1.973,317,1.109,372,2.996,381,0.954,383,1.892,384,1.892,385,2.573,386,1.973,387,1.973,388,2.573,403,2.259,404,1.778,406,2.059,407,2.406,408,4.355,409,3.41,430,4.743,444,2.745,445,2.248,4069,5.042,4126,5.415,4153,6.573,4154,5.915,4155,5.915,4156,5.915,4157,6.674,4158,6.674]],["title/modules/ResultsBrowserModule.html",[381,0.651,401,3.236]],["body/modules/ResultsBrowserModule.html",[3,0.095,4,0.095,5,0.095,11,0.005,17,0.008,23,0.095,99,0.007,100,0.007,136,2.186,150,0.367,151,0.724,179,0.204,204,1.935,317,1.088,370,2.989,381,0.936,383,1.855,384,1.855,385,2.551,386,1.935,387,1.935,388,2.551,401,6.648,403,2.232,404,1.743,406,2.43,407,2.379,430,5.597,444,2.713,445,2.205,4069,4.944,4112,5.801,4126,5.311,4153,6.474,4159,5.801,4160,5.801,4161,6.545,4162,5.801,4163,6.545,4164,6.545,4165,6.545,4166,7.875]],["title/components/SchemeDropdownComponent.html",[101,0.726,374,1.436]],["body/components/SchemeDropdownComponent.html",[3,0.092,4,0.053,5,0.053,8,0.541,11,0.003,12,0.571,13,0.631,15,2.219,17,0.008,18,1.3,19,0.633,20,1.391,22,3.238,23,0.053,47,1.328,48,1.358,49,2.225,53,0.801,55,1.027,65,1.231,69,2.611,86,3.404,87,0.578,99,0.004,100,0.005,101,0.999,102,1.143,103,1.504,104,1.118,105,1.168,106,1.221,107,1.049,114,1.855,117,3.094,118,2.305,120,1.748,122,1.787,127,1.363,128,0.908,129,1.634,136,1.006,144,3.417,148,1.194,150,0.217,151,0.401,169,1.143,173,1.143,177,1.143,179,0.113,193,1.598,197,1.275,199,1.44,205,1.44,224,2.479,238,3.773,239,3.578,252,1.448,268,3.494,269,1.794,270,2.135,271,2.586,275,2.691,277,1.515,279,2.403,281,2.492,283,2.765,284,2.055,286,1.69,289,1.914,290,1.049,291,4.464,295,2.801,296,1.69,297,1.981,299,2.547,300,3.207,301,1.69,302,1.598,306,1.914,307,3.256,308,3.556,309,3.312,311,2.941,317,0.603,318,1.637,319,1.709,320,1.221,321,2.326,322,1.221,323,1.221,324,1.143,325,1.221,326,1.143,327,1.221,328,1.143,329,1.445,330,1.221,331,1.143,332,1.168,333,1.221,334,1.143,335,1.221,336,1.143,337,1.221,338,1.143,339,1.221,340,1.143,341,2.113,342,1.221,343,1.143,344,1.787,345,1.143,346,1.194,347,1.221,348,1.143,349,2.13,350,1.787,351,1.143,352,1.221,353,1.143,354,1.221,355,1.143,356,1.143,357,1.221,358,1.143,359,1.221,360,1.143,361,1.787,362,1.143,363,1.221,364,1.143,365,1.221,366,1.143,367,1.221,368,1.168,369,1.221,370,1.143,371,1.221,372,1.143,373,1.221,374,2.177,375,1.143,376,1.221,377,1.143,378,1.143,379,1.221,380,1.221,404,1.413,453,2.441,474,0.908,476,0.578,498,1.041,530,2.217,632,2.941,716,2.338,723,2.16,724,2.217,734,2.555,736,2.55,745,2.373,746,2.16,847,4.51,1108,2.326,1287,3.212,1294,4.739,1314,3.866,1331,1.642,1340,3.683,1358,2.801,1371,3.851,1373,3.212,1374,2.576,1375,4.025,1378,2.899,1379,2.71,1380,2.899,1381,2.738,1411,5.09,1519,4.025,1522,4.007,1526,4.304,1537,5.09,1550,3.77,1604,2.225,1605,2.441,1606,3.77,1607,2.576,1608,2.441,1609,2.441,1611,2.941,1612,2.055,1616,3.212,1619,4.304,1766,2.135,2131,5.601,2132,5.559,2133,4.701,2147,2.941,2156,2.738,2166,2.941,2174,2.055,2330,1.981,3042,4.739,3175,6.432,3744,5.559,3752,6.118,4123,4.701,4167,7.026,4168,3.625,4169,5.304,4170,6.273,4171,5.304,4172,4.304,4173,3.625,4174,3.625,4175,3.625,4176,3.625,4177,5.304,4178,3.625,4179,5.304,4180,3.625,4181,2.738,4182,3.625,4183,3.625,4184,3.625,4185,3.625,4186,3.625,4187,3.625,4188,3.625,4189,3.625,4190,3.625,4191,3.625,4192,3.625,4193,3.625,4194,8.428,4195,5.304]],["title/modules/SchemeDropdownModule.html",[381,0.651,3172,3.236]],["body/modules/SchemeDropdownModule.html",[3,0.094,4,0.094,5,0.094,11,0.005,17,0.008,22,2.834,23,0.094,99,0.006,100,0.005,150,0.376,151,0.712,179,0.2,204,1.901,224,1.713,317,1.069,374,2.983,381,0.919,383,1.823,384,1.823,385,2.532,386,1.901,387,1.901,388,2.532,403,2.209,404,1.713,406,2.404,407,2.353,444,2.685,445,2.166,1331,2.914,1332,4.857,1382,6.11,1630,5.699,2186,5.886,2187,4.857,2188,6.322,2189,5.217,2190,5.699,3172,6.629,3175,5.217,4167,5.699,4181,4.857,4196,5.699,4197,5.699,4198,6.43,4199,5.699,4200,6.43,4201,7.791,4202,6.43]],["title/interfaces/SearchResult.html",[0,0.282,3765,3.44]],["body/interfaces/SearchResult.html",[0,0.369,2,0.8,3,0.049,4,0.049,5,0.049,8,0.497,11,0.006,12,0.652,13,0.592,15,2.564,16,1.314,17,0.008,18,1.247,19,0.636,20,0.737,23,0.109,28,1.722,36,1.405,57,1.959,65,1.714,99,0.004,100,0.007,107,2.052,119,3.939,128,1.493,131,0.943,132,2.698,137,3.259,141,1.965,150,0.343,151,0.368,153,1.466,154,3.047,156,1.507,179,0.104,180,2.055,181,2.255,183,2.324,194,1.597,205,1.244,212,2.698,216,2.284,219,1.423,236,1.146,237,3.621,240,4.324,247,1.675,248,1.818,249,3.149,259,1.885,455,1.801,472,1.289,476,0.95,498,1.513,508,4.11,521,3.086,593,1.321,631,2.364,704,3.827,736,2.202,755,2.134,756,1.699,765,3.149,806,5.3,838,2.932,843,4.566,847,2.041,849,1.427,850,3.193,878,1.715,1006,1.885,1134,2.542,1299,2.512,1347,2.628,1545,1.507,1556,2.364,1641,2.041,1739,2.512,1909,2.698,1922,2.255,1942,2.512,1944,2.134,1954,3.759,2036,1.699,2043,2.512,2049,2.512,2059,2.24,2071,2.512,2174,1.885,2222,3.759,2330,2.72,2420,4.596,2424,2.512,2433,4.773,2463,6.035,2552,2.24,2559,2.041,2768,4.038,2956,2.24,2980,2.364,2987,2.24,3271,2.364,3302,3.055,3337,2.134,3431,2.698,3576,2.24,3733,2.041,3740,2.698,3757,3.537,3760,4.038,3763,2.698,3765,4.505,3799,2.698,3818,2.698,3834,2.698,3835,2.698,3836,2.947,3837,2.947,3838,2.512,3842,2.947,3844,4.41,3845,4.248,3847,5.285,3848,2.947,3850,2.947,3851,2.947,3852,7.428,3854,2.947,3855,2.947,3856,4.41,3857,2.947,3858,2.947,3860,2.947,3861,2.947,3864,2.947,3865,2.947,3866,4.41,3868,2.947,3869,2.947,3870,2.512,3871,2.947,3872,2.947,3873,2.947,3874,2.947,3875,4.41,3876,2.947,3877,2.512,3878,4.459,3879,2.947,3880,4.41,3881,6.593,3882,2.24,3883,4.038,3884,2.698,3885,2.947,3886,6.282,3887,3.759,3888,3.759,3889,2.947,3890,2.947,3891,4.41,3892,2.947,3893,2.947,3894,2.947,3895,2.947,3896,2.947,3897,2.947,3898,2.947,3899,2.947,3900,2.947,3901,2.947,3902,2.947,3903,2.947,3904,5.867,3905,2.947,3906,2.947,3907,2.947,3908,5.285,3909,5.285,3910,4.41,3911,2.947,3912,2.947,3913,4.41,3914,2.947,3915,5.285,3916,2.947,3917,2.698,3918,2.947,3919,2.947,3920,2.947,3921,2.947,3922,2.947,3923,2.947,3924,2.947,3925,2.947,3926,2.947,3927,2.947,3928,2.947,3929,2.947,3930,2.947,3931,2.947,3932,2.947,3933,4.41,3934,2.947,3935,2.947,3936,2.947,3937,2.947,3938,2.947,3939,2.947,3940,2.947,3941,2.947,3942,2.947,3943,2.947,3944,2.947,3945,2.947,3946,4.41,3947,2.947,3948,4.41,3949,4.41,3950,4.41,3951,4.41,3952,2.947,3953,2.947,3954,2.947,3955,2.947,3956,2.947,3957,2.947,3958,4.41,3959,4.41,3960,2.947,3961,2.698,3962,2.947,3963,2.947]],["title/interfaces/SearchableItem.html",[0,0.282,58,2.922]],["body/interfaces/SearchableItem.html",[0,0.531,1,2.452,2,1.154,3,0.07,4,0.07,5,0.07,6,1.547,7,3.233,8,1.091,9,3.532,10,4.429,11,0.007,12,0.373,13,0.769,14,3.233,15,2.537,16,1.418,17,0.008,18,1.698,19,0.737,20,1.432,21,3.233,22,2.116,23,0.123,24,2.7,25,2.828,26,3.013,27,3.422,28,1.896,29,2.721,30,3.233,31,3.233,32,2.828,33,2.006,34,3.541,35,3.08,36,1.721,37,3.807,38,3.08,39,3.08,40,2.946,41,2.828,42,2.946,43,3.08,44,2.828,45,3.993,46,1.756,47,1.32,48,0.85,49,1.547,50,3.412,51,2.006,52,2.623,53,0.613,54,2.946,55,1.832,56,3.663,57,3.807,58,4.147,59,4.484,60,4.623,61,4.603,62,4.603,63,4.866,64,5.27,65,1.433,66,3.732,67,4.623,68,2.763,69,1.815,70,2.534,71,2.721,72,2.534,73,2.461,74,2.721,75,4.147,76,2.946,77,2.946,78,3.663,79,3.663,80,2.623,81,3.08,82,1.481,83,2.238,84,2.623,85,2.946,86,3.08,87,1.409,88,3.233,89,2.305,90,2.946,91,3.08,92,2.116,93,3.102,94,2.828,95,2.831,96,2.828,97,2.238,98,3.08,99,0.005,100,0.004]],["title/interfaces/SpatialEntity.html",[0,0.282,816,2.489]],["body/interfaces/SpatialEntity.html",[0,0.431,2,1.056,3,0.064,4,0.102,5,0.11,6,1.415,8,0.656,11,0.004,12,0.341,13,0.724,15,2.47,16,1.428,17,0.008,18,1.789,19,0.775,23,0.102,27,3.331,28,1.777,36,1.774,53,1.108,70,2.319,83,3.51,84,4.851,87,1.472,99,0.005,100,0.004,217,3.902,236,2.724,261,4.096,329,1.418,551,5.325,555,3.211,639,4.832,816,4.321,955,5.813,959,4.096,961,4.322,1009,3.583,1115,4.322,1406,2.244,1613,4.321,2554,3.121,2840,6.362,2842,5.352,3256,4.322,3302,2.696,3329,4.594,3337,3.902,3659,5.973,3662,5.973,3688,5.688,3689,5.688,3690,5.688,3694,5.688,3696,5.688,3698,5.688,3700,5.688,3702,3.318,3703,3.318,3704,3.318,3705,3.318,3706,3.318,3708,3.318,3710,3.318,3712,3.318,3714,3.318,3716,3.318,3718,3.318,3720,3.318,3722,3.318,3724,3.318,4203,3.563,4204,3.563,4205,4.934,4206,5.66,4207,6.415,4208,7.438,4209,3.563,4210,3.563,4211,3.563,4212,3.563,4213,6.109,4214,5.66,4215,3.563,4216,3.563,4217,3.563,4218,6.109]],["title/interfaces/SpatialObjectReference.html",[0,0.282,955,3.236]],["body/interfaces/SpatialObjectReference.html",[0,0.457,2,1.179,3,0.072,4,0.108,5,0.13,6,1.58,8,0.732,11,0.004,12,0.381,13,0.78,15,1.98,16,1.423,17,0.008,18,1.756,19,0.76,23,0.108,27,3.346,28,1.836,36,1.935,53,1.12,70,2.589,83,3.443,84,4.718,87,1.044,99,0.005,100,0.004,217,3.147,236,2.544,261,3.303,329,0.924,551,5.309,555,3.461,639,3.147,816,4.308,849,2.104,955,5.839,959,4.415,961,4.659,1009,2.889,1115,3.485,1406,2.505,1613,4.308,2554,4.659,2840,5.839,2842,3.485,3256,3.485,3302,3.01,3329,3.705,3337,3.147,3659,6.206,3662,5.955,3688,3.705,3689,3.705,3690,3.705,3694,3.705,3696,3.705,3698,3.705,3700,3.705,3702,3.705,3703,3.705,3704,3.705,3705,3.705,3706,3.705,3708,3.705,3710,3.705,3712,3.705,3714,3.705,3716,3.705,3718,3.705,3720,3.705,3722,3.705,3724,3.705,4203,3.979,4204,3.979,4205,3.979,4206,5.319,4207,6.396,4208,7.438,4209,6.396,4210,5.319,4211,6.396,4212,3.979,4213,6.396,4214,5.991,4215,3.979,4216,3.979,4217,3.979,4218,6.396]],["title/interfaces/SpatialPlacement.html",[0,0.282,959,3.067]],["body/interfaces/SpatialPlacement.html",[0,0.424,2,1.024,3,0.062,4,0.121,5,0.108,6,1.372,8,0.636,11,0.004,12,0.331,13,0.708,15,1.798,16,1.416,17,0.008,18,1.797,19,0.779,23,0.1,27,3.184,28,1.759,36,1.617,53,1.062,70,3.143,83,2.775,84,4.772,87,1.184,99,0.005,100,0.004,217,2.732,236,2.364,261,2.868,329,0.802,551,5.6,555,4.277,639,2.732,816,4.636,955,5.757,959,4.622,961,5.281,1009,2.508,1115,3.026,1406,3.041,1613,4.544,2554,3.026,2840,5.557,2842,3.026,3256,3.026,3302,3.654,3329,3.217,3337,2.732,3659,6.595,3662,6.281,3688,3.217,3689,3.217,3690,3.217,3694,3.217,3696,3.217,3698,3.217,3700,3.217,3702,5.613,3703,5.613,3704,5.613,3705,5.613,3706,5.613,3708,5.613,3710,5.613,3712,5.613,3714,5.613,3716,5.613,3718,5.613,3720,5.613,3722,5.613,3724,5.613,4203,3.455,4204,3.455,4205,3.455,4206,5.567,4207,6.746,4208,7.584,4209,3.455,4210,3.455,4211,3.455,4212,4.829,4213,6.883,4214,6.572,4215,4.829,4216,6.028,4217,4.829,4218,6.883]],["title/interfaces/SpatialSceneNode.html",[0,0.282,480,2.581]],["body/interfaces/SpatialSceneNode.html",[0,0.261,2,1.016,3,0.086,4,0.062,5,0.062,6,1.363,11,0.004,12,0.329,13,0.705,16,1.398,17,0.008,18,1.718,19,0.756,23,0.086,28,1.802,36,1.955,46,2.138,53,0.54,69,2.24,87,1.466,95,1.638,99,0.005,100,0.004,125,1.305,128,1.059,141,1.393,145,2.21,150,0.34,179,0.132,205,0.882,216,1.909,219,1.409,236,1.457,240,2.093,247,1.694,252,1.71,253,1.25,282,2.491,329,1.468,450,3.194,454,2.848,456,4.209,476,1.089,480,4.42,512,2.396,513,4.753,514,2.595,525,3.859,530,1.767,544,3.282,545,3.237,546,2.683,561,4.474,565,2.524,578,3.017,593,2.715,599,3.194,603,3.005,604,1.767,605,5.249,606,1.863,607,3.747,609,3.747,610,3.747,612,3.747,616,3.747,617,5.249,618,6.058,619,3.43,620,2.848,621,3.747,622,3.43,623,5.249,624,3.747,625,3.43,626,6.058,627,3.43,628,5.249,629,3.43,630,3.747,631,3.005,632,3.43,633,3.747,634,3.747,635,3.747,636,3.747,637,3.747,638,3.747,639,4.753,640,5.595,641,6.268,642,5.89,643,5.89,644,6.268,645,5.595,646,5.595,647,5.89,648,5.595,649,4.363,650,1.916,651,5.249,652,5.249,653,1.971,654,3.747,655,3.747,656,3.747,657,6.058,658,3.747,659,3.747,660,5.249,661,3.747,662,3.747,663,3.747,664,5.249,665,4.209,666,5.249,667,3.43,668,3.747,669,2.232,670,3.747,671,6.058,672,3.747,673,3.747,674,3.747,675,3.747,676,3.194,677,5.249,678,5.249,679,3.747,680,5.249,681,5.595,682,3.747,683,5.249,684,3.747,685,3.194,686,2.713,687,3.747,688,3.747,689,3.747,690,3.747,691,5.249,692,6.058,693,6.058,694,5.249,695,5.249,696,5.249,697,3.747,698,3.747,699,3.747,700,3.747,701,3.747,702,3.747,703,3.747,704,2.713,705,3.747,706,3.747,707,3.194,708,3.747,709,3.747,710,3.194,711,3.747,712,3.747,713,3.747]],["title/interfaces/SpatialSceneNode-1.html",[0,0.235,253,1.121,480,2.15]],["body/interfaces/SpatialSceneNode-1.html",[0,0.231,2,1.305,3,0.055,4,0.055,5,0.055,6,1.206,11,0.005,12,0.291,13,0.646,16,1.369,17,0.008,18,1.653,19,0.744,23,0.079,28,1.616,45,2.045,46,2.09,61,3.198,62,3.198,66,1.912,73,2.614,74,3.077,83,2.531,87,1.443,90,2.297,99,0.005,100,0.003,118,1.332,127,1.388,128,2.054,145,2.325,150,0.318,152,1.797,179,0.117,219,1.46,237,1.912,240,2.687,247,1.739,252,2.081,253,2.295,272,1.45,329,1.678,472,1.45,476,0.865,480,4.928,513,4.497,514,2.297,525,4.537,555,1.976,578,3.34,639,4.775,640,6.315,641,6.315,642,5.621,643,5.621,644,5.621,645,5.621,646,6.048,647,5.621,648,5.621,676,2.827,685,4.101,707,2.827,710,5.621,763,3.763,765,4.414,769,5.941,792,3.483,793,2.659,815,2.659,816,4.067,845,2.827,850,2.401,864,2.52,871,2.659,872,1.912,929,3.858,950,2.827,967,3.036,977,2.659,978,3.036,983,6.037,985,3.036,986,2.827,987,3.036,988,3.036,1006,2.121,1008,3.036,1033,3.316,1040,3.316,1042,3.316,1044,3.316,1046,3.316,1049,3.316,1050,4.811,1052,2.659,1053,6.594,1054,4.811,1055,3.316,1056,3.316,1057,3.316,1058,6.211,1059,6.594,1060,4.811,1061,4.811,1062,7.096,1063,3.316,1064,4.811,1065,3.316,1066,3.316,1067,3.316,1068,2.827,1069,3.316,1070,3.316,1071,3.316,1072,3.316,1073,3.316,1074,3.036,1075,3.316,1076,3.316,1077,4.811,1078,3.316,1079,3.316,1080,7.268,1081,4.404,1082,4.811,1083,4.811,1084,4.404,1085,4.811,1086,3.316,1087,4.811,1088,3.316,1089,4.811,1090,4.811,1091,3.316,1092,3.316,1093,3.316,1094,3.316,1095,3.316,1096,3.316,1097,3.316,1098,3.316,1099,3.316,1100,3.858,1101,3.316,1102,6.594,1103,4.811,1104,3.316,1105,3.316,1106,3.316,1107,4.811,1108,4.497,1109,3.316,1110,3.316,1111,3.316,1112,4.101,1113,2.297,1114,3.316,1115,2.659,1116,3.316,1117,3.316,1118,3.316,1119,3.316,1120,3.316,1121,1.797,1122,3.316,1123,3.316,1124,3.316,1125,3.316,1126,3.316,1127,3.316,1128,3.316]],["title/components/SpinnerOverlayComponent.html",[101,0.726,375,1.436]],["body/components/SpinnerOverlayComponent.html",[3,0.104,4,0.066,5,0.066,8,1.196,11,0.004,12,0.485,16,0.931,17,0.008,19,0.376,20,1.382,23,0.066,47,1.447,48,1.464,49,1.467,53,0.796,55,1.29,65,1.395,82,1.923,87,1.218,93,2.185,99,0.005,100,0.006,101,1.276,102,1.435,103,1.767,104,1.405,105,1.467,106,1.533,107,1.318,114,2.102,117,3.145,118,2.347,120,2.053,122,2.1,125,1.405,127,1.354,128,1.14,129,1.513,136,1.264,147,5.807,148,3.034,150,0.186,151,0.504,169,1.435,173,1.435,177,1.435,179,0.249,224,1.893,252,1.439,253,1.843,268,2.747,269,2.253,270,2.681,271,1.533,272,2.415,274,2.58,277,1.902,279,2.062,280,4.198,281,1.346,282,4.871,283,2.006,284,1.764,286,2.122,290,1.318,291,3.085,299,2.185,302,2.747,305,2.681,306,3.291,307,2.794,312,3.066,317,0.757,318,2.359,319,2.009,320,1.533,321,2.575,322,1.533,323,1.533,324,1.435,325,1.533,326,1.435,327,1.533,328,1.435,329,1.44,330,1.533,331,1.435,332,1.467,333,1.533,334,1.435,335,1.533,336,1.435,337,1.533,338,1.435,339,1.533,340,1.435,341,2.395,342,1.533,343,1.435,344,2.1,345,1.435,346,1.5,347,1.533,348,1.435,349,1.923,350,2.1,351,1.435,352,1.533,353,1.435,354,1.533,355,1.435,356,1.435,357,1.533,358,1.435,359,1.533,360,1.435,361,2.1,362,1.435,363,1.533,364,1.435,365,1.533,366,1.435,367,1.533,368,1.467,369,1.533,370,1.435,371,1.533,372,1.435,373,1.533,374,1.435,375,2.411,376,1.533,377,1.435,378,1.435,379,1.533,380,1.533,404,1.66,433,6.203,565,2.302,723,2.539,745,2.688,1113,2.794,1132,3.906,1297,4.708,1314,2.122,1347,3.291,1391,4.43,1395,3.533,1396,3.533,1408,2.58,1612,2.58,1613,2.488,1615,3.235,1665,5.37,1702,4.708,1751,3.235,1770,3.235,1771,3.235,1800,3.235,1837,3.672,1878,4.708,2164,4.708,2330,4.78,4219,6.775,4220,4.551,4221,6.233,4222,7.108,4223,6.233,4224,4.551,4225,6.233,4226,4.551,4227,6.233,4228,4.551,4229,4.551,4230,4.551,4231,4.551]],["title/modules/SpinnerOverlayModule.html",[381,0.651,402,3.236]],["body/modules/SpinnerOverlayModule.html",[3,0.098,4,0.098,5,0.098,11,0.006,17,0.008,23,0.098,99,0.007,100,0.006,148,2.636,150,0.362,151,0.744,179,0.209,204,1.987,317,1.117,375,2.999,381,0.961,383,1.905,384,1.905,385,2.58,386,1.987,387,1.987,388,2.58,402,6.582,403,2.268,404,1.79,406,2.074,407,2.417,433,5.453,444,2.757,445,2.264,4219,5.957,4232,5.957,4233,5.957,4234,5.957,4235,6.721,4236,8.001,4237,6.721,4238,6.721]],["title/modules/StoreModule.html",[381,0.651,1905,3.236]],["body/modules/StoreModule.html",[3,0.095,4,0.095,5,0.095,11,0.005,17,0.008,23,0.114,33,2.72,36,1.534,99,0.007,100,0.005,150,0.38,151,0.72,167,5.287,179,0.203,182,4.917,219,1.105,237,3.325,381,0.931,383,1.845,406,2.009,407,2.371,756,3.325,1186,3.69,1905,5.579,1942,4.917,1943,5.769,1961,5.769,2036,3.325,2892,5.281,2900,5.929,3214,5.579,3281,5.769,3845,5.037,4239,6.509,4240,6.509,4241,5.769,4242,6.509,4243,6.509,4244,6.509,4245,6.509,4246,6.509,4247,6.509,4248,6.509,4249,6.509,4250,6.509,4251,6.509,4252,6.509,4253,6.509,4254,6.509,4255,6.509,4256,6.509,4257,6.509,4258,6.509,4259,6.509,4260,6.509,4261,6.509,4262,6.509]],["title/modules/ThemingModule.html",[381,0.651,1906,3.236]],["body/modules/ThemingModule.html",[3,0.1,4,0.1,5,0.1,11,0.006,17,0.008,23,0.1,99,0.007,100,0.006,145,1.952,150,0.332,151,0.762,164,6.55,179,0.215,204,2.036,317,1.145,381,0.984,383,1.952,384,1.952,385,2.08,386,2.036,387,2.552,388,2.08,403,2.301,404,1.834,407,2.452,437,5.588,438,5.588,1906,6.55,4263,6.103,4264,6.103,4265,6.886,4266,8.117,4267,6.886,4268,6.886,4269,6.886]],["title/injectables/ThemingService.html",[164,3.236,1922,1.722]],["body/injectables/ThemingService.html",[3,0.061,4,0.061,5,0.061,8,1.159,11,0.003,12,0.325,13,0.699,16,1.353,17,0.008,19,0.696,20,0.926,23,0.086,53,0.991,68,2.221,70,3.1,71,3.328,82,1.812,87,1.385,99,0.005,100,0.003,101,1.425,103,1.664,119,2.133,127,1.834,129,1.851,147,3.955,150,0.24,151,0.462,164,4.173,179,0.279,180,2.023,183,2.025,185,6.879,191,4.763,197,1.412,205,1.814,219,1.404,231,7.681,238,4.614,247,1.6,259,4.785,279,3.338,386,1.736,435,3.701,455,2.736,470,1.376,474,1.944,476,1.174,498,1.579,522,2.367,606,2.993,825,5.977,878,2.674,887,2.68,925,3.537,1132,4.312,1296,5.228,1299,6.081,1545,2.66,1556,4.173,1721,4.173,1735,5.203,1759,3.701,1760,3.701,1768,2.968,1858,3.459,1914,3.154,1922,2.221,1923,2.46,1998,4.173,2059,3.955,2248,5.203,2271,3.388,2421,5.977,2922,3.388,3287,2.813,3552,2.968,3559,2.968,4270,4.176,4271,5.871,4272,8.269,4273,5.871,4274,7.366,4275,5.871,4276,7.366,4277,5.871,4278,4.176,4279,4.176,4280,5.871,4281,4.176,4282,5.871,4283,7.761,4284,4.176,4285,5.871,4286,8.58,4287,4.176,4288,5.871,4289,5.871,4290,4.176,4291,4.176,4292,5.871,4293,4.176,4294,4.176,4295,5.871,4296,4.176,4297,4.176,4298,4.176,4299,4.176,4300,4.176,4301,4.176,4302,4.176,4303,4.176,4304,4.176,4305,7.366,4306,5.871,4307,4.176,4308,4.176,4309,6.79,4310,4.176,4311,5.871,4312,4.176,4313,4.176,4314,4.176,4315,4.176,4316,4.176,4317,4.176,4318,4.176,4319,4.176]],["title/interfaces/TiffInfo.html",[0,0.282,1142,2.682]],["body/interfaces/TiffInfo.html",[0,0.438,2,1.328,3,0.125,4,0.103,5,0.081,6,1.781,11,0.005,12,0.43,13,0.844,16,1.357,17,0.008,18,1.608,19,0.733,23,0.125,34,4.151,47,1.414,48,1.255,87,1.129,95,2.747,99,0.006,100,0.005,127,1.2,150,0.226,216,2.284,219,1.449,247,1.854,606,3.124,650,3.212,653,3.98,763,3.255,765,4.75,872,2.823,1121,2.653,1136,4.61,1138,3.132,1139,4.549,1140,4.176,1141,4.804,1142,4.863,1143,4.804,1240,3.132,1768,3.927,2050,4.174,2769,6.209,2938,4.174,3344,4.174,3608,4.174,3609,4.897,3610,4.897,3611,6.282,3612,6.35,3613,4.483,3614,4.483,3615,4.483,3616,4.483,3617,4.483,3618,4.483,3619,4.483,3620,4.483,3621,4.483,3622,4.897,3623,7.742,3624,4.897,3625,4.897,3626,4.897,3627,4.897,3628,4.897,3629,4.897,3630,4.897,3631,4.897,3632,4.897,3633,4.483,3634,4.897,3635,4.897,3636,4.897,3637,4.897,3638,4.897,3639,4.897,3640,4.897,3641,4.897,3642,4.897,3643,4.897,3644,4.897,3645,4.897,3646,4.897]],["title/components/ToggleButtonComponent.html",[101,0.726,377,1.436]],["body/components/ToggleButtonComponent.html",[3,0.086,4,0.048,5,0.048,8,0.88,11,0.003,12,0.253,13,0.583,16,0.732,17,0.008,19,0.541,20,1.453,23,0.048,33,3.433,46,1.576,47,1.27,48,1.307,49,1.58,53,0.943,55,0.924,65,1.156,82,2.022,87,0.781,99,0.004,100,0.005,101,1.285,102,1.028,103,1.39,104,1.006,105,1.05,106,1.098,107,0.944,114,2.725,117,3.067,118,2.299,120,1.615,122,1.651,125,1.006,127,1.424,128,0.816,129,1.776,131,1.39,136,0.905,141,1.615,145,1.67,148,1.074,150,0.268,151,0.361,153,1.437,169,1.028,173,1.028,177,2.216,179,0.219,180,1.689,181,1.854,183,1.71,192,2.888,193,2.161,194,2.354,197,1.179,199,2.603,205,1.54,219,1,224,1.569,247,1.424,271,1.098,277,3.369,279,2.221,281,0.964,290,2.609,291,1.613,296,4.058,297,1.781,300,2.049,301,1.52,302,1.437,317,0.542,318,2.022,319,1.58,320,1.098,321,2.208,322,1.098,323,1.098,324,1.028,325,1.098,326,1.028,327,1.098,328,1.028,329,1.234,330,1.098,331,1.028,332,1.05,333,1.098,334,1.028,335,1.098,336,1.028,337,1.098,338,1.028,339,1.098,340,1.028,341,1.985,342,1.098,343,1.028,344,1.651,345,1.028,346,1.074,347,1.098,348,1.028,349,1.513,350,1.651,351,1.028,352,1.098,353,1.028,354,1.098,355,1.028,356,1.028,357,1.098,358,1.028,359,1.098,360,1.028,361,1.651,362,1.028,363,1.098,364,1.028,365,1.098,366,1.028,367,1.098,368,1.05,369,1.098,370,1.028,371,1.098,372,1.028,373,1.098,374,1.028,375,1.028,376,1.098,377,2.066,378,1.028,379,1.098,380,1.098,455,2.481,470,1.074,474,1.228,476,0.781,498,1.449,503,3.898,544,1.565,546,1.477,565,2.176,649,1.92,716,2.888,717,3.969,722,4.414,786,2.001,849,2.103,878,1.689,1006,1.847,1108,2.092,1314,1.52,1344,2.779,1358,2.588,1376,2.679,1378,1.781,1395,2.779,1396,2.779,1408,1.847,1521,3.348,1545,2.221,1610,5.317,1612,1.847,1689,3.34,1692,3.901,1695,1.613,1698,5.786,1699,3.977,1700,3.715,1702,3.703,1705,4.658,1706,4.658,1708,2.504,1709,3.01,1710,3.484,1713,3.654,1717,3.703,1718,3.703,1719,3.703,1725,3.484,1743,4.451,1744,3.703,1751,2.317,1755,2.462,1765,3.861,1766,4.914,1770,2.317,1771,2.317,1776,2.644,1778,2.644,1779,2.462,1784,2.644,1787,2.462,1800,2.317,1815,3.302,1823,3.977,1825,3.977,1826,3.977,1832,4.702,1835,5.99,1854,2.644,1860,2.092,1895,2.888,2128,7.491,2173,5.317,2231,3.703,2461,2.889,3051,4.344,3246,2.889,3249,5.222,3250,4.344,3445,2.889,3450,2.889,3451,2.889,3452,5.222,3469,4.344,3496,2.889,3500,4.344,3511,6.543,3512,6.543,4320,8.452,4321,4.902,4322,3.259,4323,4.902,4324,7.382,4325,3.259,4326,3.259,4327,4.902,4328,3.259,4329,3.259,4330,3.259,4331,3.259,4332,3.259,4333,3.259,4334,3.259,4335,3.259,4336,3.259,4337,3.259,4338,3.259,4339,3.259,4340,3.259,4341,3.259,4342,3.259,4343,3.259,4344,3.259,4345,3.259,4346,4.902,4347,3.259,4348,4.902,4349,3.259]],["title/interfaces/ValueObject.html",[0,0.282,2954,3.44]],["body/interfaces/ValueObject.html",[0,0.531,2,1.243,3,0.075,4,0.075,5,0.075,8,0.772,11,0.004,12,0.402,13,0.808,15,2.431,16,1.249,17,0.008,19,0.427,20,2.023,22,3.684,23,0.117,28,1.9,51,3.168,53,1.068,65,1.64,99,0.006,100,0.004,150,0.278,154,2.642,183,1.349,216,2.765,219,1.538,247,1.123,472,2.631,498,1.015,508,3.888,521,4,604,2.161,754,4.941,1300,5.489,2420,3.469,2433,3.318,2552,6.404,2559,3.174,2678,3.483,2950,5.726,2951,4.195,2952,4.195,2953,6.531,2954,6.081,2955,4.195,2956,4.573,2957,5.509,2958,5.509,2959,5.388,2960,5.509,2961,4.195,2962,6.783,2963,6.783,2964,5.509,2965,4.195,2966,4.195,2967,6.151,2968,4.195,2969,4.195,2970,4.195,2971,4.195,2972,5.509,2973,4.195,2974,4.195,2975,4.195,2976,4.195,2977,4.195,2978,4.195,2979,4.195,2980,3.675,2981,5.509,2982,4.195,2983,4.195,2984,4.195,2985,4.195,2986,4.195,2987,3.483,2988,4.195]],["title/components/ViewerComponent.html",[101,0.726,378,1.436]],["body/components/ViewerComponent.html",[3,0.1,4,0.045,5,0.045,11,0.004,12,0.363,13,0.557,16,1.076,17,0.008,18,1.412,19,0.703,20,1.662,23,0.045,28,0.665,34,2.118,47,1.485,48,1.557,53,0.92,55,0.868,65,1.113,68,1.768,72,1.617,87,1.011,92,3.177,95,2.46,99,0.004,100,0.005,101,0.904,102,0.965,103,1.325,104,0.945,105,0.987,106,1.031,107,0.886,114,1.677,117,3.05,118,2.276,120,1.54,122,1.575,125,0.945,127,1.232,128,0.767,129,1.883,136,0.85,145,1.608,148,1.009,150,0.26,151,0.339,169,0.965,173,0.965,177,0.965,179,0.095,193,1.35,197,1.124,199,1.216,205,1.503,216,1.507,219,1.395,224,1.511,247,1.721,252,1.664,253,1.382,271,2.138,272,2.46,275,2.723,277,1.954,279,1.387,281,1.677,290,0.886,295,1.617,305,2.754,306,1.617,317,0.509,318,1.443,319,2.323,320,1.031,321,2.138,322,1.031,323,1.031,324,0.965,325,1.031,326,0.965,327,1.031,328,0.965,329,1.288,330,1.031,331,0.965,332,0.987,333,1.031,334,0.965,335,1.031,336,0.965,337,1.031,338,0.965,339,1.031,340,0.965,341,1.911,342,1.031,343,0.965,344,1.575,345,0.965,346,1.009,347,1.031,348,0.965,349,1.443,350,1.575,351,0.965,352,1.031,353,0.965,354,1.031,355,0.965,356,0.965,357,1.031,358,0.965,359,1.031,360,0.965,361,1.575,362,0.965,363,1.031,364,0.965,365,1.031,366,0.965,367,1.031,368,0.987,369,1.031,370,0.965,371,1.031,372,0.965,373,1.031,374,0.965,375,0.965,376,1.031,377,0.965,378,2.002,379,1.031,380,1.031,403,0.868,455,2.699,470,1.009,474,1.59,476,0.904,494,1.47,498,1.471,517,2.061,519,4.246,525,3.567,530,3.231,544,2.723,545,2.555,546,2.118,555,1.617,565,1.727,578,1.247,649,2.754,650,3.397,653,2.959,667,2.484,716,2.061,717,3.82,722,4.276,723,1.904,724,1.954,734,2.31,740,5.495,742,3.532,744,2.062,745,2.145,746,1.904,786,1.88,1006,1.736,1121,1.47,1129,1.965,1132,2.389,1133,1.516,1140,1.804,1142,1.804,1156,1.564,1159,1.88,1160,3.939,1162,2.062,1169,3.215,1174,3.149,1177,4.074,1207,2.062,1223,3.149,1231,4.074,1260,1.965,1344,2.65,1395,2.65,1396,2.65,1401,3.493,1408,1.736,1409,1.88,1612,1.736,1613,1.674,1671,4.144,1689,3.215,1700,3.598,1800,2.176,2330,2.555,2876,2.714,2905,3.532,3028,2.714,3036,4.543,3107,2.714,3158,2.714,3161,2.313,3183,5.026,3186,2.714,3188,2.714,3189,2.714,3190,4.144,3344,5.445,3633,3.793,4010,3.532,4049,2.176,4350,3.062,4351,5.671,4352,4.675,4353,5.671,4354,5.671,4355,4.675,4356,6.348,4357,6.348,4358,3.062,4359,4.675,4360,4.675,4361,4.675,4362,3.062,4363,3.062,4364,3.062,4365,4.675,4366,3.062,4367,3.062,4368,3.062,4369,3.062,4370,3.062,4371,4.675,4372,3.062,4373,3.062,4374,5.671,4375,3.062,4376,3.062,4377,3.062,4378,3.062,4379,2.714,4380,5.671,4381,3.062,4382,3.062,4383,3.062,4384,3.062,4385,4.675,4386,3.062,4387,3.062,4388,3.062,4389,5.671,4390,3.062,4391,4.675,4392,5.671,4393,4.675,4394,2.484,4395,4.675,4396,3.062,4397,3.062,4398,4.675,4399,3.062,4400,3.062,4401,3.062,4402,3.062,4403,4.675,4404,3.062,4405,4.675,4406,4.144,4407,4.675,4408,4.675,4409,3.062,4410,3.062,4411,5.671,4412,5.671,4413,3.062,4414,2.484,4415,3.062,4416,3.062,4417,3.062,4418,3.062,4419,3.062,4420,3.062,4421,3.062,4422,3.062,4423,3.062,4424,3.062,4425,3.062,4426,3.062,4427,3.062,4428,3.062,4429,3.062,4430,3.062,4431,3.062,4432,5.026,4433,3.062]],["title/modules/ViewerModule.html",[381,0.651,3205,3.067]],["body/modules/ViewerModule.html",[3,0.098,4,0.098,5,0.098,11,0.006,17,0.008,23,0.098,99,0.007,100,0.006,150,0.362,151,0.747,179,0.21,204,1.996,317,1.122,378,3,381,0.965,383,1.913,384,1.913,385,2.585,386,1.996,387,1.996,388,2.585,403,2.274,404,1.798,406,2.083,407,2.423,408,4.384,409,3.448,444,2.764,445,2.274,3036,3.448,3205,6.243,4434,5.982,4435,5.982,4436,5.982,4437,6.749,4438,6.749]],["title/injectables/ViewerState.html",[1922,1.722,3214,3.236]],["body/injectables/ViewerState.html",[0,0.275,3,0.065,4,0.065,5,0.065,11,0.004,12,0.617,13,0.73,15,1.344,16,1.257,17,0.008,18,1.585,19,0.625,20,1.36,23,0.09,28,1.784,48,1.086,53,1.014,80,2.432,87,1.206,99,0.005,100,0.004,125,2.534,127,1.333,129,1.748,141,2.022,150,0.36,151,0.492,154,2.273,156,2.016,179,0.139,197,1.475,205,1.713,219,1.534,224,2.017,233,3.345,247,0.966,252,1.622,253,2.349,272,1.724,329,1.496,455,2.121,472,2.378,474,1.896,476,0.978,494,3.372,498,1.486,517,3.096,530,2.935,565,1.643,597,4.133,604,2.935,756,3.868,835,3.61,1121,2.946,1232,2.855,1331,2.016,1340,3.813,1350,2.621,1371,2.731,1401,2.273,1440,3.162,1519,2.855,1536,5.438,1540,3.162,1553,3.162,1600,3.162,1922,2.321,1923,2.621,1994,5.041,2033,3.767,2034,2.731,2035,2.731,2036,2.273,2077,2.997,2586,3.61,3087,3.162,3088,5.72,3089,3.162,3161,4.636,3214,4.361,3302,2.731,3870,3.361,4172,3.61,4181,3.361,4414,3.61,4439,3.943,4440,6.225,4441,6.225,4442,6.136,4443,6.136,4444,6.136,4445,5.438,4446,4.449,4447,5.438,4448,4.449,4449,5.438,4450,4.449,4451,4.449,4452,4.449,4453,5.438,4454,6.71,4455,5.438,4456,4.449,4457,5.438,4458,5.438,4459,5.438,4460,5.438,4461,5.438,4462,4.449,4463,5.438,4464,5.438,4465,5.438,4466,3.943,4467,3.943,4468,3.943,4469,5.438,4470,3.943,4471,3.61,4472,3.61,4473,7.278,4474,7.278,4475,7.278,4476,3.943,4477,6.225,4478,3.943,4479,3.943,4480,3.943,4481,3.943,4482,3.943,4483,3.943,4484,5.438,4485,5.438,4486,3.943,4487,3.943,4488,3.943,4489,6.225,4490,3.943,4491,3.943,4492,3.943,4493,3.943,4494,3.943,4495,3.943,4496,3.943,4497,3.943]],["title/interfaces/ViewerStateModel.html",[0,0.282,4472,3.695]],["body/interfaces/ViewerStateModel.html",[0,0.302,2,1.175,3,0.071,4,0.071,5,0.071,11,0.004,12,0.612,13,0.779,15,1.477,16,0.977,17,0.008,18,1.672,19,0.608,23,0.095,28,1.783,48,1.158,53,0.624,80,2.672,99,0.005,100,0.004,125,2.019,141,2.155,150,0.367,151,0.541,154,2.498,156,2.215,179,0.152,205,1.538,219,1.556,224,1.964,233,3.207,247,1.062,252,1.702,253,2.426,272,1.894,329,1.546,455,1.477,476,0.779,517,3.249,530,2.043,565,1.806,597,4.406,604,3.081,756,4.022,1121,3.141,1232,3.137,1331,2.215,1340,3.908,1350,2.88,1371,3.001,1401,2.498,1440,3.475,1519,3.137,1540,3.475,1553,3.475,1600,3.475,1922,2.474,1994,4.526,2033,4.016,2034,3.001,2035,3.001,2036,2.498,2077,3.293,2586,3.967,3087,3.475,3088,5.947,3089,3.475,3161,3.693,3214,3.475,3302,3.001,3870,3.693,4172,3.967,4181,3.693,4414,3.967,4439,4.333,4440,5.798,4441,4.333,4445,4.333,4447,4.333,4449,4.333,4453,4.333,4454,5.798,4455,4.333,4457,4.333,4458,4.333,4459,4.333,4460,4.333,4461,4.333,4463,5.798,4464,6.534,4465,5.798,4466,4.333,4467,4.333,4468,4.333,4469,5.798,4470,4.333,4471,3.967,4472,5.308,4473,7.866,4474,7.866,4475,7.866,4476,4.333,4477,6.534,4478,4.333,4479,4.333,4480,4.333,4481,4.333,4482,4.333,4483,4.333,4484,5.798,4485,5.798,4486,4.333,4487,4.333,4488,4.333,4489,6.534,4490,4.333,4491,4.333,4492,4.333,4493,4.333,4494,4.333,4495,4.333,4496,4.333,4497,4.333]],["title/changelog.html",[3882,2.555,4498,2.865,4499,3.077]],["body/changelog.html",[0,0.446,10,2.659,11,0.004,17,0.006,25,3.748,29,4.921,33,1.96,36,2.073,37,3.748,47,1.305,48,1.37,49,2.05,52,4.423,55,2.194,56,2.659,59,2.88,63,2.659,65,1.417,73,2.432,78,2.659,79,2.659,99,0.005,100,0.005,105,1.512,107,1.358,110,4.157,118,2.16,128,2.09,129,0.998,131,1.33,136,1.766,152,2.252,199,1.863,225,3.334,238,3.477,253,1.881,264,4.157,274,2.659,290,1.358,296,2.966,298,2.397,329,1.198,384,1.33,454,5.62,476,0.747,528,3.748,545,3.477,597,3.16,755,3.01,797,2.88,806,5.185,827,3.544,848,5.858,880,3.544,881,3.905,882,3.16,982,4.157,1052,3.334,1121,3.055,1134,2.397,1286,4.253,1288,3.334,1335,3.01,1347,3.359,1358,3.812,1545,2.883,1559,3.25,1604,2.88,1825,3.806,2052,4.522,2055,6.281,2056,3.806,2257,5.639,2263,3.806,2351,4.157,2368,4.157,2421,5.162,2495,4.157,2508,5.639,2528,3.806,2556,5.639,2579,4.157,2589,4.157,2598,4.157,2769,4.522,2822,3.806,2875,5.162,2930,3.544,3108,3.806,3167,3.806,3247,5.858,3248,4.157,3309,3.806,3310,3.806,3311,3.806,3317,4.157,3318,4.157,3323,4.157,3324,6.281,3327,3.806,3328,5.162,3333,4.157,3335,3.806,3663,5.639,3668,5.162,3884,3.806,3917,7.555,4124,4.157,4394,3.806,4406,4.157,4432,5.639,4498,4.806,4499,5.162,4500,8.898,4501,7.219,4502,6.362,4503,7.741,4504,4.691,4505,6.362,4506,7.741,4507,4.691,4508,4.691,4509,4.691,4510,4.691,4511,6.362,4512,4.691,4513,4.691,4514,6.362,4515,4.691,4516,4.691,4517,4.691,4518,4.691,4519,6.362,4520,7.563,4521,7.219,4522,6.362,4523,4.691,4524,4.691,4525,4.691,4526,7.741,4527,4.691,4528,4.691,4529,4.691,4530,7.741,4531,4.691,4532,4.691,4533,6.362,4534,7.219,4535,4.691,4536,4.691,4537,4.691,4538,6.362,4539,4.691,4540,6.362,4541,4.691,4542,4.691,4543,4.691,4544,6.362,4545,6.362,4546,6.362,4547,6.362,4548,4.691,4549,4.691,4550,4.691,4551,4.691,4552,4.691,4553,4.691,4554,4.691,4555,4.691,4556,4.691,4557,4.691,4558,4.691,4559,4.157,4560,4.691,4561,4.691,4562,4.691,4563,4.691,4564,4.691,4565,4.691,4566,4.691,4567,4.691,4568,4.157,4569,4.691,4570,4.691,4571,4.691,4572,4.691,4573,4.691,4574,4.691,4575,4.691,4576,4.691,4577,4.691,4578,4.691,4579,6.362,4580,8.092,4581,4.691,4582,4.691,4583,4.691,4584,4.691,4585,4.691,4586,4.691,4587,6.362,4588,6.362,4589,4.691,4590,4.157,4591,4.691,4592,4.691,4593,4.691,4594,4.691,4595,4.691,4596,4.691,4597,4.691,4598,4.691,4599,4.691]],["title/dependencies.html",[384,1.554,4600,3.793]],["body/dependencies.html",[11,0.005,17,0.008,47,1.114,48,1.091,72,3.254,99,0.006,100,0.005,136,2.108,151,0.682,153,2.716,319,1.986,384,1.747,411,5.396,445,2.076,492,3.783,495,3.369,512,3.493,514,3.783,515,3.493,530,3.173,619,5.001,622,5.001,625,5.001,627,5.001,629,5.001,704,3.955,756,3.149,864,4.151,968,6.729,970,5.462,973,6.729,975,5.462,976,5.462,1028,5.001,1133,3.051,1138,3.493,1368,5.462,1580,4.381,1839,5.001,1941,5.462,2036,3.149,2546,5.001,2559,3.783,3668,5.001,3789,5.001,4241,5.462,4379,5.462,4601,9.19,4602,6.163,4603,7.592,4604,6.163,4605,6.163,4606,6.163,4607,8.587,4608,6.163,4609,6.163,4610,6.163,4611,8.228,4612,6.163,4613,6.163,4614,6.163,4615,6.163,4616,6.163,4617,6.163,4618,6.163,4619,6.163,4620,6.163,4621,6.163,4622,6.163,4623,6.163,4624,6.163,4625,6.163,4626,6.163,4627,6.163,4628,6.163,4629,6.163,4630,6.163,4631,6.163,4632,6.163,4633,6.163,4634,6.163,4635,6.163,4636,6.163,4637,6.163,4638,6.163,4639,6.163]],["title/miscellaneous/enumerations.html",[4640,2.865,4641,4.858]],["body/miscellaneous/enumerations.html",[6,2.21,11,0.006,12,0.533,17,0.008,20,2.098,36,1.615,47,1.239,72,3.62,99,0.007,100,0.006,141,2.259,166,6.116,606,3.569,736,2.532,1121,3.292,1140,4.77,1969,5.563,2053,6.569,2054,6.116,2769,6.543,3608,5.18,3612,6.991,3613,5.563,3614,5.563,3615,5.563,3616,5.563,3617,5.563,3618,5.563,3619,5.563,3620,5.563,3621,5.563,4640,5.18,4641,6.077,4642,6.857,4643,6.077]],["title/index.html",[12,0.295,3882,2.555,4498,2.865]],["body/index.html",[0,0.507,11,0.006,17,0.007,89,3.934,99,0.007,100,0.006,118,2.24,298,3.575,306,3.695,881,4.296,882,4.714,1286,4.827,1521,3.575,2005,5.678,2052,5.824,3309,6.649,3310,6.649,3311,6.649,3327,6.649,3328,7.27,3349,6.202,3350,6.202,3358,6.202,3359,6.202,3366,6.202,3367,6.202,4499,5.678,4559,6.202,4644,8.194,4645,6.998,4646,6.998,4647,6.998,4648,6.998,4649,6.998,4650,6.998,4651,6.998]],["title/license.html",[3882,2.555,4498,2.865,4652,3.361]],["body/license.html",[11,0.005,17,0.007,82,2.025,99,0.007,100,0.005,112,4.665,404,1.748,483,3.866,503,3.465,755,4.212,838,3.866,881,4.029,1640,4.842,1739,6.389,2912,5.325,3324,5.325,3335,6.4,3384,5.817,4133,5.817,4520,5.817,4568,5.817,4652,5.817,4653,6.563,4654,8.457,4655,6.563,4656,6.563,4657,7.888,4658,6.563,4659,6.563,4660,6.563,4661,6.563,4662,6.563,4663,7.888,4664,9.357,4665,6.563,4666,6.563,4667,6.563,4668,6.563,4669,6.563,4670,6.563,4671,6.563,4672,6.563,4673,6.563,4674,6.563,4675,6.563,4676,6.563,4677,7.888,4678,6.563,4679,6.563,4680,6.563,4681,6.563,4682,6.563,4683,7.888,4684,7.888,4685,6.563,4686,6.563,4687,6.563,4688,6.563,4689,6.563,4690,6.563,4691,6.563,4692,6.563,4693,6.563,4694,6.563,4695,6.563,4696,6.563,4697,6.563,4698,6.563,4699,6.563,4700,6.563,4701,6.563,4702,6.563,4703,6.563,4704,6.563,4705,6.563,4706,6.563,4707,6.563,4708,6.563]],["title/modules.html",[383,1.767]],["body/modules.html",[11,0.005,17,0.006,99,0.006,100,0.005,136,2.69,382,4.481,383,1.682,393,4.216,394,4.216,395,3.996,396,3.807,397,4.216,398,4.216,399,3.996,400,4.216,401,4.216,402,4.216,442,4.216,796,4.216,1323,4.216,1382,3.996,1412,4.216,1417,4.216,1550,4.216,1622,4.216,1904,4.216,1905,4.216,1906,4.216,2110,7.319,2181,4.216,2370,4.216,2479,4.216,3057,4.216,3062,3.996,3080,3.996,3172,4.216,3195,4.216,3204,4.216,3205,3.996,3383,8.586,3728,3.996,3729,4.216,3730,3.996,4153,4.216,4709,9.693]],["title/overview.html",[4049,4.431]],["body/overview.html",[2,0.803,11,0.003,17,0.008,99,0.004,100,0.003,102,2.435,103,0.947,164,4.251,169,2.435,173,2.435,177,2.435,204,0.988,317,0.556,324,2.435,326,2.435,328,2.435,331,2.435,334,2.435,336,2.435,338,2.435,340,2.435,343,2.435,345,2.435,348,2.435,351,2.435,353,2.435,355,2.435,356,2.435,358,2.435,360,2.435,362,2.435,364,2.435,366,2.435,368,2.489,370,2.435,372,2.435,374,2.435,375,2.435,377,2.435,378,2.435,381,0.478,382,6.924,383,0.947,384,0.947,385,1.009,386,0.988,387,0.988,388,1.009,389,2.962,390,2.962,391,2.962,392,2.962,393,5.297,394,5.875,395,5.932,396,5.096,397,5.644,398,6.163,399,5.202,400,6.04,401,5.644,402,5.297,403,1.416,404,0.89,439,2.962,440,2.962,441,2.962,442,5.875,449,1.707,787,2.962,788,2.962,789,2.962,1323,5.297,1324,2.962,1325,2.962,1326,2.962,1382,5.202,1383,2.962,1384,2.962,1385,2.962,1412,5.644,1413,2.962,1414,2.962,1415,2.962,1416,2.962,1417,5.644,1622,5.875,1623,2.962,1624,2.962,1626,2.962,1681,2.962,1682,2.962,1684,2.962,1901,2.962,1902,2.962,1903,2.962,1904,6.04,1905,4.251,1906,5.048,1923,1.969,2121,2.962,2122,2.962,2123,2.962,2181,5.297,2182,2.962,2183,2.962,2184,2.962,2332,2.962,2333,2.962,2334,2.962,2370,6.04,2371,2.962,2372,2.962,2374,2.962,2409,2.962,2410,2.962,2412,2.962,2475,2.962,2476,2.962,2477,2.962,2478,2.962,2479,5.644,3057,5.644,3058,2.962,3059,2.962,3060,2.962,3061,2.962,3062,5.889,3080,5.786,3081,2.962,3082,2.962,3084,2.962,3168,2.962,3169,2.962,3170,2.962,3171,2.962,3172,5.644,3195,5.297,3196,2.962,3197,2.962,3198,2.962,3201,2.962,3202,2.962,3203,2.962,3204,6.336,3205,5.202,3240,2.962,3241,2.962,3243,2.962,3264,2.962,3265,2.962,3267,2.962,3393,2.962,3394,2.962,3395,2.962,3725,2.962,3726,2.962,3727,2.962,3728,5.652,3729,6.163,3730,5.652,3824,2.962,3825,2.962,3826,2.962,3988,2.962,3989,2.962,3991,2.962,4004,2.962,4005,2.962,4006,2.962,4049,2.375,4153,5.297,4154,2.962,4155,2.962,4156,2.962,4159,2.962,4160,2.962,4162,2.962,4196,2.962,4197,2.962,4199,2.962,4232,2.962,4233,2.962,4234,2.962,4263,2.962,4264,2.962,4394,2.711,4434,2.962,4435,2.962,4436,2.962,4471,2.711,4590,2.962,4710,3.342,4711,3.342]],["title/miscellaneous/typealiases.html",[4640,2.865,4712,5.482]],["body/miscellaneous/typealiases.html",[6,2.703,11,0.005,12,0.448,17,0.008,19,0.74,28,1.253,47,1.443,48,1.413,97,3.722,99,0.006,100,0.005,103,1.635,114,2.361,116,3.884,141,2.849,192,3.397,215,4.584,216,2.347,240,2.854,275,2.474,475,4.471,492,3.54,508,2.613,521,2.689,603,5.675,786,3.54,872,3.721,878,1.987,989,2.854,1130,3.884,1131,5.663,1143,4.471,1146,4.674,1151,5.378,1153,4.674,1154,4.674,1156,3.721,1157,4.471,1340,2.613,1692,3.605,1695,2.854,1709,3.721,1713,3.952,1728,3.846,1879,3.884,1880,4.099,1881,4.291,1882,4.099,1883,4.099,1884,4.099,1886,3.884,1889,5.095,1890,5.675,1893,3.884,1894,3.884,1895,3.397,1898,5.675,1899,3.701,2174,3.269,2491,5.111,2492,6.455,2514,6.455,2557,4.356,3086,4.679,3093,5.91,3116,5.91,3217,5.91,3271,4.099,3399,5.111,3416,5.111,3417,6.455,3418,6.455,3419,5.111,3420,6.455,3421,5.111,3422,6.455,3423,5.111,3424,5.111,3425,5.111,3608,4.356,3733,3.54,3834,4.679,3835,5.91,3882,3.884,3883,5.91,4011,4.679,4012,5.91,4048,5.91,4640,4.356,4643,5.111,4713,5.767,4714,8.832,4715,8.969,4716,7.983,4717,5.767,4718,7.283,4719,5.767,4720,5.767]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["0).tolocaledatestring",{"_index":2844,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["0.095rem",{"_index":2328,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0.1.0",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":4639,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":4052,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["0.15rem",{"_index":1620,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["0.17.1",{"_index":4621,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1621,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{}}}],["0.2",{"_index":598,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["0.2.0",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["0.25rem",{"_index":4348,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["0.2rem",{"_index":2363,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.3.2",{"_index":4610,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":2164,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["0.4em",{"_index":2364,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.4rem",{"_index":1606,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.4s",{"_index":4231,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.5",{"_index":556,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["0.5*255",{"_index":710,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["0.5.0",{"_index":3668,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{},"dependencies.html":{}}}],["0.5em",{"_index":1315,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["0.5rem",{"_index":1617,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/InfoDialogComponent.html":{}}}],["0.6.0",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["0.6s",{"_index":4230,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.75rem",{"_index":1619,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.8",{"_index":688,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["0.875rem",{"_index":3387,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["0.8rem",{"_index":1607,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.9*255",{"_index":685,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["000000",{"_index":1609,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["020202",{"_index":1509,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["03",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["03b3d854",{"_index":2604,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["04",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["07a29e4c",{"_index":2610,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["08",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["0a7c1eab007a",{"_index":2624,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["0c1687",{"_index":1518,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["0e368f3075e8",{"_index":2608,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["0e8017bdda58",{"_index":2613,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["0em",{"_index":2402,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["0px",{"_index":2173,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0rem",{"_index":1608,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0s",{"_index":2406,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["0xff",{"_index":4392,"title":{},"body":{"components/ViewerComponent.html":{}}}],["1",{"_index":253,"title":{"interfaces/ColorScheme-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/SpatialSceneNode-1.html":{}},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["1)[0].split('?')[0].replace('.ome.tif",{"_index":2825,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["1*255",{"_index":1077,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["1.0",{"_index":599,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["1.0.0",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":4618,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":4346,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.1.0",{"_index":4627,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4628,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":4617,"title":{},"body":{"dependencies.html":{}}}],["1.125rem",{"_index":1614,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["1.13.0",{"_index":4637,"title":{},"body":{"dependencies.html":{}}}],["1.2.3",{"_index":4620,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":4626,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":4122,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["1.3.3",{"_index":4622,"title":{},"body":{"dependencies.html":{}}}],["1.3.6",{"_index":4632,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":4625,"title":{},"body":{"dependencies.html":{}}}],["1.55rem",{"_index":2170,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1.5em",{"_index":1320,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["1.5rem",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["1.5s",{"_index":1876,"title":{},"body":{"components/ContentComponent.html":{}}}],["10",{"_index":1100,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["10.0",{"_index":527,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["100",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["1000",{"_index":987,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["10000",{"_index":2876,"title":{},"body":{"classes/HuBMAPEntity.html":{},"components/ViewerComponent.html":{}}}],["101",{"_index":2596,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["103",{"_index":2593,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["104",{"_index":4189,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["10px",{"_index":1377,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["10rem",{"_index":1611,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["10x.svg",{"_index":2805,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["11",{"_index":2598,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["11.5",{"_index":575,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["110",{"_index":2046,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["11e8",{"_index":2606,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["12",{"_index":4590,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["1234",{"_index":3674,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["12rem",{"_index":4191,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["13",{"_index":2047,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["136",{"_index":675,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["14px",{"_index":2157,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{}}}],["15",{"_index":553,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["1500",{"_index":1165,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["152px",{"_index":2172,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1565c0",{"_index":1435,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["15px",{"_index":2326,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["15rem",{"_index":2327,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["16",{"_index":4389,"title":{},"body":{"components/ViewerComponent.html":{}}}],["16.13.1",{"_index":4634,"title":{},"body":{"dependencies.html":{}}}],["16.5rem",{"_index":2403,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["166",{"_index":1438,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["16px",{"_index":2159,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["16px/20px",{"_index":2471,"title":{},"body":{"components/HeaderComponent.html":{}}}],["172",{"_index":2587,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["18rem",{"_index":3821,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["1].rotation",{"_index":663,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["1a9850",{"_index":1460,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["1e88e5",{"_index":3238,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["1em",{"_index":2155,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["1px",{"_index":1378,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":1314,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1s",{"_index":2466,"title":{},"body":{"components/HeaderComponent.html":{},"components/InfoButtonComponent.html":{}}}],["2",{"_index":1121,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["2.0625rem",{"_index":4345,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.2.8",{"_index":4611,"title":{},"body":{"dependencies.html":{}}}],["2.25rem",{"_index":3392,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["2.2rem",{"_index":3239,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["2.5rem",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["20",{"_index":3095,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["20000",{"_index":1166,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["2019",{"_index":4520,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3323,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["203",{"_index":2592,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["20em",{"_index":2321,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["21",{"_index":2573,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["2166ac",{"_index":1452,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["21908a",{"_index":1497,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["22",{"_index":2579,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["22.5rem",{"_index":2404,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["225",{"_index":3129,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["229",{"_index":676,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["24",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["24rem",{"_index":2405,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["25",{"_index":4051,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["25.5rem",{"_index":3236,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["25000",{"_index":4415,"title":{},"body":{"components/ViewerComponent.html":{}}}],["255",{"_index":525,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["25rem",{"_index":3055,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{}}}],["27",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["275s",{"_index":2165,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["28.5rem",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["28px",{"_index":2331,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["2d6379",{"_index":1498,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["2em",{"_index":2361,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["2px",{"_index":2162,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["2rem",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["3",{"_index":597,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"classes/HuBMAPEntity.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["3.0.5",{"_index":4614,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":4623,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4613,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":3235,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["3.6.2",{"_index":4615,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":674,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["308f5ffc",{"_index":2615,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["31",{"_index":4471,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"overview.html":{}}}],["32",{"_index":2572,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["32px",{"_index":2329,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["33",{"_index":2369,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["333",{"_index":1439,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["34",{"_index":4710,"title":{},"body":{"overview.html":{}}}],["35rem",{"_index":2407,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["380px",{"_index":3822,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["393768",{"_index":1499,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3d",{"_index":848,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"changelog.html":{}}}],["3d121f",{"_index":1508,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3rem",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["3s",{"_index":2167,"title":{},"body":{"components/DropdownComponent.html":{}}}],["4",{"_index":2586,"title":{},"body":{"classes/HuBMAPEntity.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["4.17.15",{"_index":4624,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":4619,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":2470,"title":{},"body":{"components/HeaderComponent.html":{}}}],["403",{"_index":2595,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["404",{"_index":3645,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["40px",{"_index":3819,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["42",{"_index":4711,"title":{},"body":{"overview.html":{}}}],["450b57",{"_index":1500,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["4a2484",{"_index":1517,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["4em",{"_index":2401,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["4px",{"_index":1610,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["4rem",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["5",{"_index":1440,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["5.5rem",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["50",{"_index":3056,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{}}}],["500",{"_index":921,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["500px",{"_index":3817,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["542788",{"_index":1469,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["5678",{"_index":3675,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["5bd084c8",{"_index":2617,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["5em",{"_index":2180,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{}}}],["5rem",{"_index":1618,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["5s",{"_index":3232,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["6",{"_index":4414,"title":{},"body":{"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["6.5.5",{"_index":4635,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3096,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/OldRuiData.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["60em",{"_index":3262,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["625rem",{"_index":4150,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["64b5f6",{"_index":1448,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["666",{"_index":1441,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["66bb6a",{"_index":1431,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["67a9cf",{"_index":1453,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["69f0ae",{"_index":2366,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["6bab65",{"_index":1496,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["6e016b",{"_index":1485,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["6rem",{"_index":2461,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["7",{"_index":4387,"title":{},"body":{"components/ViewerComponent.html":{}}}],["7.5rem",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["70px",{"_index":2323,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["73bb26e4",{"_index":2622,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["75",{"_index":2600,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["75rem",{"_index":2324,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["76",{"_index":2601,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["78223c",{"_index":1507,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["7rem",{"_index":1374,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["8",{"_index":4394,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{},"overview.html":{}}}],["8.2.0",{"_index":4612,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":4607,"title":{},"body":{"dependencies.html":{}}}],["8.25rem",{"_index":2465,"title":{},"body":{"components/HeaderComponent.html":{}}}],["8.9",{"_index":596,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["802f",{"_index":2619,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["80cbc4",{"_index":1446,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["83",{"_index":2048,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["833",{"_index":1442,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["85",{"_index":2589,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["86",{"_index":2590,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["883381",{"_index":1516,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["88419d",{"_index":1486,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8bce",{"_index":2607,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["8c6bb1",{"_index":1487,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8c96c6",{"_index":1488,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8em",{"_index":1321,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["8f19",{"_index":2623,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["8rem",{"_index":3234,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["9",{"_index":2717,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["9.1.11",{"_index":4601,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":4603,"title":{},"body":{"dependencies.html":{}}}],["9.5",{"_index":559,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["9.85rem",{"_index":2153,"title":{},"body":{"components/DropdownComponent.html":{}}}],["90",{"_index":2368,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["91cf60",{"_index":1461,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["95",{"_index":4124,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"changelog.html":{}}}],["990000",{"_index":1477,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["998ec3",{"_index":1470,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["9e9e9e",{"_index":3237,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["9ebcda",{"_index":1489,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["9rem",{"_index":4123,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["_afterconnected",{"_index":1926,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["_aggregatedataquerystatus",{"_index":1972,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_blank",{"_index":4144,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["_channelconfigs",{"_index":1182,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_error",{"_index":2929,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":3464,"title":{},"body":{"classes/InitializationState.html":{}}}],["_height",{"_index":1173,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_layers",{"_index":3183,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["_lighting",{"_index":642,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["_listdataquerystatus",{"_index":1973,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_loaders",{"_index":1178,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_measuredmargin",{"_index":3493,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":3487,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":1716,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_onclick",{"_index":465,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onclick(e",{"_index":491,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["_onhover",{"_index":466,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onhover(e",{"_index":499,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["_onviewstatechange",{"_index":467,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onviewstatechange(event",{"_index":501,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["_opened",{"_index":3460,"title":{},"body":{"classes/InitializationState.html":{}}}],["_placement",{"_index":3701,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["_position",{"_index":3456,"title":{},"body":{"classes/InitializationState.html":{}}}],["_self",{"_index":4145,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["_source",{"_index":2687,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["_sources",{"_index":1177,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["_termoccurencesdataquerystatus",{"_index":1974,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_thumbnail.png",{"_index":2826,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["_width",{"_index":1172,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["a.highlighted",{"_index":937,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ability",{"_index":3132,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["about.wrapper",{"_index":3386,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["above",{"_index":4568,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":1612,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["abstract",{"_index":1168,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["acc",{"_index":3915,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["acc[current.id",{"_index":3919,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["accelerate",{"_index":3303,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["accent",{"_index":1310,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["accepting",{"_index":3543,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessible",{"_index":1960,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["accessors",{"_index":1344,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["accordingly",{"_index":2388,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["accordion",{"_index":3039,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion'},{'name",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["accordion.component",{"_index":3066,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["accordion.component.html",{"_index":3041,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.scss",{"_index":3040,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts",{"_index":3038,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:20",{"_index":3044,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:25",{"_index":3043,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:30",{"_index":3045,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:33",{"_index":3047,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.module",{"_index":3085,"title":{},"body":{"modules/ImageViewerContentModule.html":{}}}],["accordion.module.ts",{"_index":3063,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["accordion/image",{"_index":3037,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["accumulated",{"_index":3916,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["accumulator",{"_index":3914,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["acknowledgements",{"_index":3347,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["action",{"_index":4133,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["activate",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":1132,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["active/showing",{"_index":4225,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["activelayers",{"_index":4441,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["actual_component",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["add",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{}}}],["addclass",{"_index":4316,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":3917,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["addhubmapdatatostore",{"_index":861,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{}}}],["additional",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["addjsonldtostore",{"_index":856,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{}}}],["addjsonldtostore(hubmapresponseasjsonld(hubmapdata",{"_index":2889,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["addn3tostore",{"_index":857,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["addrdfxmltostore",{"_index":858,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["adds",{"_index":1556,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/HuBMAPEntity.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{}}}],["addspatialentity",{"_index":943,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialentity(entity",{"_index":952,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialobjectreference",{"_index":944,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialobjectreference(ref",{"_index":954,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialplacement",{"_index":945,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialplacement(placement",{"_index":958,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addsubtree",{"_index":3918,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsubtree(model.nodes",{"_index":3912,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsubtree(nodes",{"_index":3921,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsvgicon",{"_index":2933,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["aed581",{"_index":1450,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["af.svg",{"_index":2808,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["af_preims_registered_thumbnail.png",{"_index":2574,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["af_premxif_registered_thumbnail.png",{"_index":2580,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["afterviewinit",{"_index":717,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["against",{"_index":3532,"title":{},"body":{"classes/InitializationState.html":{}}}],["age",{"_index":63,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["agematch",{"_index":2715,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["agerange",{"_index":76,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["aggregate",{"_index":9,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["aggregatedata",{"_index":1975,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["aggregatedata(filter",{"_index":1986,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["aggregatedataquerystatus",{"_index":1976,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["aggregateresult",{"_index":1,"title":{"interfaces/AggregateResult.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{}}}],["aims",{"_index":3312,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["aliases",{"_index":4713,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["alignment_datetime",{"_index":3650,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_id",{"_index":3651,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_operator_first_name",{"_index":3652,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_operator_last_name",{"_index":3653,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["allcompleted(states",{"_index":2024,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["allergy",{"_index":3375,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["allow",{"_index":917,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["allowing",{"_index":4089,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["allows",{"_index":729,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["along",{"_index":1405,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["alongside",{"_index":4227,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["alpha",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":1735,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["always",{"_index":1762,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["ambientlight",{"_index":509,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["analysis",{"_index":3297,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ancestor_ids",{"_index":2881,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ancestors",{"_index":2496,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["and/or",{"_index":4675,"title":{},"body":{"license.html":{}}}],["angular",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["angular's",{"_index":2237,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["angular/animations",{"_index":1839,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":4602,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":3415,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":2271,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"injectables/ThemingService.html":{}}}],["angular/cdk/portal",{"_index":2272,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["angular/cdk/scrolling",{"_index":4112,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{}}}],["angular/common",{"_index":445,"title":{},"body":{"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1909,"title":{},"body":{"modules/CoreModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["angular/compiler",{"_index":4604,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":3789,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4605,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":3790,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/button",{"_index":2482,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/checkbox",{"_index":1304,"title":{},"body":{"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["angular/material/dialog",{"_index":3259,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":3065,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["angular/material/form",{"_index":2187,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["angular/material/icon",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/ImageViewerContentModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/input",{"_index":3832,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["angular/material/progress",{"_index":4237,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["angular/material/radio",{"_index":4202,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["angular/material/select",{"_index":2189,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["angular/material/theming",{"_index":4146,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["angular/material/toolbar",{"_index":2484,"title":{},"body":{"modules/HeaderModule.html":{}}}],["angular/material/tooltip",{"_index":2486,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/tree",{"_index":4009,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["angular/platform",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4606,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":1836,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animate('1.5s",{"_index":3441,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":1844,"title":{},"body":{"components/ContentComponent.html":{}}}],["animate(0",{"_index":3440,"title":{},"body":{"classes/InitializationState.html":{}}}],["animation",{"_index":2163,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["animations",{"_index":1805,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":1846,"title":{},"body":{"components/ContentComponent.html":{}}}],["annotate",{"_index":3314,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["api",{"_index":880,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["api.hubmapconsortium.org/entities",{"_index":2568,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["app",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/OntologySelectionComponent.html":{},"modules/StoreModule.html":{}}}],["app.component",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["app/core/services/theming/theming.service",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["app_bootstrap_listener",{"_index":4266,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":102,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["appearance",{"_index":3816,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["application/json",{"_index":2868,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["applied",{"_index":70,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/ThemingService.html":{}}}],["apply",{"_index":2353,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applybuttonclick",{"_index":2344,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applyfilter",{"_index":721,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["applyfilter(filter",{"_index":737,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["applyfilters",{"_index":2345,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["applyfilters(filters",{"_index":2391,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["applypropdefaults(props",{"_index":1163,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["applyspatialplacement(tx",{"_index":981,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["applythemeclass",{"_index":4273,"title":{},"body":{"injectables/ThemingService.html":{}}}],["applythemeclass(cls",{"_index":4280,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":382,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":4147,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["args",{"_index":1147,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["args.filter(value",{"_index":2940,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argsgenerator",{"_index":1239,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["argument",{"_index":2938,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["arguments",{"_index":1645,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arising",{"_index":4706,"title":{},"body":{"license.html":{}}}],["array",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{}}}],["array.from(searchresults.values",{"_index":3954,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["arrow",{"_index":2178,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["asking",{"_index":1280,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["assay_types",{"_index":2856,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assaytype",{"_index":2790,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assaytypes",{"_index":2497,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assaytypes.add(assaytype",{"_index":2792,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assaytypes].map(l",{"_index":2800,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assaytypes].sort",{"_index":2798,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assets",{"_index":885,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["assets/histology3.jpg",{"_index":2821,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assets/icons/app/hubmap",{"_index":2117,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["assets/icons/filter.svg",{"_index":2119,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["assets/icons/ico",{"_index":2804,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assets/thumbnails/dr1",{"_index":2828,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["assetsapi",{"_index":2498,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["associated",{"_index":838,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["async",{"_index":650,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["at(model.nodes",{"_index":3907,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["at(nodes",{"_index":3962,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["atlas",{"_index":3293,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["atscrollbottom",{"_index":4078,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["attach",{"_index":4327,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["authentication",{"_index":2464,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authorgroup",{"_index":2839,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["authors",{"_index":4699,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1615,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["autocolorindex",{"_index":4474,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["autocomplete",{"_index":3784,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autocompleteopen",{"_index":3747,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autohighlight",{"_index":672,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["available",{"_index":1550,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/InfoDialogComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules.html":{}}}],["await",{"_index":653,"title":{},"body":{"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["awaited",{"_index":3400,"title":{},"body":{"classes/InitializationState.html":{}}}],["award",{"_index":3366,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["b",{"_index":936,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["b.highlighted",{"_index":938,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["b2182b",{"_index":1458,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b35806",{"_index":1474,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b39ddb",{"_index":1432,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b4335a",{"_index":1506,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b56a",{"_index":2612,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["b5c740",{"_index":1495,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["backend",{"_index":91,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["background",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":2915,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":1334,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["bar'},{'name",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["bar.component",{"_index":1387,"title":{},"body":{"modules/ColorBarModule.html":{}}}],["bar.component.html",{"_index":1337,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.scss",{"_index":1336,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts",{"_index":1333,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:18",{"_index":1346,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:23",{"_index":1351,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:28",{"_index":1352,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:33",{"_index":1348,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:38",{"_index":1354,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:43",{"_index":1366,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:55",{"_index":1361,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:64",{"_index":1357,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.module",{"_index":1630,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["bar.module.ts",{"_index":1386,"title":{},"body":{"modules/ColorBarModule.html":{}}}],["bar/color",{"_index":1332,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["bars",{"_index":1370,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["base",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{}}}],["bbox",{"_index":3481,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.left",{"_index":3484,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.right",{"_index":3483,"title":{},"body":{"classes/InitializationState.html":{}}}],["bcbb",{"_index":3382,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bearer",{"_index":2871,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["became",{"_index":3321,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["becomes",{"_index":3342,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["before",{"_index":1557,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{}}}],["being",{"_index":3281,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/StoreModule.html":{}}}],["between",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["bf",{"_index":3618,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["bfd3e6",{"_index":1490,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["bftiff",{"_index":3617,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["bind",{"_index":495,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"dependencies.html":{}}}],["biomolecular",{"_index":3292,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bitwise",{"_index":4385,"title":{},"body":{"components/ViewerComponent.html":{}}}],["bl",{"_index":2639,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["black",{"_index":2161,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{}}}],["bladder",{"_index":2669,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["block",{"_index":1680,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/InfoDialogComponent.html":{}}}],["blue",{"_index":4395,"title":{},"body":{"components/ViewerComponent.html":{}}}],["bluered",{"_index":1451,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["bmi",{"_index":64,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["bmi.tofixed(1",{"_index":2731,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["bmirange",{"_index":77,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["board",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["body.id",{"_index":3909,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["bodycanvas",{"_index":720,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["bodyid",{"_index":1053,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["bodymodule",{"_index":393,"title":{"modules/BodyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyui",{"_index":448,"title":{"classes/BodyUI.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{}}}],["bodyuicomponent",{"_index":324,"title":{"components/BodyUiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["bodyuilayer",{"_index":456,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["bodyuimodule",{"_index":442,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyuiprops",{"_index":518,"title":{"interfaces/BodyUIProps.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["bold",{"_index":1317,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{}}}],["booleaninput",{"_index":3413,"title":{},"body":{"classes/InitializationState.html":{}}}],["boolean}).zoomopacity",{"_index":563,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["bootstrap",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["border",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["both",{"_index":74,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["bottom",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["bound",{"_index":2254,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["bounding",{"_index":1089,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["box",{"_index":1604,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"changelog.html":{}}}],["boxes",{"_index":1090,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["branch",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":769,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["brightness",{"_index":1553,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["brightness/transparency",{"_index":1527,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightness[0",{"_index":4399,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightness[1",{"_index":4400,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightness_2",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["brightness_5",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["brightnesschanged",{"_index":1534,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesshigh",{"_index":1539,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesshigh(value",{"_index":1586,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesslow",{"_index":1538,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesslow(value",{"_index":1582,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnessslideroptions",{"_index":1532,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesstoslider(brightness",{"_index":4396,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightnesstoslider(layer.brightness",{"_index":4428,"title":{},"body":{"components/ViewerComponent.html":{}}}],["browse",{"_index":4709,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser'},{'name",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["browser.component",{"_index":4165,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser.component.html",{"_index":4077,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.scss",{"_index":4076,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts",{"_index":4070,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:21",{"_index":4085,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:26",{"_index":4084,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:31",{"_index":4088,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:36",{"_index":4086,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:42",{"_index":4090,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:47",{"_index":4109,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:53",{"_index":4102,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:58",{"_index":4106,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:63",{"_index":4098,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:74",{"_index":4092,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.module",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["browser.module.ts",{"_index":4163,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser/animations",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browser/results",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["browseranimationsmodule",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsermodule",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3318,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["bug",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":2548,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["button",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["button.component",{"_index":2129,"title":{},"body":{"modules/DrawerModule.html":{},"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":3250,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":3249,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":3246,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts:15",{"_index":3254,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4325,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:22",{"_index":4326,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:25",{"_index":4335,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:26",{"_index":3257,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:34",{"_index":4333,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:36",{"_index":4332,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:38",{"_index":4323,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:59",{"_index":4329,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:69",{"_index":4330,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:79",{"_index":4328,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:91",{"_index":4331,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.module",{"_index":2488,"title":{},"body":{"modules/HeaderModule.html":{}}}],["button.module.ts",{"_index":3268,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button/info",{"_index":2487,"title":{},"body":{"modules/HeaderModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{}}}],["button/toggle",{"_index":2128,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["button:active",{"_index":2365,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["c",{"_index":4655,"title":{},"body":{"license.html":{}}}],["c6427e",{"_index":1515,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ca7670",{"_index":1505,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["cached",{"_index":3485,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":4347,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["calc(50",{"_index":3445,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":3477,"title":{},"body":{"classes/InitializationState.html":{}}}],["calculates",{"_index":1656,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"classes/ImageViewerLayer.html":{}}}],["call",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/InfoDialogComponent.html":{}}}],["callback",{"_index":3775,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["called",{"_index":2059,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{}}}],["calls",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["caltech",{"_index":2616,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["candidate",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["canvas",{"_index":519,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":749,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["captures",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["case",{"_index":765,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{}}}],["catch",{"_index":2928,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ccf",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"index.html":{}}}],["ccf.spatial.body.id",{"_index":1063,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.bothsexes.id",{"_index":1057,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.female.id",{"_index":1056,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.femaleorgans.id",{"_index":1061,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.male.id",{"_index":1055,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.maleorgans.id",{"_index":1060,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatialentity",{"_index":1016,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.spatialobjectreference",{"_index":1014,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.spatialplacement",{"_index":1019,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.x('vhkidney').id",{"_index":3676,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ccf.x('vhleftkidney').id",{"_index":1084,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhrightkidney').id",{"_index":1081,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleen').id",{"_index":1086,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc1').id",{"_index":1092,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc2').id",{"_index":1093,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc3').id",{"_index":1094,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf_annotations",{"_index":3693,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ccfcontexturl",{"_index":877,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfdatabase",{"_index":792,"title":{"classes/CCFDatabase.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccfdatabaseoptions",{"_index":808,"title":{"interfaces/CCFDatabaseOptions.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["ccfdrawer",{"_index":3433,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":1691,"title":{},"body":{"components/ContainerComponent.html":{}}}],["ccfowlurl",{"_index":875,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfowlurl.endswith('.n3",{"_index":904,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfspatialgraph",{"_index":811,"title":{"classes/CCFSpatialGraph.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{}}}],["ccfspatialgraph(this",{"_index":897,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfspatialscene",{"_index":815,"title":{"classes/CCFSpatialScene.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccfspatialscene(this",{"_index":899,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["cdk",{"_index":2175,"title":{},"body":{"components/DropdownComponent.html":{}}}],["cdkportal",{"_index":2264,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":4107,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["cdr",{"_index":1705,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["cdr.markforcheck",{"_index":1779,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ceil",{"_index":1592,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["cell",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["centers",{"_index":3356,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["centimeter",{"_index":985,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["cff",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{}}}],["change",{"_index":1521,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"components/ToggleButtonComponent.html":{},"index.html":{}}}],["changed",{"_index":1559,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":1395,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy",{"_index":1408,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1396,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectorref",{"_index":1706,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["changelog",{"_index":4499,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.color",{"_index":4482,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.customizedcolor",{"_index":4486,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.dataloading",{"_index":4113,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["changes.push",{"_index":4493,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.selected",{"_index":4487,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.selection",{"_index":2284,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changes.valuerange",{"_index":2282,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["channel",{"_index":1695,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["channelconfig",{"_index":1129,"title":{"interfaces/ChannelConfig.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["channelconfigs",{"_index":1180,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelison",{"_index":4058,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelison.push(active",{"_index":4063,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelnames",{"_index":1161,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["channelnames.length",{"_index":1256,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["channels",{"_index":3581,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["channelschange",{"_index":4357,"title":{},"body":{"components/ViewerComponent.html":{}}}],["channelschange.emit(viewer.channelnames",{"_index":4424,"title":{},"body":{"components/ViewerComponent.html":{}}}],["charge",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["check",{"_index":4095,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["checkbox",{"_index":1271,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["checkbox'},{'name",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["checkbox.component",{"_index":1329,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["checkbox.component.html",{"_index":1273,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1272,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.mat",{"_index":1309,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":326,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["checkboxes",{"_index":1269,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxmodule",{"_index":1323,"title":{"modules/CheckboxModule.html":{}},"body":{"modules/CheckboxModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["checkboxonchange",{"_index":3137,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["checkboxonchange(layer",{"_index":3147,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["checked",{"_index":1287,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["checkmark",{"_index":1311,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checks",{"_index":1829,"title":{},"body":{"components/ContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["child",{"_index":2174,"title":{},"body":{"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["children",{"_index":2433,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["choices",{"_index":2140,"title":{},"body":{"components/DropdownComponent.html":{}}}],["choose",{"_index":1643,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["chronological",{"_index":2725,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["circle",{"_index":1411,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["claim",{"_index":4702,"title":{},"body":{"license.html":{}}}],["class",{"_index":179,"title":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"classes/PictureInPictureViewer.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["class.ccf",{"_index":4321,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":1810,"title":{},"body":{"components/ContentComponent.html":{}}}],["classend",{"_index":3451,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":449,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"classes/PictureInPictureViewer.html":{},"overview.html":{}}}],["classname",{"_index":1771,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["clean",{"_index":3589,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["cleans",{"_index":1725,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["clear",{"_index":3290,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["click",{"_index":1651,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["clicked",{"_index":1662,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/InfoButtonComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["clickpos",{"_index":1675,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["clicks",{"_index":1653,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["clientheight",{"_index":4412,"title":{},"body":{"components/ViewerComponent.html":{}}}],["clientwidth",{"_index":4411,"title":{},"body":{"components/ViewerComponent.html":{}}}],["close",{"_index":1663,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{}}}],["close(target",{"_index":1670,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["closed",{"_index":3217,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["closeexpanded",{"_index":3509,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeopendone",{"_index":3517,"title":{},"body":{"classes/InitializationState.html":{}}}],["closes",{"_index":1652,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{}}}],["closesliderpopover(target",{"_index":2299,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["closeviewer",{"_index":3071,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["cloud_download",{"_index":2458,"title":{},"body":{"components/HeaderComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["cls",{"_index":4283,"title":{},"body":{"injectables/ThemingService.html":{}}}],["cluster_appmodule",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bodymodule",{"_index":439,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_exports",{"_index":441,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_imports",{"_index":440,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":787,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":788,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":789,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule",{"_index":1324,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_declarations",{"_index":1325,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_exports",{"_index":1326,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule",{"_index":1383,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule_declarations",{"_index":1384,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule_exports",{"_index":1385,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule",{"_index":1413,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_declarations",{"_index":1414,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_exports",{"_index":1416,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_imports",{"_index":1415,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule",{"_index":1623,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_declarations",{"_index":1624,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_exports",{"_index":1626,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_imports",{"_index":1625,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["cluster_colorschemepopupmodule",{"_index":1681,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_declarations",{"_index":1682,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_exports",{"_index":1684,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_imports",{"_index":1683,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["cluster_coremodule",{"_index":1901,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":1903,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1902,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":2121,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":2122,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":2123,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule",{"_index":2182,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":2183,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":2184,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule",{"_index":2332,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_declarations",{"_index":2333,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_exports",{"_index":2334,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule",{"_index":2371,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_declarations",{"_index":2372,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_exports",{"_index":2374,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_imports",{"_index":2373,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["cluster_filterspopovermodule",{"_index":2409,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_declarations",{"_index":2410,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_exports",{"_index":2412,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_imports",{"_index":2411,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["cluster_headermodule",{"_index":2475,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":2476,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":2478,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_imports",{"_index":2477,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule",{"_index":3058,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_declarations",{"_index":3059,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_exports",{"_index":3061,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_imports",{"_index":3060,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule",{"_index":3081,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_declarations",{"_index":3082,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_exports",{"_index":3084,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_imports",{"_index":3083,"title":{},"body":{"modules/ImageViewerContentModule.html":{}}}],["cluster_imageviewerlayersmodule",{"_index":3168,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_declarations",{"_index":3169,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_exports",{"_index":3171,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_imports",{"_index":3170,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule",{"_index":3196,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule_declarations",{"_index":3197,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule_exports",{"_index":3198,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule",{"_index":3201,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule_exports",{"_index":3203,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule_imports",{"_index":3202,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule",{"_index":3240,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_declarations",{"_index":3241,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_exports",{"_index":3243,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_imports",{"_index":3242,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{}}}],["cluster_infobuttonmodule",{"_index":3264,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":3265,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":3267,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":3266,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["cluster_infodialogmodule",{"_index":3393,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":3394,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":3395,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule",{"_index":3725,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_exports",{"_index":3727,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_imports",{"_index":3726,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule",{"_index":3824,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_declarations",{"_index":3825,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_exports",{"_index":3826,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule",{"_index":3988,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_declarations",{"_index":3989,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_exports",{"_index":3991,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_imports",{"_index":3990,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["cluster_ontologytreemodule",{"_index":4004,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_declarations",{"_index":4005,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_exports",{"_index":4006,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule",{"_index":4154,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule_declarations",{"_index":4155,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule_exports",{"_index":4156,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule",{"_index":4159,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_declarations",{"_index":4160,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_exports",{"_index":4162,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_imports",{"_index":4161,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["cluster_schemedropdownmodule",{"_index":4196,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_declarations",{"_index":4197,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_exports",{"_index":4199,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_imports",{"_index":4198,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["cluster_spinneroverlaymodule",{"_index":4232,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_declarations",{"_index":4233,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_exports",{"_index":4234,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":4263,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":4264,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_viewermodule",{"_index":4434,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_declarations",{"_index":4435,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_exports",{"_index":4436,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["code",{"_index":3108,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["codex.svg",{"_index":2810,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["codifies",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":3414,"title":{},"body":{"classes/InitializationState.html":{}}}],["collapse",{"_index":3512,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":3423,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":3508,"title":{},"body":{"classes/InitializationState.html":{}}}],["color",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["colorbarcomponent",{"_index":328,"title":{"components/ColorBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorbarmodule",{"_index":1382,"title":{"modules/ColorBarModule.html":{}},"body":{"modules/ColorBarModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["colorchange",{"_index":1343,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["colorchanged",{"_index":1338,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{}}}],["colorchanged(color",{"_index":1356,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{}}}],["coloridx",{"_index":1523,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["coloring",{"_index":4205,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["colorpickerlaunchercomponent",{"_index":331,"title":{"components/ColorPickerLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorpickerlaunchermodule",{"_index":1412,"title":{"modules/ColorPickerLauncherModule.html":{}},"body":{"modules/ColorPickerLauncherModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules.html":{},"overview.html":{}}}],["colors",{"_index":1350,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["colors.foreach((color",{"_index":3127,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["colors[order[index",{"_index":4496,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["colorscheme",{"_index":1340,"title":{"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{}},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["colorscheme.colors",{"_index":1353,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["colorschemecontentscomponent",{"_index":334,"title":{"components/ColorSchemeContentsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorschemecontentsmodule",{"_index":1622,"title":{"modules/ColorSchemeContentsModule.html":{}},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["colorschemepopupcomponent",{"_index":336,"title":{"components/ColorSchemePopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorschemepopupmodule",{"_index":1417,"title":{"modules/ColorSchemePopupModule.html":{}},"body":{"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["colorschemeselection",{"_index":1522,"title":{"interfaces/ColorSchemeSelection.html":{}},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/SchemeDropdownComponent.html":{}}}],["colorvalues",{"_index":4059,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["colorvalues.push(color",{"_index":4064,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["column",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["combined",{"_index":1899,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":2018,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["combines",{"_index":2064,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["come",{"_index":2761,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["coming",{"_index":2495,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["comlink",{"_index":1941,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["comma",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["common",{"_index":3309,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["common_options",{"_index":1590,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["commonmodule",{"_index":444,"title":{},"body":{"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{}}}],["compare",{"_index":2088,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["compatibility",{"_index":4260,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":2054,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"miscellaneous/enumerations.html":{}}}],["completion",{"_index":3515,"title":{},"body":{"classes/InitializationState.html":{}}}],["componenet",{"_index":3742,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["component",{"_index":101,"title":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["component's",{"_index":2216,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["component.injector.get(overlaycontainer",{"_index":4314,"title":{},"body":{"injectables/ThemingService.html":{}}}],["component.injector.get(renderer2",{"_index":4312,"title":{},"body":{"injectables/ThemingService.html":{}}}],["component.injector.get(themingservice",{"_index":4301,"title":{},"body":{"injectables/ThemingService.html":{}}}],["component.location.nativeelement",{"_index":4313,"title":{},"body":{"injectables/ThemingService.html":{}}}],["component_template",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["componentref",{"_index":4286,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["composes",{"_index":3869,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["compositelayer",{"_index":605,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["computational",{"_index":3298,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["computations",{"_index":3837,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computes",{"_index":2269,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["concept",{"_index":3339,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["condition",{"_index":3946,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["conditions",{"_index":4682,"title":{},"body":{"license.html":{}}}],["config",{"_index":1217,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["config.isolated",{"_index":3583,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["configs",{"_index":1260,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["configuration",{"_index":3555,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connect",{"_index":798,"title":{},"body":{"classes/CCFDatabase.html":{},"injectables/MessageService.html":{}}}],["connect(options",{"_index":821,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["connect(source",{"_index":3591,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":1730,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connectedposition",{"_index":2270,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["connecting",{"_index":1955,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connection",{"_index":4707,"title":{},"body":{"license.html":{}}}],["connects",{"_index":823,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consider",{"_index":4258,"title":{},"body":{"modules/StoreModule.html":{}}}],["console.warn(`unable",{"_index":2890,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["consortium",{"_index":4656,"title":{},"body":{"license.html":{}}}],["const",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["construction",{"_index":3304,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor",{"_index":470,"title":{},"body":{"classes/BodyUI.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["constructor(@inject(message_service_config",{"_index":3582,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["constructor(@optional",{"_index":1914,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["constructor(config",{"_index":3603,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(container",{"_index":4358,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor(data",{"_index":726,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["constructor(db",{"_index":948,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{}}}],["constructor(deckprops",{"_index":471,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["constructor(defaulttheme",{"_index":4278,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(dialog",{"_index":3252,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["constructor(dialogref",{"_index":3277,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(drawer",{"_index":4322,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(http",{"_index":3843,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["constructor(messageservice",{"_index":1704,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["constructor(ontologysearchservice",{"_index":3972,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["constructor(ontologyservice",{"_index":3756,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(options",{"_index":807,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["constructor(original",{"_index":2419,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(overlay",{"_index":2213,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["constructor(private",{"_index":1006,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/InfoButtonComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["constructor(props",{"_index":1187,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["constructor(public",{"_index":894,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{},"components/OntologySearchComponent.html":{}}}],["constructor(readonly",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/FlatNode.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["constructor(registry",{"_index":2942,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(source",{"_index":1984,"title":{},"body":{"injectables/DataState.html":{},"classes/MessageChannel.html":{}}}],["constructor(state",{"_index":3213,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["constructorparameters[0",{"_index":1149,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["contain",{"_index":1887,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ImageViewerLayersComponent.html":{}}}],["container",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["container.component.html",{"_index":1694,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":1693,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":2127,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":338,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["containerpayload",{"_index":1890,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":1783,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["containing",{"_index":51,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/ValueObject.html":{}}}],["contains",{"_index":1301,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{}}}],["contains_sequence",{"_index":2859,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["containshumangeneticsequences",{"_index":2499,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["containssequence",{"_index":2786,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["content",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["content'},{'name",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["content.component",{"_index":2378,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["content.component.html",{"_index":2343,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.scss",{"_index":1806,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts",{"_index":2341,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:16",{"_index":2348,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:21",{"_index":2347,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:26",{"_index":2350,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:31",{"_index":2349,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:36",{"_index":3072,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:38",{"_index":2355,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:39",{"_index":3073,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:44",{"_index":3074,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:46",{"_index":2352,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.module",{"_index":2414,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["content.module.ts",{"_index":2375,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["content/content.component",{"_index":1754,"title":{},"body":{"components/ContainerComponent.html":{},"modules/DrawerModule.html":{}}}],["content/filters",{"_index":2340,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{}}}],["content/image",{"_index":3069,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["content1",{"_index":1696,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":1697,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content?.contains(target",{"_index":1672,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["contentchildren",{"_index":1750,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":1732,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":1741,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":340,"title":{"components/ContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":1879,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["contentelement",{"_index":1634,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["contents",{"_index":1529,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["contents'},{'name",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["contents.component",{"_index":1629,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["contents.component.html",{"_index":1531,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.scss",{"_index":1530,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts",{"_index":1525,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:106",{"_index":1554,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:118",{"_index":1562,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:21",{"_index":1543,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:26",{"_index":1549,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:31",{"_index":1546,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:36",{"_index":1551,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:41",{"_index":1564,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:46",{"_index":1565,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:51",{"_index":1567,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:52",{"_index":1570,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:59",{"_index":1572,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:60",{"_index":1575,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:67",{"_index":1577,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:68",{"_index":1579,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:70",{"_index":1541,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:91",{"_index":1552,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:98",{"_index":1560,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.module",{"_index":1687,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["contents.module.ts",{"_index":1627,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["contents/color",{"_index":1524,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{}}}],["contentsvisible",{"_index":2196,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["context",{"_index":876,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["context.jsonld",{"_index":891,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/OldRuiData.html":{}}}],["continues",{"_index":3340,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contract",{"_index":3384,"title":{},"body":{"components/InfoDialogComponent.html":{},"license.html":{}}}],["control",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{}}}],["controller",{"_index":529,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["controls",{"_index":1658,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{}}}],["convenience",{"_index":452,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["converted",{"_index":2680,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["convertoldruitojsonld",{"_index":2563,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["convertoldruitojsonld(data",{"_index":3671,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["convertoldruitojsonld(ruilocation",{"_index":2767,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["converts",{"_index":2678,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"classes/ImageViewerLayer.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OldRuiData.html":{},"interfaces/ValueObject.html":{}}}],["coordinate",{"_index":3310,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["coordinate_system",{"_index":616,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordinate_system.cartesian",{"_index":678,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordinatesystem",{"_index":677,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordination/office",{"_index":3364,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["copied",{"_index":3624,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["copies",{"_index":4677,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4663,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4654,"title":{},"body":{"license.html":{}}}],["core",{"_index":1915,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/color",{"_index":3075,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["core/models/image",{"_index":1409,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["core/models/ontology",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/data",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{}}}],["core/services/ontology",{"_index":3792,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/theming/theming.service",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/data/data.state",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{}}}],["core/store/ontology/ontology.state",{"_index":3984,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["core/store/viewer/viewer.state",{"_index":3227,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["coremodule",{"_index":394,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["corresponds",{"_index":1394,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["count",{"_index":14,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["counter",{"_index":3562,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["counts",{"_index":844,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["cover",{"_index":4149,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["coverage",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["covid",{"_index":3620,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["covidtiff",{"_index":3619,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["create",{"_index":2215,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["create(original",{"_index":2425,"title":{},"body":{"classes/FlatNode.html":{}}}],["created",{"_index":2255,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["createentitycollections",{"_index":4465,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["creategraph",{"_index":946,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["createlayerconfigs",{"_index":1221,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["createlayers",{"_index":4442,"title":{},"body":{"injectables/ViewerState.html":{}}}],["createlayers(ids",{"_index":4445,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["createloader",{"_index":1139,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createloader(source.type",{"_index":1206,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["createmodel(nodemap",{"_index":3898,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["createometiffloader",{"_index":3611,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createruiorganlookup",{"_index":2628,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["creates",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewerLayer.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{}}}],["createselectionlabel(ontolgyselection",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["createvivviews",{"_index":1220,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["createzarrloader",{"_index":3609,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createzarrloader(info",{"_index":3628,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["creating",{"_index":1757,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["creation",{"_index":3256,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creation_date",{"_index":2842,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator",{"_index":2840,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_first_name",{"_index":3688,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_last_name",{"_index":3689,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_orcid",{"_index":3690,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["credits",{"_index":4647,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":2219,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["css",{"_index":4379,"title":{},"body":{"components/ViewerComponent.html":{},"dependencies.html":{}}}],["ctrlclick",{"_index":587,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{}}}],["ctrlkey",{"_index":585,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["cubegeometry",{"_index":628,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["cubes",{"_index":691,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["cuboid",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":736,"title":{},"body":{"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"miscellaneous/enumerations.html":{}}}],["currently",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"injectables/DataSourceService.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["currentstate",{"_index":592,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["currentstate.data",{"_index":601,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["currentstate.zoomopacity",{"_index":600,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["currentstates",{"_index":1241,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["currentstates[view.id",{"_index":1243,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["currentviewstate",{"_index":1265,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["cursor",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["customizedcolor",{"_index":1600,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["cyberinfrastructure",{"_index":4649,"title":{},"body":{"index.html":{}}}],["d",{"_index":681,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.organ",{"_index":2750,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["d.scenegraph",{"_index":693,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.uuid",{"_index":2782,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["d.wireframe",{"_index":694,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.x",{"_index":3695,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d.y",{"_index":3697,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d.z",{"_index":3699,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d1e5f0",{"_index":1454,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d47d60",{"_index":1514,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d7301f",{"_index":1478,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d73027",{"_index":1466,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d8daeb",{"_index":1471,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d9ef8b",{"_index":1462,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["damages",{"_index":4703,"title":{},"body":{"license.html":{}}}],["dark",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data",{"_index":36,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["data.aggregatedata$.subscribe",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["data.alignment_datetime",{"_index":3692,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_id",{"_index":3685,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_first_name",{"_index":3686,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_last_name",{"_index":3687,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_orcid",{"_index":3691,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.colorscheme.colors[0",{"_index":3120,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data.created_by_user_displayname",{"_index":2841,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.description",{"_index":2740,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.display_doi",{"_index":2738,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.filter$.pipe(pluck('ontologyterms",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["data.group_name",{"_index":2746,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.group_uuid",{"_index":2742,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.id",{"_index":3119,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data.label",{"_index":3078,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["data.length",{"_index":670,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["data.listdata$.subscribe",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["data.organname",{"_index":3077,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["data.reference_organ_id",{"_index":3673,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.rui_location",{"_index":2758,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.specimen_type",{"_index":2707,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.storage.googleapis.com/test",{"_index":4382,"title":{},"body":{"components/ViewerComponent.html":{}}}],["data.termoccurencesdata$.subscribe",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["data.tissue_object_rotation",{"_index":3680,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_object_size",{"_index":3679,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point",{"_index":3681,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.x",{"_index":3665,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.y",{"_index":3666,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.z",{"_index":3667,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.ts",{"_index":2492,"title":{},"body":{"classes/HuBMAPEntity.html":{},"miscellaneous/typealiases.html":{}}}],["data.ts:100",{"_index":2541,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:101",{"_index":2518,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:102",{"_index":2524,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:104",{"_index":2534,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:105",{"_index":2530,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:107",{"_index":2545,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:108",{"_index":2517,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:109",{"_index":2521,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:110",{"_index":2531,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:111",{"_index":2537,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:112",{"_index":2525,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:113",{"_index":2526,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:115",{"_index":2533,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:116",{"_index":2532,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:117",{"_index":2543,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:118",{"_index":2542,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:120",{"_index":2536,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:121",{"_index":2535,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:123",{"_index":2538,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:124",{"_index":2539,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:125",{"_index":2540,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:126",{"_index":2547,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:127",{"_index":2523,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:128",{"_index":2519,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:129",{"_index":2522,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:130",{"_index":2549,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:131",{"_index":2550,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:132",{"_index":2544,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:133",{"_index":2516,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:135",{"_index":2520,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:300",{"_index":2551,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data.ts:99",{"_index":2527,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["data/data.state",{"_index":4243,"title":{},"body":{"modules/StoreModule.html":{}}}],["data/hubmap/pyramid_0.0.2/spraggins.ome.tif",{"_index":4383,"title":{},"body":{"components/ViewerComponent.html":{}}}],["data?.length",{"_index":560,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["data_types",{"_index":2854,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["dataaction",{"_index":1994,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["database",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["database.ts",{"_index":794,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["database.ts:106",{"_index":834,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:116",{"_index":829,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:126",{"_index":854,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:136",{"_index":852,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:147",{"_index":839,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:161",{"_index":832,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:171",{"_index":841,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:181",{"_index":837,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:190",{"_index":846,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:47",{"_index":819,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:49",{"_index":812,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:51",{"_index":809,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:58",{"_index":814,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:70",{"_index":822,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database/src/lib/ccf",{"_index":793,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["database/src/lib/hubmap/hubmap",{"_index":2491,"title":{},"body":{"classes/HuBMAPEntity.html":{},"miscellaneous/typealiases.html":{}}}],["database/src/lib/hubmap/old",{"_index":3647,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["database/src/lib/interfaces.ts",{"_index":7,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["database/src/lib/interfaces.ts:90",{"_index":1921,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/interfaces.ts:92",{"_index":1919,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/interfaces.ts:94",{"_index":1920,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/spatial",{"_index":4203,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["datafactory",{"_index":859,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["dataloading",{"_index":4081,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["dataquerystate",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["dataquerystate.completed",{"_index":2025,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["dataquerystate.running",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["dataset",{"_index":2529,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["datasource",{"_index":92,"title":{"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/ListResult.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchableItem.html":{},"components/ViewerComponent.html":{}}}],["datasourceservice",{"_index":160,"title":{"injectables/DataSourceService.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datastate",{"_index":167,"title":{"injectables/DataState.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"modules/StoreModule.html":{}}}],["datastatemodel",{"_index":2076,"title":{"interfaces/DataStateModel.html":{}},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datatypes",{"_index":2500,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["datatypes.add(t",{"_index":2789,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["datatypes].sort",{"_index":2796,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["dataurl",{"_index":2860,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["date",{"_index":4206,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["date(data.create_timestamp",{"_index":2843,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["date(data.last_modified_timestamp",{"_index":2846,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["db",{"_index":950,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["db.getaggregateresults(filter",{"_index":1966,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getimageviewerdata(iri",{"_index":1968,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getlistresults(filter",{"_index":1965,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytermoccurences(filter",{"_index":1967,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["dboptions",{"_index":1927,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["deal",{"_index":4666,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":4708,"title":{},"body":{"license.html":{}}}],["debug",{"_index":90,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["debugging",{"_index":88,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["decided",{"_index":4137,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["decides",{"_index":1298,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["decisions",{"_index":3143,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["deck",{"_index":457,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["deck(props",{"_index":548,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["deck.gl/core",{"_index":512,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["deck.gl/geo",{"_index":4608,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":4609,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":619,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["deckcallbackargs",{"_index":1151,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["deckprops",{"_index":475,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["declarations",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["decompress",{"_index":655,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["decoration",{"_index":2467,"title":{},"body":{"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["decorator",{"_index":515,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"dependencies.html":{}}}],["decorators",{"_index":494,"title":{},"body":{"classes/BodyUI.html":{},"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"injectables/DataState.html":{},"components/DualSliderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/InfoDialogComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["deep",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["def5fd76",{"_index":2626,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["default",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["default_ccf_db_options",{"_index":813,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["default_color_schemes",{"_index":1519,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["default_color_schemes[0",{"_index":4172,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["default_filter",{"_index":2045,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["default_icons",{"_index":2115,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default_theme",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["defaultchannelconfig",{"_index":1162,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["defaulticondefinition",{"_index":2097,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["defaultorder",{"_index":3088,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaults",{"_index":2077,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaultscheme",{"_index":4473,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaulttheme",{"_index":4272,"title":{},"body":{"injectables/ThemingService.html":{}}}],["deferred",{"_index":3401,"title":{},"body":{"classes/InitializationState.html":{}}}],["deficient",{"_index":637,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["defined",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"changelog.html":{}}}],["definition",{"_index":2101,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":2920,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":2919,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["degree",{"_index":3717,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["delay",{"_index":916,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["delete",{"_index":3902,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["demo",{"_index":3344,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["demo_source",{"_index":4380,"title":{},"body":{"components/ViewerComponent.html":{}}}],["department",{"_index":3379,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dependencies",{"_index":384,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":2493,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["descendant_ids",{"_index":2882,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["descendants",{"_index":1733,"title":{},"body":{"components/ContainerComponent.html":{},"classes/HuBMAPEntity.html":{}}}],["describes",{"_index":1277,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["describing",{"_index":4212,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{}}}],["desired",{"_index":1114,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["detail",{"_index":4055,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["detailed",{"_index":3208,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["detailheight",{"_index":4417,"title":{},"body":{"components/ViewerComponent.html":{}}}],["details",{"_index":3248,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["detailview",{"_index":4045,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["detailwidth",{"_index":4416,"title":{},"body":{"components/ViewerComponent.html":{}}}],["detect",{"_index":2285,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detected",{"_index":2235,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detection",{"_index":1717,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":1710,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["determine",{"_index":4105,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["determines",{"_index":1349,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["develop",{"_index":3294,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["developed",{"_index":4648,"title":{},"body":{"index.html":{}}}],["development",{"_index":1957,"title":{},"body":{"injectables/DataSourceService.html":{},"components/InfoDialogComponent.html":{}}}],["developmentmode",{"_index":4257,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":4559,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":3255,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["dialog's",{"_index":3280,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog'},{'name",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dialog.component",{"_index":3260,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":3275,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.scss",{"_index":3274,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts",{"_index":3269,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":3279,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":3286,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":3285,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":3283,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.module",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":3396,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialogref",{"_index":3276,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogue",{"_index":3258,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["didzoom",{"_index":564,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["different",{"_index":3544,"title":{},"body":{"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{}}}],["dim",{"_index":1120,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["dimension",{"_index":4208,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["dimension_units",{"_index":3700,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["dimensions",{"_index":1115,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["direct",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["directedgraph",{"_index":951,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["direction",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["directive",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directives",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directly",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["director",{"_index":3365,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["disable",{"_index":632,"title":{},"body":{"classes/BodyUILayer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["disabled",{"_index":4405,"title":{},"body":{"components/ViewerComponent.html":{}}}],["discrete",{"_index":1375,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{}}}],["diseases",{"_index":3377,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["display",{"_index":49,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":1347,"title":{},"body":{"components/ColorBarComponent.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["displayformatter",{"_index":3751,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displayformatter(option",{"_index":3764,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displaying",{"_index":3180,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{}}}],["displaylabel",{"_index":3881,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["displays",{"_index":1391,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["distinct",{"_index":2026,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["distribute",{"_index":4673,"title":{},"body":{"license.html":{}}}],["div",{"_index":1392,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["doc",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1650,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["document:click",{"_index":1638,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["document:click(target",{"_index":1647,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["documentation",{"_index":3324,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"license.html":{}}}],["docvalue_fields",{"_index":2885,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["doi",{"_index":2501,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["dom",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["domsanitizer",{"_index":2898,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["don't",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["donor",{"_index":2502,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["donor_id",{"_index":2847,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["donordescription",{"_index":2710,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["donordescription.includes('female",{"_index":2713,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["donordescription.includes('male",{"_index":2714,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["donordescription.match(/age",{"_index":2716,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["down",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["download",{"_index":37,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["downloadclicked",{"_index":2444,"title":{},"body":{"components/HeaderComponent.html":{}}}],["downloadtooltip",{"_index":39,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["downloadurl",{"_index":38,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["dr1_vu_thumbs",{"_index":2569,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["dr1_vu_thumbs.has(thumb",{"_index":2827,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["dracoloader",{"_index":623,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["dracoworkerloader",{"_index":624,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["drawer",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["drawer.close",{"_index":4343,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":4342,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":3434,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":3435,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":4344,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":1792,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":1755,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":1862,"title":{},"body":{"components/ContentComponent.html":{}}}],["drawercontainerschanged",{"_index":1886,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawerexpanded",{"_index":2385,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["drawerinitialized",{"_index":1893,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":395,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":1898,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":1791,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":1894,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":2131,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown'},{'name",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dropdown.component",{"_index":2190,"title":{},"body":{"modules/DropdownModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["dropdown.component.html",{"_index":2133,"title":{},"body":{"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2132,"title":{},"body":{"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":4168,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:18",{"_index":4174,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:23",{"_index":4173,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:28",{"_index":4175,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:33",{"_index":4180,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:38",{"_index":4176,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:46",{"_index":4178,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.module",{"_index":3176,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["dropdown.module.ts",{"_index":4200,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["dropdown/scheme",{"_index":3175,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{}}}],["dropdowncomponent",{"_index":343,"title":{"components/DropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["dropdownmodule",{"_index":2181,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["dual",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dualslidercomponent",{"_index":345,"title":{"components/DualSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["dualslidermodule",{"_index":396,"title":{"modules/DualSliderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["due",{"_index":636,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["duration",{"_index":1875,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["during",{"_index":71,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"injectables/ThemingService.html":{}}}],["dynamic",{"_index":1368,"title":{},"body":{"components/ColorBarComponent.html":{},"dependencies.html":{}}}],["dynamically",{"_index":1390,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["e",{"_index":497,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/HuBMAPEntity.html":{}}}],["e.contains_human_genetic_sequences",{"_index":2793,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["e.data_types",{"_index":2787,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["e.entity_type",{"_index":2706,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["e.info",{"_index":713,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["e.isdragging",{"_index":541,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["e.object",{"_index":579,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["e.object['@id",{"_index":580,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["e.picked",{"_index":577,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["e.specimen_type",{"_index":2709,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["e1b986",{"_index":1504,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e3b842",{"_index":1513,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e65100",{"_index":1437,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e91e63",{"_index":1436,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["each",{"_index":3564,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ease",{"_index":1878,"title":{},"body":{"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{}}}],["ed43",{"_index":2611,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ed44",{"_index":2605,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["edc2",{"_index":2618,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["edf8fb",{"_index":1491,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef6548",{"_index":1479,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef8a62",{"_index":1457,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef9a9a",{"_index":1447,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["effect",{"_index":2147,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["effects",{"_index":524,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["efficient",{"_index":3316,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["effort",{"_index":3353,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["element",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["element.getboundingclientrect",{"_index":3482,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement.contains(target",{"_index":2300,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["elementref",{"_index":740,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ViewerComponent.html":{}}}],["ellipsis",{"_index":3054,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["emit",{"_index":1291,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{}}}],["emits",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["emitted",{"_index":1520,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{}}}],["emitter",{"_index":3762,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["emitters",{"_index":4074,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["emitting",{"_index":1558,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/DataSourceService.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ResultsBrowserComponent.html":{}}}],["empty",{"_index":3860,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["empty_data",{"_index":3222,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["empty_result",{"_index":3224,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["enable",{"_index":3768,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["enabled",{"_index":1820,"title":{},"body":{"components/ContentComponent.html":{}}}],["enables",{"_index":1367,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["enableselection",{"_index":1341,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["encapsulates",{"_index":3966,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["encoded",{"_index":2981,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["end",{"_index":1766,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["end?.expanded",{"_index":1873,"title":{},"body":{"components/ContentComponent.html":{}}}],["end?.opened",{"_index":1872,"title":{},"body":{"components/ContentComponent.html":{}}}],["enddrawers",{"_index":1793,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":1796,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":1799,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":1871,"title":{},"body":{"components/ContentComponent.html":{}}}],["enough",{"_index":3111,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["ensures",{"_index":3880,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enter",{"_index":2243,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["entire",{"_index":4248,"title":{},"body":{"modules/StoreModule.html":{}}}],["entities",{"_index":80,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["entity",{"_index":84,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["entity.owl",{"_index":2690,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["entityid",{"_index":639,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["entitytype",{"_index":2503,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["entityupdate",{"_index":4463,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["entries",{"_index":2682,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["entries.map(e",{"_index":2693,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["entry",{"_index":3053,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{}}}],["entry.displaylabel.join().includes",{"_index":3808,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.label",{"_index":3048,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["entry.node.label.tolowercase",{"_index":3809,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.value",{"_index":3049,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["enum",{"_index":2050,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["enumerations",{"_index":4641,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1942,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["environment.dboptions",{"_index":1952,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["environment.disabledbworker",{"_index":1946,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["environment.organnodes",{"_index":3938,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["environment.production",{"_index":1961,"title":{},"body":{"injectables/DataSourceService.html":{},"modules/StoreModule.html":{}}}],["environments/environment",{"_index":1943,"title":{},"body":{"injectables/DataSourceService.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":1760,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["error('the",{"_index":1916,"title":{},"body":{"modules/CoreModule.html":{}}}],["error('theming",{"_index":4310,"title":{},"body":{"injectables/ThemingService.html":{}}}],["error(`multiple",{"_index":1769,"title":{},"body":{"components/ContainerComponent.html":{}}}],["error(`pyramid",{"_index":3639,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["errors",{"_index":1758,"title":{},"body":{"components/ContainerComponent.html":{}}}],["etc",{"_index":1897,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["ethnicity",{"_index":2504,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["eui",{"_index":3328,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["euler",{"_index":975,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["event",{"_index":503,"title":{},"body":{"classes/BodyUI.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["event.checked",{"_index":1305,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["event.interactionstate?.iszooming",{"_index":591,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["event.key",{"_index":2312,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["event.pagey",{"_index":1676,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["event.target",{"_index":1646,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["event.viewstate",{"_index":602,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["event.viewstate.zoom",{"_index":595,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["eventemitter",{"_index":734,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["eventemitter(true",{"_index":3466,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":1297,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["everything",{"_index":2079,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["everytime",{"_index":4100,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["evolve",{"_index":3341,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["evt",{"_index":750,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["evt.preventdefault",{"_index":751,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["example",{"_index":3593,"title":{},"body":{"classes/MessageChannel.html":{},"injectables/MessageService.html":{}}}],["except",{"_index":3569,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["excludes",{"_index":2877,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["executionstrategy",{"_index":4261,"title":{},"body":{"modules/StoreModule.html":{}}}],["exists",{"_index":2886,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["expand",{"_index":3511,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":3519,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":3426,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandable",{"_index":2418,"title":{},"body":{"classes/FlatNode.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["expandcollapsedone",{"_index":3521,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":1895,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":3462,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":3419,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":3467,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":3420,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":3422,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":3472,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":3505,"title":{},"body":{"classes/InitializationState.html":{}}}],["expansion",{"_index":3050,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["expert",{"_index":3354,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["exploration",{"_index":3327,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["exploration.module",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["exploration.module.ts",{"_index":3732,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["exploration/ontology",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["exportas",{"_index":1690,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["express",{"_index":4690,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":4214,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["extdeckprops",{"_index":1150,"title":{"interfaces/ExtDeckProps.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["extended",{"_index":3425,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":604,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["external_link",{"_index":42,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["externalid",{"_index":3669,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["extracting",{"_index":2962,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["f",{"_index":758,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["f1a340",{"_index":1473,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f2f424",{"_index":1512,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f7f7f7",{"_index":1455,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f8fc9d",{"_index":1503,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["factor",{"_index":983,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["factory",{"_index":3560,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["fade",{"_index":2146,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["faded",{"_index":1830,"title":{},"body":{"components/ContentComponent.html":{}}}],["fadein",{"_index":2154,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["fadeinout",{"_index":1809,"title":{},"body":{"components/ContentComponent.html":{}}}],["fafafa",{"_index":1322,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["fake",{"_index":3891,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["false",{"_index":565,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["fc8d59",{"_index":1465,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fdbb84",{"_index":1480,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fdd49e",{"_index":1481,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fddbc7",{"_index":1456,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["features",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["fee08b",{"_index":1464,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fee0b6",{"_index":1472,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fef0d9",{"_index":1482,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["female",{"_index":62,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["feminine",{"_index":2723,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["fetch",{"_index":2113,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["fetch(dataurl",{"_index":2872,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["fetch(dataurl).then(r",{"_index":2863,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["fetch(url",{"_index":3643,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["fetches",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["few",{"_index":634,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ffb74d",{"_index":1449,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffcc80",{"_index":1433,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffe31c",{"_index":1494,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffff8d",{"_index":1434,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffffbf",{"_index":1463,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["field",{"_index":22,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchableItem.html":{},"interfaces/ValueObject.html":{}}}],["fields",{"_index":2963,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["file_format",{"_index":4209,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["file_subpath",{"_index":4211,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["files",{"_index":4665,"title":{},"body":{"license.html":{}}}],["fill",{"_index":2168,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["filler",{"_index":2469,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filter",{"_index":73,"title":{"interfaces/Filter.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["filter's",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(f",{"_index":2774,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["filter(l",{"_index":711,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["filter(s",{"_index":1101,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter(value",{"_index":3799,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["filter?.debug",{"_index":1088,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter?.ontologyterms",{"_index":1065,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter?.sex",{"_index":1054,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filterbox",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["filterbox.removebox",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["filterchange",{"_index":725,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["filtered",{"_index":3573,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{}}}],["filteredresults",{"_index":3748,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filtering",{"_index":3319,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["filteronchange",{"_index":1274,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filteronchange(event",{"_index":1292,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filters",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["filters?.agerange[0",{"_index":2454,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.agerange[1",{"_index":2455,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.bmirange[0",{"_index":2456,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.bmirange[1",{"_index":2457,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.sex",{"_index":2453,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filterschange",{"_index":2346,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["filterscontentcomponent",{"_index":348,"title":{"components/FiltersContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["filterscontentmodule",{"_index":2370,"title":{"modules/FiltersContentModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filterspopovercomponent",{"_index":169,"title":{"components/FiltersPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["filterspopovermodule",{"_index":397,"title":{"modules/FiltersPopoverModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filtersvisible",{"_index":2382,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["finalize",{"_index":1194,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["find",{"_index":2768,"title":{},"body":{"classes/HuBMAPEntity.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["find((organ",{"_index":2751,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["find(nodemap[''].children",{"_index":3899,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["findids",{"_index":865,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["findids(this.store",{"_index":923,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["finished",{"_index":1891,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["fired",{"_index":1667,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["first",{"_index":3337,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["fit",{"_index":4148,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["fitness",{"_index":4695,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{}}}],["fixes",{"_index":3663,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["fixoldruikidneydata(data",{"_index":3664,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["fixuflruilocation",{"_index":2560,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["fixuflruilocation(ruilocation",{"_index":2764,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["flat",{"_index":2423,"title":{},"body":{"classes/FlatNode.html":{}}}],["flatmap",{"_index":1144,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatmap(loaders",{"_index":1257,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatmap(vivviews",{"_index":1234,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatnode",{"_index":2415,"title":{"classes/FlatNode.html":{}},"body":{"classes/FlatNode.html":{}}}],["flatnode(original",{"_index":2436,"title":{},"body":{"classes/FlatNode.html":{}}}],["flex",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["float",{"_index":3389,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["floor",{"_index":1591,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["florida",{"_index":2614,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["flow",{"_index":2953,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["fly",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":4681,"title":{},"body":{"license.html":{}}}],["font",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["footer",{"_index":3391,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["foreach",{"_index":3871,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(current.children",{"_index":3920,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(nodemap",{"_index":3896,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(organnodes",{"_index":3910,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(t",{"_index":2788,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["form",{"_index":847,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{}}}],["format",{"_index":2554,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["formatlabel",{"_index":3839,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["formatlabel(label",{"_index":3851,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formats",{"_index":3854,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formatter",{"_index":3767,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formcontrol",{"_index":3749,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formsmodule",{"_index":3828,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["forwards",{"_index":2169,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["found",{"_index":3855,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foundational",{"_index":3300,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["framework",{"_index":3311,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["free",{"_index":4660,"title":{},"body":{"license.html":{}}}],["from(this.getdb().then((db",{"_index":1964,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["fromeuler",{"_index":972,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["full",{"_index":3271,"title":{},"body":{"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["fullscreen_exit",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["fully",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2068,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["fund",{"_index":3360,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["funded",{"_index":3358,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["furnished",{"_index":4680,"title":{},"body":{"license.html":{}}}],["further",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["gender",{"_index":59,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["generate",{"_index":1282,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["generation",{"_index":3295,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["genericmessage",{"_index":1882,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":1883,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":1884,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["get(d",{"_index":2771,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["get(data",{"_index":2683,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["get(e",{"_index":2686,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["get(event",{"_index":3810,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["get(id",{"_index":828,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["get(this.donor",{"_index":2720,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["getaggregateresults",{"_index":799,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":96,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getaggregateresults(this.getids(filter",{"_index":939,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getarguments",{"_index":2939,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getarguments(undefined",{"_index":2944,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getautocolor",{"_index":4443,"title":{},"body":{"injectables/ViewerState.html":{}}}],["getautocolor(index",{"_index":4447,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["getbackground",{"_index":3114,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["getbrightness",{"_index":3090,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["getbrightnesshigh",{"_index":1571,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getbrightnesslow",{"_index":1566,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getchannelconfigs",{"_index":3034,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getchannelnames",{"_index":3032,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getchildren",{"_index":3840,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getchildren(node",{"_index":3858,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getchildrenfunc",{"_index":3883,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["getcolor",{"_index":683,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getcontent",{"_index":1745,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getcursor",{"_index":538,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["getdb",{"_index":1928,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getentityscenenodes",{"_index":1034,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getentityscenenodes(filter",{"_index":1040,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getexpandable",{"_index":2430,"title":{},"body":{"classes/FlatNode.html":{}}}],["getgradientstyle",{"_index":1365,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["gethaswrappedcontent",{"_index":1748,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getheight",{"_index":3026,"title":{},"body":{"classes/ImageViewer.html":{}}}],["geticon",{"_index":4334,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getids",{"_index":800,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["getids(filter",{"_index":833,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getimageviewerdata",{"_index":801,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getimageviewerdata(id",{"_index":836,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getimageviewerdata(iri",{"_index":98,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getindexofmatch",{"_index":3841,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getindexofmatch(label",{"_index":3861,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getlabel",{"_index":2427,"title":{},"body":{"classes/FlatNode.html":{}}}],["getlayers",{"_index":3186,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["getlistresult",{"_index":868,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getlistresult(this.store",{"_index":931,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getlistresults",{"_index":802,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getlistresults(filter",{"_index":94,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getloaders",{"_index":3030,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getmessages",{"_index":3571,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":3594,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":3574,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":3595,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":3577,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmethodname",{"_index":2931,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getmethodname(undefined",{"_index":2946,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getontologytermoccurences",{"_index":803,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":840,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(this.getids(filter",{"_index":940,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getpickinginfo",{"_index":608,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":612,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getrangelabel",{"_index":2267,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["getreferencebody",{"_index":1035,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferencebody(filter",{"_index":1042,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getreferenceorgans",{"_index":1036,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferenceorgans(filter",{"_index":1044,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getreferencescenenodes",{"_index":1037,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferencescenenodes(filter",{"_index":1046,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gets",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorPickerLauncherComponent.html":{},"injectables/DataSourceService.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{}}}],["getscene",{"_index":804,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{}}}],["getscene(filter",{"_index":845,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getscenenode",{"_index":1038,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getscenenode(source",{"_index":1049,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getsources",{"_index":3028,"title":{},"body":{"classes/ImageViewer.html":{},"components/ViewerComponent.html":{}}}],["getspatialentities",{"_index":805,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["getspatialentities(filter",{"_index":851,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialentity",{"_index":978,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getspatialentity(this.db.store",{"_index":1058,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getspatialentityforentity",{"_index":870,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialentityforentity(this.store",{"_index":928,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialobjectreference",{"_index":979,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["getspatialplacement",{"_index":980,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["getter/setter",{"_index":3455,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":4274,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getting",{"_index":3882,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["gettransformationmatrix",{"_index":947,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["gettransformationmatrix(sourceiri",{"_index":963,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["gettransformmatrix",{"_index":680,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gettransparency",{"_index":1576,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getvivid",{"_index":1145,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["getwidth",{"_index":3024,"title":{},"body":{"classes/ImageViewer.html":{}}}],["github",{"_index":3326,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["give",{"_index":3563,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["global",{"_index":1954,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["globally",{"_index":1959,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis",{"_index":1953,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis.dboptions",{"_index":1956,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":3490,"title":{},"body":{"classes/InitializationState.html":{}}}],["gloptions",{"_index":1252,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["gltf",{"_index":652,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.nodes?.find((n",{"_index":658,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene",{"_index":664,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene.nodes[gltf.scene.nodes.length",{"_index":662,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene?.nodes?.length",{"_index":661,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scenes",{"_index":666,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltfloader",{"_index":626,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["grab",{"_index":543,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["grabbing",{"_index":542,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["gradient",{"_index":1362,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{}}}],["gradient(to",{"_index":3126,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["gradient.hidden",{"_index":4125,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["gradienthighlight",{"_index":1339,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["gradientstyle",{"_index":1345,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["grant",{"_index":3371,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["granted",{"_index":4659,"title":{},"body":{"license.html":{}}}],["graph",{"_index":796,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/HuBMAPEntity.html":{},"modules.html":{}}}],["graph.ts",{"_index":942,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:38",{"_index":949,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:44",{"_index":962,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:63",{"_index":953,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:66",{"_index":956,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:69",{"_index":960,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:73",{"_index":965,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graphology",{"_index":968,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["greeenorange",{"_index":1429,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["green",{"_index":4393,"title":{},"body":{"components/ViewerComponent.html":{}}}],["greenred",{"_index":1459,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["group",{"_index":1268,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/HuBMAPEntity.html":{}}}],["group_uuid_mapping",{"_index":2603,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["group_uuid_mapping[groupuuid",{"_index":2745,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["groupname",{"_index":2505,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["groupuuid",{"_index":2506,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["grow",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["half",{"_index":3424,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":2108,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["handlemessage",{"_index":1699,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":1712,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":1823,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handler",{"_index":2250,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["handles",{"_index":2342,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/InfoDialogComponent.html":{}}}],["handling",{"_index":2217,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["happen",{"_index":2351,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["happy",{"_index":4253,"title":{},"body":{"modules/StoreModule.html":{}}}],["has3dobject",{"_index":1102,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hash",{"_index":3887,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["hasimage",{"_index":2691,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hasimageprovider",{"_index":2692,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hasspatialentity",{"_index":85,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["hasterm",{"_index":1066,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.kidney",{"_index":1082,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.left_kidney",{"_index":1085,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.right_kidney",{"_index":1083,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.spleen",{"_index":1087,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["haswrappedcontent",{"_index":1703,"title":{},"body":{"components/ContainerComponent.html":{}}}],["hbm",{"_index":2620,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hbm_organ_labels",{"_index":2668,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hbm_organ_labels[this.organname",{"_index":2837,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hbm_organs",{"_index":2638,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hbm_organs[this.organname",{"_index":2752,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hbm_prefix",{"_index":2566,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["header",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["header'},{'name",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["header.component",{"_index":2489,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":2442,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":2441,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.module",{"_index":1911,"title":{},"body":{"modules/CoreModule.html":{}}}],["headercomponent",{"_index":351,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["headermodule",{"_index":1904,"title":{"modules/HeaderModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["headers",{"_index":2867,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["headers.authorization",{"_index":2870,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["heading",{"_index":3388,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["health",{"_index":3380,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["heart",{"_index":2670,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["height",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["helper",{"_index":1756,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["here",{"_index":2120,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/InfoDialogComponent.html":{}}}],["hereby",{"_index":4658,"title":{},"body":{"license.html":{}}}],["hex",{"_index":3107,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ViewerComponent.html":{}}}],["hex.length",{"_index":4386,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hextorgbtriple(hex",{"_index":4384,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hextorgbtriple(layer.color",{"_index":4427,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hhsn316201300006w/hhsn27200002",{"_index":3385,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["hidden",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["hide",{"_index":2408,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["hidelimitlabels",{"_index":1594,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["hidepointerlabels",{"_index":1595,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["hides",{"_index":2393,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["hiding",{"_index":3270,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["high",{"_index":1573,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["highlightcolor",{"_index":673,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["highlighted",{"_index":45,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/ColorBarComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["highlighted.has(entity.entityid",{"_index":1099,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["highlighted.has(s['@id",{"_index":934,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["highlightedentities",{"_index":81,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BodyUiComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["highlightedentities.concat([node.entityid",{"_index":782,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlightedentities.length",{"_index":779,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlightedentities[0",{"_index":780,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlighting",{"_index":1363,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["highvalue",{"_index":2197,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hits.hits",{"_index":2684,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hive",{"_index":3352,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["holders",{"_index":4700,"title":{},"body":{"license.html":{}}}],["hook",{"_index":2238,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["hooked",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":1800,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding",{"_index":1751,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":3471,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":1850,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('@openclose",{"_index":3470,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":1770,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.active",{"_index":4229,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["hostbinding('class.ccf",{"_index":3450,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":1845,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('style.margin",{"_index":1847,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbindings",{"_index":1702,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["hostlistener",{"_index":1666,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":3520,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":3516,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('document:click",{"_index":1668,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["hostlistener('document:mousemove",{"_index":2297,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlistener('document:touchstart",{"_index":2298,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlisteners",{"_index":1637,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["hover",{"_index":1381,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ht",{"_index":2645,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["html",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":520,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["htmlelement",{"_index":522,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"injectables/ThemingService.html":{}}}],["htmlinputelement).value",{"_index":2311,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["http",{"_index":3847,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":776,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":771,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":768,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0013702",{"_index":2049,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["http://purl.org/ccf/0.5",{"_index":3684,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["http://purl.org/ccf/latest/ccf",{"_index":2689,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhleftkidney",{"_index":770,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhrightkidney",{"_index":766,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleen",{"_index":772,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc1",{"_index":773,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc2",{"_index":774,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc3",{"_index":775,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://www.geneontology.org/formats/oboinowl#hasexactsynonym",{"_index":2960,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["http://www.w3.org/2000/01/rdf",{"_index":2957,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["httpclient",{"_index":3844,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["httpclientmodule",{"_index":1908,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://assets.hubmapconsortium.org",{"_index":893,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://entity",{"_index":2567,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["https://github.com/hubmapconsortium/commons/blob/master/hubmap_commons/hubmap_const.py#l101",{"_index":2636,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":4645,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":3682,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["https://hubmapconsortium.org",{"_index":3308,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["https://portal.hubmapconsortium.org",{"_index":892,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://purl.org/ccf/latest/ccf",{"_index":890,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://purl.org/ccf/latest/ccf.owl",{"_index":889,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["https://vitessce",{"_index":4381,"title":{},"body":{"components/ViewerComponent.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":4262,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":881,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmap/hubmap",{"_index":862,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmap/vitessce",{"_index":1138,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{},"dependencies.html":{}}}],["hubmapassetsurl",{"_index":886,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapdata",{"_index":2862,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hubmapdataservice",{"_index":879,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapdataurl",{"_index":884,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapentity",{"_index":2490,"title":{"classes/HuBMAPEntity.html":{}},"body":{"classes/HuBMAPEntity.html":{}}}],["hubmapentity(e",{"_index":2694,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hubmapportalurl",{"_index":883,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{}}}],["hubmapresponseasjsonld(data",{"_index":2681,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["hubmaptoken",{"_index":888,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["human",{"_index":3291,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["icon",{"_index":33,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchableItem.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["icondefinition",{"_index":2891,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistry",{"_index":2899,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":2900,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{}}}],["icons",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["icons.ts",{"_index":2100,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["id",{"_index":28,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":27,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["identifiers",{"_index":3740,"title":{},"body":{"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["identity",{"_index":1024,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["idextractor",{"_index":2964,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idextractor(json",{"_index":2984,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idobject",{"_index":2950,"title":{"interfaces/IdObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idproperty",{"_index":2961,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["ids",{"_index":835,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/ViewerState.html":{}}}],["ids.length",{"_index":4478,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["idx",{"_index":4179,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["iec",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["if(data.reference_organ_id",{"_index":3677,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["if(this.handlemessage(msg",{"_index":1853,"title":{},"body":{"components/ContentComponent.html":{}}}],["image",{"_index":47,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["image_viewer",{"_index":44,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["image_viewer_layer_defaults",{"_index":4470,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageproviders",{"_index":2507,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["imageproviders.push(hbm_prefix",{"_index":2781,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["images",{"_index":2508,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["images.concat(tiffs",{"_index":2780,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["images.length",{"_index":2783,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["images[0",{"_index":2819,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["imageviewer",{"_index":1169,"title":{"classes/ImageViewer.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserItemComponent.html":{},"components/ViewerComponent.html":{}}}],["imageviewer:103",{"_index":4037,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:122",{"_index":4038,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:137",{"_index":4040,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:157",{"_index":4031,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:158",{"_index":4030,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:160",{"_index":4039,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:170",{"_index":4044,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:174",{"_index":4042,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:184",{"_index":4043,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:197",{"_index":4041,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:201",{"_index":4033,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:220",{"_index":4036,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:233",{"_index":4034,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:239",{"_index":4035,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:64",{"_index":4024,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:68",{"_index":4020,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:69",{"_index":4017,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:73",{"_index":4019,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:74",{"_index":4018,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:78",{"_index":4016,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:80",{"_index":4027,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:81",{"_index":4026,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:82",{"_index":4023,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:83",{"_index":4022,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:84",{"_index":4025,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:86",{"_index":4021,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:99",{"_index":4032,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imagevieweraccordioncomponent",{"_index":353,"title":{"components/ImageViewerAccordionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imagevieweraccordionmodule",{"_index":3057,"title":{"modules/ImageViewerAccordionModule.html":{}},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewercontentcomponent",{"_index":355,"title":{"components/ImageViewerContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewercontentmodule",{"_index":3080,"title":{"modules/ImageViewerContentModule.html":{}},"body":{"modules/ImageViewerContentModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerdata",{"_index":50,"title":{"interfaces/ImageViewerData.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["imageviewerlayer",{"_index":1401,"title":{"classes/ImageViewerLayer.html":{}},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageviewerlayer(layer",{"_index":4461,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageviewerlayerargs",{"_index":3093,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["imageviewerlayerrequiredargnames",{"_index":3116,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["imageviewerlayerscomponent",{"_index":356,"title":{"components/ImageViewerLayersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerlayersmodule",{"_index":3062,"title":{"modules/ImageViewerLayersModule.html":{}},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerlegendcomponent",{"_index":358,"title":{"components/ImageViewerLegendComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerlegendmodule",{"_index":3195,"title":{"modules/ImageViewerLegendModule.html":{}},"body":{"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewermodule",{"_index":398,"title":{"modules/ImageViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImageViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerpopovercomponent",{"_index":173,"title":{"components/ImageViewerPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerpopovermodule",{"_index":3204,"title":{"modules/ImageViewerPopoverModule.html":{}},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerprops",{"_index":1158,"title":{"interfaces/ImageViewerProps.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["imc.svg",{"_index":2812,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["immediate_ancestors",{"_index":2878,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["immediate_descendants",{"_index":2879,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["immutable",{"_index":3866,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["implementation",{"_index":1998,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["implemented",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":716,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["implied",{"_index":4691,"title":{},"body":{"license.html":{}}}],["implies",{"_index":1896,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["important",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["imported",{"_index":1917,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ViewerModule.html":{}}}],["improved",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["ims_negmode_multilayer_thumbnail.png",{"_index":2576,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ims_posmode_multilayer_thumbnail.png",{"_index":2577,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["include",{"_index":86,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{}}}],["included",{"_index":4685,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3335,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"license.html":{}}}],["increased",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indiana",{"_index":3349,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["indicates",{"_index":2432,"title":{},"body":{"classes/FlatNode.html":{}}}],["indicator",{"_index":1936,"title":{},"body":{"injectables/DataSourceService.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["individual",{"_index":1283,"title":{},"body":{"components/CheckboxComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["infectious",{"_index":3376,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["infix",{"_index":2156,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["info_outline",{"_index":3263,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["infobuttoncomponent",{"_index":360,"title":{"components/InfoButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":2479,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infodialogcomponent",{"_index":362,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["infodialogmodule",{"_index":399,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":89,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"index.html":{}}}],["inherit",{"_index":2400,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["inherited",{"_index":4015,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["init",{"_index":3770,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["initial",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["initialization",{"_index":810,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{},"classes/InitializationState.html":{}}}],["initializationstate",{"_index":3398,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{}}}],["initialize",{"_index":825,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":4285,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":1858,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{}}}],["initializedeck",{"_index":2989,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["initializedeck(props",{"_index":1248,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["initializeimpl",{"_index":4275,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializeimpl(component",{"_index":4289,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializer",{"_index":4288,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":2231,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["initializesliderpopover",{"_index":2204,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["initializestate",{"_index":609,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["initializing",{"_index":1892,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["initialviewstate",{"_index":1159,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["initiates",{"_index":1542,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["inject",{"_index":3287,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["inject(default_theme",{"_index":4303,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inject(mat_dialog_data",{"_index":3284,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["injectable",{"_index":1922,"title":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/ThemingService.html":{},"injectables/ViewerState.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["injectables",{"_index":1923,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/ThemingService.html":{},"injectables/ViewerState.html":{},"overview.html":{}}}],["injected",{"_index":3282,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["injectiontoken",{"_index":3552,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["injectiontoken('default",{"_index":4300,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inner",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["input",{"_index":745,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["inputs",{"_index":723,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["inserted",{"_index":3900,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["inside",{"_index":2318,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["instance",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{}}}],["instances",{"_index":3156,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["instant",{"_index":3418,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":2325,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["institute",{"_index":3374,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["integrated",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":526,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["intent",{"_index":4135,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["inter",{"_index":2472,"title":{},"body":{"components/HeaderComponent.html":{}}}],["interactions",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":589,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["interest",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AggregateResult.html":{},"interfaces/BodyUIProps.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"interfaces/ViewerStateModel.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"interfaces/ViewerStateModel.html":{},"overview.html":{}}}],["intestine",{"_index":2672,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["invisible",{"_index":1817,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["iri",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/HuBMAPEntity.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["isdark",{"_index":3091,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["isdemo",{"_index":4353,"title":{},"body":{"components/ViewerComponent.html":{}}}],["isdragging",{"_index":539,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["islight",{"_index":3092,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["isolated",{"_index":3558,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["isrgb",{"_index":4066,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["issliderinitialized",{"_index":2198,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isslideropen",{"_index":2199,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["issues",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":590,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["it's",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":56,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["item'},{'name",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["item.component",{"_index":4158,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{}}}],["item.component.html",{"_index":4129,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.scss",{"_index":4128,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts",{"_index":4127,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:19",{"_index":4132,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:24",{"_index":4134,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:30",{"_index":4136,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.module",{"_index":4164,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["item.module.ts",{"_index":4157,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{}}}],["item/results",{"_index":4126,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["items",{"_index":93,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{}}}],["iu",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":3807,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["json",{"_index":2552,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["json.parse(ruilocation",{"_index":2763,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["json.stringify",{"_index":2874,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["jsondict",{"_index":2514,"title":{},"body":{"classes/HuBMAPEntity.html":{},"miscellaneous/typealiases.html":{}}}],["jsonld",{"_index":2546,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"dependencies.html":{}}}],["jsonld/jsonld",{"_index":2555,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["jsonontology",{"_index":3927,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsonontology.pipe",{"_index":3930,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsonontologynode",{"_index":2956,"title":{"interfaces/JsonOntologyNode.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["jsontoontologynode",{"_index":3875,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsontoontologynode(json",{"_index":2983,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["july",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3322,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["justify",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["keep",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keeping",{"_index":2017,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["keeps",{"_index":2387,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["key",{"_index":669,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["key/value",{"_index":2356,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["keyboard",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["keyboard_arrow_left",{"_index":4337,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["keyboard_arrow_right",{"_index":4336,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["keyboardevent",{"_index":2240,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["keyby",{"_index":3872,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keyby(nodes",{"_index":3934,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keyframes",{"_index":2151,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["keys",{"_index":1255,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["keys.reduce((configs",{"_index":1259,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["kidney",{"_index":1068,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["kind",{"_index":4689,"title":{},"body":{"license.html":{}}}],["known",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":712,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["l.tolowercase()).join",{"_index":2801,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["label",{"_index":15,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["label.length",{"_index":3960,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(0",{"_index":3957,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(index",{"_index":3958,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().includes(searchvalue",{"_index":3953,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().indexof(searchvalue",{"_index":3955,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["labeled",{"_index":1267,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["labelextractor",{"_index":2974,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelextractor(json",{"_index":2986,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelproperty",{"_index":2973,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labels",{"_index":1284,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OntologyNode.html":{}}}],["labs/data",{"_index":4241,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/data/decorators",{"_index":2034,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/repositories",{"_index":2035,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/typings",{"_index":3870,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/utils",{"_index":4466,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["large",{"_index":2671,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["large_intestine",{"_index":2649,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["last",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["lasthovered",{"_index":458,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["later",{"_index":3895,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["latest",{"_index":2005,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"index.html":{}}}],["launch",{"_index":1410,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher",{"_index":1397,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["launcher.component",{"_index":1419,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["launcher.component.html",{"_index":1399,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":1398,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":1389,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts:20",{"_index":1402,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts:25",{"_index":1403,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.module",{"_index":3177,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["launcher.module.ts",{"_index":1418,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["launcher/color",{"_index":1388,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["launchinfodialog",{"_index":3251,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["layer",{"_index":517,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer's",{"_index":1407,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["layer.color",{"_index":4483,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.colorscheme.colors.indexof(layer.color",{"_index":4492,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.customizedcolor",{"_index":4485,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.defaultorder",{"_index":4484,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.id",{"_index":3158,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ViewerComponent.html":{}}}],["layer.id.includes(getvivid(viewportid",{"_index":1262,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layer.label",{"_index":3165,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{}}}],["layer.selected",{"_index":3161,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.ts",{"_index":603,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["layer.ts:102",{"_index":3110,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:109",{"_index":613,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:24",{"_index":3101,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:25",{"_index":3102,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:27",{"_index":3099,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:28",{"_index":3098,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:29",{"_index":3097,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:30",{"_index":3105,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:32",{"_index":3103,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:33",{"_index":3100,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:34",{"_index":3104,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:35",{"_index":3094,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:47",{"_index":3115,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:70",{"_index":3106,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:72",{"_index":611,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:74",{"_index":614,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:82",{"_index":615,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:95",{"_index":3113,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layerchange",{"_index":1400,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["layerchange.emit(layer",{"_index":1603,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["layerchanged",{"_index":3138,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layerchanged(layer",{"_index":3151,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layerconfig",{"_index":1157,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["layerconfigs",{"_index":1185,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerconfigs.length",{"_index":1233,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layerconfigs[index",{"_index":1237,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layerfilter",{"_index":1249,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerfilter(undefined",{"_index":3010,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerfilterargs",{"_index":1153,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["layername",{"_index":607,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["layers",{"_index":530,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["layers'},{'name",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["layers(layers",{"_index":3189,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["layers.component",{"_index":3174,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["layers.component.html",{"_index":3136,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.scss",{"_index":3135,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts",{"_index":3131,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:21",{"_index":3140,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:26",{"_index":3144,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:31",{"_index":3146,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:39",{"_index":3154,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:49",{"_index":3148,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:62",{"_index":3152,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.filter(layer",{"_index":4455,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layers.length",{"_index":4425,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers.map(layer",{"_index":4460,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layers.module",{"_index":3068,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerModule.html":{}}}],["layers.module.ts",{"_index":3173,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["layers.reduce((result",{"_index":4426,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers/image",{"_index":3067,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerModule.html":{}}}],["layers].sort((v1",{"_index":3191,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["lc.svg",{"_index":2814,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ld",{"_index":2553,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["left",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["left.closeexpanded",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["left.open",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["left.px",{"_index":1812,"title":{},"body":{"components/ContentComponent.html":{}}}],["left_kidney",{"_index":1072,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["leftmargin",{"_index":1848,"title":{},"body":{"components/ContentComponent.html":{}}}],["legend",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["legend'},{'name",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["legend.component",{"_index":3200,"title":{},"body":{"modules/ImageViewerLegendModule.html":{}}}],["legend.component.html",{"_index":3182,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.scss",{"_index":3181,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts",{"_index":3179,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:18",{"_index":3184,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:21",{"_index":3187,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:22",{"_index":3185,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.module",{"_index":3244,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{}}}],["legend.module.ts",{"_index":3199,"title":{},"body":{"modules/ImageViewerLegendModule.html":{}}}],["legend/image",{"_index":3178,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["length",{"_index":1232,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["level",{"_index":2421,"title":{},"body":{"classes/FlatNode.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["levels",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["lexically",{"_index":3782,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["li",{"_index":2647,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["liability",{"_index":4704,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4701,"title":{},"body":{"license.html":{}}}],["license",{"_index":4652,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":3771,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["light",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ImageViewerLayer.html":{}}}],["lighter",{"_index":4152,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["lightingeffect",{"_index":510,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["limitation",{"_index":4668,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4692,"title":{},"body":{"license.html":{}}}],["line",{"_index":546,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["line:no",{"_index":1669,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["linear",{"_index":3125,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["link",{"_index":2439,"title":{},"body":{"components/HeaderComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["linkage",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["linkchildren",{"_index":3901,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["linkchildren(nodemap",{"_index":3889,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["linking",{"_index":4110,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["links",{"_index":3884,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["list",{"_index":24,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{}}}],["listdata",{"_index":1977,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listdata(filter",{"_index":1989,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listdataquerystatus",{"_index":1978,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listen",{"_index":3557,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":2069,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listeners",{"_index":1722,"title":{},"body":{"components/ContainerComponent.html":{}}}],["listening",{"_index":4093,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["listens",{"_index":1649,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["listresult",{"_index":26,"title":{"interfaces/ListResult.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["literal",{"_index":492,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyStateModel.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["liver",{"_index":2677,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["lk",{"_index":2571,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ll",{"_index":2652,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["load",{"_index":620,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["load(model.scenegraph",{"_index":654,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["loaded",{"_index":827,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["loader",{"_index":1136,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{}}}],["loader.channelnames",{"_index":1258,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["loaderpromises",{"_index":1204,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["loaders",{"_index":1175,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders.gl/core",{"_index":622,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":625,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":627,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.length",{"_index":4054,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders[0",{"_index":4056,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders[0].isrgb",{"_index":4067,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaderselection",{"_index":4057,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaderselection.push",{"_index":4062,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loadertype",{"_index":1140,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loadertype.bftiff",{"_index":3635,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.covidtiff",{"_index":3636,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.omezarr",{"_index":3629,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.statictiff",{"_index":3637,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.staticzarr",{"_index":3627,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.tiff",{"_index":3633,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["loadertype.tiff2",{"_index":3634,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.zarr",{"_index":3626,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadgltf(model",{"_index":651,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["loading",{"_index":4087,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["loadoffsets(offsets",{"_index":3638,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadoffsets(url",{"_index":3641,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadontology",{"_index":3842,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["loads",{"_index":3864,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["local_link",{"_index":43,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["located",{"_index":3449,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":2760,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OntologySelection.html":{}}}],["lodash",{"_index":2559,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"dependencies.html":{}}}],["log",{"_index":4646,"title":{},"body":{"index.html":{}}}],["logged",{"_index":2449,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loggedin",{"_index":2443,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logic",{"_index":3431,"title":{},"body":{"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["login",{"_index":2459,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logo",{"_index":2116,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/HeaderComponent.html":{},"components/InfoDialogComponent.html":{}}}],["logo.svg",{"_index":2118,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["logout",{"_index":2460,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lomap",{"_index":3873,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lomap(ontology",{"_index":3932,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["looks",{"_index":3868,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup",{"_index":2629,"title":{},"body":{"classes/HuBMAPEntity.html":{},"injectables/OntologySearchService.html":{}}}],["lookup(nodes",{"_index":3865,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup[k",{"_index":2632,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["low",{"_index":1568,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["low/high",{"_index":2286,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lower",{"_index":2222,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lowvalue",{"_index":2200,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["luma.gl/core",{"_index":629,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["lung",{"_index":2673,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["lv",{"_index":2665,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ly",{"_index":2657,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["lymph",{"_index":2674,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["made",{"_index":1406,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["magma",{"_index":1502,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["main",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{}}}],["make",{"_index":1958,"title":{},"body":{"injectables/DataSourceService.html":{},"components/ImageViewerLayersComponent.html":{}}}],["male",{"_index":61,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["managed",{"_index":1744,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["manages",{"_index":4271,"title":{},"body":{"injectables/ThemingService.html":{}}}],["many",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map((d",{"_index":2749,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["map((s",{"_index":932,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["map(createmodel",{"_index":3936,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(e",{"_index":2685,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["map(entities",{"_index":4458,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map(f",{"_index":2776,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["map(layers",{"_index":4454,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map(nodes",{"_index":3933,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(ontology",{"_index":3931,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(partial(prunemodel",{"_index":3937,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(searchresults",{"_index":3802,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["map(state",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["map(states",{"_index":2023,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["mapping",{"_index":1426,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{}}}],["maps",{"_index":3301,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["margin",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["margin2",{"_index":3428,"title":{},"body":{"classes/InitializationState.html":{}}}],["masculine",{"_index":2724,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["mass",{"_index":2727,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["mat",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["mat_dialog_data",{"_index":3288,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["matautocompletemodule",{"_index":3830,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matautocompleteselectedevent",{"_index":3773,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["matbuttonmodule",{"_index":2481,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["match",{"_index":2463,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["matcheckboxchange",{"_index":1293,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["matcheckboxmodule",{"_index":1328,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["matching",{"_index":99,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["matdialog",{"_index":3253,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["matdialogmodule",{"_index":3397,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":3278,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material",{"_index":2902,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matexpansionmodule",{"_index":3064,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["matformfieldmodule",{"_index":2186,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["math.gl/core",{"_index":514,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["math.max(...this.selection",{"_index":2290,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(...this.selection",{"_index":2288,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(math.max(1",{"_index":594,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["math.trunc(slider_max",{"_index":4398,"title":{},"body":{"components/ViewerComponent.html":{}}}],["maticonmodule",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ViewerModule.html":{}}}],["maticonregistry",{"_index":2897,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":3831,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matprogressspinnermodule",{"_index":4236,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["matradiomodule",{"_index":4201,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["matrix",{"_index":569,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["matrix.gettranslation",{"_index":574,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["matrix4",{"_index":513,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["matrix4().rotatex(toradians(90)).multiplyleft(transform",{"_index":1111,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["matrix4(node.transformmatrix",{"_index":570,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["matselectmodule",{"_index":2188,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["mattoolbarmodule",{"_index":2483,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodule",{"_index":2485,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["mattreemodule",{"_index":4008,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["max",{"_index":2171,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["maxrotationx",{"_index":554,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["maxselected",{"_index":4476,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["mc",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["md",{"_index":2719,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["md.grouping_concept_preferred_term",{"_index":2728,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["md.preferred_term",{"_index":2722,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["measured",{"_index":3486,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":3488,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":3478,"title":{},"body":{"classes/InitializationState.html":{}}}],["medicine",{"_index":3370,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["member",{"_index":3546,"title":{},"body":{"classes/InitializationState.html":{}}}],["menu",{"_index":1526,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["merchantability",{"_index":4694,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4671,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":3553,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["mesh",{"_index":679,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer('cubes",{"_index":697,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer('wireframes",{"_index":698,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer(id",{"_index":668,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["message",{"_index":1713,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["message_service_config",{"_index":2125,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message_service_default_config",{"_index":2126,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel",{"_index":1728,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":3592,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":3580,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":1709,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":1692,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice.connect(this",{"_index":1776,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":1851,"title":{},"body":{"components/ContentComponent.html":{}}}],["messageserviceconfig",{"_index":3556,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagess",{"_index":2060,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["metadata",{"_index":55,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["metadata.files",{"_index":2772,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["metadata.organ_donor_data",{"_index":2721,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["metadata?.metadata?.assay_type",{"_index":2791,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["meter",{"_index":988,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["method",{"_index":1296,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerLayersComponent.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":2927,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":2922,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["millimeter",{"_index":986,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["min",{"_index":2177,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["minor",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":552,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["miscellaneous",{"_index":4640,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":4653,"title":{},"body":{"license.html":{}}}],["mock",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":3273,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mode",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["model",{"_index":704,"title":{},"body":{"classes/BodyUILayer.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["model._lighting",{"_index":706,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.color",{"_index":709,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.scenegraph",{"_index":705,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.scenegraphnode",{"_index":657,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.subscribe(ontology",{"_index":3939,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["model.transformmatrix",{"_index":708,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.unpickable",{"_index":703,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.zoombasedopacity",{"_index":701,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model['@id",{"_index":700,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["models",{"_index":696,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["models.map((model",{"_index":699,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["models/color",{"_index":4467,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["models/image",{"_index":4468,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["models/json",{"_index":3876,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["models/ontology",{"_index":3877,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["modified_date",{"_index":2845,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["modify",{"_index":4670,"title":{},"body":{"license.html":{}}}],["module",{"_index":381,"title":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["modules",{"_index":383,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/body/body.module",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/color",{"_index":4181,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["modules/filters/filters",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modules/image",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modules/info/info",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{}}}],["modules/ontology",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/results",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["molecular",{"_index":3296,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["more",{"_index":2052,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":2226,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mouseevent",{"_index":493,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/ColorSchemePopupComponent.html":{}}}],["mouseevent?.srcevent?.ctrlkey",{"_index":588,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["moved",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["movement",{"_index":2227,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["msg",{"_index":1826,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":1863,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.drawers",{"_index":1856,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.opened",{"_index":4340,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":1854,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":1861,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["multi",{"_index":4269,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":3330,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mxif_cyc1_registered_thumbnail.png",{"_index":2581,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["mxif_cyc2_registered_thumbnail.png",{"_index":2582,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["mxif_cyc3_registered_thumbnail.png",{"_index":2583,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["n.name",{"_index":659,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["n3",{"_index":864,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["n3store",{"_index":818,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{}}}],["name",{"_index":53,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["names",{"_index":2637,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["namespace",{"_index":2109,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["national",{"_index":3373,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["nativeelement",{"_index":1671,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ViewerComponent.html":{}}}],["navigation",{"_index":3333,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["necessary",{"_index":2248,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1641,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersPopoverComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{}}}],["needed",{"_index":3142,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["needs",{"_index":1718,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["nested",{"_index":2317,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["network",{"_index":4650,"title":{},"body":{"index.html":{}}}],["never",{"_index":1767,"title":{},"body":{"components/ContainerComponent.html":{}}}],["new",{"_index":476,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["newconfigs",{"_index":1215,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["newfilter",{"_index":783,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["newly",{"_index":1355,"title":{},"body":{"components/ColorBarComponent.html":{},"classes/FlatNode.html":{}}}],["newvalue",{"_index":2309,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["next",{"_index":545,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["nextmessageid",{"_index":3579,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ng",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ng5",{"_index":1580,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"dependencies.html":{}}}],["ng5slidermodule",{"_index":1628,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/DualSliderModule.html":{}}}],["ngacceptinputtype_expanded",{"_index":3549,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":3548,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":3545,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":722,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["ngfor",{"_index":3155,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["ngmodule",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{}}}],["ngonchanges",{"_index":2205,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["ngonchanges(changes",{"_index":2232,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["ngondestroy",{"_index":1700,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["ngoninit",{"_index":3752,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ngxs",{"_index":756,"title":{},"body":{"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":2036,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["ngxsdataentitycollectionsrepository",{"_index":4440,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ngxsdatapluginmodule",{"_index":4240,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":4255,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1971,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["ngxsentitycollections",{"_index":4464,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ngxsmodule",{"_index":4242,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":4256,"title":{},"body":{"modules/StoreModule.html":{}}}],["niaid",{"_index":3378,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["niddk",{"_index":3368,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["nih",{"_index":3359,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["node",{"_index":508,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"miscellaneous/typealiases.html":{}}}],["node's",{"_index":2429,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.children",{"_index":3963,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.entityid",{"_index":777,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["node.label.tolowercase().includes(searchvalue",{"_index":3947,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.parent",{"_index":3911,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.synonymlabels.find((label",{"_index":3952,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.ts",{"_index":2417,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OntologyNode.html":{}}}],["node.ts:11",{"_index":2428,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:16",{"_index":2431,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:27",{"_index":2426,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:29",{"_index":2422,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.zoomtoonload",{"_index":566,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["node['@id",{"_index":764,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["nodeattrs",{"_index":1050,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodeclick",{"_index":459,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodeclicksubject",{"_index":460,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodehoverstart",{"_index":461,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodehoverstartsubject",{"_index":462,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodehoverstop",{"_index":463,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodehoverstopsubject",{"_index":464,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["nodemap",{"_index":3886,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodemap[parent].children.push(id",{"_index":3897,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"miscellaneous/typealiases.html":{}}}],["nodes.concat",{"_index":1091,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodes.filter(s",{"_index":1095,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodes.foreach((node",{"_index":3945,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes[id",{"_index":3922,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes[node.parent",{"_index":3987,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["none",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["noninfringement",{"_index":4698,"title":{},"body":{"license.html":{}}}],["normally",{"_index":733,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["not(:last",{"_index":2468,"title":{},"body":{"components/HeaderComponent.html":{}}}],["note",{"_index":631,"title":{},"body":{"classes/BodyUILayer.html":{},"components/DualSliderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{}}}],["notice",{"_index":4683,"title":{},"body":{"license.html":{}}}],["now",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":4151,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["null",{"_index":925,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["null)?.getcontainerelement",{"_index":4315,"title":{},"body":{"injectables/ThemingService.html":{}}}],["num_layers_selected_on_creation",{"_index":4469,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["number((event.target",{"_index":2310,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(this.options.floor",{"_index":2313,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(value.slice(0",{"_index":3492,"title":{},"body":{"classes/InitializationState.html":{}}}],["number.isnan(value",{"_index":4390,"title":{},"body":{"components/ViewerComponent.html":{}}}],["number.parseint(hex.slice(1",{"_index":4388,"title":{},"body":{"components/ViewerComponent.html":{}}}],["number[][]}).transformmatrix",{"_index":682,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["number]}).color",{"_index":684,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["o",{"_index":2071,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["object",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{}}}],["object.assign",{"_index":2089,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["object.assign(s",{"_index":933,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["object.assign(this",{"_index":3118,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["object.entries(channelconfigs",{"_index":4061,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["object.entries(configs).reduce((result",{"_index":1216,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["object.entries(entities",{"_index":4491,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["object.entries(rui).foreach(([k",{"_index":2630,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["object.keys(this.channelconfigs",{"_index":1179,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["object.values(entities",{"_index":4459,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["object.values(state.nodes",{"_index":3999,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["objects",{"_index":855,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["observable",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observableinput",{"_index":1988,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["observedvalueof",{"_index":2037,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["obtaining",{"_index":4662,"title":{},"body":{"license.html":{}}}],["occurencedata",{"_index":3969,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["occurences",{"_index":874,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["occurrences",{"_index":842,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["occurs",{"_index":2229,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["office",{"_index":3362,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["official",{"_index":4507,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1865,"title":{},"body":{"components/ContentComponent.html":{}}}],["offsets",{"_index":3623,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["old",{"_index":2565,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["oldruidata",{"_index":2564,"title":{"interfaces/OldRuiData.html":{}},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["oldviewstate",{"_index":1263,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["ome",{"_index":3614,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["ome\\.tif|ome\\.tiff)$/.test(f.rel_path",{"_index":2775,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["omezarr",{"_index":3613,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["omezarrinfo",{"_index":1141,"title":{"interfaces/OMEZarrInfo.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omezarrreader",{"_index":3610,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omezarrreader.fromurl(url",{"_index":3631,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omit",{"_index":2557,"title":{},"body":{"classes/HuBMAPEntity.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["omit(this",{"_index":2831,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["once",{"_index":1918,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":2193,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["onclick",{"_index":534,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["ondestroy",{"_index":1689,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["one",{"_index":2051,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ones",{"_index":3133,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["onhover",{"_index":532,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["oninit",{"_index":3744,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["onkeyhigh",{"_index":2206,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeyhigh(event",{"_index":2239,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow",{"_index":2207,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow(event",{"_index":2245,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["online",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["onselect",{"_index":3753,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onselect(event",{"_index":3772,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontolgyselection.foreach((selection",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["ontolgyselection.length",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["ontolgyselection[0].label",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["ontological",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":65,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["ontology.ts",{"_index":2952,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["ontology/ccf",{"_index":3683,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ontology/ontology.state",{"_index":4245,"title":{},"body":{"modules/StoreModule.html":{}}}],["ontologyexplorationmodule",{"_index":400,"title":{"modules/OntologyExplorationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyfilter",{"_index":3970,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologynode",{"_index":2420,"title":{"interfaces/OntologyNode.html":{}},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["ontologysearchcomponent",{"_index":364,"title":{"components/OntologySearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologysearchmodule",{"_index":3728,"title":{"modules/OntologySearchModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologysearchservice",{"_index":3757,"title":{"injectables/OntologySearchService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["ontologyselected(ontologyselection",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselection",{"_index":157,"title":{"interfaces/OntologySelection.html":{}},"body":{"components/AppComponent.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{}}}],["ontologyselection.map(selection",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselectioncomponent",{"_index":366,"title":{"components/OntologySelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologyselectionlabel",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselectionmodule",{"_index":3729,"title":{"modules/OntologySelectionModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyselections",{"_index":3978,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologyservice",{"_index":3750,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologystate",{"_index":3845,"title":{"injectables/OntologyState.html":{}},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["ontologystatemodel",{"_index":3878,"title":{"interfaces/OntologyStateModel.html":{}},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["ontologyterms",{"_index":67,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["ontologytermsdata",{"_index":2083,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ontologytermsfulldata",{"_index":1979,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ontologytreecomponent",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologytreemodule",{"_index":3730,"title":{"modules/OntologyTreeModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules.html":{},"overview.html":{}}}],["onviewstatechange",{"_index":536,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["onviewstatechange(undefined",{"_index":3012,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["onviewstatechangeargs",{"_index":1154,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["opacity",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{}}}],["open",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open(data",{"_index":3218,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["open(event",{"_index":1654,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["open/close",{"_index":3469,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["openapi",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["opened",{"_index":1832,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":3458,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":3416,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":3465,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":3417,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":3506,"title":{},"body":{"classes/InitializationState.html":{}}}],["openimageviewer",{"_index":4131,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["opening",{"_index":4091,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["opening/closing/expanding",{"_index":3432,"title":{},"body":{"classes/InitializationState.html":{}}}],["openresult",{"_index":4130,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["opens",{"_index":1544,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{}}}],["openviewer(viewer",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["operator",{"_index":2063,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["operatorfunction",{"_index":2038,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["opposite",{"_index":3421,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["ops",{"_index":902,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addhubmapdatatostore",{"_index":910,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addjsonldtostore(this.options.hubmapdataurl",{"_index":909,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addn3tostore(this.options.ccfowlurl",{"_index":905,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addrdfxmltostore(this.options.ccfowlurl",{"_index":906,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["optimizations",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1294,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["option.displaylabel[0",{"_index":3813,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[1",{"_index":3814,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[2",{"_index":3815,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option:first",{"_index":4192,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["option:last",{"_index":4193,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["option?.displaylabel",{"_index":3806,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["optional",{"_index":87,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["options",{"_index":69,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{}}}],["options.ceil",{"_index":2315,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["options.floor",{"_index":2314,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionschanged",{"_index":2208,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionsvisible",{"_index":2134,"title":{},"body":{"components/DropdownComponent.html":{}}}],["orbitaxis",{"_index":550,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["orbitview",{"_index":511,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["order",{"_index":3302,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["order.length",{"_index":4497,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ordering",{"_index":3547,"title":{},"body":{"classes/InitializationState.html":{}}}],["organ",{"_index":52,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["organ_id",{"_index":2849,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["organ_sample",{"_index":2832,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["organids",{"_index":3904,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organization",{"_index":3307,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["organname",{"_index":54,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["organnodes",{"_index":3906,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organs",{"_index":850,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["organsample",{"_index":2509,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["organsid",{"_index":1059,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["origin_sample",{"_index":2880,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["original",{"_index":2424,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["originx",{"_index":2273,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["originy",{"_index":2274,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ot",{"_index":2106,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/HuBMAPEntity.html":{}}}],["ot2od026671",{"_index":3367,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["other.expanded",{"_index":3534,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":3535,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":3540,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":3538,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":3537,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":3536,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":3539,"title":{},"body":{"classes/InitializationState.html":{}}}],["other_organ",{"_index":2667,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["otherwise",{"_index":2912,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"license.html":{}}}],["out",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":4195,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["outline",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{}}}],["output",{"_index":746,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["outputs",{"_index":724,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["outside",{"_index":730,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["overall",{"_index":1278,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["overflow",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["overlay",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{}}}],["overlay'},{'name",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["overlay.component",{"_index":4238,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.component.html",{"_index":4223,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":4222,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":4220,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:16",{"_index":4228,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:19",{"_index":4224,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:22",{"_index":4226,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.create",{"_index":2280,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.module",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.module.ts",{"_index":4235,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.position().flexibleconnectedto(element).withpositions([position",{"_index":2278,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay/spinner",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{}}}],["overlaycontainer",{"_index":4298,"title":{},"body":{"injectables/ThemingService.html":{}}}],["overlaymodule",{"_index":2336,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["overlayref",{"_index":2201,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.attach(popoverportal",{"_index":2307,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.updateposition",{"_index":2308,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlays",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["overlayx",{"_index":2275,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayy",{"_index":2276,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overview",{"_index":4049,"title":{"overview.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["overview_defaults",{"_index":4050,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["overviewargs",{"_index":4048,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["overviewview",{"_index":4046,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["overviewviewnewargs",{"_index":4047,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["owl",{"_index":3325,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["owner",{"_index":1635,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["owner?.contains(target",{"_index":1673,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["owning",{"_index":4324,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":982,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"changelog.html":{}}}],["p.translation_units",{"_index":984,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_rotation",{"_index":994,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_scaling",{"_index":1002,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_translation",{"_index":990,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_rotation",{"_index":995,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_scaling",{"_index":1003,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_translation",{"_index":991,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_rotation].map(toradians",{"_index":996,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_scaling",{"_index":1004,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_translation].map(t",{"_index":992,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["package",{"_index":4600,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["page",{"_index":2440,"title":{},"body":{"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["pair",{"_index":3542,"title":{},"body":{"classes/InitializationState.html":{}}}],["pane",{"_index":2176,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["panel",{"_index":2166,"title":{},"body":{"components/DropdownComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["panelclass",{"_index":2281,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["param",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{}}}],["parameters",{"_index":474,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["parameters>[0",{"_index":1152,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["parameters[0",{"_index":3622,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["params",{"_index":3427,"title":{},"body":{"classes/InitializationState.html":{}}}],["parent",{"_index":521,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/CheckboxComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"miscellaneous/typealiases.html":{}}}],["parent.messages.pipe(takewhile",{"_index":3586,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parentextractor",{"_index":2970,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentextractor(json",{"_index":2985,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentproperty",{"_index":2969,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parents",{"_index":3885,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["parser",{"_index":4631,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":3351,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{}}}],["partial",{"_index":472,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{}}}],["partial.placeholder",{"_index":2980,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["partial[0",{"_index":1601,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["particular",{"_index":4696,"title":{},"body":{"license.html":{}}}],["partonomy",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":2932,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":2937,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":2936,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":2935,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":2934,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["pas_registered_thumbnail.png",{"_index":2578,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["pass",{"_index":3046,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["passed",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["passes",{"_index":1404,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["patch",{"_index":2562,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["path",{"_index":1028,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"dependencies.html":{}}}],["path.length",{"_index":1030,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["path.reverse",{"_index":1031,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["path/unweighted",{"_index":971,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["patient",{"_index":2367,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["payload",{"_index":1889,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["pbr",{"_index":707,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["permission",{"_index":4657,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4678,"title":{},"body":{"license.html":{}}}],["person",{"_index":4661,"title":{},"body":{"license.html":{}}}],["persons",{"_index":4679,"title":{},"body":{"license.html":{}}}],["physiologic",{"_index":3336,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["pick",{"_index":3117,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["pickable",{"_index":671,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["picked",{"_index":576,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["picker",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["picture",{"_index":4012,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["pictureinpictureviewer",{"_index":4010,"title":{"classes/PictureInPictureViewer.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["pictureinpictureviewerprops",{"_index":4013,"title":{"interfaces/PictureInPictureViewerProps.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["pipe",{"_index":2022,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["pipe(mergeall",{"_index":3588,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["placed",{"_index":4254,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":3167,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"changelog.html":{}}}],["placement",{"_index":961,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["placement.target['@id",{"_index":1023,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["placement_date",{"_index":3702,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["placements",{"_index":1017,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["placementtarget",{"_index":3672,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["placementtarget?.endswith('kidney",{"_index":3678,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["places",{"_index":635,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["plasma",{"_index":1511,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["pluck",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["plugin",{"_index":4252,"title":{},"body":{"modules/StoreModule.html":{}}}],["point",{"_index":3660,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["pointer",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["popover",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover's",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["popover'},{'name",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["popover.component",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"modules/FiltersPopoverModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popover.component.html",{"_index":2381,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.scss",{"_index":2380,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts",{"_index":2379,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:15",{"_index":2389,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:21",{"_index":2386,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:26",{"_index":2390,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:31",{"_index":2396,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:36",{"_index":2395,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:37",{"_index":3223,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:42",{"_index":3225,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:43",{"_index":2394,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:47",{"_index":3226,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:51",{"_index":2392,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:52",{"_index":3215,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:65",{"_index":3216,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:74",{"_index":3219,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:82",{"_index":3221,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.module",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageViewerModule.html":{}}}],["popover.module.ts",{"_index":2413,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popover/filters",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{}}}],["popover/image",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popoverelement",{"_index":2202,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverelement.nativeelement.contains(target",{"_index":2301,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverportal",{"_index":2203,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popup",{"_index":1335,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"changelog.html":{}}}],["popup'},{'name",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["popup.component",{"_index":1686,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["popup.component.html",{"_index":1633,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.scss",{"_index":1632,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts",{"_index":1631,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:20",{"_index":1642,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:25",{"_index":1639,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:30",{"_index":1644,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:32",{"_index":1660,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:37",{"_index":1664,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:40",{"_index":1661,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:45",{"_index":1657,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:53",{"_index":1648,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:64",{"_index":1655,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.module",{"_index":1421,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["popup.module.ts",{"_index":1685,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["popup/color",{"_index":1420,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{}}}],["popupvisible",{"_index":1636,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["portal",{"_index":882,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"changelog.html":{},"index.html":{}}}],["portalmodule",{"_index":2337,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["portalurl",{"_index":2510,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["portalurl}browse/sample/${this.id",{"_index":2817,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["portions",{"_index":4687,"title":{},"body":{"license.html":{}}}],["position",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"interfaces/OldRuiData.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["position(value",{"_index":3454,"title":{},"body":{"classes/InitializationState.html":{}}}],["positions",{"_index":1372,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["positions[index",{"_index":3128,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["positionstrategy",{"_index":2277,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["post",{"_index":2873,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["postprocess",{"_index":656,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["precision",{"_index":3369,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["prefix",{"_index":3857,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["preparation",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":2244,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["private",{"_index":455,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["process",{"_index":1825,"title":{},"body":{"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["processes",{"_index":1715,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["programmers",{"_index":630,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["progress",{"_index":4221,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["project",{"_index":3247,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["projected",{"_index":1723,"title":{},"body":{"components/ContainerComponent.html":{}}}],["projects/.../hubmap",{"_index":4719,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../image",{"_index":4715,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../loader.ts",{"_index":4643,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../picture",{"_index":4720,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["promise",{"_index":95,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["promise(r",{"_index":919,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["promise(resolve",{"_index":3405,"title":{},"body":{"classes/InitializationState.html":{}}}],["promise.all(loaderpromises",{"_index":1208,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["promise.all(ops",{"_index":915,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["proof",{"_index":3338,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["prop",{"_index":2921,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["properly",{"_index":4097,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["property",{"_index":1300,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/ValueObject.html":{}}}],["property(0",{"_index":2972,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(idproperty",{"_index":2965,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(labelproperty",{"_index":2975,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(parentproperty",{"_index":2971,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(synonymsproperty",{"_index":2978,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(valueproperty",{"_index":2968,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["props",{"_index":523,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["props.defaultchannelconfig",{"_index":1167,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["props.overview",{"_index":4053,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["protected",{"_index":1183,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["protocolurl",{"_index":2511,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["provide",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":755,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":1944,"title":{},"body":{"injectables/DataSourceService.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["provider",{"_index":795,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["providers",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["provides",{"_index":3760,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["providing",{"_index":1804,"title":{},"body":{"components/ContentComponent.html":{}}}],["prunednodes",{"_index":3908,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["prunemodel(model",{"_index":3905,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["public",{"_index":797,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"changelog.html":{}}}],["publish",{"_index":4672,"title":{},"body":{"license.html":{}}}],["publishreplay",{"_index":2040,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["publishreplay(1",{"_index":2075,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["pull",{"_index":1548,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{}}}],["pureimageviewerlayer",{"_index":3087,"title":{"interfaces/PureImageViewerLayer.html":{}},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["purplebrown",{"_index":1468,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["purplelightblue",{"_index":1484,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["purpose",{"_index":4697,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1364,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["px",{"_index":3446,"title":{},"body":{"classes/InitializationState.html":{}}}],["quad",{"_index":831,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["qualitative",{"_index":1427,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["qualitative1",{"_index":1430,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["qualitative2",{"_index":1445,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["quaternion",{"_index":973,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["queried",{"_index":21,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["queries",{"_index":72,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"components/ViewerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["queries/aggregate",{"_index":863,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/find",{"_index":866,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/image",{"_index":867,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/list",{"_index":869,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/ontology",{"_index":873,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/spatial",{"_index":871,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["query",{"_index":10,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["querydata",{"_index":2070,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["querying",{"_index":2065,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["querylist",{"_index":1731,"title":{},"body":{"components/ContainerComponent.html":{}}}],["querystatus",{"_index":1980,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["question",{"_index":1279,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["r",{"_index":997,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{}}}],["r.json",{"_index":2865,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["r.ok",{"_index":2864,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["r.x",{"_index":3709,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r.y",{"_index":3711,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r.z",{"_index":3713,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r_rad",{"_index":993,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["r_rad[0",{"_index":999,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["r_rad[2",{"_index":1000,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["race",{"_index":2730,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["racial",{"_index":2729,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["radio",{"_index":4194,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["radius",{"_index":1376,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/OntologySearchComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["range",{"_index":75,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["rangelabel",{"_index":2212,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ratio",{"_index":3707,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["raw",{"_index":2494,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rc.1",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":976,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["rdf.type",{"_index":1013,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["rdfjs/data",{"_index":4616,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":4629,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":4099,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["reached",{"_index":4096,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["react",{"_index":4633,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":3829,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["read",{"_index":742,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ViewerComponent.html":{}}}],["reader",{"_index":3630,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["reader.loadomezarr",{"_index":3632,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["readonly",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ready",{"_index":1932,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["real",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":4251,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":1815,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":3561,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":1156,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["red",{"_index":4391,"title":{},"body":{"components/ViewerComponent.html":{}}}],["redtan",{"_index":1476,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ref",{"_index":957,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["refcount",{"_index":2041,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["reference",{"_index":849,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialObjectReference.html":{},"components/ToggleButtonComponent.html":{}}}],["reference_organ_id",{"_index":3654,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["referencelayer",{"_index":3162,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["references",{"_index":1009,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["referencing",{"_index":3163,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["reforganid",{"_index":2765,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["refresh",{"_index":2452,"title":{},"body":{"components/HeaderComponent.html":{}}}],["refreshclicked",{"_index":2445,"title":{},"body":{"components/HeaderComponent.html":{}}}],["region",{"_index":3079,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["regions",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2111,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registered",{"_index":2114,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["registericon",{"_index":2916,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":2913,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl",{"_index":2941,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":2917,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":2894,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registerloaders",{"_index":621,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["registerloaders([dracoworkerloader",{"_index":689,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["registers",{"_index":2910,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registration",{"_index":2105,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry",{"_index":2901,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":4244,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":2893,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state.ts:106",{"_index":2947,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:120",{"_index":2945,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:43",{"_index":2943,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:72",{"_index":2948,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:82",{"_index":2949,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":2099,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["registry/icon",{"_index":2892,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{}}}],["registry[methodname",{"_index":2924,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["rel_path",{"_index":2773,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["relationship",{"_index":3306,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["relative",{"_index":786,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relavant",{"_index":1359,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["release",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["reloads",{"_index":4101,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["remote",{"_index":1937,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["remove",{"_index":1299,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{}}}],["removebox",{"_index":2383,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["removeclass",{"_index":4317,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removes",{"_index":4282,"title":{},"body":{"injectables/ThemingService.html":{}}}],["render",{"_index":732,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["renderer",{"_index":4311,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":4299,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](overlay",{"_index":4319,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":4318,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":1547,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["renderlayers",{"_index":610,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["replace",{"_index":753,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["replay",{"_index":2067,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject",{"_index":2039,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject(1",{"_index":1996,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject>(1",{"_index":2084,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["repository",{"_index":1970,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["represents",{"_index":3329,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["reqprops",{"_index":1188,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.height",{"_index":1191,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.sources.length",{"_index":1192,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.width",{"_index":1190,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["requested",{"_index":830,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["requests",{"_index":3848,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["require",{"_index":3112,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["required",{"_index":1164,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["res",{"_index":3642,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["res.json",{"_index":3646,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["res.status",{"_index":3644,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["research",{"_index":3357,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["reset",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["resetchannelconfigs",{"_index":1254,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["resets",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/ThemingService.html":{}}}],["resettheme",{"_index":4276,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resizesensor",{"_index":4374,"title":{},"body":{"components/ViewerComponent.html":{}}}],["resizesensor(container",{"_index":4419,"title":{},"body":{"components/ViewerComponent.html":{}}}],["resizing",{"_index":4190,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["resolve",{"_index":3402,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolves",{"_index":1747,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/DataSourceService.html":{},"classes/InitializationState.html":{}}}],["resolving",{"_index":826,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["respond",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":2679,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["responsetype",{"_index":3929,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["responsible",{"_index":3836,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["restriction",{"_index":4667,"title":{},"body":{"license.html":{}}}],["result",{"_index":11,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result's",{"_index":4139,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["result[key",{"_index":1218,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["resultclicked",{"_index":4083,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resulting",{"_index":2982,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["resultlabel",{"_index":4082,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["results",{"_index":100,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resultsbrowser",{"_index":4071,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsercomponent",{"_index":370,"title":{"components/ResultsBrowserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["resultsbrowseritemcomponent",{"_index":372,"title":{"components/ResultsBrowserItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["resultsbrowseritemmodule",{"_index":4153,"title":{"modules/ResultsBrowserItemModule.html":{}},"body":{"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["resultsbrowseritems",{"_index":4075,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsermodule",{"_index":401,"title":{"modules/ResultsBrowserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["resulttype",{"_index":41,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["resulturl",{"_index":40,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["return",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["returns",{"_index":498,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["reverse",{"_index":2362,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["rgb",{"_index":3109,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["right",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["right.closeexpanded",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["right.expanded",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["right.open",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["right.px",{"_index":1813,"title":{},"body":{"components/ContentComponent.html":{}}}],["right_kidney",{"_index":1070,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["rightmargin",{"_index":1849,"title":{},"body":{"components/ContentComponent.html":{}}}],["rights",{"_index":4669,"title":{},"body":{"license.html":{}}}],["rk",{"_index":2585,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rl",{"_index":2655,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["root",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{}}}],["root'},{'name",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["root_states",{"_index":4249,"title":{},"body":{"modules/StoreModule.html":{}}}],["rootnode",{"_index":3838,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["rotation",{"_index":3659,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotation_order",{"_index":3714,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotation_units",{"_index":3716,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotationorbit",{"_index":558,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["rotations",{"_index":4217,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotationx",{"_index":557,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["row",{"_index":1318,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["rui",{"_index":1052,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["rui_location",{"_index":2887,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs",{"_index":2634,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.bladder",{"_index":2641,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.body",{"_index":2640,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.colon",{"_index":2648,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.heart",{"_index":2646,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.kidney",{"_index":2642,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.left_kidney",{"_index":2644,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.left_lung",{"_index":2654,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.liver",{"_index":2666,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.lung",{"_index":2653,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.lymph_node",{"_index":2658,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.right_kidney",{"_index":2643,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.right_lung",{"_index":2656,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.small_instestine",{"_index":2651,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.spleen",{"_index":2660,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.thymus",{"_index":2662,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["rui_organs.ureter",{"_index":2664,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ruilocation",{"_index":2757,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["run",{"_index":1719,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["running",{"_index":2053,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["runtime",{"_index":2104,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/ContainerComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["s",{"_index":929,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["safedef",{"_index":2906,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["safehtml",{"_index":2895,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":2896,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sample",{"_index":2528,"title":{},"body":{"classes/HuBMAPEntity.html":{},"components/ImageViewerContentComponent.html":{},"changelog.html":{}}}],["samples",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":2904,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":2107,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["sanitizer",{"_index":2903,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitizer.bypasssecuritytrusthtml(html",{"_index":2908,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl(url",{"_index":2907,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sans",{"_index":2473,"title":{},"body":{"components/HeaderComponent.html":{}}}],["saved",{"_index":2357,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["scaffolding",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1112,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scale(1,2",{"_index":4349,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["scales",{"_index":3331,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["scaling",{"_index":4213,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["scaling_units",{"_index":3706,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["scene",{"_index":665,"title":{},"body":{"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scene.ts",{"_index":1033,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scene.ts:105",{"_index":1041,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:115",{"_index":1051,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:154",{"_index":1048,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:26",{"_index":1039,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:30",{"_index":1043,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:47",{"_index":1045,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:64",{"_index":1047,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scenegraph",{"_index":643,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphlayer",{"_index":617,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphnode",{"_index":644,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphnode.rotation",{"_index":660,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenes",{"_index":817,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["schema",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["schema#label",{"_index":2958,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["scheme",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme.colors[index",{"_index":4494,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme.ts",{"_index":1423,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["scheme.type",{"_index":4184,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["scheme/color",{"_index":1331,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme1",{"_index":1428,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme2",{"_index":1443,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme3",{"_index":1467,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme4",{"_index":1475,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme5",{"_index":1483,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme6",{"_index":1492,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme7",{"_index":1501,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme8",{"_index":1510,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["schemechange",{"_index":3042,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["schemechanged",{"_index":4171,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemechanged(idx",{"_index":4177,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemedropdowncomponent",{"_index":374,"title":{"components/SchemeDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["schemedropdownmodule",{"_index":3172,"title":{"modules/SchemeDropdownModule.html":{}},"body":{"modules/ImageViewerLayersModule.html":{},"modules/SchemeDropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["schemeidx",{"_index":4170,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemeoptions",{"_index":1537,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["schemes",{"_index":1371,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["schemes.ts",{"_index":1424,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["science",{"_index":4651,"title":{},"body":{"index.html":{}}}],["screen",{"_index":3272,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["script_fields",{"_index":2884,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["scroll",{"_index":4094,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollbar",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrolled",{"_index":4103,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrolling",{"_index":1801,"title":{},"body":{"components/ContainerComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollingmodule",{"_index":4166,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["search",{"_index":806,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["search'},{'name",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["search(filter",{"_index":853,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["search.component",{"_index":3833,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.component.html",{"_index":3746,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.scss",{"_index":3745,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts",{"_index":3741,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:25",{"_index":3761,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:30",{"_index":3785,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:36",{"_index":3783,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:41",{"_index":3758,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:47",{"_index":3788,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:54",{"_index":3769,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:72",{"_index":3766,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:81",{"_index":3778,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:90",{"_index":3781,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:98",{"_index":3774,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.detached",{"_index":3820,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.module",{"_index":3734,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["search.module.ts",{"_index":3827,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.service",{"_index":3793,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["search.service.ts",{"_index":3835,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["search.service.ts:107",{"_index":3846,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:124",{"_index":3863,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:142",{"_index":3849,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:154",{"_index":3867,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:190",{"_index":3862,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:200",{"_index":3853,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:216",{"_index":3859,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search/ontology",{"_index":3733,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["searchableitem",{"_index":58,"title":{"interfaces/SearchableItem.html":{}},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["searched",{"_index":57,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{}}}],["searches",{"_index":3850,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searching",{"_index":3743,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["searchresult",{"_index":3765,"title":{"interfaces/SearchResult.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults",{"_index":3944,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.get(node.id",{"_index":3948,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.set(node.id",{"_index":3949,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchservice",{"_index":3759,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["searchvalue",{"_index":3852,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchvalue.length",{"_index":3959,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["section",{"_index":4169,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["see",{"_index":4644,"title":{},"body":{"index.html":{}}}],["select",{"_index":2158,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selected",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["selected(ontologynode",{"_index":3979,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selectedcolor",{"_index":1342,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["selectedresult",{"_index":4079,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["selecting",{"_index":2138,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selection",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["selection'},{'name",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["selection.component",{"_index":3993,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.component.html",{"_index":3968,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.scss",{"_index":3967,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts",{"_index":3965,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":3983,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":3974,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":3977,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:40",{"_index":3976,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":3973,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:53",{"_index":3981,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:61",{"_index":3980,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.id",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["selection.label",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["selection.module",{"_index":3736,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["selection.module.ts",{"_index":3992,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.ts",{"_index":3964,"title":{},"body":{"interfaces/OntologySelection.html":{}}}],["selection/ontology",{"_index":3735,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{}}}],["selectionchange",{"_index":1275,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selectionchanged",{"_index":2135,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionchanged(value",{"_index":2143,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectioncounter",{"_index":4475,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["selectionorder",{"_index":3089,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["selections",{"_index":1270,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["selectionstring",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["selects",{"_index":2930,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["sell",{"_index":4676,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3317,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["semantically",{"_index":3313,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["send",{"_index":1708,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["sendcompletedto(subject",{"_index":2061,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._aggregatedataquerystatus",{"_index":2003,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._listdataquerystatus",{"_index":2012,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._termoccurencesdataquerystatus",{"_index":2029,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sender",{"_index":3551,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":3524,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":3494,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":3596,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":3565,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":2058,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{}}}],["sendtoggle",{"_index":3525,"title":{},"body":{"classes/InitializationState.html":{}}}],["sensor",{"_index":4354,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sent",{"_index":1881,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["serif",{"_index":2474,"title":{},"body":{"components/HeaderComponent.html":{}}}],["server",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":878,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["service.initializeimpl(component",{"_index":4302,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services",{"_index":3381,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["services/data",{"_index":2044,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["services/message/message.service",{"_index":1885,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1912,"title":{},"body":{"modules/CoreModule.html":{}}}],["servicetoken",{"_index":2515,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["servicetoken).tojsonld",{"_index":2695,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["servicetoken.length",{"_index":2869,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["servicetype",{"_index":2861,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["set",{"_index":68,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["set(['van0003",{"_index":2570,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["set(filter.highlightedentities",{"_index":930,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["set(filter?.highlightedentities",{"_index":1096,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["setbrightnesshigh(value",{"_index":1574,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setbrightnesslow(value",{"_index":1569,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setdefaultscheme",{"_index":4444,"title":{},"body":{"injectables/ViewerState.html":{}}}],["setdefaultscheme(scheme",{"_index":4449,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["setlayers(layers",{"_index":3188,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["setontology",{"_index":3995,"title":{},"body":{"injectables/OntologyState.html":{}}}],["setontology(ontology",{"_index":3996,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["sets",{"_index":1721,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ThemingService.html":{}}}],["setscene",{"_index":468,"title":{},"body":{"classes/BodyUI.html":{}}}],["setscene(data",{"_index":504,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["setsize",{"_index":2990,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsize(width",{"_index":1196,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources",{"_index":2991,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources(sources",{"_index":1203,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources(urls",{"_index":4377,"title":{},"body":{"components/ViewerComponent.html":{}}}],["setsourceurls",{"_index":3212,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["setsourceurls(result",{"_index":3220,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["settheme",{"_index":4277,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":4292,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":3496,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["settimeout(r",{"_index":920,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["setting",{"_index":4259,"title":{},"body":{"modules/StoreModule.html":{}}}],["settings",{"_index":1563,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{}}}],["settle",{"_index":918,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["settransparency(value",{"_index":1578,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setup",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":60,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shadow",{"_index":1605,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["shall",{"_index":4684,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1393,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["share",{"_index":516,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["shared",{"_index":4247,"title":{},"body":{"modules/StoreModule.html":{}}}],["shared/components/checkbox/checkbox.module",{"_index":2376,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["shared/components/drawer/drawer/drawer.component",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/components/dropdown/dropdown.module",{"_index":2377,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/dual",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/FiltersContentModule.html":{}}}],["shared/components/spinner",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["sharing",{"_index":2066,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["short",{"_index":30,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shortest",{"_index":970,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["shortestpath",{"_index":969,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["shortestpath(this.graph",{"_index":1029,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["shortinfo",{"_index":31,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shortinfo0",{"_index":2834,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["shortinfo1",{"_index":2835,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["shortinfo2",{"_index":2836,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["show",{"_index":1679,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["showing",{"_index":4406,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["showm",{"_index":3134,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["shown",{"_index":2257,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["shows",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["showselectionbar",{"_index":1598,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["si",{"_index":2650,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["side",{"_index":1835,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["sidebar",{"_index":3070,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["simplechanges",{"_index":2233,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["simplemeshlayer",{"_index":618,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["simplify",{"_index":3892,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["single",{"_index":754,"title":{},"body":{"components/BodyUiComponent.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ValueObject.html":{}}}],["site",{"_index":2438,"title":{},"body":{"components/HeaderComponent.html":{}}}],["size",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OldRuiData.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["skipself",{"_index":1910,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["slideinhorizontaldropdown",{"_index":2152,"title":{},"body":{"components/DropdownComponent.html":{}}}],["slideinhorizontalslider",{"_index":2320,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider",{"_index":1133,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["slider's",{"_index":2242,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider'},{'name",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["slider.component",{"_index":2338,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.component.html",{"_index":2195,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.scss",{"_index":2194,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts",{"_index":2192,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:102",{"_index":2214,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:125",{"_index":2234,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:139",{"_index":2247,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:155",{"_index":2236,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:168",{"_index":2225,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:187",{"_index":2251,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:204",{"_index":2249,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:214",{"_index":2230,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:227",{"_index":2246,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:243",{"_index":2241,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":2266,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:36",{"_index":2262,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:41",{"_index":2218,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:46",{"_index":2221,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:51",{"_index":2220,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:56",{"_index":2224,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:61",{"_index":2256,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:66",{"_index":2259,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:71",{"_index":2258,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:76",{"_index":2253,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:81",{"_index":2252,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:86",{"_index":2268,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:97",{"_index":2260,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.detached",{"_index":2322,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.module",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider.module.ts",{"_index":2335,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.wrapper",{"_index":2316,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider/dual",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider_max",{"_index":4397,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sliders",{"_index":1528,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["slidervaluechanged",{"_index":2209,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slidervalues",{"_index":4060,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["slidervalues.push(slider",{"_index":4065,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["small",{"_index":32,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["software",{"_index":4664,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1380,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["sort((a",{"_index":935,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["sortby",{"_index":3791,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortby(searchresults",{"_index":3803,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult",{"_index":3754,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult(this",{"_index":3777,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorted",{"_index":3145,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["sortlexically",{"_index":3755,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically(this",{"_index":3780,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorts",{"_index":3779,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["source.dimension_units",{"_index":1116,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.entityid",{"_index":1123,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.getontologytermoccurences().subscribe(ontologytermsdata",{"_index":2085,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.info",{"_index":1207,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["source.label",{"_index":1126,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object",{"_index":1103,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object.file_format?.startswith('model/gltf",{"_index":1104,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object?.file",{"_index":1124,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object?.file_subpath",{"_index":1125,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object['@id",{"_index":1106,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.pipe",{"_index":2072,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.service",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.service.ts",{"_index":1925,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":1938,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:19",{"_index":1940,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":1929,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:53",{"_index":1931,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:67",{"_index":1934,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:77",{"_index":1930,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:87",{"_index":1935,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:97",{"_index":1933,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.subscribe(data",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["source.worker",{"_index":1948,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.x_dimension",{"_index":1117,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.y_dimension",{"_index":1118,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.z_dimension].map(dim",{"_index":1119,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source/data",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source['@id",{"_index":1107,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sourceid",{"_index":1105,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sourceiri",{"_index":966,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["sources",{"_index":1160,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["sources(urls",{"_index":4401,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sources.includes(msg.source",{"_index":3578,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sources.map(source",{"_index":1205,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["sourcesfromurls",{"_index":4355,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sourcesfromurls(urls",{"_index":4365,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sourceurls",{"_index":3210,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["sp",{"_index":2659,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["space",{"_index":3166,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["spatial",{"_index":83,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spatial_bulk",{"_index":2858,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["spatialentity",{"_index":816,"title":{"interfaces/SpatialEntity.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spatially",{"_index":3315,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["spatialobjectreference",{"_index":955,"title":{"interfaces/SpatialObjectReference.html":{}},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["spatialorbulk",{"_index":2512,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["spatialplacement",{"_index":959,"title":{"interfaces/SpatialPlacement.html":{}},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["spatialscenenode",{"_index":480,"title":{"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spec",{"_index":2556,"title":{},"body":{"classes/HuBMAPEntity.html":{},"changelog.html":{}}}],["special",{"_index":3894,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["specific",{"_index":97,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/SearchableItem.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":3343,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["specified",{"_index":3576,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["specifying",{"_index":3559,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["specimen_type",{"_index":2852,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["spinner",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["spinneractive",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["spinneroverlaycomponent",{"_index":375,"title":{"components/SpinnerOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["spinneroverlaymodule",{"_index":402,"title":{"modules/SpinnerOverlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["spinning",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1074,"title":{},"body":{"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sprint",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["src/.../data.state.ts",{"_index":4642,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../drawer.component.ts",{"_index":4716,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../image",{"_index":4718,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../messages.ts",{"_index":4714,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../ontology",{"_index":4717,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":1907,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/header/header.component.ts",{"_index":2437,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:18",{"_index":2447,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:23",{"_index":2448,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:28",{"_index":2446,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:33",{"_index":2451,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.component.ts:38",{"_index":2450,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/header/header.module.ts",{"_index":2480,"title":{},"body":{"modules/HeaderModule.html":{}}}],["src/app/core/models/color",{"_index":1422,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["src/app/core/models/flat",{"_index":2416,"title":{},"body":{"classes/FlatNode.html":{}}}],["src/app/core/models/image",{"_index":3086,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/json",{"_index":2951,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["src/app/core/models/ontology",{"_index":3739,"title":{},"body":{"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{}}}],["src/app/core/services/data",{"_index":1924,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["src/app/core/services/ontology",{"_index":3834,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/theming/theming.module.ts",{"_index":4265,"title":{},"body":{"modules/ThemingModule.html":{}}}],["src/app/core/services/theming/theming.service.ts",{"_index":4270,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:13",{"_index":4294,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:15",{"_index":4296,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:17",{"_index":4297,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:20",{"_index":4287,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:23",{"_index":4279,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:37",{"_index":4284,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:46",{"_index":4293,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:56",{"_index":4291,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:67",{"_index":4290,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/services/theming/theming.service.ts:82",{"_index":4281,"title":{},"body":{"injectables/ThemingService.html":{}}}],["src/app/core/store/data/data.state.ts",{"_index":1969,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/store/data/data.state.ts:101",{"_index":2010,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:103",{"_index":2013,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:107",{"_index":2004,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:111",{"_index":2030,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:116",{"_index":2015,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:118",{"_index":2007,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:120",{"_index":2032,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:123",{"_index":2027,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:130",{"_index":1985,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:155",{"_index":1995,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:169",{"_index":1990,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:181",{"_index":1987,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:193",{"_index":1992,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:92",{"_index":1999,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:94",{"_index":1997,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:96",{"_index":2000,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/data/data.state.ts:98",{"_index":2016,"title":{},"body":{"injectables/DataState.html":{}}}],["src/app/core/store/icon",{"_index":2098,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["src/app/core/store/ontology/ontology.state.ts",{"_index":3994,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["src/app/core/store/ontology/ontology.state.ts:39",{"_index":4000,"title":{},"body":{"injectables/OntologyState.html":{}}}],["src/app/core/store/ontology/ontology.state.ts:42",{"_index":4002,"title":{},"body":{"injectables/OntologyState.html":{}}}],["src/app/core/store/ontology/ontology.state.ts:50",{"_index":3997,"title":{},"body":{"injectables/OntologyState.html":{}}}],["src/app/core/store/store.module.ts",{"_index":4239,"title":{},"body":{"modules/StoreModule.html":{}}}],["src/app/core/store/viewer/viewer.state.ts",{"_index":4439,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:116",{"_index":4448,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:40",{"_index":4462,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:44",{"_index":4456,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:49",{"_index":4446,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:71",{"_index":4452,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/core/store/viewer/viewer.state.ts:96",{"_index":4450,"title":{},"body":{"injectables/ViewerState.html":{}}}],["src/app/modules/body/body",{"_index":714,"title":{},"body":{"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{}}}],["src/app/modules/body/body.module.ts",{"_index":443,"title":{},"body":{"modules/BodyModule.html":{}}}],["src/app/modules/color",{"_index":1330,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["src/app/modules/filters/filters",{"_index":2339,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{}}}],["src/app/modules/image",{"_index":3036,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{}}}],["src/app/modules/info/info",{"_index":3245,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["src/app/modules/ontology",{"_index":3731,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["src/app/modules/results",{"_index":4069,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["src/app/modules/scheme",{"_index":4167,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts",{"_index":1266,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts:16",{"_index":1276,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts:21",{"_index":1281,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts:26",{"_index":1285,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts:31",{"_index":1290,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.component.ts:38",{"_index":1295,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/shared/components/checkbox/checkbox.module.ts",{"_index":1327,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts",{"_index":1688,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:101",{"_index":1724,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:111",{"_index":1714,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:120",{"_index":1726,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:37",{"_index":1711,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:41",{"_index":1742,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:45",{"_index":1734,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:48",{"_index":1738,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:50",{"_index":1746,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:55",{"_index":1749,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:58",{"_index":1729,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:60",{"_index":1707,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/container/container.component.ts:79",{"_index":1720,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts",{"_index":1803,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:100",{"_index":1833,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:113",{"_index":1828,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:28",{"_index":1818,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:30",{"_index":1819,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:32",{"_index":1821,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:34",{"_index":1822,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:36",{"_index":1816,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:39",{"_index":1834,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:41",{"_index":1814,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:58",{"_index":1827,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/content/content.component.ts:68",{"_index":1824,"title":{},"body":{"components/ContentComponent.html":{}}}],["src/app/shared/components/drawer/drawer.module.ts",{"_index":2124,"title":{},"body":{"modules/DrawerModule.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":3399,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:33",{"_index":3408,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":3407,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":3409,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:42",{"_index":3410,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:52",{"_index":3412,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/drawer/drawer.component.ts:59",{"_index":3411,"title":{},"body":{"classes/InitializationState.html":{}}}],["src/app/shared/components/drawer/messages.ts",{"_index":1880,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/components/drawer/toggle",{"_index":4320,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts",{"_index":2130,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:16",{"_index":2137,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:21",{"_index":2139,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:26",{"_index":2141,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:31",{"_index":2142,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:36",{"_index":2148,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:41",{"_index":2145,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.component.ts:49",{"_index":2144,"title":{},"body":{"components/DropdownComponent.html":{}}}],["src/app/shared/components/dropdown/dropdown.module.ts",{"_index":2185,"title":{},"body":{"modules/DropdownModule.html":{}}}],["src/app/shared/components/dual",{"_index":2191,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["src/app/shared/components/spinner",{"_index":4219,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{}}}],["src/app/shared/services/message/message.service.ts",{"_index":3550,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["src/app/shared/services/message/message.service.ts:101",{"_index":3600,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:110",{"_index":3601,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:126",{"_index":3607,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message/message.service.ts:128",{"_index":3604,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message/message.service.ts:151",{"_index":3606,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message/message.service.ts:161",{"_index":3605,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message/message.service.ts:48",{"_index":3597,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:68",{"_index":3602,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:81",{"_index":3598,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/app/shared/services/message/message.service.ts:91",{"_index":3599,"title":{},"body":{"classes/MessageChannel.html":{}}}],["src/environments/environment",{"_index":3874,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["srcevent",{"_index":584,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["standards",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["stanford",{"_index":2627,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["start",{"_index":1765,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":1870,"title":{},"body":{"components/ContentComponent.html":{}}}],["start?.opened",{"_index":1869,"title":{},"body":{"components/ContentComponent.html":{}}}],["startdrawers",{"_index":1790,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":1794,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":1798,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":4498,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["startexpanded",{"_index":1868,"title":{},"body":{"components/ContentComponent.html":{}}}],["starts",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":2102,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["startwith",{"_index":1753,"title":{},"body":{"components/ContainerComponent.html":{},"components/OntologySearchComponent.html":{}}}],["stat",{"_index":4121,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.count",{"_index":4119,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.label",{"_index":4120,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["state",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state('closed",{"_index":3438,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":3443,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('extended",{"_index":3447,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":1841,"title":{},"body":{"components/ContentComponent.html":{}}}],["state('full",{"_index":3448,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('half",{"_index":3444,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('true",{"_index":1842,"title":{},"body":{"components/ContentComponent.html":{}}}],["state(`open",{"_index":3437,"title":{},"body":{"classes/InitializationState.html":{}}}],["state.data.filter(d",{"_index":692,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["state.nodes[state.root",{"_index":4001,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["state.zoomopacity",{"_index":702,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["statechange",{"_index":3468,"title":{},"body":{"classes/InitializationState.html":{}}}],["staterepository",{"_index":2033,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["states",{"_index":1186,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"modules/StoreModule.html":{}}}],["states.every(state",{"_index":2057,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["states[view.id",{"_index":1244,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["static",{"_index":606,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/HuBMAPEntity.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SpatialSceneNode.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["statictiff",{"_index":3621,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["staticzarr",{"_index":3615,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["stats",{"_index":4072,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["status",{"_index":2008,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["stay",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1593,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["still",{"_index":731,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["store",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/HuBMAPEntity.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"modules/StoreModule.html":{}}}],["store.forsubjects((subject",{"_index":1010,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["store/ontology/ontology.state",{"_index":3879,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["store/store.module",{"_index":1913,"title":{},"body":{"modules/CoreModule.html":{}}}],["stored_fields",{"_index":2883,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["storemodule",{"_index":1905,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":4250,"title":{},"body":{"modules/StoreModule.html":{}}}],["strategic",{"_index":3363,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["streaming",{"_index":4630,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["string[]>(map",{"_index":2979,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["stroke",{"_index":1312,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["structure",{"_index":2955,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["styilng",{"_index":3141,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["style",{"_index":1379,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{}}}],["style.margin",{"_index":1811,"title":{},"body":{"components/ContentComponent.html":{}}}],["styled",{"_index":2462,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":3491,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["styling",{"_index":1369,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{}}}],["sub",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":483,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"license.html":{}}}],["subject.id",{"_index":1012,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["subject.next(dataquerystate.completed",{"_index":2062,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sublicense",{"_index":4674,"title":{},"body":{"license.html":{}}}],["subpath",{"_index":4210,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["subscribe(event",{"_index":4118,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["subscription",{"_index":1743,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["subscriptions",{"_index":1698,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["substantial",{"_index":4686,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":3390,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["subtree",{"_index":3913,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["subtrees",{"_index":3903,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["successful",{"_index":2911,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["such",{"_index":2228,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["suffix",{"_index":3818,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["super",{"_index":2078,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["support",{"_index":3383,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules.html":{}}}],["supported",{"_index":3640,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["supporting",{"_index":3332,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["svg",{"_index":2110,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["swatch",{"_index":1616,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["switch",{"_index":763,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{}}}],["switchmap",{"_index":2042,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["switchmap(query",{"_index":2073,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["switchmap(value",{"_index":3800,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["syncexpanded(other",{"_index":3533,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":3530,"title":{},"body":{"classes/InitializationState.html":{}}}],["synonym",{"_index":3856,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["synonymlabels",{"_index":2987,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["synonyms",{"_index":2959,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"interfaces/ValueObject.html":{}}}],["synonymsextractor",{"_index":2977,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsextractor(json",{"_index":2988,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsproperty",{"_index":2976,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["systems",{"_index":3334,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["t",{"_index":989,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"miscellaneous/typealiases.html":{}}}],["t.x",{"_index":3719,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["t.y",{"_index":3721,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["t.z",{"_index":3723,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tab",{"_index":4142,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["table",{"_index":3888,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["take",{"_index":4138,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["taken",{"_index":2635,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["takes",{"_index":1555,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["takewhile",{"_index":3554,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tap",{"_index":2043,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["tap(linkchildren",{"_index":3935,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["tap(next",{"_index":2074,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["target",{"_index":555,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["target['@id",{"_index":1110,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["targetiri",{"_index":964,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["tealgreen",{"_index":1444,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["team",{"_index":3355,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["technologies",{"_index":79,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["technology",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":1302,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["template",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["templateurl",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["temporary",{"_index":3890,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["term",{"_index":843,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["termdata",{"_index":3971,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["termoccurencesdata",{"_index":1981,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["termoccurencesdata(filter",{"_index":1991,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["termoccurencesdataquerystatus",{"_index":1982,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["terms",{"_index":66,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.body.id",{"_index":1067,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.kidney.id",{"_index":1069,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.left_kidney.id",{"_index":1073,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.right_kidney.id",{"_index":1071,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.spleen.id",{"_index":1075,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["test",{"_index":2056,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["testing",{"_index":2055,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["testinggroup",{"_index":2621,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["text",{"_index":2330,"title":{},"body":{"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["th",{"_index":2661,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["theme",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["themes",{"_index":4295,"title":{},"body":{"injectables/ThemingService.html":{}}}],["theming",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemingService.html":{}}}],["theming.gettheme",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["theming.service",{"_index":4267,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":1906,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":164,"title":{"injectables/ThemingService.html":{}},"body":{"components/AppComponent.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":4268,"title":{},"body":{"modules/ThemingModule.html":{}}}],["then(r",{"_index":2888,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["thin",{"_index":3823,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["this._afterconnected",{"_index":1962,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.completed",{"_index":2081,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.running",{"_index":2093,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.pipe(distinct",{"_index":2006,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._channelconfigs",{"_index":1181,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._expanded",{"_index":3461,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._height",{"_index":1171,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._layers",{"_index":3190,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["this._listdataquerystatus$.next(dataquerystate.completed",{"_index":2080,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._listdataquerystatus$.next(dataquerystate.running",{"_index":2091,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._listdataquerystatus$.pipe(distinct",{"_index":2014,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._loaders",{"_index":1176,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._measuredmargin",{"_index":3489,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":3479,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._onclick",{"_index":535,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this._onhover",{"_index":533,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this._onviewstatechange",{"_index":537,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this._opened",{"_index":3457,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":3453,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._sources",{"_index":1174,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["this._sources.length",{"_index":4404,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this._sources.map(source",{"_index":4409,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this._termoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":2082,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._termoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":2095,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._termoccurencesdataquerystatus$.pipe(distinct",{"_index":2031,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._width",{"_index":1170,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.addentitiesmany(ids.map((id",{"_index":4480,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.addspatialentity(getspatialentity(store",{"_index":1015,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.addspatialobjectreference(getspatialobjectreference(store",{"_index":1011,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.addspatialplacement(getspatialplacement(store",{"_index":1018,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.age",{"_index":2732,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.aggregatedata",{"_index":2002,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.aggregatedataquerystatus",{"_index":2020,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.ancestors",{"_index":2700,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.ancestors.find(e",{"_index":2705,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.ancestors[0].rui_location",{"_index":2759,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.animationsenabled",{"_index":1859,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.applyfilter({highlightedentities",{"_index":781,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.applyfilter({ontologyterms",{"_index":767,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.applyfilters.emit(this.filters",{"_index":2360,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.applythemeclass(theme",{"_index":4307,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":4306,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.assaytypes",{"_index":2797,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.assaytypes.join",{"_index":2857,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.assetsapi}/${d.uuid}/${f.rel_path",{"_index":2777,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.atscrollbottom",{"_index":4115,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.bmi",{"_index":2734,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.bmi?.tofixed(1",{"_index":2838,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.bodycanvas.nativeelement",{"_index":747,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui",{"_index":748,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui.nodeclick$.subscribe(async",{"_index":762,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui.setscene(scene",{"_index":761,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyuilayer",{"_index":531,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.bodyuilayer.setstate({data",{"_index":568,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.bodyuilayer.state",{"_index":562,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.bottom",{"_index":1677,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["this.brightnesshigh",{"_index":1584,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.brightnesslow",{"_index":1587,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.brightnessslideroptions",{"_index":1596,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.cdr.markforcheck",{"_index":1784,"title":{},"body":{"components/ContainerComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.channel",{"_index":1775,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":3585,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed",{"_index":3587,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":3590,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.next",{"_index":3566,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":1782,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.channelconfigs",{"_index":1219,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.closeviewer.emit",{"_index":3076,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["this.color",{"_index":3122,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme",{"_index":1373,"title":{},"body":{"components/ColorBarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["this.colorscheme.colors",{"_index":3123,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme.positions",{"_index":3124,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme.type",{"_index":3121,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.component",{"_index":4309,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.containshumangeneticsequences",{"_index":2794,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.content",{"_index":1786,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":1785,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":1772,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":1774,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":1773,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.contentsvisible",{"_index":2305,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.creategraph",{"_index":1007,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.createlayerconfigs",{"_index":1211,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.createselectionlabel(ontologyselection",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createvivviews",{"_index":1198,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.ctx.patchstate",{"_index":4489,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.ctx.setstate(ontology",{"_index":4003,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["this.cursor",{"_index":540,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.data",{"_index":2830,"title":{},"body":{"classes/HuBMAPEntity.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["this.data.ancestors",{"_index":2701,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.data.descendants",{"_index":2703,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.data.entity_type",{"_index":2699,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.data.filter$.subscribe(async",{"_index":757,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.data.querystatus$.pipe",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.data.resulttype",{"_index":4140,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["this.data.specimen_type",{"_index":2853,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.data.updatefilter",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["this.data.uuid",{"_index":2697,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.dataloading",{"_index":4114,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.datasource",{"_index":1949,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource.connect(this.dboptions",{"_index":1963,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasourceservice.datasource.connect",{"_index":759,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.datasourceservice.datasource.getscene(f",{"_index":760,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.datasourceservice.getimageviewerdata(result['@id",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["this.datatypes",{"_index":2795,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.datatypes.join",{"_index":2855,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.db.getspatialentities(filter).map((entity",{"_index":1097,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.db.graph.gettransformationmatrix(sourceid",{"_index":1109,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.db.store",{"_index":1008,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.dboptions",{"_index":1951,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.deck",{"_index":547,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.finalize",{"_index":1195,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.props.viewstate",{"_index":573,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.deck.redraw(true",{"_index":1202,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.setprops",{"_index":571,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.deck.setprops(props",{"_index":1247,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.setprops({viewstate",{"_index":549,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.defaulttheme",{"_index":4304,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":3430,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.descendants",{"_index":2702,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.description",{"_index":2739,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":3261,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialogref.close",{"_index":3289,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.doi",{"_index":2737,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor",{"_index":2704,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.description",{"_index":2711,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.display_doi",{"_index":2848,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.group_name",{"_index":2747,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.group_uuid",{"_index":2743,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.protocol_url",{"_index":2756,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.donor.uuid",{"_index":2833,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.drawer",{"_index":4341,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":4339,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":1855,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":1780,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":1789,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.element.nativeelement",{"_index":3480,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.entities$.pipe",{"_index":4457,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.entities[id",{"_index":4481,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.entitytype",{"_index":2698,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.ethnicity",{"_index":2735,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.expanded",{"_index":3514,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":3522,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":3502,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":3473,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.faded",{"_index":1874,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.filter",{"_index":784,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filter$.pipe(querydata",{"_index":2001,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.filter?.highlightedentities",{"_index":778,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filterchange.emit(newfilter",{"_index":785,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filteredresults",{"_index":3797,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.filters",{"_index":2358,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(filters",{"_index":2398,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(this.filters",{"_index":2359,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.filtersvisible",{"_index":2397,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.formatlabel(node.label",{"_index":3951,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.formcontrol.reset",{"_index":3812,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.formcontrol.valuechanges",{"_index":3796,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.get(s",{"_index":927,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.getarguments(definition",{"_index":2925,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getautocolor(autocolorindex",{"_index":4488,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.getbrightness",{"_index":3130,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.getchildren",{"_index":3925,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getchildren.bind(this",{"_index":3926,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getentityscenenodes(filter",{"_index":1128,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getids(filter)].map((s",{"_index":926,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.getindexofmatch(label",{"_index":3956,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getindexofmatch(node.label",{"_index":3950,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":3575,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":2923,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getreferencebody(filter",{"_index":1064,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getreferenceorgans(filter).map((organ",{"_index":1078,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getreferencescenenodes(filter",{"_index":1127,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(body",{"_index":1076,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(entity",{"_index":1098,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(getspatialentity(store",{"_index":1080,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(organ",{"_index":1079,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getstate().filter",{"_index":2090,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.graph",{"_index":896,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{}}}],["this.graph.creategraph",{"_index":922,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.graph.getedgeattribute(source",{"_index":1032,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.hasnode(sourceiri",{"_index":1025,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.hasnode(targetiri",{"_index":1026,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergedirectededge(placement.source['@id",{"_index":1022,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergenode(entity['@id",{"_index":1020,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergenode(ref['@id",{"_index":1021,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.groupname",{"_index":2744,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.groupuuid",{"_index":2741,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.handlemessage(msg",{"_index":1778,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.highvalue",{"_index":2289,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.http.get(environment.ontologyurl",{"_index":3928,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.id",{"_index":2696,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.imageproviders",{"_index":2785,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.images",{"_index":2784,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.initialized",{"_index":3429,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":3495,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":3503,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":3526,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initializedeck(reqprops",{"_index":1189,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.initializesliderpopover",{"_index":2306,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isdemo",{"_index":4403,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.issliderinitialized",{"_index":2303,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isslideropen",{"_index":2304,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.label",{"_index":2736,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.lasthovered",{"_index":582,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.layer",{"_index":1602,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.brightness[0",{"_index":1581,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.brightness[1",{"_index":1585,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.transparency",{"_index":1588,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layerchange.emit(layer",{"_index":3164,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["this.layerchange.emit(new",{"_index":3160,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["this.layerchange.emit(this.layer",{"_index":1599,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layerconfigs",{"_index":1210,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layerfilter",{"_index":1250,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layers",{"_index":1226,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layers$.pipe",{"_index":4453,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.leftmargin",{"_index":1866,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.listdata",{"_index":2011,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.listdataquerystatus",{"_index":2019,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.loaders[0",{"_index":4068,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["this.lookup(nodes",{"_index":3942,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.lowvalue",{"_index":2287,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.margin2",{"_index":3476,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":3475,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":3527,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":3584,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter(msg",{"_index":3572,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nextmessageid",{"_index":3567,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodeclicksubject.next({node",{"_index":586,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":481,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":583,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":485,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":581,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":488,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["this.ontologyselectionlabel",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ontologyservice.filter(value",{"_index":3801,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologyservice.loadontology",{"_index":3794,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologystate.nodes$.pipe",{"_index":3941,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologystate.rootnode",{"_index":3924,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologystate.setontology(ontology",{"_index":3940,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologyterms",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"classes/HuBMAPEntity.html":{}}}],["this.ontologyterms[this.ontologyterms.length",{"_index":2754,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.ontologytermsfulldata",{"_index":2086,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.onviewstatechange",{"_index":1251,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.opened",{"_index":3500,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":3518,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":3501,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openimageviewer.emit",{"_index":4141,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["this.options",{"_index":900,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DualSliderComponent.html":{}}}],["this.options.ccfowlurl",{"_index":903,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.ceil",{"_index":2295,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.floor",{"_index":2294,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.hubmapassetsurl",{"_index":913,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataservice",{"_index":911,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataurl",{"_index":907,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataurl.endswith('.jsonld",{"_index":908,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapportalurl",{"_index":914,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmaptoken",{"_index":912,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.optionschanged",{"_index":2283,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionsvisible",{"_index":2149,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.organ",{"_index":2753,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.organname",{"_index":2748,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.organsample",{"_index":2708,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.organsample.display_doi",{"_index":2850,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.original.children.length",{"_index":2435,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.original.label",{"_index":2434,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.overlayref",{"_index":2279,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.detach",{"_index":2302,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.dispose",{"_index":2296,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.patchstate",{"_index":2087,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.popupvisible",{"_index":1674,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["this.portalurl",{"_index":2816,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.position",{"_index":3452,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.props",{"_index":686,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.protocolurl",{"_index":2755,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.registericonimpl(definition",{"_index":2914,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(safedef",{"_index":2909,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry",{"_index":2918,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.removebox",{"_index":2399,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.removeentitiesmany(this.ids",{"_index":4479,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.resetchannelconfigs",{"_index":1209,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.resolve",{"_index":3406,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.result",{"_index":3229,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.resulttype",{"_index":2820,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.resulturl",{"_index":2818,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.resulturl.split('/').slice",{"_index":2824,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.rightmargin",{"_index":1867,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.rootnode",{"_index":3923,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.scene",{"_index":898,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.scene.getscene(filter",{"_index":941,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.schemechange.emit(this.colorscheme",{"_index":4188,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemechanged(0",{"_index":4185,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeidx",{"_index":4187,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions",{"_index":4182,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions.filter(scheme",{"_index":4183,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions[idx",{"_index":4186,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.selected.emit(node",{"_index":3811,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.selection",{"_index":1306,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selection.filter(selection",{"_index":1307,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.selectionchange.emit(this.selection",{"_index":1308,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selectionchange.emit(value",{"_index":2150,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.sendtoggle",{"_index":3504,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.sensor",{"_index":4418,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.sensor.detach",{"_index":4421,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.setsources(reqprops.sources",{"_index":1193,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.setsourceurls(result",{"_index":3230,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.setstate({data",{"_index":687,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.settheme(this.defaulttheme",{"_index":4308,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.sex",{"_index":2733,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.snapshot",{"_index":4477,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.sortbysynonymresult",{"_index":3804,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.sortlexically",{"_index":3805,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.source",{"_index":3568,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.source.getaggregateresults(filter",{"_index":2094,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.source.getlistresults(filter",{"_index":2092,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.source.getontologytermoccurences(filter",{"_index":2096,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.sourcesfromurls(urls",{"_index":4402,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.sourceurls",{"_index":3231,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.spatialentity",{"_index":2766,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.spatialorbulk",{"_index":2806,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.state",{"_index":690,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.state$.pipe(map(state",{"_index":3998,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["this.state$.pipe(pluck('filter",{"_index":2009,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.statechange.emit",{"_index":3528,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.states",{"_index":1227,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.store",{"_index":895,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.store.getquads(datafactory.namednode(id",{"_index":924,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.store.selectsnapshot(ontologystate",{"_index":3961,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.store.size",{"_index":901,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":4338,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":1852,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":1777,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.subscriptions.unsubscribe",{"_index":1787,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.syncexpanded(other",{"_index":3529,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.termoccurencesdata",{"_index":2028,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.termoccurencesdataquerystatus",{"_index":2021,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.theme",{"_index":4305,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.theming.settheme(this.theming.gettheme",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["this.thumbnailurl",{"_index":2803,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":3459,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":3498,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":3497,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":3463,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":3510,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":3507,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.transparencyslideroptions",{"_index":1597,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.tree.expandandselect(ontologynode",{"_index":3986,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.update",{"_index":1201,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatedeckprops",{"_index":1224,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updateentitiesmany",{"_index":4490,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.updateentitiesmany(changes",{"_index":4495,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.updatefaded",{"_index":1857,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updatelayer",{"_index":1583,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.updatelayers",{"_index":1223,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["this.updatemargin(position",{"_index":1864,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updatesources",{"_index":4408,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.updatestate((_view",{"_index":1264,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatestate((view",{"_index":1199,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatestate(view",{"_index":1212,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updateviews",{"_index":1222,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.validatedrawers",{"_index":1781,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.valuerange",{"_index":2291,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[0",{"_index":2292,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[1",{"_index":2293,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.viewer",{"_index":4413,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.finalize",{"_index":4422,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.setsize(width",{"_index":4420,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewervisible",{"_index":3228,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.views",{"_index":1225,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.virtualscroll.elementscrolled",{"_index":4117,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.virtualscroll.measurescrolloffset('bottom",{"_index":4116,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.vivviews",{"_index":1197,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews.map(viv",{"_index":1229,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews.reduce((states",{"_index":1242,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.width",{"_index":3474,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.zoomto(node",{"_index":567,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["those",{"_index":3570,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["through",{"_index":3361,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["throw",{"_index":1768,"title":{},"body":{"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"interfaces/OMEZarrInfo.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{}}}],["throwduplicatedrawerserror('end",{"_index":1797,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":1795,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":1764,"title":{},"body":{"components/ContainerComponent.html":{}}}],["thrown",{"_index":1763,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":1759,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumb",{"_index":2823,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["thumbnailurl",{"_index":35,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["thymus",{"_index":2675,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tiff",{"_index":2769,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["tiff2",{"_index":3616,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["tiffinfo",{"_index":1142,"title":{"interfaces/TiffInfo.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["tiffinfo).url",{"_index":4410,"title":{},"body":{"components/ViewerComponent.html":{}}}],["tiffs",{"_index":2770,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tiffs.length",{"_index":2779,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["time",{"_index":1289,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/OldRuiData.html":{}}}],["timing",{"_index":1877,"title":{},"body":{"components/ContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["tissue",{"_index":29,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["tissue_id",{"_index":2851,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tissue_object_rotation",{"_index":3655,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_object_size",{"_index":3656,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_position_mass_point",{"_index":3657,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_position_vertices",{"_index":3658,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissues",{"_index":25,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["title",{"_index":3052,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["tmc",{"_index":78,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"classes/HuBMAPEntity.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["todo",{"_index":752,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["toeuler",{"_index":974,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["toeuler(fromeuler(r_rad[1",{"_index":998,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["toggle",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["toggle(opened",{"_index":3499,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglebuttoncomponent",{"_index":377,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["toggled",{"_index":1860,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["toggleexpanded(expanded",{"_index":3513,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglefiltervisible",{"_index":2384,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["toggleoptions",{"_index":2136,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggles",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{}}}],["togglescheme",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["togglesliderpopover",{"_index":2210,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["tojsonld",{"_index":2513,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["token",{"_index":887,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["token=${servicetoken",{"_index":2778,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tolowercase",{"_index":2712,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tonumber",{"_index":2558,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tonumber(agematch[1",{"_index":2718,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tonumber(md.data_value",{"_index":2726,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["tools",{"_index":3299,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["tooltip",{"_index":648,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["top",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["toradians",{"_index":967,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["tort",{"_index":4705,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1802,"title":{},"body":{"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{}}}],["track",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["trackbyid",{"_index":3139,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["trackbyid(layer",{"_index":3153,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["tracks",{"_index":3786,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["transform",{"_index":1108,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{}}}],["transform.scale(scale",{"_index":1122,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["transformmatrix",{"_index":647,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["transition",{"_index":1837,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{}}}],["transition('closed",{"_index":3439,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":1843,"title":{},"body":{"components/ContentComponent.html":{}}}],["translated",{"_index":3670,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["translatey",{"_index":2179,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["translation",{"_index":4218,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["translation_units",{"_index":3724,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["transparency",{"_index":1540,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["transparency(value",{"_index":1589,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["transparencychanged",{"_index":1535,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["transparencyslideroptions",{"_index":1533,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["tree",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tree'},{'name",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["tree.component",{"_index":3985,"title":{},"body":{"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{}}}],["tree.module",{"_index":3738,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["tree.module.ts",{"_index":4007,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["tree/ontology",{"_index":3737,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["trigger",{"_index":1838,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["trigger('expandcollapse",{"_index":3442,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":1840,"title":{},"body":{"components/ContentComponent.html":{}}}],["trigger('openclose",{"_index":3436,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggered",{"_index":3776,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["triple",{"_index":820,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/HuBMAPEntity.html":{}}}],["true",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["try",{"_index":2926,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ts",{"_index":4111,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["tslib",{"_index":4636,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":633,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tslint:disable",{"_index":544,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["tslint:enable",{"_index":667,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{}}}],["tuned",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":1788,"title":{},"body":{"components/ContainerComponent.html":{}}}],["tx",{"_index":1027,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["tx.translate(t).rotatexyz(r).scale(s",{"_index":1005,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":4712,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1240,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"interfaces/TiffInfo.html":{}}}],["types",{"_index":872,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/typealiases.html":{}}}],["types.ts",{"_index":4204,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["typessearch",{"_index":2799,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typessearch.indexof('10x",{"_index":2802,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typessearch.indexof('af",{"_index":2807,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typessearch.indexof('codex",{"_index":2809,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typessearch.indexof('imc",{"_index":2811,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typessearch.indexof('lc",{"_index":2813,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["typing",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":638,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["u",{"_index":1148,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["u2cdk114886",{"_index":3372,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ucsd",{"_index":2609,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ufl",{"_index":2561,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ui",{"_index":454,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["ui'},{'name",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["ui.component",{"_index":791,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":719,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.scss",{"_index":718,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts",{"_index":715,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:18",{"_index":728,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:23",{"_index":735,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:25",{"_index":743,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:27",{"_index":727,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:31",{"_index":739,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:71",{"_index":738,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.module",{"_index":447,"title":{},"body":{"modules/BodyModule.html":{}}}],["ui.module.ts",{"_index":790,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.ts",{"_index":451,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["ui.ts:112",{"_index":496,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:119",{"_index":502,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:20",{"_index":479,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:21",{"_index":477,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:23",{"_index":484,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:24",{"_index":487,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:25",{"_index":490,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:27",{"_index":482,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:28",{"_index":486,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:29",{"_index":489,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:31",{"_index":478,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:32",{"_index":473,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:66",{"_index":505,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:80",{"_index":507,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:94",{"_index":500,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui/body",{"_index":446,"title":{},"body":{"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{}}}],["ui/src/lib/body",{"_index":450,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["unchecked",{"_index":1303,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["undefined",{"_index":578,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/HuBMAPEntity.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["undefined).catch",{"_index":2866,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["under",{"_index":2112,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/InfoDialogComponent.html":{}}}],["underline",{"_index":2160,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["underlying",{"_index":1939,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["understanding",{"_index":3305,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["unique",{"_index":3157,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologyNode.html":{}}}],["units",{"_index":4207,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["university",{"_index":3350,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["unknown",{"_index":593,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{}}}],["unknown.svg",{"_index":2815,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["unlike",{"_index":2103,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unparsed",{"_index":2762,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["unpickable",{"_index":640,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["unsafe",{"_index":649,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialGraph.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["unselected",{"_index":3159,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["unset",{"_index":3051,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["until",{"_index":2263,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["up",{"_index":1545,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["update",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatechannelconfigs",{"_index":2992,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatechannelconfigs(configs",{"_index":1214,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updated",{"_index":1288,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["updatedeckprops",{"_index":2993,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatedeckprops(props",{"_index":1246,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatefaded",{"_index":1807,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatefilter",{"_index":1983,"title":{},"body":{"injectables/DataState.html":{},"components/FiltersContentComponent.html":{}}}],["updatefilter(filter",{"_index":1993,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["updatefilter(value",{"_index":2354,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatelayer",{"_index":1536,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/ViewerState.html":{}}}],["updatelayer(id",{"_index":4451,"title":{},"body":{"injectables/ViewerState.html":{}}}],["updatelayer(updates",{"_index":1561,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["updatelayers",{"_index":1231,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["updatemargin",{"_index":1808,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatemargin(position",{"_index":1831,"title":{},"body":{"components/ContentComponent.html":{}}}],["updates",{"_index":1358,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["updatesources",{"_index":4356,"title":{},"body":{"components/ViewerComponent.html":{}}}],["updatestate",{"_index":1238,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatestate(args",{"_index":3021,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updateviews",{"_index":1228,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updating",{"_index":3150,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["upgraded",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":2223,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ur",{"_index":2663,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["ureter",{"_index":2676,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["url",{"_index":34,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SearchableItem.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["url).map(url",{"_index":4431,"title":{},"body":{"components/ViewerComponent.html":{}}}],["urls",{"_index":2905,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ViewerComponent.html":{}}}],["urls.filter(url",{"_index":4430,"title":{},"body":{"components/ViewerComponent.html":{}}}],["use",{"_index":1640,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"injectables/DataSourceService.html":{},"components/DualSliderComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["used",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["useful",{"_index":1761,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":1286,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"index.html":{}}}],["users",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["util/prefixes",{"_index":977,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["utils",{"_index":860,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["utils.ts",{"_index":3648,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["uuid",{"_index":2602,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{}}}],["v",{"_index":2631,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["v.id",{"_index":2633,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["v0.5.0",{"_index":3649,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["v1.0.0",{"_index":3320,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["v1.selectionorder",{"_index":3193,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["v2",{"_index":3192,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["v2.selectionorder",{"_index":3194,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["validatedrawers",{"_index":1701,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":1727,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validation",{"_index":3787,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["value",{"_index":20,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/HuBMAPEntity.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"miscellaneous/enumerations.html":{}}}],["value.tolowercase",{"_index":3943,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["valuechanges",{"_index":3795,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valuechanges.pipe",{"_index":3798,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valueextractor",{"_index":2967,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valueobject",{"_index":2954,"title":{"interfaces/ValueObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valueof",{"_index":3403,"title":{},"body":{"classes/InitializationState.html":{}}}],["valueorgenerator",{"_index":1146,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["valueproperty",{"_index":2966,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valuerange",{"_index":2211,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["values",{"_index":1888,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{}}}],["van0003",{"_index":2575,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0005",{"_index":2584,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0006",{"_index":2588,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0007",{"_index":2591,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0008",{"_index":2594,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0011",{"_index":2597,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["van0012",{"_index":2599,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["vanderbilt",{"_index":2625,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["var",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["variable",{"_index":1900,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["variables",{"_index":1360,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["version",{"_index":2875,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["vertical",{"_index":4433,"title":{},"body":{"components/ViewerComponent.html":{}}}],["vertices",{"_index":3661,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["via",{"_index":4407,"title":{},"body":{"components/ViewerComponent.html":{}}}],["video",{"_index":3345,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["view",{"_index":1134,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["view.filterviewstate(argsgenerator(view",{"_index":1245,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.getlayers",{"_index":1235,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.id",{"_index":1200,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.initialviewstate",{"_index":1213,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewchild",{"_index":744,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{}}}],["viewchild('bodycanvas",{"_index":741,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["viewchild('canvas",{"_index":4371,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewchild('content",{"_index":1659,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["viewchild('popover",{"_index":2261,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(cdkportal",{"_index":2265,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(cdkvirtualscrollviewport",{"_index":4108,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["viewchild(ontologytreecomponent",{"_index":3982,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["viewchildren",{"_index":1752,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":1737,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewer",{"_index":48,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/HuBMAPEntity.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["viewer.close",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer.component",{"_index":4438,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewer.component.html",{"_index":4352,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.component.scss",{"_index":4351,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.module",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.module.ts",{"_index":3206,"title":{},"body":{"modules/ImageViewerModule.html":{}}}],["viewer.open(data",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer.setsources(sources",{"_index":4423,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.ts",{"_index":1131,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer.ts:103",{"_index":3015,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:122",{"_index":3016,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:137",{"_index":3018,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:157",{"_index":3007,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:158",{"_index":3006,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:16",{"_index":4014,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:160",{"_index":3017,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:170",{"_index":3023,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:174",{"_index":3020,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:184",{"_index":3022,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:197",{"_index":3019,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:201",{"_index":3009,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:220",{"_index":3014,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:233",{"_index":3011,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:239",{"_index":3013,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:24",{"_index":4029,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:51",{"_index":4028,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:64",{"_index":3002,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:66",{"_index":3025,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:67",{"_index":3027,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:68",{"_index":2999,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:69",{"_index":2996,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:71",{"_index":3029,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:72",{"_index":3031,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:73",{"_index":2998,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:74",{"_index":2997,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:76",{"_index":3033,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:77",{"_index":3035,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:78",{"_index":2995,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:80",{"_index":3005,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:81",{"_index":3004,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:82",{"_index":3001,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:83",{"_index":3000,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:84",{"_index":3003,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:86",{"_index":2994,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:99",{"_index":3008,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.updatechannelconfigs(configs",{"_index":4429,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/image",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["viewer/src/lib/image",{"_index":1130,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/src/lib/loader.ts",{"_index":3608,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/src/lib/picture",{"_index":4011,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/viewer.module",{"_index":3207,"title":{},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["viewer/viewer.state",{"_index":4246,"title":{},"body":{"modules/StoreModule.html":{}}}],["viewer/viewer/viewer.component.ts",{"_index":4350,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:120",{"_index":4364,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:125",{"_index":4368,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:135",{"_index":4367,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:153",{"_index":4366,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:52",{"_index":4361,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:62",{"_index":4376,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:65",{"_index":4370,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:68",{"_index":4360,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:72",{"_index":4378,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:73",{"_index":4369,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:75",{"_index":4362,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:77",{"_index":4372,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:79",{"_index":4373,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:80",{"_index":4375,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:81",{"_index":4359,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:85",{"_index":4363,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.module.ts",{"_index":4437,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewercomponent",{"_index":378,"title":{"components/ViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["viewermodule",{"_index":3205,"title":{"modules/ViewerModule.html":{}},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["viewerstate",{"_index":3214,"title":{"injectables/ViewerState.html":{}},"body":{"components/ImageViewerPopoverComponent.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["viewerstatemodel",{"_index":4472,"title":{"interfaces/ViewerStateModel.html":{}},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["viewervisible",{"_index":3211,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["viewid",{"_index":1155,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewing",{"_index":3209,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["viewport",{"_index":1135,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ResultsBrowserComponent.html":{}}}],["viewportid",{"_index":1261,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["views",{"_index":528,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"changelog.html":{}}}],["viewstate",{"_index":572,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewstates",{"_index":1236,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viridis",{"_index":1493,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["virtual",{"_index":4073,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["virtualscroll",{"_index":4080,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["visibility",{"_index":1665,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visible",{"_index":1113,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visual",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["visualizing",{"_index":1425,"title":{},"body":{"interfaces/ColorScheme-1.html":{}}}],["vitessce",{"_index":3625,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["viv.getdeckglview",{"_index":1230,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["vivview",{"_index":1137,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["vivviews",{"_index":1184,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["vocab",{"_index":2688,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["void",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["vu",{"_index":2822,"title":{},"body":{"classes/HuBMAPEntity.html":{},"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["vu/${thumb",{"_index":2829,"title":{},"body":{"classes/HuBMAPEntity.html":{}}}],["w",{"_index":4215,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["w_rotation",{"_index":4216,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["wait",{"_index":3404,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":3523,"title":{},"body":{"classes/InitializationState.html":{}}}],["warning",{"_index":4432,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["warranties",{"_index":4693,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4688,"title":{},"body":{"license.html":{}}}],["way",{"_index":4104,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["webgl2",{"_index":1253,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["webkit",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{}}}],["week",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":1316,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["well",{"_index":3149,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["whenever",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{}}}],["whether",{"_index":82,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["white",{"_index":1313,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["whole",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["wholebody",{"_index":1062,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["whose",{"_index":3763,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["width",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataSource-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["widths",{"_index":3531,"title":{},"body":{"classes/InitializationState.html":{}}}],["window",{"_index":3233,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["window.innerheight",{"_index":1678,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["window.open(this.data.resulturl",{"_index":4143,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["wireframe",{"_index":641,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["wireframes",{"_index":695,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["within",{"_index":3975,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["without",{"_index":1739,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["won't",{"_index":3893,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["work",{"_index":3348,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["workaround",{"_index":3541,"title":{},"body":{"classes/InitializationState.html":{}}}],["worker",{"_index":1945,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["worker('./data",{"_index":1947,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["wrap",{"_index":1319,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/DataSourceService.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["wrap(worker",{"_index":1950,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["wrapped",{"_index":1736,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":453,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["wrapper/container",{"_index":2319,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["wrapping",{"_index":1740,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{}}}],["x",{"_index":3662,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_dimension",{"_index":3694,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_rotation",{"_index":3708,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_scaling",{"_index":3703,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_translation",{"_index":3718,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["xyz",{"_index":3715,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["xyz').tovector",{"_index":1001,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["y",{"_index":551,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_dimension",{"_index":3696,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_rotation",{"_index":3710,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_scaling",{"_index":3704,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_translation",{"_index":3720,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["yes",{"_index":824,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/HuBMAPEntity.html":{},"components/OntologySearchComponent.html":{}}}],["youtube",{"_index":3346,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["z",{"_index":1613,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["z_dimension",{"_index":3698,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_rotation",{"_index":3712,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_scaling",{"_index":3705,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_translation",{"_index":3722,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["zarr",{"_index":3612,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["zarrinfo",{"_index":1143,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/typealiases.html":{}}}],["zone.js",{"_index":4638,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["zoombasedopacity",{"_index":645,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["zoomopacity",{"_index":561,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomto",{"_index":469,"title":{},"body":{"classes/BodyUI.html":{}}}],["zoomto(node",{"_index":506,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{}}}],["zoomtoonload",{"_index":646,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AggregateResult.html":{"url":"interfaces/AggregateResult.html","title":"interface - AggregateResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AggregateResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Aggregate query result. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Aggregate value. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Queried field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main angular component that all the other components branch off from.\nIt is in charge of the header and drawer components who have many sub-components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelectionLabel\n                            \n                            \n                                    Readonly\n                                ontologyTerms$\n                            \n                            \n                                    Readonly\n                                spinnerActive$\n                            \n                            \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ontologySelectionLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'body'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                        Used to keep track of the ontology label to be passed down to the\nresults-browser component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ontologyTerms$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            spinnerActive$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        Emits true whenever the overlay spinner should activate. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            string\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ListResult } from 'ccf-database';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\n\nimport { OntologySelection } from './core/models/ontology-selection';\nimport { DataSourceService } from './core/services/data-source/data-source.service';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { DataQueryState, DataState } from './core/store/data/data.state';\nimport { FiltersPopoverComponent } from './modules/filters/filters-popover/filters-popover.component';\nimport { ImageViewerPopoverComponent } from './modules/image-viewer/image-viewer-popover/image-viewer-popover.component';\nimport { DrawerComponent } from './shared/components/drawer/drawer/drawer.component';\n\n/**\n * This is the main angular component that all the other components branch off from.\n * It is in charge of the header and drawer components who have many sub-components.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Used to keep track of the ontology label to be passed down to the\n   * results-browser component.\n   */\n  ontologySelectionLabel = 'body';\n\n  /** Emits true whenever the overlay spinner should activate. */\n  readonly spinnerActive$ = this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  );\n\n  readonly ontologyTerms$: Observable;\n\n  /**\n   * Creates an instance of app component.\n   *\n   * @param data The data state.\n   */\n  constructor(readonly data: DataState, readonly dataSourceService: DataSourceService, readonly theming: ThemingService) {\n    data.listData$.subscribe();\n    data.aggregateData$.subscribe();\n    data.termOccurencesData$.subscribe();\n    this.ontologyTerms$ = data.filter$.pipe(pluck('ontologyTerms'));\n  }\n\n  /**\n   * Resets the drawers and filter components to their default state.\n   * @param left The left drawer component gets passed in so we can call it's methods to control it's state\n   * @param right The right drawer component gets passed in so we can call it's methods to control it's state\n   * @param filterbox The filter's popover component gets passed in so we can control it's popover's state\n   */\n  reset(\n    left: DrawerComponent,\n    right: DrawerComponent,\n    filterbox: FiltersPopoverComponent,\n    viewer: ImageViewerPopoverComponent\n  ): void {\n    viewer.close();\n    left.open();\n    left.closeExpanded();\n    right.open();\n    right.closeExpanded();\n    filterbox.removeBox();\n  }\n\n  /**\n   * Fetches relevant data from the database and calls the open function on the image viewer with the data\n   * @param viewer The image viewer component\n   * @param iri URL containing the image data\n   */\n  openViewer(viewer: ImageViewerPopoverComponent, result: ListResult): void {\n    const source = this.dataSourceService.getImageViewerData(result['@id']);\n    source.subscribe(data => viewer.open(data, result));\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.theming.setTheme(this.theming.getTheme() === 'light-theme' ? 'dark-theme' : 'light-theme');\n  }\n\n  /**\n   * Captures changes in the ontologySelection and uses them to update the results-browser label\n   * and the filter object in the data store.\n   * @param ontologySelection the list of currently selected organ nodes\n   */\n  ontologySelected(ontologySelection: OntologySelection[]): void {\n    if (!!ontologySelection) {\n      this.data.updateFilter({ ontologyTerms: ontologySelection.map(selection => selection.id)});\n      this.ontologySelectionLabel = this.createSelectionLabel(ontologySelection);\n      return;\n    }\n\n    this.data.updateFilter({ ontologyTerms: [] });\n    this.ontologySelectionLabel = '';\n  }\n\n  /**\n   * Creates selection label for the results-browser to display based on an\n   * array of selected ontology nodes.\n   */\n  createSelectionLabel(ontolgySelection: OntologySelection[]): string{\n    if (ontolgySelection.length === 0){\n      return '';\n    }\n\n    if (ontolgySelection.length === 1){\n      return ontolgySelection[0].label;\n    }\n\n    let selectionString = '';\n    ontolgySelection.forEach((selection, index) => {\n      selectionString += selection.label;\n\n      // Don't add a comma if it's the last item in the array.\n      if (index  0;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n  \n    \n      \n      \n    \n    \n      \n        \n        \n          {{ right.expanded ? 'fullscreen_exit' : 'fullscreen' }}\n        \n        \n          {{ theming.getTheme() === 'light-theme' ? 'brightness_2' : 'brightness_5' }}\n        \n      \n      \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .ccf-app {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n\n  ccf-drawer-container {\n    flex-grow: 1;\n    position: fixed;\n    top: 4rem;\n    height: 100%;\n    width: 100%;\n    opacity: 1;\n\n    ccf-drawer-content {\n      overflow: hidden;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    ccf-drawer {\n      width: 28.5rem;\n\n      .drawer-icons {\n        display: flex;\n        padding-left: 1.5rem;\n\n        .scheme-toggle {\n          mat-icon {\n            font-size: 2rem !important;\n          }\n        }\n\n        .button {\n          width: 3rem;\n          height: 3rem;\n          padding: 0;\n          background: none;\n          border: none;\n          cursor: pointer;\n          outline: none;\n\n          mat-icon {\n            width: 100%;\n            height: 100%;\n            font-size: 2.5rem;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n        }\n      }\n    }\n\n    .left-drawer {\n      ::ng-deep .cff-drawer-inner-container {\n        height: calc(100% - 5.5rem);\n      }\n    }\n  }\n}\n\n::-webkit-scrollbar {\n  width: 7.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ right.expanded ? \\'fullscreen_exit\\' : \\'fullscreen\\' }}                          {{ theming.getTheme() === \\'light-theme\\' ? \\'brightness_2\\' : \\'brightness_5\\' }}                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBodyModule\n\nBodyModule\n\nAppModule -->\n\nBodyModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nAppModule -->\n\nImageViewerModule->AppModule\n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nAppModule -->\n\nInfoDialogModule->AppModule\n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BodyModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            FiltersPopoverModule\n                        \n                        \n                            ImageViewerModule\n                        \n                        \n                            InfoDialogModule\n                        \n                        \n                            OntologyExplorationModule\n                        \n                        \n                            ResultsBrowserModule\n                        \n                        \n                            SpinnerOverlayModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { BodyModule } from './modules/body/body.module';\nimport { FiltersPopoverModule } from './modules/filters/filters-popover/filters-popover.module';\nimport { ImageViewerModule } from './modules/image-viewer/image-viewer.module';\nimport { InfoDialogModule } from './modules/info/info-dialog/info-dialog.module';\nimport { OntologyExplorationModule } from './modules/ontology-exploration/ontology-exploration.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\nimport { DualSliderModule } from './shared/components/dual-slider/dual-slider.module';\nimport { ResultsBrowserModule } from './modules/results-browser/results-browser/results-browser.module';\nimport { SpinnerOverlayModule } from './shared/components/spinner-overlay/spinner-overlay.module';\n\nimport { DEFAULT_THEME } from '../app/core/services/theming/theming.service';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    DrawerModule,\n    FiltersPopoverModule,\n    OntologyExplorationModule,\n    InfoDialogModule,\n    MatIconModule,\n    DualSliderModule,\n    ResultsBrowserModule,\n    SpinnerOverlayModule,\n    ImageViewerModule,\n    BodyModule\n  ],\n  declarations: [AppComponent],\n  providers: [{provide: DEFAULT_THEME, useValue: 'light-theme'}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyModule.html":{"url":"modules/BodyModule.html","title":"module - BodyModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_exports\n\n\n\n\nBodyUiModule\n\nBodyUiModule\n\n\n\nBodyModule\n\nBodyModule\n\nBodyModule -->\n\nBodyUiModule->BodyModule\n\n\n\n\n\nBodyUiModule \n\nBodyUiModule \n\nBodyUiModule  -->\n\nBodyModule->BodyUiModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/body/body.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BodyUiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BodyUiModule } from './body-ui/body-ui.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BodyUiModule\n  ],\n  exports: [\n    BodyUiModule\n  ]\n})\nexport class BodyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyUI.html":{"url":"classes/BodyUI.html","title":"class - BodyUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n            \n                Description\n            \n            \n                A convenience wrapper class for the CCF Body UI\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bodyUILayer\n                            \n                            \n                                    Private\n                                    Optional\n                                cursor\n                            \n                            \n                                deck\n                            \n                            \n                                    Private\n                                    Optional\n                                lastHovered\n                            \n                            \n                                    Readonly\n                                nodeClick$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeClickSubject\n                            \n                            \n                                    Readonly\n                                nodeHoverStart$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeHoverStartSubject\n                            \n                            \n                                    Readonly\n                                nodeHoverStop$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeHoverStopSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _onClick\n                            \n                            \n                                    Private\n                                _onHover\n                            \n                            \n                                    Private\n                                _onViewStateChange\n                            \n                            \n                                setScene\n                            \n                            \n                                zoomTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deckProps: Partial)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui/src/lib/body-ui.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deckProps\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bodyUILayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BodyUILayer({})\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            cursor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            lastHovered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpatialSceneNode\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeClick$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeClickSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeClickSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeHoverStart$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeHoverStartSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeHoverStartSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeHoverStop$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeHoverStopSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeHoverStopSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onClick(e: literal type, mouseEvent: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mouseEvent\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onHover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onHover(e: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onViewStateChange(event: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \nsetScene(data: SpatialSceneNode[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            zoomTo\n                        \n                        \n                    \n                \n            \n            \n                \nzoomTo(node: SpatialSceneNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({viewState: {\n      orbitAxis: 'Y',\n      minRotationX: -15,\n      maxRotationX: 15,\n      target: [0.5, 0.5, 0],\n      rotationX: 0,\n      rotationOrbit: 0,\n      zoom: 9.5\n    }});\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      }\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            layerName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'BodyUILayer'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:72\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPickingInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeState\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderLayers\n                        \n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { load, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { CubeGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\n\n// Programmers Note: had to disable tslint in a few places due to deficient typings.\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\n// tslint:disable: no-unsafe-any\nasync function loadGLTF(model: SpatialSceneNode): Promise {\n  const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n\n  const scenegraphNode = model.scenegraphNode ? gltf.nodes?.find((n) => n.name === model.scenegraphNode) : undefined;\n  if (scenegraphNode) {\n    if (!scenegraphNode.rotation && gltf.scene?.nodes?.length > 0) {\n      scenegraphNode.rotation = gltf.scene.nodes[gltf.scene.nodes.length-1].rotation;\n    }\n    gltf.scene = {\n      id: 'scene-1',\n      name: 'Scene',\n      nodes: [scenegraphNode]\n    };\n    gltf.scenes = [gltf.scene, ...gltf.scenes];\n  }\n  return gltf;\n}\n// tslint:enable: no-unsafe-any\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: {[key: string]: unknown}): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // tslint:disable-next-line: no-unsafe-any\n        mesh: new CubeGeometry(),\n        wireframe: false,\n        getTransformMatrix: (d) => (d as {transformMatrix: number[][]}).transformMatrix,\n        getColor: (d) => (d as {color: [number, number, number, number]}).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({data: data || [], zoomOpacity: 0.8});\n\n    // tslint:disable-next-line: no-unsafe-any\n    registerLoaders([DracoWorkerLoader, GLTFLoader]);\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as {data: SpatialSceneNode[], zoomOpacity: number};\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    return [\n      meshLayer('cubes', cubes, {wireframe: false}),\n      meshLayer('wireframes', wireframes, {wireframe: true, pickable: false}),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          ...{\n            id: 'models-' + model['@id'],\n            opacity: model.zoomBasedOpacity ? state.zoomOpacity : 1.0,\n            pickable: !model.unpickable,\n            coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n            data: [model],\n            scenegraph: model.scenegraphNode ? loadGLTF(model) : model.scenegraph,\n            _lighting: model._lighting,  // 'pbr' | undefined\n            getTransformMatrix: model.transformMatrix,\n            getColor: model.color || [0, 255, 0, 0.5*255],\n          }\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(e: {info: object}): unknown {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canvas\n                                \n                                \n                                        id\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({viewState: {\n      orbitAxis: 'Y',\n      minRotationX: -15,\n      maxRotationX: 15,\n      target: [0.5, 0.5, 0],\n      rotationX: 0,\n      rotationOrbit: 0,\n      zoom: 9.5\n    }});\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      }\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BodyUiComponent.html":{"url":"components/BodyUiComponent.html","title":"component - BodyUiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BodyUiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/body/body-ui/body-ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-body-ui\n            \n\n            \n                styleUrls\n                ./body-ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./body-ui.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bodyCanvas\n                            \n                            \n                                bodyUI\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyFilter\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DataState, dataSourceService: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/body/body-ui/body-ui.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DataState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSourceService\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:18\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:23\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilter(filter: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyCanvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('bodyCanvas', {read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyUI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BodyUI\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/body/body-ui/body-ui.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { BodyUI } from 'ccf-body-ui';\nimport { Filter } from 'ccf-database';\n\nimport { DataSourceService } from './../../../core/services/data-source/data-source.service';\nimport { DataState } from './../../../core/store/data/data.state';\n\n\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss']\n})\nexport class BodyUiComponent implements AfterViewInit {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filter: Filter;\n\n  /**\n   * Emits the current filters\n   */\n  @Output() filterChange = new EventEmitter();\n\n  bodyUI: BodyUI;\n\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  constructor(readonly data: DataState, readonly dataSourceService: DataSourceService) { }\n\n  ngAfterViewInit(): void {\n    const canvas = this.bodyCanvas.nativeElement;\n    this.bodyUI = new BodyUI({ id: 'body-ui', canvas });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n\n    // TODO: Replace with a single @Input with scene provided by ngxs\n    this.data.filter$.subscribe(async (f: Filter) => {\n      await this.dataSourceService.dataSource.connect();\n      const scene = await this.dataSourceService.dataSource.getScene(f);\n      this.bodyUI.setScene(scene);\n    });\n\n    this.bodyUI.nodeClick$.subscribe(async ({node, ctrlClick}) => {\n      switch (node['@id']) {\n        case 'http://purl.org/ccf/latest/ccf.owl#VHRightKidney':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0004539']});\n          break;\n        case 'http://purl.org/ccf/latest/ccf.owl#VHLeftKidney':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0004538']});\n          break;\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleen':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC1':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC2':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC3':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0002106']});\n          break;\n        default:\n          if (node.entityId) {\n            const highlightedEntities = ctrlClick ? this.filter?.highlightedEntities ?? [] : [];\n            if (highlightedEntities.length === 1 && highlightedEntities[0] === node.entityId) {\n              this.applyFilter({highlightedEntities: []});\n            } else {\n              this.applyFilter({highlightedEntities: highlightedEntities.concat([node.entityId])});\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  private applyFilter(filter: Partial): void {\n    const newFilter = { ...this.filter, ...filter } as Filter;\n    this.filter = newFilter;\n    this.filterChange.emit(newFilter);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./body-ui.component.scss\n                \n                .body-ui {\n  position: relative !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BodyUiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/body/body-ui/body-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFDatabase.html":{"url":"classes/CCFDatabase.html","title":"class - CCFDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-database.ts\n        \n\n            \n                Description\n            \n            \n                Database provider. \n\n            \n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                scene\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connect\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                getAggregateResults\n                            \n                            \n                                getIds\n                            \n                            \n                                    Async\n                                getImageViewerData\n                            \n                            \n                                    Async\n                                getListResults\n                            \n                            \n                                    Async\n                                getOntologyTermOccurences\n                            \n                            \n                                    Async\n                                getScene\n                            \n                            \n                                getSpatialEntities\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: CCFDatabaseOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-database.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of ccfdatabase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        CCFDatabaseOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initialization options.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFSpatialGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:49\n                            \n                        \n\n                \n                    \n                        The spatial graph \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFDatabaseOptions\n\n                        \n                    \n                    \n                        \n                            Default value : DEFAULT_CCF_DB_OPTIONS\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:58\n                            \n                        \n\n                \n                    \n                        Initialization options.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFSpatialScene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:51\n                            \n                        \n\n                \n                    \n                        Creates SpatialEntity Scenes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     N3Store\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:47\n                            \n                        \n\n                \n                    \n                        The triple store. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    connect(options?: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:70\n                \n            \n\n\n            \n                \n                    Connects the database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CCFDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options used to initialize.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise resolving to true if data has been loaded into the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:116\n                \n            \n\n\n            \n                \n                    Gets the data for an object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the requested object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Quad[]\n\n                    \n                    \n                        The object data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:161\n                \n            \n\n\n            \n                \n                    Gets all aggregate results for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A list of aggregate data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIds\n                        \n                        \n                    \n                \n            \n            \n                \ngetIds(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:106\n                \n            \n\n\n            \n                \n                    Gets all ids matching the filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {} as Filter\n                                    \n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Set\n\n                    \n                    \n                        A set of all matching ids.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageViewerData(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:181\n                \n            \n\n\n            \n                \n                    Gets image data for the associated id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The identifier.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The image data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:147\n                \n            \n\n\n            \n                \n                    Gets all list results for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A list of results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOntologyTermOccurences\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:171\n                \n            \n\n\n            \n                \n                    Get number of occurrences of ontology terms for a set of ids.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        Ontology term counts.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:190\n                \n            \n\n\n            \n                \n                    Get all nodes to form the 3D scene of reference body, organs, and tissues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A list of Spatial Scene Nodes for the 3D Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpatialEntities\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpatialEntities(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:136\n                \n            \n\n\n            \n                \n                    Gets all spatial entities for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity[]\n\n                    \n                    \n                        A list of spatial entities.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:126\n                \n            \n\n\n            \n                \n                    Gets the data for objects matching a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {} as Filter\n                                    \n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        An array of data.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, N3Store, Quad, Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { addHubmapDataToStore } from './hubmap/hubmap-data';\nimport { AggregateResult, DataSource, Filter, ImageViewerData, ListResult } from './interfaces';\nimport { getAggregateResults } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getImageViewerData } from './queries/image-viewer-data-n3';\nimport { getListResult } from './queries/list-result-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** An url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase implements DataSource {\n  /** The triple store. */\n  store: N3Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store();\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions): Promise {\n    if (options) {\n      this.options = options;\n    }\n    if (this.store.size === 0) {\n      const ops: Promise[] = [];\n      const ccfOwlUrl = this.options.ccfOwlUrl;\n      if (ccfOwlUrl.endsWith('.n3')) {\n        ops.push(addN3ToStore(this.options.ccfOwlUrl, this.store));\n      } else {\n        ops.push(addRdfXmlToStore(this.options.ccfOwlUrl, this.store));\n      }\n      if (this.options.hubmapDataUrl) {\n        if (this.options.hubmapDataUrl.endsWith('.jsonld')) {\n          ops.push(addJsonLdToStore(this.options.hubmapDataUrl, this.store));\n        } else {\n          ops.push(addHubmapDataToStore(\n            this.store, this.options.hubmapDataUrl, this.options.hubmapDataService, this.options.hubmapToken,\n            this.options.hubmapAssetsUrl, this.options.hubmapPortalUrl\n          ));\n        }\n      }\n      await Promise.all(ops);\n      // Add a small delay to allow the triple store to settle\n      await new Promise(r => setTimeout(r, 500));\n      this.graph.createGraph();\n    }\n    return this.store.size > 0;\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set {\n    return findIds(this.store, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  /**\n   * Gets all list results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getListResults(filter?: Filter): Promise {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    const highlighted = new Set(filter.highlightedEntities);\n    return [...this.getIds(filter)].map((s) => getListResult(this.store, s))\n      .map((s) => Object.assign(s, {highlighted: highlighted.has(s['@id'])}))\n      .sort((a, b) => (a.highlighted ? 0 : 1) - (b.highlighted ? 0 : 1));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Gets image data for the associated id.\n   *\n   * @param id The identifier.\n   * @returns The image data.\n   */\n  async getImageViewerData(id: string): Promise {\n    return getImageViewerData(id, this.store);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseOptions.html":{"url":"interfaces/CCFDatabaseOptions.html","title":"interface - CCFDatabaseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CCFDatabaseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-database.ts\n        \n\n            \n                Description\n            \n            \n                Database initialization options. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ccfContextUrl\n                                \n                                \n                                        ccfOwlUrl\n                                \n                                \n                                        hubmapAssetsUrl\n                                \n                                \n                                        hubmapDataService\n                                \n                                \n                                        hubmapDataUrl\n                                \n                                \n                                        hubmapPortalUrl\n                                \n                                \n                                            Optional\n                                        hubmapToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ccfContextUrl\n                                    \n                                \n                                \n                                    \n                                        ccfContextUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Context. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccfOwlUrl\n                                    \n                                \n                                \n                                    \n                                        ccfOwlUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An url to load data from. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapAssetsUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapAssetsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap assets api url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapDataService\n                                    \n                                \n                                \n                                    \n                                        hubmapDataService:     \"static\" | \"search-api\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"static\" | \"search-api\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data service type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapDataUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapDataUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap data url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapPortalUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapPortalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap Portal url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    HuBMAP Service Token. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, N3Store, Quad, Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { addHubmapDataToStore } from './hubmap/hubmap-data';\nimport { AggregateResult, DataSource, Filter, ImageViewerData, ListResult } from './interfaces';\nimport { getAggregateResults } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getImageViewerData } from './queries/image-viewer-data-n3';\nimport { getListResult } from './queries/list-result-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** An url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase implements DataSource {\n  /** The triple store. */\n  store: N3Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store();\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions): Promise {\n    if (options) {\n      this.options = options;\n    }\n    if (this.store.size === 0) {\n      const ops: Promise[] = [];\n      const ccfOwlUrl = this.options.ccfOwlUrl;\n      if (ccfOwlUrl.endsWith('.n3')) {\n        ops.push(addN3ToStore(this.options.ccfOwlUrl, this.store));\n      } else {\n        ops.push(addRdfXmlToStore(this.options.ccfOwlUrl, this.store));\n      }\n      if (this.options.hubmapDataUrl) {\n        if (this.options.hubmapDataUrl.endsWith('.jsonld')) {\n          ops.push(addJsonLdToStore(this.options.hubmapDataUrl, this.store));\n        } else {\n          ops.push(addHubmapDataToStore(\n            this.store, this.options.hubmapDataUrl, this.options.hubmapDataService, this.options.hubmapToken,\n            this.options.hubmapAssetsUrl, this.options.hubmapPortalUrl\n          ));\n        }\n      }\n      await Promise.all(ops);\n      // Add a small delay to allow the triple store to settle\n      await new Promise(r => setTimeout(r, 500));\n      this.graph.createGraph();\n    }\n    return this.store.size > 0;\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set {\n    return findIds(this.store, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  /**\n   * Gets all list results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getListResults(filter?: Filter): Promise {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    const highlighted = new Set(filter.highlightedEntities);\n    return [...this.getIds(filter)].map((s) => getListResult(this.store, s))\n      .map((s) => Object.assign(s, {highlighted: highlighted.has(s['@id'])}))\n      .sort((a, b) => (a.highlighted ? 0 : 1) - (b.highlighted ? 0 : 1));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Gets image data for the associated id.\n   *\n   * @param id The identifier.\n   * @returns The image data.\n   */\n  async getImageViewerData(id: string): Promise {\n    return getImageViewerData(id, this.store);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFSpatialGraph.html":{"url":"classes/CCFSpatialGraph.html","title":"class - CCFSpatialGraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFSpatialGraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-graph.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSpatialEntity\n                            \n                            \n                                addSpatialObjectReference\n                            \n                            \n                                addSpatialPlacement\n                            \n                            \n                                createGraph\n                            \n                            \n                                getTransformationMatrix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: CCFDatabase)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DirectedGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:38\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialEntity\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialEntity(entity: SpatialEntity)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialObjectReference\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialObjectReference(ref: SpatialObjectReference)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                SpatialObjectReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialPlacement\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialPlacement(placement: SpatialPlacement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    placement\n                                    \n                                                SpatialPlacement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGraph\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransformationMatrix\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransformationMatrix(sourceIRI: string, targetIRI: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIRI\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetIRI\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Matrix4 | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CCFDatabase } from './ccf-database';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { DirectedGraph } from 'graphology';\nimport shortestPath from 'graphology-shortest-path/unweighted';\nimport { fromEuler } from 'quaternion';\nimport toEuler from 'quaternion-to-euler';\n\nimport { SpatialEntity, SpatialObjectReference, SpatialPlacement } from './spatial-types';\nimport { rdf, ccf } from './util/prefixes';\nimport { getSpatialEntity, getSpatialObjectReference, getSpatialPlacement } from './queries/spatial-result-n3';\n\n\nexport function applySpatialPlacement(tx: Matrix4, placement: SpatialPlacement): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R_RAD = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians);\n  // tslint:disable-next-line: no-unsafe-any\n  const R = toEuler(fromEuler(R_RAD[1], R_RAD[0], R_RAD[2], 'XYZ').toVector()) as number[];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport class CCFSpatialGraph {\n  graph: DirectedGraph;\n\n  constructor(private db: CCFDatabase) {\n    this.createGraph();\n  }\n\n  createGraph(): void {\n    this.graph = new DirectedGraph();\n    const store = this.db.store;\n    // Add all Spatial Object References\n    store.forSubjects((subject) => {\n      this.addSpatialObjectReference(getSpatialObjectReference(store, subject.id));\n    }, rdf.type, ccf.SpatialObjectReference, null);\n\n    // Add all Spatial Entities\n    store.forSubjects((subject) => {\n      this.addSpatialEntity(getSpatialEntity(store, subject.id));\n    }, rdf.type, ccf.SpatialEntity, null);\n\n    // Add all Spatial Placements\n    store.forSubjects((subject) => {\n      this.addSpatialPlacement(getSpatialPlacement(store, subject.id));\n    }, rdf.type, ccf.SpatialPlacement, null);\n  }\n\n  addSpatialEntity(entity: SpatialEntity): void {\n    this.graph.mergeNode(entity['@id'], {type: 'SpatialEntity', object: entity});\n  }\n  addSpatialObjectReference(ref: SpatialObjectReference): void {\n    this.graph.mergeNode(ref['@id'], {type: 'SpatialObjectReference', object: ref});\n  }\n  addSpatialPlacement(placement: SpatialPlacement): void {\n    this.graph.mergeDirectedEdge(placement.source['@id'], placement.target['@id'], {type: 'SpatialPlacement', placement});\n  }\n\n  getTransformationMatrix(sourceIRI: string, targetIRI: string): Matrix4 | undefined {\n    if (sourceIRI === targetIRI) {\n      return new Matrix4(); // identity\n    }\n    if (!this.graph.hasNode(sourceIRI) || !this.graph.hasNode(targetIRI)) {\n      return undefined;\n    }\n\n    const tx = new Matrix4();\n    const path = shortestPath(this.graph, sourceIRI, targetIRI);\n    if (path && path.length > 0) {\n      path.reverse();\n      let target: string | number = '';\n      for (const source of path) {\n        if (target) {\n          const p = this.graph.getEdgeAttribute(source, target, 'placement') as SpatialPlacement;\n          applySpatialPlacement(tx, p);\n        }\n        target = source;\n      }\n      return tx;\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFSpatialScene.html":{"url":"classes/CCFSpatialScene.html","title":"class - CCFSpatialScene","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFSpatialScene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-scene.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEntitySceneNodes\n                            \n                            \n                                getReferenceBody\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceSceneNodes\n                            \n                            \n                                getScene\n                            \n                            \n                                getSceneNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: CCFDatabase)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEntitySceneNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetEntitySceneNodes(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceBody\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceBody(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceOrgans\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceSceneNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceSceneNodes(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSceneNode\n                        \n                        \n                    \n                \n            \n            \n                \ngetSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    nodeAttrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport { getSpatialEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { ccf, rui } from './util/prefixes';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': 'SpatialSceneNode';\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return getSpatialEntity(this.db.store, bodyId);\n  }\n\n  getReferenceOrgans(filter?: Filter): SpatialEntity[] {\n    let organsId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        organsId = ccf.spatial.MaleOrgans.id;\n        break;\n      case 'Female':\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n      case 'Both':\n      default:\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n    }\n    return [getSpatialEntity(this.db.store, organsId)];\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const wholeBody = getSpatialEntity(this.db.store, ccf.spatial.Body.id);\n    const body = this.getReferenceBody(filter);\n    const organs = getSpatialEntity(this.db.store, ccf.spatial.MaleOrgans.id);\n    const store = this.db.store;\n    const terms = filter?.ontologyTerms || [];\n    const hasTerm = {\n      body: terms.indexOf(rui.body.id) === 0,\n      kidney: terms.indexOf(rui.kidney.id) === 0,\n      right_kidney: terms.indexOf(rui.right_kidney.id) === 0,\n      left_kidney: terms.indexOf(rui.left_kidney.id) === 0,\n      spleen: terms.indexOf(rui.spleen.id) === 0,\n    };\n\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      this.getSceneNode(body, wholeBody, {unpickable: true, color: [255, 255, 255, 1*255]}),\n      ...this.getReferenceOrgans(filter).map((organ) =>\n        this.getSceneNode(organ, body, {unpickable: true, _lighting: 'pbr', zoomBasedOpacity: true,  color: [255, 0, 0, 1*255]})\n      ),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.right_kidney, zoomToOnLoad: hasTerm.right_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.left_kidney, zoomToOnLoad: hasTerm.left_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleen').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.spleen, zoomToOnLoad: hasTerm.spleen})\n    ];\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), wholeBody, {color: [0, 0, 255, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), wholeBody, {color: [255, 0, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC1').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC2').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC3').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true})\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const highlighted = new Set(filter?.highlightedEntities);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, {\n        color: highlighted.has(entity.entityId as string) ? [10, 10, 229, 0.9*255] : [255, 255, 255, 0.9*255]\n      })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial = {}): SpatialSceneNode | undefined {\n    const has3dObject = source.object && source.object.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4().rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId || undefined,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      } as SpatialSceneNode;\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChannelConfig.html":{"url":"interfaces/ChannelConfig.html","title":"interface - ChannelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChannelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        color\n                                \n                                \n                                        slider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slider\n                                    \n                                \n                                \n                                    \n                                        slider:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterOnChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/checkbox/checkbox.component.ts:16\n                            \n                        \n                \n                    \n                        The label that describes the overall question the checkbox is asking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/checkbox/checkbox.component.ts:21\n                            \n                        \n                \n                    \n                        Used to generate the individual checkboxes and their individual labels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/checkbox/checkbox.component.ts:26\n                            \n                        \n                \n                    \n                        A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/checkbox/checkbox.component.ts:31\n                            \n                        \n                \n                    \n                        Any time a checkbox changes we emit that value so the parent component has that information\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nfilterOnChange(event: MatCheckboxChange, option: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/checkbox/checkbox.component.ts:38\n                \n            \n\n\n            \n                \n                    This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event object from the checkbox that contains the boolean property 'checked'\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tells us which option was checked or unchecked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\n\n/**\n * Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n */\n@Component({\n  selector: 'ccf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\n  /**\n   * The label that describes the overall question the checkbox is asking\n   */\n  @Input() label: string;\n\n  /**\n   * Used to generate the individual checkboxes and their individual labels\n   */\n  @Input() options: string[];\n\n  /**\n   * A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n   */\n  @Input() selection: string[] = [];\n\n  /**\n   * Any time a checkbox changes we emit that value so the parent component has that information\n   */\n  @Output() selectionChange = new EventEmitter();\n\n  /**\n   * This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n   * @param event Event object from the checkbox that contains the boolean property 'checked'\n   * @param option Tells us which option was checked or unchecked\n   */\n  filterOnChange(event: MatCheckboxChange, option: string): void {\n    const checked = event.checked;\n\n    if (checked) {\n      this.selection = [...this.selection, option];\n    } else {\n      this.selection = this.selection.filter(selection => selection !== option);\n    }\n\n    this.selectionChange.emit(this.selection);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n  \n    \n      \n        {{ option }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                ::ng-deep  .mat-checkbox.mat-accent {\n  .mat-checkbox-checkmark-path {\n    stroke: white !important;\n  }\n\n  .mat-checkbox-inner-container {\n    margin-right: 1rem;\n  }\n}\n\n.filter-label {\n  margin-bottom: 0.5em;\n  font-weight: bold;\n}\n\n.options-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.option {\n  margin-right: 1.5em;\n  width: 8em;\n  color: #fafafa;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ option }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckboxModule.html":{"url":"modules/CheckboxModule.html","title":"module - CheckboxModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/checkbox/checkbox.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CheckboxComponent } from './checkbox.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent]\n})\nexport class CheckboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorBarComponent.html":{"url":"components/ColorBarComponent.html","title":"component - ColorBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/color-scheme/color-bar/color-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Color bar component for the color scheme popup and color scheme selector\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-bar\n            \n\n            \n                styleUrls\n                ./color-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                colorChanged\n                            \n                            \n                                gradientHighlight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                enableSelection\n                            \n                            \n                                selected\n                            \n                            \n                                selectedColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gradientStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colorScheme\n                    \n                \n                \n                    \n                        Type :         ColorScheme\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Color scheme to be displayed in the color bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSelection\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:33\n                            \n                        \n                \n                    \n                        Determines if colors are able to be selected on the color bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:23\n                            \n                        \n                \n                    \n                        Whether or not the scheme is currently selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedColor\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:28\n                            \n                        \n                \n                    \n                        Currently selected color in colorScheme.colors\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        colorChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:38\n                            \n                        \n                \n                    \n                        Emits the newly selected color index\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncolorChanged(color: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:64\n                \n            \n\n\n            \n                \n                    When a color is selected, this updates relavant variables and emits the\nselected color\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the color the user selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gradientHighlight\n                        \n                        \n                    \n                \n            \n            \n                \ngradientHighlight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:55\n                \n            \n\n\n            \n                \n                    Returns whether or not the scheme is a selected gradient (for highlighting purposes)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gradientStyle\n                    \n                \n\n                \n                    \n                        getgradientStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-bar/color-bar.component.ts:43\n                                \n                            \n                    \n                        \n                                Enables dynamic styling for gradient bars\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ColorScheme } from '../color-schemes';\n\n\n/**\n * Color bar component for the color scheme popup and color scheme selector\n */\n@Component({\n  selector: 'ccf-color-bar',\n  templateUrl: './color-bar.component.html',\n  styleUrls: ['./color-bar.component.scss']\n})\nexport class ColorBarComponent {\n  /**\n   * Color scheme to be displayed in the color bar\n   */\n  @Input() colorScheme: ColorScheme;\n\n  /**\n   * Whether or not the scheme is currently selected\n   */\n  @Input() selected = false;\n\n  /**\n   * Currently selected color in colorScheme.colors\n   */\n  @Input() selectedColor = '';\n\n  /**\n   * Determines if colors are able to be selected on the color bar\n   */\n  @Input() enableSelection = false;\n\n  /**\n   * Emits the newly selected color index\n   */\n  @Output() colorChange = new EventEmitter();\n\n  /**\n   * Enables dynamic styling for gradient bars\n   */\n  get gradientStyle(): string {\n    const { colors, positions } = this.colorScheme;\n    const result: string[] = [];\n    for (let i = 0; i \n    \n\n    \n        \n  \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./color-bar.component.scss\n                \n                .scheme-container {\n  width: 7rem;\n  height: 1rem;\n  display: flex;\n  .discrete {\n    width: 1rem;\n  }\n  .gradient {\n    width: 7rem;\n  }\n\n  &.selected-scheme {\n    .discrete {\n      &.selected-color {\n        border-radius: 10px;\n      }\n    }\n  }\n\n  &.highlighted {\n    outline-width: 1px;\n    outline-style: solid;\n  }\n\n  :hover {\n    cursor: pointer;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorBarModule.html":{"url":"modules/ColorBarModule.html","title":"module - ColorBarModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorBarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorBarModule\n\n\n\ncluster_ColorBarModule_declarations\n\n\n\ncluster_ColorBarModule_exports\n\n\n\n\nColorBarComponent\n\nColorBarComponent\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorBarModule -->\n\nColorBarComponent->ColorBarModule\n\n\n\n\n\nColorBarComponent \n\nColorBarComponent \n\nColorBarComponent  -->\n\nColorBarModule->ColorBarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-bar/color-bar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorBarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorBarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ColorBarComponent } from './color-bar.component';\n\n\n@NgModule({\n  declarations: [ColorBarComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ColorBarComponent]\n})\nexport class ColorBarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorPickerLauncherComponent.html":{"url":"components/ColorPickerLauncherComponent.html","title":"component - ColorPickerLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorPickerLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts\n\n\n    \n        Description\n    \n    \n        Component dynamically displays a div with a shape and background that corresponds to the color scheme\nor color of the layer that it gets passed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-picker-launcher\n            \n\n            \n                styleUrls\n                ./color-picker-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-picker-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts:20\n                            \n                        \n                \n                    \n                        An image-viewer layer which contains the styling information required to render this component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts:25\n                            \n                        \n                \n                    \n                        Output that passes along changes made to the layer's properties from the color picker\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\n/**\n * Component dynamically displays a div with a shape and background that corresponds to the color scheme\n * or color of the layer that it gets passed.\n */\n@Component({\n  selector: 'ccf-color-picker-launcher',\n  templateUrl: './color-picker-launcher.component.html',\n  styleUrls: ['./color-picker-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPickerLauncherComponent {\n  /**\n   * An image-viewer layer which contains the styling information required to render this component.\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Output that passes along changes made to the layer's properties from the color picker\n   */\n  @Output() layerChange = new EventEmitter();\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./color-picker-launcher.component.scss\n                \n                .launch-button {\n  width: 1rem;\n  height: 1rem;\n  cursor: pointer;\n}\n\n.circle {\n  border-radius: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorPickerLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorPickerLauncherModule.html":{"url":"modules/ColorPickerLauncherModule.html","title":"module - ColorPickerLauncherModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorPickerLauncherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorPickerLauncherModule\n\n\n\ncluster_ColorPickerLauncherModule_declarations\n\n\n\ncluster_ColorPickerLauncherModule_imports\n\n\n\ncluster_ColorPickerLauncherModule_exports\n\n\n\n\nColorPickerLauncherComponent\n\nColorPickerLauncherComponent\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule -->\n\nColorPickerLauncherComponent->ColorPickerLauncherModule\n\n\n\n\n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent  -->\n\nColorPickerLauncherModule->ColorPickerLauncherComponent \n\n\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorPickerLauncherModule -->\n\nColorSchemePopupModule->ColorPickerLauncherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorPickerLauncherComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorSchemePopupModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorPickerLauncherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorPickerLauncherComponent } from './color-picker-launcher.component';\nimport { ColorSchemePopupModule } from '../color-scheme-popup/color-scheme-popup.module';\n\n\n@NgModule({\n  declarations: [ColorPickerLauncherComponent],\n  imports: [CommonModule, ColorSchemePopupModule],\n  exports: [ColorPickerLauncherComponent]\n})\nexport class ColorPickerLauncherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme.html":{"url":"interfaces/ColorScheme.html","title":"interface - ColorScheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/color-scheme.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colors\n                                \n                                \n                                        name\n                                \n                                \n                                        positions\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"discrete\" | \"gradient\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"discrete\" | \"gradient\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n    type: 'discrete' | 'gradient';\n    name: string;\n    colors: string[];\n    positions: number[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme-1.html":{"url":"interfaces/ColorScheme-1.html","title":"interface - ColorScheme-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-schemes.ts\n        \n\n            \n                Description\n            \n            \n                Color scheme to be used in visualizing layers of the image\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colors\n                                \n                                \n                                        name\n                                \n                                \n                                        positions\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Colors used in the scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions for mapping the data to colors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"discrete\" | \"gradient\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"discrete\" | \"gradient\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the scheme is discrete or gradient\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n\n  /**\n   * Whether the scheme is discrete or gradient\n   */\n  type: 'discrete' | 'gradient';\n\n  /**\n   * Name of scheme\n   */\n  name: string;\n\n  /**\n   * Colors used in the scheme\n   */\n  colors: string[];\n\n  /**\n   * Positions for mapping the data to colors\n   */\n  positions: number[];\n}\n\n/**\n * Default Qualitative Scheme1 (discrete)\n */\nexport const GREEENORANGE: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative1',\n  colors: ['#66BB6A', '#B39DDB', '#FFCC80', '#FFFF8D', '#1565C0', '#E91E63', '#E65100'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Qualitative Scheme2 (discrete)\n */\nexport const TEALGREEN: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative2',\n  colors: ['#80CBC4', '#FFFF8D', '#B39DDB', '#EF9A9A', '#64B5F6', '#FFB74D', '#AED581'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme1 (discrete)\n */\nexport const BLUERED: ColorScheme = {\n  type: 'discrete',\n  name: 'bluered',\n  colors: ['#2166AC', '#67A9CF', '#D1E5F0', '#F7F7F7', '#FDDBC7', '#EF8A62', '#B2182B'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme2 (discrete)\n */\nexport const GREENRED: ColorScheme = {\n  type: 'discrete',\n  name: 'greenred',\n  colors: ['#1A9850', '#91CF60', '#D9EF8B', '#FFFFBF', '#FEE08B', '#FC8D59', '#D73027'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme3 (discrete)\n */\nexport const PURPLEBROWN: ColorScheme = {\n  type: 'discrete',\n  name: 'purplebrown',\n  colors: ['#542788', '#998EC3', '#D8DAEB', '#F7F7F7', '#FEE0B6', '#F1A340', '#B35806'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme4 (discrete)\n */\nexport const REDTAN: ColorScheme = {\n  type: 'discrete',\n  name: 'redtan',\n  colors: ['#990000', '#D7301F', '#EF6548', '#FC8D59', '#FDBB84', '#FDD49E', '#FEF0D9'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme5 (discrete)\n */\nexport const PURPLELIGHTBLUE: ColorScheme = {\n  type: 'discrete',\n  name: 'purplelightblue',\n  colors: ['#6E016B', '#88419D', '#8C6BB1', '#8C96C6', '#9EBCDA', '#BFD3E6', '#EDF8FB'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme6 (gradient)\n */\nexport const VIRIDIS: ColorScheme = {\n  type: 'gradient',\n  name: 'viridis',\n  colors: ['#FFE31C', '#B5C740', '#6BAB65', '#21908A', '#2D6379', '#393768', '#450B57'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme7 (gradient)\n */\nexport const MAGMA: ColorScheme = {\n  type: 'gradient',\n  name: 'magma',\n  colors: ['#F8FC9D', '#E1B986', '#CA7670', '#B4335A', '#78223C', '#3D121F', '#020202'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme8 (gradient)\n */\nexport const PLASMA: ColorScheme = {\n  type: 'gradient',\n  name: 'plasma',\n  colors: ['#F2F424', '#E3B842', '#D47D60', '#C6427E', '#883381', '#4A2484', '#0C1687'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default scheme options\n */\nexport const DEFAULT_COLOR_SCHEMES = [\n  GREEENORANGE,\n  TEALGREEN,\n  BLUERED,\n  GREENRED,\n  PURPLEBROWN,\n  // REDTAN,\n  // PURPLELIGHTBLUE,\n  // VIRIDIS,\n  // MAGMA,\n  // PLASMA\n];\n\n/**\n * Object containing scheme and color index info to be emitted when a change is made\n */\nexport interface ColorSchemeSelection {\n\n  /**\n   * Current scheme selected\n   */\n  scheme: ColorScheme;\n\n  /**\n   * Index of the selected color in scheme\n   */\n  coloridx: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSchemeContentsComponent.html":{"url":"components/ColorSchemeContentsComponent.html","title":"component - ColorSchemeContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSchemeContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts\n\n\n    \n        Description\n    \n    \n        Contains the color menu and brightness/transparency sliders\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-scheme-contents\n            \n\n            \n                styleUrls\n                ./color-scheme-contents.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-scheme-contents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightnessSliderOptions\n                            \n                            \n                                transparencySliderOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                brightnessChanged\n                            \n                            \n                                colorChanged\n                            \n                            \n                                transparencyChanged\n                            \n                            \n                                    Private\n                                updateLayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                layer\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    brightnessLow\n                                \n                                \n                                    brightnessHigh\n                                \n                                \n                                    transparency\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:70\n                            \n                        \n\n                \n                    \n                            Initiates slider options\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:21\n                            \n                        \n                \n                    \n                        Determines if the popup opens up or down from the icon position\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:31\n                            \n                        \n                \n                    \n                        Layer that the component is currently rendering, used to pull relevant properties from.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:26\n                            \n                        \n                \n                    \n                        List of available schemes\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:36\n                            \n                        \n                \n                    \n                        Used to emit any changes made to the layer or its properties\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            brightnessChanged\n                        \n                        \n                    \n                \n            \n            \n                \nbrightnessChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:91\n                \n            \n\n\n            \n                \n                    Emits new brightness selection\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncolorChanged(color: string, scheme: ColorScheme)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:106\n                \n            \n\n\n            \n                \n                    Takes in the selected color and scheme and adds them to the Layer\nbefore emitting the changed layer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scheme\n                                    \n                                                ColorScheme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transparencyChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntransparencyChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:98\n                \n            \n\n\n            \n                \n                    Emits new transparency value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateLayer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayer(updates: Partial<>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:118\n                \n            \n\n\n            \n                \n                    Updates layer with new layer settings\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    updates\n                                    \n                                            Partial<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains updated layer settings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brightnessSliderOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:41\n                            \n                        \n\n                \n                    \n                        Options for the brightness slider\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transparencySliderOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:46\n                            \n                        \n\n                \n                    \n                        Options for the transparency slider\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        brightnessLow\n                    \n                \n\n                \n                    \n                        getbrightnessLow()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:51\n                                \n                            \n                    \n                        \n                                Updates current low brightness value with new low brightness value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbrightnessLow(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        brightnessHigh\n                    \n                \n\n                \n                    \n                        getbrightnessHigh()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:59\n                                \n                            \n                    \n                        \n                                Updates current high brightness value with new high brightness value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbrightnessHigh(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        transparency\n                    \n                \n\n                \n                    \n                        gettransparency()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:67\n                                \n                            \n                    \n                        \n                                Updates current transparency value with new transparency value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settransparency(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:68\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Options } from 'ng5-slider';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../color-schemes';\n\n\n/**\n * Contains the color menu and brightness/transparency sliders\n */\n@Component({\n  selector: 'ccf-color-scheme-contents',\n  templateUrl: './color-scheme-contents.component.html',\n  styleUrls: ['./color-scheme-contents.component.scss']\n})\nexport class ColorSchemeContentsComponent {\n\n  /**\n   * Determines if the popup opens up or down from the icon position\n   */\n  @Input() bottom = false;\n\n  /**\n   * List of available schemes\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * Layer that the component is currently rendering, used to pull relevant properties from.\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Used to emit any changes made to the layer or its properties\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /**\n   * Options for the brightness slider\n   */\n  brightnessSliderOptions: Options;\n\n  /**\n   * Options for the transparency slider\n   */\n  transparencySliderOptions: Options;\n\n  /**\n   * Updates current low brightness value with new low brightness value\n   */\n  get brightnessLow(): number { return this.layer.brightness[0]; }\n  set brightnessLow(value: number) {\n    this.updateLayer({ brightness: [value, this.brightnessHigh] });\n  }\n\n  /**\n   * Updates current high brightness value with new high brightness value\n   */\n  get brightnessHigh(): number { return this.layer.brightness[1]; }\n  set brightnessHigh(value: number) {\n    this.updateLayer({ brightness: [this.brightnessLow, value] });\n  }\n\n  /**\n   * Updates current transparency value with new transparency value\n   */\n  get transparency(): number { return this.layer.transparency; }\n  set transparency(value: number) {\n    this.updateLayer({ transparency: value });\n  }\n\n  /**\n   * Initiates slider options\n   */\n  constructor() {\n    const COMMON_OPTIONS = {\n      floor: 0,\n      ceil: 100,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n\n    this.brightnessSliderOptions = { ...COMMON_OPTIONS };\n    this.transparencySliderOptions = { ...COMMON_OPTIONS, showSelectionBar: true };\n  }\n\n  /**\n   * Emits new brightness selection\n   */\n  brightnessChanged(): void {\n    this.layerChange.emit(this.layer);\n  }\n\n  /**\n   * Emits new transparency value\n   */\n  transparencyChanged(): void {\n    this.layerChange.emit(this.layer);\n  }\n\n  /**\n   * Takes in the selected color and scheme and adds them to the Layer\n   * before emitting the changed layer\n   */\n  colorChanged(color: string, scheme: ColorScheme): void {\n    this.updateLayer({\n      colorScheme: scheme,\n      color,\n      customizedColor: true\n    });\n  }\n\n  /**\n   * Updates layer with new layer settings\n   * @param updates Contains updated layer settings\n   */\n  private updateLayer(\n    updates: Partial[0]>\n  ): void {\n    const { layer: current, layerChange } = this;\n    const layer = new ImageViewerLayer({\n      ...current,\n      ...updates\n    });\n\n    this.layer = layer;\n    layerChange.emit(layer);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    Brightness\n    \n    \n\n    Transparency\n    \n     -->\n  \n\n\n    \n\n    \n                \n                    ./color-scheme-contents.component.scss\n                \n                .color-scheme-contents-container {\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 4px;\n  width: 10rem;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 1;\n  right: -1.125rem;\n  top: -1.125rem;\n\n  &.bottom {\n    top: auto;\n    bottom: 0rem;\n  }\n\n  .scheme-contents {\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .swatch {\n      display: flex;\n      width: 7rem;\n      height: 1rem;\n      margin-bottom: 0.5rem;\n\n      :hover {\n        cursor: pointer;\n      }\n    }\n\n    .brightness-slider-label {\n      margin-top: .5rem;\n    }\n  }\n\n  ::ng-deep .slider {\n    margin-top: 0.75rem;\n    margin-bottom: 1rem;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: 0.15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: -0.5rem;\n      border-width: 0.1rem;\n      border-style: solid;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Brightness            Transparency         -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSchemeContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorSchemeContentsModule.html":{"url":"modules/ColorSchemeContentsModule.html","title":"module - ColorSchemeContentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorSchemeContentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorSchemeContentsModule\n\n\n\ncluster_ColorSchemeContentsModule_declarations\n\n\n\ncluster_ColorSchemeContentsModule_imports\n\n\n\ncluster_ColorSchemeContentsModule_exports\n\n\n\n\nColorSchemeContentsComponent\n\nColorSchemeContentsComponent\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule -->\n\nColorSchemeContentsComponent->ColorSchemeContentsModule\n\n\n\n\n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent  -->\n\nColorSchemeContentsModule->ColorSchemeContentsComponent \n\n\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorSchemeContentsModule -->\n\nColorBarModule->ColorSchemeContentsModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nColorSchemeContentsModule -->\n\nDualSliderModule->ColorSchemeContentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorSchemeContentsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorBarModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorSchemeContentsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { ColorSchemeContentsComponent } from './color-scheme-contents.component';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { ColorBarModule } from '../color-bar/color-bar.module';\n\n\n@NgModule({\n  imports: [CommonModule, DualSliderModule, Ng5SliderModule, ColorBarModule],\n  declarations: [ColorSchemeContentsComponent],\n  exports: [ColorSchemeContentsComponent]\n})\n\nexport class ColorSchemeContentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSchemePopupComponent.html":{"url":"components/ColorSchemePopupComponent.html","title":"component - ColorSchemePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSchemePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the scheme selector popup\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-scheme-popup\n            \n\n            \n                styleUrls\n                ./color-scheme-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-scheme-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                contentElement\n                            \n                            \n                                    Private\n                                    Optional\n                                owner\n                            \n                            \n                                popupVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:25\n                            \n                        \n                \n                    \n                        The Layer which we use to pull the properties we need from\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:20\n                            \n                        \n                \n                    \n                        Schemes available to choose from\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:30\n                            \n                        \n                \n                    \n                        Output we use to emit any changes to the layer or its properties\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:53\n                \n            \n\n\n            \n                \n                    Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(event: MouseEvent, owner?: Element)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:64\n                \n            \n\n\n            \n                \n                    Opens popup and calculates which direction the popup opens based on click position\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    owner\n                                    \n                                            Element\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:45\n                            \n                        \n\n                \n                    \n                        Controls direction the popup opens\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content', {static: true, read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:40\n                            \n                        \n\n                \n                    \n                        Owner button element which when clicked will not close on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:37\n                            \n                        \n\n                \n                    \n                        Controls visibility of the popup\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostListener, Input, Output, ViewChild, ElementRef } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../color-schemes';\n\n\n/**\n * Component for the scheme selector popup\n */\n@Component({\n  selector: 'ccf-color-scheme-popup',\n  templateUrl: './color-scheme-popup.component.html',\n  styleUrls: ['./color-scheme-popup.component.scss']\n})\nexport class ColorSchemePopupComponent {\n\n  /**\n   * Schemes available to choose from\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * The Layer which we use to pull the properties we need from\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Output we use to emit any changes to the layer or its properties\n   */\n  @Output() layerChange = new EventEmitter();\n\n  @ViewChild('content', { static: true, read: ElementRef }) contentElement: ElementRef;\n\n  /**\n   * Controls visibility of the popup\n   */\n  popupVisible = false;\n\n  /** Owner button element which when clicked will not close on. */\n  private owner?: Element;\n\n  /**\n   * Controls direction the popup opens\n   */\n  bottom = false;\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  close(target: HTMLElement): void {\n    const { popupVisible, contentElement: { nativeElement: content } = { nativeElement: undefined }, owner } = this;\n    if (!popupVisible || content?.contains(target) || owner?.contains(target)) {\n      return;\n    }\n    this.popupVisible = !popupVisible;\n  }\n\n  /**\n   * Opens popup and calculates which direction the popup opens based on click position\n   */\n  open(event: MouseEvent, owner?: Element): void {\n    const clickPos = event.pageY;\n    this.bottom = window.innerHeight - clickPos \n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./color-scheme-popup.component.scss\n                \n                .hidden {\n  display: none;\n}\n\n.show {\n  display: block;\n  position: absolute;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSchemePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorSchemePopupModule.html":{"url":"modules/ColorSchemePopupModule.html","title":"module - ColorSchemePopupModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorSchemePopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorSchemePopupModule\n\n\n\ncluster_ColorSchemePopupModule_declarations\n\n\n\ncluster_ColorSchemePopupModule_imports\n\n\n\ncluster_ColorSchemePopupModule_exports\n\n\n\n\nColorSchemePopupComponent\n\nColorSchemePopupComponent\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorSchemePopupModule -->\n\nColorSchemePopupComponent->ColorSchemePopupModule\n\n\n\n\n\nColorSchemePopupComponent \n\nColorSchemePopupComponent \n\nColorSchemePopupComponent  -->\n\nColorSchemePopupModule->ColorSchemePopupComponent \n\n\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemePopupModule -->\n\nColorSchemeContentsModule->ColorSchemePopupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorSchemePopupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorSchemeContentsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorSchemePopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ColorSchemePopupComponent } from './color-scheme-popup.component';\nimport { ColorSchemeContentsModule } from '../color-scheme-contents/color-scheme-contents.module';\n\n\n@NgModule({\n  imports: [CommonModule, ColorSchemeContentsModule],\n  declarations: [ColorSchemePopupComponent],\n  exports: [ColorSchemePopupComponent]\n})\n\nexport class ColorSchemePopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorSchemeSelection.html":{"url":"interfaces/ColorSchemeSelection.html","title":"interface - ColorSchemeSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorSchemeSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/color-scheme/color-schemes.ts\n        \n\n            \n                Description\n            \n            \n                Object containing scheme and color index info to be emitted when a change is made\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coloridx\n                                \n                                \n                                        scheme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coloridx\n                                    \n                                \n                                \n                                    \n                                        coloridx:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Index of the selected color in scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheme\n                                    \n                                \n                                \n                                    \n                                        scheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current scheme selected\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n\n  /**\n   * Whether the scheme is discrete or gradient\n   */\n  type: 'discrete' | 'gradient';\n\n  /**\n   * Name of scheme\n   */\n  name: string;\n\n  /**\n   * Colors used in the scheme\n   */\n  colors: string[];\n\n  /**\n   * Positions for mapping the data to colors\n   */\n  positions: number[];\n}\n\n/**\n * Default Qualitative Scheme1 (discrete)\n */\nexport const GREEENORANGE: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative1',\n  colors: ['#66BB6A', '#B39DDB', '#FFCC80', '#FFFF8D', '#1565C0', '#E91E63', '#E65100'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Qualitative Scheme2 (discrete)\n */\nexport const TEALGREEN: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative2',\n  colors: ['#80CBC4', '#FFFF8D', '#B39DDB', '#EF9A9A', '#64B5F6', '#FFB74D', '#AED581'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme1 (discrete)\n */\nexport const BLUERED: ColorScheme = {\n  type: 'discrete',\n  name: 'bluered',\n  colors: ['#2166AC', '#67A9CF', '#D1E5F0', '#F7F7F7', '#FDDBC7', '#EF8A62', '#B2182B'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme2 (discrete)\n */\nexport const GREENRED: ColorScheme = {\n  type: 'discrete',\n  name: 'greenred',\n  colors: ['#1A9850', '#91CF60', '#D9EF8B', '#FFFFBF', '#FEE08B', '#FC8D59', '#D73027'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme3 (discrete)\n */\nexport const PURPLEBROWN: ColorScheme = {\n  type: 'discrete',\n  name: 'purplebrown',\n  colors: ['#542788', '#998EC3', '#D8DAEB', '#F7F7F7', '#FEE0B6', '#F1A340', '#B35806'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme4 (discrete)\n */\nexport const REDTAN: ColorScheme = {\n  type: 'discrete',\n  name: 'redtan',\n  colors: ['#990000', '#D7301F', '#EF6548', '#FC8D59', '#FDBB84', '#FDD49E', '#FEF0D9'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme5 (discrete)\n */\nexport const PURPLELIGHTBLUE: ColorScheme = {\n  type: 'discrete',\n  name: 'purplelightblue',\n  colors: ['#6E016B', '#88419D', '#8C6BB1', '#8C96C6', '#9EBCDA', '#BFD3E6', '#EDF8FB'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme6 (gradient)\n */\nexport const VIRIDIS: ColorScheme = {\n  type: 'gradient',\n  name: 'viridis',\n  colors: ['#FFE31C', '#B5C740', '#6BAB65', '#21908A', '#2D6379', '#393768', '#450B57'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme7 (gradient)\n */\nexport const MAGMA: ColorScheme = {\n  type: 'gradient',\n  name: 'magma',\n  colors: ['#F8FC9D', '#E1B986', '#CA7670', '#B4335A', '#78223C', '#3D121F', '#020202'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme8 (gradient)\n */\nexport const PLASMA: ColorScheme = {\n  type: 'gradient',\n  name: 'plasma',\n  colors: ['#F2F424', '#E3B842', '#D47D60', '#C6427E', '#883381', '#4A2484', '#0C1687'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default scheme options\n */\nexport const DEFAULT_COLOR_SCHEMES = [\n  GREEENORANGE,\n  TEALGREEN,\n  BLUERED,\n  GREENRED,\n  PURPLEBROWN,\n  // REDTAN,\n  // PURPLELIGHTBLUE,\n  // VIRIDIS,\n  // MAGMA,\n  // PLASMA\n];\n\n/**\n * Object containing scheme and color index info to be emitted when a change is made\n */\nexport interface ColorSchemeSelection {\n\n  /**\n   * Current scheme selected\n   */\n  scheme: ColorScheme;\n\n  /**\n   * Index of the selected color in scheme\n   */\n  coloridx: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drawer/container/container.component.ts\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-container'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:37\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/container/container.component.ts:111\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/container/container.component.ts:79\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/container/container.component.ts:101\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateDrawers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/container/container.component.ts:120\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessageChannel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:58\n                            \n                        \n\n                \n                    \n                        The connected message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(ContentComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:45\n                            \n                        \n\n                \n                    \n                        Content component if provided already wrapped. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(ContentComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:48\n                            \n                        \n\n                \n                    \n                        Content component if provided without wrapping. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DrawerComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:41\n                            \n                        \n\n                \n                    \n                        Drawer components in this container. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                        All subscriptions managed by the container. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component. \n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped. \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean { return this.content1.length !== 0; }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) { throwDuplicateDrawersError('start'); }\n    if (endDrawers.length > 1) { throwDuplicateDrawersError('end'); }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drawer/content/content.component.ts\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @fadeInOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the content is invisible. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-content'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:28\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.cff-drawer-content-animations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:30\n                            \n                        \n\n                \n                    \n                        Whether animations are enabled. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-left.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:32\n                            \n                        \n\n                \n                    \n                        Left margin size. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-right.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:34\n                            \n                        \n\n                \n                    \n                        Right margin size. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/content/content.component.ts:68\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/content/content.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateFaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/content/content.component.ts:113\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateMargin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/content/content.component.ts:100\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DrawerComponent[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:39\n                            \n                        \n\n                \n                    \n                        References to the side drawers. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if(this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled':\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = startExpanded || endExpanded;\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 7rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: 1.5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when the content component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHeaderModule\n\nHeaderModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { HeaderModule } from './header/header.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [HttpClientModule, HeaderModule, StoreModule, ThemingModule],\n  exports: [HeaderModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Backend query interface. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAggregateResults\n                                \n                                \n                                    getImageViewerData\n                                \n                                \n                                    getListResults\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:92\n                \n            \n\n\n            \n                \n                    Query aggregate items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageViewerData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:94\n                \n            \n\n\n            \n                \n                    Query a specific image. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:90\n                \n            \n\n\n            \n                \n                    Query list items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource-1.html":{"url":"interfaces/DataSource-1.html","title":"interface - DataSource-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         ZarrInfo | OMEZarrInfo | TiffInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZarrInfo | OMEZarrInfo | TiffInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         LoaderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoaderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data-source/data-source.service.ts\n        \n\n            \n                Description\n            \n            \n                Backend data queries.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _afterConnected\n                            \n                            \n                                dataSource\n                            \n                            \n                                dbOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAggregateResults\n                            \n                            \n                                    Private\n                                    Async\n                                getDB\n                            \n                            \n                                getImageViewerData\n                            \n                            \n                                getListResults\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/data-source/data-source.service.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of data source service.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data-source/data-source.service.ts:77\n                \n            \n\n\n            \n                \n                    Queries for aggregate values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getDB\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDB()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data-source/data-source.service.ts:53\n                \n            \n\n\n            \n                \n                    Gets a reference to the database.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise that resolves to the database when ready.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageViewerData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data-source/data-source.service.ts:97\n                \n            \n\n\n            \n                \n                    Queries data for a specific image.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The image identifier ('\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the result.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data-source/data-source.service.ts:67\n                \n            \n\n\n            \n                \n                    Queries for list values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOntologyTermOccurences\n                        \n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/data-source/data-source.service.ts:87\n                \n            \n\n\n            \n                \n                    Queries for ontology term counts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _afterConnected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/data-source/data-source.service.ts:21\n                            \n                        \n\n                \n                    \n                        Indicator of when the database is ready. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Remote | CCFDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/data-source/data-source.service.ts:17\n                            \n                        \n\n                \n                    \n                        The underlying database. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFDatabaseOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/data-source/data-source.service.ts:19\n                            \n                        \n\n                \n                    \n                        Database initialization options. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AggregateResult, CCFDatabase, CCFDatabaseOptions, Filter, ImageViewerData, ListResult } from 'ccf-database';\nimport { Remote, wrap } from 'comlink';\nimport { from, Observable } from 'rxjs';\n\nimport { environment } from './../../../../environments/environment';\n\n\n/**\n * Backend data queries.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceService {\n  /** The underlying database. */\n  dataSource: Remote | CCFDatabase;\n  /** Database initialization options. */\n  dbOptions: CCFDatabaseOptions;\n  /** Indicator of when the database is ready. */\n  private _afterConnected: Promise;\n\n  /**\n   * Creates an instance of data source service.\n   */\n  constructor() {\n    if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      const worker = new Worker('./data-source.worker', { type: 'module' });\n      this.dataSource = wrap(worker);\n    } else {\n      this.dataSource = new CCFDatabase();\n    }\n    this.dbOptions = environment.dbOptions as CCFDatabaseOptions;\n\n    if (typeof globalThis === 'object') {\n      // If a global dbOptions object is set, use this for connecting to the db\n      if (globalThis.dbOptions) {\n        this.dbOptions = { ...this.dbOptions, ...globalThis.dbOptions } as CCFDatabaseOptions;\n      }\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        ((globalThis as unknown) as { db: Remote | CCFDatabase }).db = this.dataSource;\n      }\n    }\n  }\n\n  /**\n   * Gets a reference to the database.\n   *\n   * @returns A promise that resolves to the database when ready.\n   */\n  private async getDB(): Promise | CCFDatabase> {\n    if (!this._afterConnected) {\n      this._afterConnected = this.dataSource.connect(this.dbOptions);\n    }\n    await this._afterConnected;\n    return this.dataSource;\n  }\n\n  /**\n   * Queries for list values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getListResults(filter?: Filter): Observable {\n    return from(this.getDB().then((db) => db.getListResults(filter)));\n  }\n\n  /**\n   * Queries for aggregate values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getAggregateResults(filter?: Filter): Observable {\n    return from(this.getDB().then((db) => db.getAggregateResults(filter)));\n  }\n\n  /**\n   * Queries for ontology term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return from(this.getDB().then((db) => db.getOntologyTermOccurences(filter)));\n  }\n\n  /**\n   * Queries data for a specific image.\n   *\n   * @param iri The image identifier ('@id').\n   * @returns An observable emitting the result.\n   */\n  getImageViewerData(iri: string): Observable {\n    return from(this.getDB().then((db) => db.getImageViewerData(iri)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataState.html":{"url":"injectables/DataState.html","title":"injectable - DataState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/data/data.state.ts\n        \n\n            \n                Description\n            \n            \n                Data state repository and service.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _aggregateDataQueryStatus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _listDataQueryStatus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _termOccurencesDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                aggregateData$\n                            \n                            \n                                    Readonly\n                                aggregateDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                filter$\n                            \n                            \n                                    Readonly\n                                listData$\n                            \n                            \n                                    Readonly\n                                listDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                ontologyTermsFullData$\n                            \n                            \n                                    Readonly\n                                queryStatus$\n                            \n                            \n                                    Readonly\n                                termOccurencesData$\n                            \n                            \n                                    Readonly\n                                termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aggregateData\n                            \n                            \n                                    Private\n                                listData\n                            \n                            \n                                    Private\n                                termOccurencesData\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/data/data.state.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of data state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data query service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            aggregateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregateData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/data/data.state.ts:181\n                \n            \n\n\n            \n                \n                    Queries for aggregate data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ObservableInput\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            listData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/data/data.state.ts:169\n                \n            \n\n\n            \n                \n                    Queries for list data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ObservableInput\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            termOccurencesData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    termOccurencesData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/data/data.state.ts:193\n                \n            \n\n\n            \n                \n                    Queries for term occurences data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObservableInput>\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilter(filter: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/data/data.state.ts:155\n                \n            \n\n\n            \n                \n                    Updates the current filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes to be made to the current filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _aggregateDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:94\n                            \n                        \n\n                \n                    \n                        Implementation subject for aggregateDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _listDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:92\n                            \n                        \n\n                \n                    \n                        Implementation subject for listDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:96\n                            \n                        \n\n                \n                    \n                        Implementation subject for termOccurencesDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            aggregateData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:107\n                            \n                        \n\n                \n                    \n                        Latest aggregate query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            aggregateDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._aggregateDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:118\n                            \n                        \n\n                \n                    \n                        Current status of queries in the aggregateData$ observable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('filter'))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:101\n                            \n                        \n\n                \n                    \n                        Current filter. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            listData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:103\n                            \n                        \n\n                \n                    \n                        Latest list query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            listDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._listDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:116\n                            \n                        \n\n                \n                    \n                        Current status of queries in the listData$ observable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ontologyTermsFullData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:98\n                            \n                        \n\n                \n                    \n                        Keeping track of all ontology terms there is data for. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            queryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:123\n                            \n                        \n\n                \n                    \n                        Current status of all queries. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            termOccurencesData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:111\n                            \n                        \n\n                \n                    \n                        Latest term occurences query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._termOccurencesDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/data/data.state.ts:120\n                            \n                        \n\n                \n                    \n                        Current status of queries in the aggregateData$ observable. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, Filter, ListResult } from 'ccf-database';\nimport { combineLatest, Observable, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { distinct, map, pluck, publishReplay, refCount, switchMap, tap } from 'rxjs/operators';\n\nimport { DataSourceService } from '../../services/data-source/data-source.service';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702']\n};\n\n/** Current state of data queries. */\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n}\n\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository {\n  /** Implementation subject for listDataQueryStatus$. */\n  private readonly _listDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for termOccurencesDataQueryStatus$. */\n  private readonly _termOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$: Observable>;\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest list query data. */\n  readonly listData$ = this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest term occurences query data. */\n  readonly termOccurencesData$ = this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ));\n\n  /** Current status of queries in the listData$ observable. */\n  readonly listDataQueryStatus$ = this._listDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly termOccurencesDataQueryStatus$ = this._termOccurencesDataQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._listDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n\n    const ontologyTermsData = new ReplaySubject>(1);\n    source.getOntologyTermOccurences().subscribe(ontologyTermsData);\n    this.ontologyTermsFullData$ = ontologyTermsData;\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: Object.assign({}, this.getState().filter, filter)\n    });\n  }\n\n  /**\n   * Queries for list data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private listData(filter: Filter): ObservableInput {\n    this._listDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getListResults(filter);\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getAggregateResults(filter);\n  }\n\n  /**\n   * Queries for term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private termOccurencesData(filter: Filter): ObservableInput> {\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getOntologyTermOccurences(filter);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataStateModel.html":{"url":"interfaces/DataStateModel.html","title":"interface - DataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/data/data.state.ts\n        \n\n            \n                Description\n            \n            \n                Store data state. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         Filter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current filter. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, Filter, ListResult } from 'ccf-database';\nimport { combineLatest, Observable, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { distinct, map, pluck, publishReplay, refCount, switchMap, tap } from 'rxjs/operators';\n\nimport { DataSourceService } from '../../services/data-source/data-source.service';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702']\n};\n\n/** Current state of data queries. */\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n}\n\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository {\n  /** Implementation subject for listDataQueryStatus$. */\n  private readonly _listDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for termOccurencesDataQueryStatus$. */\n  private readonly _termOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$: Observable>;\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest list query data. */\n  readonly listData$ = this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest term occurences query data. */\n  readonly termOccurencesData$ = this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ));\n\n  /** Current status of queries in the listData$ observable. */\n  readonly listDataQueryStatus$ = this._listDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly termOccurencesDataQueryStatus$ = this._termOccurencesDataQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._listDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n\n    const ontologyTermsData = new ReplaySubject>(1);\n    source.getOntologyTermOccurences().subscribe(ontologyTermsData);\n    this.ontologyTermsFullData$ = ontologyTermsData;\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: Object.assign({}, this.getState().filter, filter)\n    });\n  }\n\n  /**\n   * Queries for list data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private listData(filter: Filter): ObservableInput {\n    this._listDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getListResults(filter);\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getAggregateResults(filter);\n  }\n\n  /**\n   * Queries for term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private termOccurencesData(filter: Filter): ObservableInput> {\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getOntologyTermOccurences(filter);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/icon-registry/default-icons.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  { name: 'logo', namespace: 'app', url: 'assets/icons/app/hubmap-logo.svg' },\n\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n\n  // Add default icons here!\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        drawers\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                    \n                                \n                                \n                                    \n                                        drawers:     [unknown, unknown]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [unknown, unknown]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expanded\n                                \n                                \n                                        margin\n                                \n                                \n                                        opened\n                                \n                                \n                                        type\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/dropdown/dropdown.component.ts\n\n\n    \n        Description\n    \n    \n        Component for a dropdown menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                optionsVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChanged\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:16\n                            \n                        \n                \n                    \n                        What the component is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:21\n                            \n                        \n                \n                    \n                        Choices displayed in the dropdown menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:26\n                            \n                        \n                \n                    \n                        Current option selected.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the new selected option when selection is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:49\n                \n            \n\n\n            \n                \n                    Updates the selected value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value that has been selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleOptions\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:41\n                \n            \n\n\n            \n                \n                    Controls fade-in effect after dropdown menu opens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'invisible'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dropdown/dropdown.component.ts:36\n                            \n                        \n\n                \n                    \n                        Determines if menu contents are visible (used for fade-in effect).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Component for a dropdown menu.\n */\n@Component({\n  selector: 'ccf-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent {\n\n  /**\n   * What the component is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * Choices displayed in the dropdown menu.\n   */\n  @Input() options: string[];\n\n  /**\n   * Current option selected.\n   */\n  @Input() selection: string;\n\n  /**\n   * Emits the new selected option when selection is changed.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines if menu contents are visible (used for fade-in effect).\n   */\n  optionsVisible = 'invisible';\n\n  /**\n   * Controls fade-in effect after dropdown menu opens\n   */\n  toggleOptions(): void {\n    this.optionsVisible = this.optionsVisible === 'visible' ? 'invisible' : 'visible';\n  }\n\n  /**\n   * Updates the selected value.\n   * @param value The value that has been selected\n   */\n  selectionChanged(value: string): void {\n    this.selection = value;\n    this.selectionChange.emit(value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n      \n        \n          \n            {{ option }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dropdown.component.scss\n                \n                @keyframes slideInHorizontalDropdown {\n  from {\n    width: 0;\n  }\n  to {\n    width: 9.85rem;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.dropdown-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        font-size: 14px;\n        border: none;\n\n        mat-select {\n          font-size: 16px;\n          font-weight: bold;\n        }\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      background-color: black;\n      transform: none;\n      height: 2px;\n    }\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .option-panel {\n  animation: slideInHorizontalDropdown .3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  position: absolute !important;\n  top: 1.55rem;\n  max-width: 152px;\n  border-radius: 0px;\n  border-width: 1px;\n  border-style: solid;\n\n\n  .mat-option {\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    padding-left: 1em;\n  }\n\n  :last-child {\n    border-bottom: none;\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0px !important;\n}\n\n.dropdown-form-field {\n  height: 3rem;\n  width: 100%;\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n  }\n}\n\n::ng-deep .ccf-dropdown {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-.5em);\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}                                    {{ option }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/dropdown/dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DropdownComponent } from './dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent]\n})\n\nexport class DropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualSliderComponent.html":{"url":"components/DualSliderComponent.html","title":"component - DualSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DualSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/dual-slider/dual-slider.component.ts\n\n\n    \n        Description\n    \n    \n        Component containing a button that when clicked will show a slider popover.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dual-slider\n            \n\n            \n                styleUrls\n                ./dual-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsVisible\n                            \n                            \n                                highValue\n                            \n                            \n                                    Private\n                                isSliderInitialized\n                            \n                            \n                                isSliderOpen\n                            \n                            \n                                lowValue\n                            \n                            \n                                options\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                popoverElement\n                            \n                            \n                                popoverPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeSliderPopover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onKeyHigh\n                            \n                            \n                                onKeyLow\n                            \n                            \n                                optionsChanged\n                            \n                            \n                                sliderValueChanged\n                            \n                            \n                                toggleSliderPopover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                selection\n                            \n                            \n                                valueRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rangeLabel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:102\n                            \n                        \n\n                \n                    \n                            Creates an instance of dual slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The overlay service used to create the slider popover.\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the component's element. Used during event handling.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:41\n                            \n                        \n                \n                    \n                        Which criteria the slider is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:51\n                            \n                        \n                \n                    \n                        The current range selected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueRange\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:46\n                            \n                        \n                \n                    \n                        The lower and upper range of the slider.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:56\n                            \n                        \n                \n                    \n                        Emits the new selection range when a change is made to it.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:168\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:214\n                \n            \n\n\n            \n                \n                    Creates and initializes the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:125\n                \n            \n\n\n            \n                \n                    Updates slider options (with optionsChanged) and selection when changes detected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes that have been made to the slider properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:155\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyHigh\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyHigh(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:243\n                \n            \n\n\n            \n                \n                    Updates the slider's high pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyLow\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyLow(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:227\n                \n            \n\n\n            \n                \n                    Updates the slider's low pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionsChanged\n                        \n                        \n                    \n                \n            \n            \n                \noptionsChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:139\n                \n            \n\n\n            \n                \n                    Updates the slider options, and the slider values if necessary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sliderValueChanged\n                        \n                        \n                    \n                \n            \n            \n                \nsliderValueChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:204\n                \n            \n\n\n            \n                \n                    Handler for updates to the slider values.\nEmits the updated selection value array.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:187\n                \n            \n\n\n            \n                \n                    Toggles the visibility of the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'invisible'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:81\n                            \n                        \n\n                \n                    \n                        Determines if slider contents are visible (used for fade-in effect).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:76\n                            \n                        \n\n                \n                    \n                        Value bound to the slider's high pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isSliderInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:102\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover has been created and initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSliderOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:61\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover is shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:71\n                            \n                        \n\n                \n                    \n                        Value bound to the slider's low pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:66\n                            \n                        \n\n                \n                    \n                        Slider options.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OverlayRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:97\n                            \n                        \n\n                \n                    \n                        Reference to the slider popover overlay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popover', {read: ElementRef, static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the popover element.\nThis is undefined until the slider popover is initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverPortal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CdkPortal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CdkPortal, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the template for the slider popover.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rangeLabel\n                    \n                \n\n                \n                    \n                        getrangeLabel()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/dual-slider/dual-slider.component.ts:86\n                                \n                            \n                    \n                        \n                                Computes the current age range for display in the button.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { Options } from 'ng5-slider';\n\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-dual-slider',\n  templateUrl: './dual-slider.component.html',\n  styleUrls: ['./dual-slider.component.scss']\n})\nexport class DualSliderComponent implements OnDestroy, OnChanges {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement: ElementRef;\n\n  /**\n   * Which criteria the slider is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * The lower and upper range of the slider.\n   */\n  @Input() valueRange: number[];\n\n  /**\n   * The current range selected.\n   */\n  @Input() selection: number[];\n\n  /**\n   * Emits the new selection range when a change is made to it.\n   */\n  @Output() selectionChange = new EventEmitter();\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options: Options;\n\n  /**\n   * Value bound to the slider's low pointer value.\n   */\n  lowValue: number;\n\n  /**\n   * Value bound to the slider's high pointer value.\n   */\n  highValue: number;\n\n  /**\n   * Determines if slider contents are visible (used for fade-in effect).\n   */\n  contentsVisible = 'invisible';\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get rangeLabel(): string {\n    const { lowValue, highValue } = this;\n    if (lowValue === highValue) {\n      return `${lowValue}`;\n    }\n    return `${lowValue}-${highValue}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of dual slider component.\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   */\n  constructor(\n    overlay: Overlay,\n    private element: ElementRef,\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'slider-pane',\n      positionStrategy\n    });\n  }\n\n  /**\n   * Updates slider options (with optionsChanged) and selection when changes detected.\n   * @param changes Changes that have been made to the slider properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.valueRange) {\n      this.optionsChanged();\n    }\n    if (changes.selection) {\n      // Detect when selection is changed and update low/high value.\n      this.lowValue = Math.min(...this.selection);\n      this.highValue = Math.max(...this.selection);\n    }\n  }\n\n  /**\n   * Updates the slider options, and the slider values if necessary.\n   */\n  optionsChanged(): void {\n    this.options = {\n      floor: this.valueRange ? this.valueRange[0] : 0,\n      ceil: this.valueRange ? this.valueRange[1] : 0,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n    this.lowValue = this.options.floor ?? 0;\n    this.highValue = this.options.ceil ?? 0;\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy(): void {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click, mouse movement, and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  // @HostListener('document:mousemove', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  @HostListener('document:touchstart', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    if (!isSliderOpen) {\n      return;\n    } else if (element.nativeElement.contains(target)) {\n      return;\n    } else if (popoverElement && popoverElement.nativeElement.contains(target)) {\n      return;\n    }\n\n    this.overlayRef.detach();\n    this.isSliderInitialized = false;\n    this.isSliderOpen = false;\n    this.contentsVisible = 'invisible';\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (isSliderInitialized) {\n      this.overlayRef.detach();\n      this.isSliderInitialized = false;\n    } else if (!isSliderInitialized && !isSliderOpen) {\n      this.initializeSliderPopover();\n    }\n\n    this.contentsVisible = this.contentsVisible === 'visible' ? 'invisible' : 'visible';\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Emits the updated selection value array.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue } = this;\n\n    this.selection = [lowValue, highValue];\n    this.selectionChange.emit(this.selection);\n  }\n\n  /**\n   * Creates and initializes the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n\n  /**\n   * Updates the slider's low pointer value when Enter key is pressed.\n   * @param event Event passed into the component\n   */\n  onKeyLow(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue = Number(this.options.floor) && newValue \n    \n\n    \n        \n  \n    \n      \n         {{ options.floor }}> \n        \n      \n\n      \n      \n\n      \n         {{ options.ceil }} \n        \n      \n    \n\n    \n      \n        {{ label }}\n        {{ rangeLabel }}\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual-slider.component.scss\n                \n                .slider-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        border: none;\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      background-color: black;\n      transform: none;\n      height: 2px;\n    }\n  }\n}\n\n\n.slider-labels {\n  display: flex;\n  flex-direction: column;\n  .name-label {\n    font-size: 14px;\n  }\n\n  .range-label {\n    font-weight: bold;\n  }\n}\n\n::ng-deep .ccf-slider.wrapper {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-1.5em);\n  }\n}\n\n// Styles for the popover slider\n// NOTE: This must NOT be nested inside the wrapper/container!\n\n@keyframes slideInHorizontalSlider {\n  from {\n    width: 0;\n  }\n  to {\n    width: 20em;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .slider-pane {\n  border-width: 1px;\n  border-style: solid;\n  position: absolute !important;\n  top: -1px;\n}\n\n.ccf-slider.detached {\n  animation: slideInHorizontalSlider 0.3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 0rem;\n  height: 70px;\n  padding: .75rem; // NOTE: Use padding instead of margin!\n\n  .slider ::ng-deep {\n    visibility: hidden;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: .15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: 0.095rem - ($pointer-size / 2);\n      border-width: .1rem;\n      border-style: solid;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    width: 32px;\n    \n    &.min {\n      margin-right: 1rem;\n    }\n    \n    &.max {\n      margin-left: 1rem;\n      align-items: flex-end;\n\n      .ceil, input {\n        text-align: right;\n      }\n    }\n\n    .floor, .ceil {\n      font-size: 14px;\n    }\n\n    input {\n      border: none;\n      width: 28px;\n      font-size: 16px;\n      font-weight: bold;\n      padding: 0;\n    }\n\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{ options.floor }}>                                          {{ options.ceil }}                                     {{ label }}        {{ rangeLabel }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualSliderModule.html":{"url":"modules/DualSliderModule.html","title":"module - DualSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    DualSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/dual-slider/dual-slider.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { DualSliderComponent } from './dual-slider.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    Ng5SliderModule\n  ],\n  declarations: [DualSliderComponent],\n  exports: [DualSliderComponent]\n})\nexport class DualSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtDeckProps.html":{"url":"interfaces/ExtDeckProps.html","title":"interface - ExtDeckProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtDeckProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DeckProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canvas\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Options applied during queries. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ageRange\n                                \n                                \n                                        bmiRange\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        hasSpatialEntity\n                                \n                                \n                                            Optional\n                                        highlightedEntities\n                                \n                                \n                                        ontologyTerms\n                                \n                                \n                                        sex\n                                \n                                \n                                        technologies\n                                \n                                \n                                        tmc\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                    \n                                \n                                \n                                    \n                                        ageRange:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Age range. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                    \n                                \n                                \n                                    \n                                        bmiRange:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    BMI range. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Include optional debugging information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSpatialEntity\n                                    \n                                \n                                \n                                    \n                                        hasSpatialEntity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether it has a spatial entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedEntities\n                                    \n                                \n                                \n                                    \n                                        highlightedEntities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Entities to be highlighted \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ontology terms. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:     \"Both\" | \"Male\" | \"Female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Both\" | \"Male\" | \"Female\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gender. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technologies. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tmc\n                                    \n                                \n                                \n                                    \n                                        tmc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TMC. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersContentComponent.html":{"url":"components/FiltersContentComponent.html","title":"component - FiltersContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/filters/filters-content/filters-content.component.ts\n\n\n    \n        Description\n    \n    \n        Contains components of the filters popup and handles changes in filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-content\n            \n\n            \n                styleUrls\n                ./filters-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyButtonClick\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:21\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:16\n                            \n                        \n                \n                    \n                        Determines if the filters are visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        applyFilters\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the filters to be applied\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the filter change when they happen\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \napplyButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:46\n                \n            \n\n\n            \n                \n                    Emits the current filters when the apply button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilter(value: unknown, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/filters/filters-content/filters-content.component.ts:38\n                \n            \n\n\n            \n                \n                    Updates the filter object with a new key/value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be saved for the filter\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the filter to be saved at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Contains components of the filters popup and handles changes in filter settings\n */\n@Component({\n  selector: 'ccf-filters-content',\n  templateUrl: './filters-content.component.html',\n  styleUrls: ['./filters-content.component.scss']\n})\nexport class FiltersContentComponent {\n\n  /**\n   * Determines if the filters are visible\n   */\n  @Input() hidden: boolean;\n\n  /**\n   * Allows the filters to be set from outside the component\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emits the filter change when they happen\n   */\n  @Output() filtersChange = new EventEmitter>();\n\n  /**\n   * Emits the filters to be applied\n   */\n  @Output() applyFilters = new EventEmitter>();\n\n  /**\n   * Updates the filter object with a new key/value\n   * @param value The value to be saved for the filter\n   * @param key The key for the filter to be saved at\n   */\n  updateFilter(value: unknown, key: string): void {\n    this.filters = { ...this.filters, [key]: value };\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits the current filters when the apply button is clicked\n   */\n  applyButtonClick(): void {\n    this.applyFilters.emit(this.filters);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n  \n\n\n\n  \n\n\n\n  APPLY FILTERS\n\n\n    \n\n    \n                \n                    ./filters-content.component.scss\n                \n                .filter {\n  &.hidden {\n    display: none !important;\n  }\n\n  margin-top: 2em;\n}\n\n.button-container {\n  &.hidden {\n    display: none !important;\n  }\n  \n  margin-top: 2em;\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.outline-button {\n  box-shadow: 0.1rem 0.1rem 0.2rem 0rem #000000;\n  border-radius: 4px;\n  background: none;\n  border-width: 1px;\n  border-style: solid;\n  padding: 0.4em;\n  cursor: pointer;\n}\n\n.outline-button:active {\n  background: #69f0ae;\n  color: black;\n}\n\n.patient-filters {\n  display: flex;\n  width: 90%;\n\n  &.hidden {\n    display: none !important;\n  }\n\n  ccf-dual-slider {\n    margin-left: .5em;\n    width: 33%;\n  }\n\n  ccf-dropdown {\n    width: 33%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            APPLY FILTERS'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersContentModule.html":{"url":"modules/FiltersContentModule.html","title":"module - FiltersContentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/filters/filters-content/filters-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CheckboxModule\n                        \n                        \n                            DropdownModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CheckboxModule } from '../../../shared/components/checkbox/checkbox.module';\nimport { DropdownModule } from '../../../shared/components/dropdown/dropdown.module';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { FiltersContentComponent } from './filters-content.component';\n\n\n@NgModule({\n  imports: [CommonModule, CheckboxModule, DropdownModule, DualSliderModule],\n  declarations: [FiltersContentComponent],\n  exports: [FiltersContentComponent]\n})\nexport class FiltersContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersPopoverComponent.html":{"url":"components/FiltersPopoverComponent.html","title":"component - FiltersPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/filters/filters-popover/filters-popover.component.ts\n\n\n    \n        Description\n    \n    \n        Popover box for filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-popover\n            \n\n            \n                styleUrls\n                ./filters-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                removeBox\n                            \n                            \n                                toggleFilterVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawerExpanded\n                            \n                            \n                                filters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawerExpanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:21\n                            \n                        \n                \n                    \n                        Keeps track of whether or not the containing drawer is expanded\nBecause the styles need to change accordingly\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:15\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilters(filters: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:51\n                \n            \n\n\n            \n                \n                    Emits the current filters, and hides the popover box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object containing all the currently set filters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBox\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:43\n                \n            \n\n\n            \n                \n                    Hides the filters popover box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFilterVisible\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFilterVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:36\n                \n            \n\n\n            \n                \n                    Toggles filter visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/filters/filters-popover/filters-popover.component.ts:31\n                            \n                        \n\n                \n                    \n                        Keeps track of whether or not the filters popover box is visible or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Popover box for filter settings\n */\n@Component({\n  selector: 'ccf-filters-popover',\n  templateUrl: './filters-popover.component.html',\n  styleUrls: ['./filters-popover.component.scss']\n})\nexport class FiltersPopoverComponent {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filters: Record;\n\n  /**\n   * Keeps track of whether or not the containing drawer is expanded\n   * Because the styles need to change accordingly\n   */\n  @Input() drawerExpanded: boolean;\n\n  /**\n   * Emits the current filters\n   */\n  @Output() filtersChange = new EventEmitter>();\n\n  /**\n   * Keeps track of whether or not the filters popover box is visible or not\n   */\n  filtersVisible = false;\n\n  /**\n   * Toggles filter visible\n   */\n  toggleFilterVisible(): void {\n    this.filtersVisible = !this.filtersVisible;\n  }\n\n  /**\n   * Hides the filters popover box\n   */\n  removeBox(): void {\n    this.filtersVisible = false;\n  }\n\n  /**\n   * Emits the current filters, and hides the popover box\n   * @param filters The object containing all the currently set filters\n   */\n  applyFilters(filters: Record): void {\n    this.filters = filters;\n    this.filtersChange.emit(filters);\n    this.removeBox();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./filters-popover.component.scss\n                \n                .filters-popover {\n  position: inherit;\n\n  &.expanded {\n    position: relative;\n\n    .popup-container {\n      right: inherit;\n    }\n\n    .popup-body {\n      padding-left: 4em !important;\n    }\n  }\n}\n\n.popup-container {\n  position: absolute;\n  border-width: 0px;\n  border-style: solid;\n  width: 0em;\n  height: 16.5rem; // 22.5rem\n  z-index: 5;\n  top: 0;\n  right: 24rem;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  transition-property: width;\n  transition-duration: 0.3s;\n\n  .popup-body {\n    position: relative;\n    opacity: 0;\n    transition-property: opacity;\n    transition-duration: 0s;\n    transition-delay: 0s;\n  }\n\n  &.visible {\n    width: 35rem;\n    border-width: 1px;\n\n    .popup-body {\n      padding: 1.5rem;\n      opacity: 1;\n      transition-delay: 0.3s;\n      transition-duration: 0.3s;\n    }\n  }\n}\n\n.show-hide {\n  width: 3rem;\n  height: 3rem;\n  background: none;\n  border: none;\n  z-index: 10;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersPopoverModule.html":{"url":"modules/FiltersPopoverModule.html","title":"module - FiltersPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_imports\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/filters/filters-popover/filters-popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FiltersContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FiltersContentModule } from '../filters-content/filters-content.module';\nimport { FiltersPopoverComponent } from './filters-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FiltersContentModule],\n  declarations: [FiltersPopoverComponent],\n  exports: [FiltersPopoverComponent]\n})\nexport class FiltersPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlatNode.html":{"url":"classes/FlatNode.html","title":"class - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/flat-node.ts\n        \n\n            \n                Description\n            \n            \n                Node type used by ontology tree component.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    expandable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(original: OntologyNode, level: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/flat-node.ts:29\n                            \n                        \n\n                \n                    \n                            Creates an instance of flat node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        original\n                                                  \n                                                        \n                                                                        OntologyNode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The original ontology node object.\n\n                                                        \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The level of the new flat node in the tree.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(original: OntologyNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/flat-node.ts:27\n                \n            \n\n\n            \n                \n                    Creates a flat node from a ontology node object and a level in the tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original ontology node object.\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The level of the new flat node in the tree.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlatNode\n\n                    \n                    \n                        The newly created flat node.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/models/flat-node.ts:11\n                                \n                            \n                    \n                        \n                                Gets this node's label.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expandable\n                    \n                \n\n                \n                    \n                        getexpandable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/models/flat-node.ts:16\n                                \n                            \n                    \n                        \n                                Indicates whether this node has children.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { OntologyNode } from './ontology-node';\n\n\n/**\n * Node type used by ontology tree component.\n */\nexport class FlatNode {\n  /**\n   * Gets this node's label.\n   */\n  get label(): string { return this.original.label; }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean {\n    return this.original.children.length > 0;\n  }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(readonly original: OntologyNode, readonly level: number) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header which is always displayed on the site; contains current filter info,\na link to download data, and a logo which resets the page when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hubmapPortalUrl\n                            \n                            \n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                downloadClicked\n                            \n                            \n                                refreshClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/header/header.component.ts:28\n                            \n                        \n                \n                    \n                        Current filter settings\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapPortalUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/header/header.component.ts:18\n                            \n                        \n                \n                    \n                        URL to Hubmap Portal site\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedIn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/header/header.component.ts:23\n                            \n                        \n                \n                    \n                        Is the user logged in?\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        downloadClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/header/header.component.ts:38\n                            \n                        \n                \n                    \n                        Emitted when download button is clicked\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/header/header.component.ts:33\n                            \n                        \n                \n                    \n                        Emitted when refresh button is clicked\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Header which is always displayed on the site; contains current filter info,\n * a link to download data, and a logo which resets the page when clicked.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n\n  /**\n   * URL to Hubmap Portal site\n   */\n  @Input() hubmapPortalUrl: string;\n\n  /**\n   * Is the user logged in?\n   */\n  @Input() loggedIn: boolean;\n\n  /**\n   * Current filter settings\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emitted when refresh button is clicked\n   */\n  @Output() refreshClicked = new EventEmitter();\n\n  /**\n   * Emitted when download button is clicked\n   */\n  @Output() downloadClicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n  \n    Sex: {{filters?.sex}}\n    Age: {{filters?.ageRange[0]}}-{{filters?.ageRange[1]}}\n    BMI: {{filters?.bmiRange[0]}}-{{filters?.bmiRange[1]}}\n  \n\n  refresh\n\n  \n    \n      cloud_download\n    \n  \n  \n\n  Login\n  Logout\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .ccf-header {\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  display: flex;\n\n  .logo {\n    width: 6rem;\n  }\n\n  .download {\n    height: 1.5rem;\n  }\n\n  // Styled to match the HuBMAP Portal\n  .authentication {\n    width: 8.25rem;\n    border-radius: 2px;\n  }\n\n  .logo, .download, .refresh {\n    display: flex;\n    align-items: center;\n    transition: color 1s;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  :not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n\n  .filter-labels {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    font: 400 16px/20px Inter, sans-serif;\n  }\n\n  ::ng-deep ccf-info-button {\n    height: 2rem;\n    width: 2rem;\n    display: flex;\n    justify-content: center;\n    .mat-icon {\n      height: 2rem;\n      width: 2rem;\n      font-size: 2rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Sex: {{filters?.sex}}    Age: {{filters?.ageRange[0]}}-{{filters?.ageRange[1]}}    BMI: {{filters?.bmiRange[0]}}-{{filters?.bmiRange[1]}}    refresh            cloud_download          Login  Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoButtonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { InfoButtonModule } from '../../modules/info/info-button/info-button.module';\nimport { HeaderComponent } from './header.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule, MatTooltipModule, InfoButtonModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HuBMAPEntity.html":{"url":"classes/HuBMAPEntity.html","title":"class - HuBMAPEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HuBMAPEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/hubmap/hubmap-data.ts\n        \n\n            \n                Description\n            \n            \n                A HuBMAP Entity derived from raw data coming from the search-api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                age\n                            \n                            \n                                ancestors\n                            \n                            \n                                assayTypes\n                            \n                            \n                                    Public\n                                assetsApi\n                            \n                            \n                                    Optional\n                                bmi\n                            \n                            \n                                containsHumanGeneticSequences\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                dataTypes\n                            \n                            \n                                descendants\n                            \n                            \n                                description\n                            \n                            \n                                doi\n                            \n                            \n                                donor\n                            \n                            \n                                entityType\n                            \n                            \n                                    Optional\n                                ethnicity\n                            \n                            \n                                groupName\n                            \n                            \n                                groupUUID\n                            \n                            \n                                id\n                            \n                            \n                                imageProviders\n                            \n                            \n                                images\n                            \n                            \n                                label\n                            \n                            \n                                ontologyTerms\n                            \n                            \n                                organ\n                            \n                            \n                                organName\n                            \n                            \n                                organSample\n                            \n                            \n                                portalUrl\n                            \n                            \n                                protocolUrl\n                            \n                            \n                                resultType\n                            \n                            \n                                resultUrl\n                            \n                            \n                                    Optional\n                                sex\n                            \n                            \n                                    Optional\n                                spatialEntity\n                            \n                            \n                                spatialOrBulk\n                            \n                            \n                                thumbnailUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJsonLd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: JsonDict, assetsApi: string, portalUrl: string, serviceToken?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:133\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        JsonDict\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assetsApi\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        portalUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ancestors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JsonDict[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            assayTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assetsApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bmi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            containsHumanGeneticSequences\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JsonDict\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descendants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JsonDict[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            donor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JsonDict\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"Donor\" | \"Sample\" | \"Dataset\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ethnicity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupUUID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Iri[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            images\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Url[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:111\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ontologyTerms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Iri[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organ\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Iri\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organSample\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JsonDict\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            portalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Url\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            protocolUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Url\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resultType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:133\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resultUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"Male\" | \"Female\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            spatialEntity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JsonLd\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:126\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spatialOrBulk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"Spatial\" | \"Bulk\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:130\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnailUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:131\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonLd\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonLd()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/hubmap/hubmap-data.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     JsonLd\n\n                    \n                    \n                        the hubmap data in JSON-LD format\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Iri, JsonLd, Url } from 'jsonld/jsonld-spec';\nimport { get, omit, toNumber } from 'lodash';\nimport { addJsonLdToStore, N3Store } from 'triple-store-utils';\n\nimport { ccf, rui } from '../util/prefixes';\nimport { fixUflRuiLocation } from './hubmap-ufl-patch';\nimport { convertOldRuiToJsonLd, OldRuiData } from './old-rui-utils';\n\n\ntype JsonDict = { [key: string]: unknown };\nconst HBM_PREFIX = 'https://entity-api.hubmapconsortium.org/entities/';\n\nconst DR1_VU_THUMBS = new Set(['VAN0003-LK-32-21-AF_preIMS_registered_thumbnail.png', 'VAN0003-LK-32-21-IMS_NegMode_multilayer_thumbnail.png', 'VAN0003-LK-32-21-IMS_PosMode_multilayer_thumbnail.png', 'VAN0003-LK-32-21-PAS_registered_thumbnail.png', 'VAN0003-LK-32-22-AF_preMxIF_registered_thumbnail.png', 'VAN0003-LK-32-22-MxIF_cyc1_registered_thumbnail.png', 'VAN0003-LK-32-22-MxIF_cyc2_registered_thumbnail.png', 'VAN0003-LK-32-22-MxIF_cyc3_registered_thumbnail.png', 'VAN0005-RK-1-1-AF_preIMS_registered_thumbnail.png', 'VAN0005-RK-1-1-IMS_NegMode_multilayer_thumbnail.png', 'VAN0005-RK-1-1-IMS_PosMode_multilayer_thumbnail.png', 'VAN0005-RK-1-1-PAS_registered_thumbnail.png', 'VAN0005-RK-4-172-AF_preIMS_registered_thumbnail.png', 'VAN0005-RK-4-172-IMS_NegMode_multilayer_thumbnail.png', 'VAN0005-RK-4-172-IMS_PosMode_multilayer_thumbnail.png', 'VAN0005-RK-4-172-PAS_registered_thumbnail.png', 'VAN0006-LK-2-85-AF_preIMS_registered_thumbnail.png', 'VAN0006-LK-2-85-IMS_NegMode_multilayer_thumbnail.png', 'VAN0006-LK-2-85-IMS_PosMode_multilayer_thumbnail.png', 'VAN0006-LK-2-85-PAS_registered_thumbnail.png', 'VAN0006-LK-2-86-AF_preMxIF_registered_thumbnail.png', 'VAN0006-LK-2-86-MxIF_cyc1_registered_thumbnail.png', 'VAN0006-LK-2-86-MxIF_cyc2_registered_thumbnail.png', 'VAN0006-LK-2-86-MxIF_cyc3_registered_thumbnail.png', 'VAN0007-LK-203-103-AF_preIMS_registered_thumbnail.png', 'VAN0007-LK-203-103-IMS_NegMode_multilayer_thumbnail.png', 'VAN0007-LK-203-103-IMS_PosMode_multilayer_thumbnail.png', 'VAN0007-LK-203-103-PAS_registered_thumbnail.png', 'VAN0008-RK-403-100-AF_preIMS_registered_thumbnail.png', 'VAN0008-RK-403-100-IMS_NegMode_multilayer_thumbnail.png', 'VAN0008-RK-403-100-IMS_PosMode_multilayer_thumbnail.png', 'VAN0008-RK-403-100-PAS_registered_thumbnail.png', 'VAN0008-RK-403-101-AF_preMxIF_registered_thumbnail.png', 'VAN0008-RK-403-101-MxIF_cyc1_registered_thumbnail.png', 'VAN0008-RK-403-101-MxIF_cyc2_registered_thumbnail.png', 'VAN0008-RK-403-101-MxIF_cyc3_registered_thumbnail.png', 'VAN0011-RK-3-10-AF_preIMS_registered_thumbnail.png', 'VAN0011-RK-3-10-IMS_NegMode_multilayer_thumbnail.png', 'VAN0011-RK-3-10-IMS_PosMode_multilayer_thumbnail.png', 'VAN0011-RK-3-10-PAS_registered_thumbnail.png', 'VAN0011-RK-3-11-AF_preMxIF_registered_thumbnail.png', 'VAN0011-RK-3-11-MxIF_cyc1_registered_thumbnail.png', 'VAN0011-RK-3-11-MxIF_cyc2_registered_thumbnail.png', 'VAN0011-RK-3-11-MxIF_cyc3_registered_thumbnail.png', 'VAN0012-RK-103-75-AF_preIMS_registered_thumbnail.png', 'VAN0012-RK-103-75-IMS_NegMode_multilayer_thumbnail.png', 'VAN0012-RK-103-75-IMS_PosMode_multilayer_thumbnail.png', 'VAN0012-RK-103-75-PAS_registered_thumbnail.png', 'VAN0012-RK-103-76-AF_preMxIF_registered_thumbnail.png', 'VAN0012-RK-103-76-MxIF_cyc1_registered_thumbnail.png', 'VAN0012-RK-103-76-MxIF_cyc2_registered_thumbnail.png', 'VAN0012-RK-103-76-MxIF_cyc3_registered_thumbnail.png']);\n\n/** UUID to TMC mapping. */\nconst GROUP_UUID_MAPPING: { [uuid: string]: string } = {\n  '03b3d854-ed44-11e8-8bce-0e368f3075e8': 'TMC-UCSD',\n  '07a29e4c-ed43-11e8-b56a-0e8017bdda58': 'TMC-Florida',\n  '308f5ffc-ed43-11e8-b56a-0e8017bdda58': 'TMC-CalTech',\n  '5bd084c8-edc2-11e8-802f-0e368f3075e8': 'HBM-TestingGroup',\n  '73bb26e4-ed43-11e8-8f19-0a7c1eab007a': 'TMC-Vanderbilt',\n  'def5fd76-ed43-11e8-b56a-0e8017bdda58': 'TMC-Stanford'\n};\n\nfunction createRuiOrganLookup(): { [organName: string]: string } {\n  const lookup: { [organName: string]: string } = {};\n  Object.entries(rui).forEach(([k, v]) => lookup[k] = v.id);\n  return lookup;\n}\n\n/** RUI organ name to entity identifier. */\nconst RUI_ORGANS: { [organName: string]: string } = createRuiOrganLookup();\n\n// Taken from: https://github.com/hubmapconsortium/commons/blob/master/hubmap_commons/hubmap_const.py#L101\n/** HBM organ names to set of RUI organs. */\nconst HBM_ORGANS: { [organName: string]: string[] } = {\n  BL: [RUI_ORGANS.body, RUI_ORGANS.bladder],\n  RK: [RUI_ORGANS.body, RUI_ORGANS.kidney, RUI_ORGANS.right_kidney],\n  LK: [RUI_ORGANS.body, RUI_ORGANS.kidney, RUI_ORGANS.left_kidney],\n  HT: [RUI_ORGANS.body, RUI_ORGANS.heart],\n  LI: [RUI_ORGANS.body, RUI_ORGANS.colon], // large_intestine\n  SI: [RUI_ORGANS.body, RUI_ORGANS.small_instestine],\n  LL: [RUI_ORGANS.body, RUI_ORGANS.lung, RUI_ORGANS.left_lung],\n  RL: [RUI_ORGANS.body, RUI_ORGANS.lung, RUI_ORGANS.right_lung],\n  LY: [RUI_ORGANS.body, RUI_ORGANS.lymph_node],\n  SP: [RUI_ORGANS.body, RUI_ORGANS.spleen],\n  TH: [RUI_ORGANS.body, RUI_ORGANS.thymus],\n  UR: [RUI_ORGANS.body, RUI_ORGANS.ureter],\n  LV: [RUI_ORGANS.body, RUI_ORGANS.liver],\n  OT: [RUI_ORGANS.body], // other_organ\n};\n\n/** HBM organ names to display name. */\nconst HBM_ORGAN_LABELS: { [organName: string]: string } = {\n  BL: 'Bladder',\n  RK: 'Right Kidney',\n  LK: 'Left Kidney',\n  HT: 'Heart',\n  LI: 'Large Intestine',\n  SI: 'Small Intestine',\n  LL: 'Left Lung',\n  RL: 'Right Lung',\n  LY: 'Lymph Node',\n  SP: 'Spleen',\n  TH: 'Thymus',\n  UR: 'Ureter',\n  LV: 'Liver',\n  OT: 'Other Organ',\n};\n\n/**\n * Converts a hubmap response object into JsonLd.\n *\n * @param data The hubmap data.\n * @returns The converted data.\n */\nexport function hubmapResponseAsJsonLd(data: object, assetsApi = '', portalUrl = '', serviceToken?: string): JsonLd {\n  const entries = (get(data, 'hits.hits', []) as JsonDict[])\n    .map(e => get(e, '_source', {}) as { [key: string]: unknown });\n\n  return {\n    '@context': {\n      '@vocab': 'http://purl.org/ccf/latest/ccf-entity.owl#',\n      ontologyTerms: { '@type': '@id' },\n      ancestors: { '@type': '@id' },\n      descendants: { '@type': '@id' },\n      organ: { '@type': '@id' },\n      images: { '@id': 'hasImage', '@type': '@id' },\n      imageProviders: { '@id': 'hasImageProvider', '@type': '@id'}\n    },\n    '@graph': entries.map(e => new HuBMAPEntity(e, assetsApi, portalUrl, serviceToken).toJsonLd())\n  };\n}\n\n/**\n * A HuBMAP Entity derived from raw data coming from the search-api.\n */\nexport class HuBMAPEntity {\n  donor: JsonDict;\n  organSample: JsonDict;\n  ancestors: JsonDict[];\n  descendants: JsonDict[];\n\n  id: string;\n  entityType: 'Donor' | 'Sample' | 'Dataset';\n\n  sex?: 'Male' | 'Female';\n  age?: number;\n  bmi?: number;\n  ethnicity?: string;\n  label: string;\n  description: string;\n  doi: string;\n\n  groupUUID: string;\n  groupName: string;\n  protocolUrl: Url;\n  portalUrl: Url;\n\n  images: Url[];\n  imageProviders: Iri[];\n\n  ontologyTerms: Iri[];\n  organ: Iri;\n  organName: string;\n  spatialEntity?: JsonLd;\n  dataTypes: string[];\n  assayTypes: string[];\n  containsHumanGeneticSequences: boolean;\n  spatialOrBulk: 'Spatial' | 'Bulk';\n  thumbnailUrl: string;\n  resultUrl: string;\n  resultType: string;\n\n  constructor(public data: JsonDict, public assetsApi = '', portalUrl = '', serviceToken?: string) {\n    this.id = this.data.uuid as string;\n    this.entityType = this.data.entity_type as 'Donor' | 'Sample' | 'Dataset';\n\n    this.ancestors = (this.data.ancestors || []) as JsonDict[];\n    this.descendants = (this.data.descendants || []) as JsonDict[];\n\n    if (this.entityType === 'Donor') {\n      this.donor = data;\n    } else {\n      this.donor = this.ancestors.find(e => e.entity_type === 'Donor') as JsonDict;\n    }\n    if (this.entityType === 'Sample' && data.specimen_type === 'organ') {\n      this.organSample = data;\n    } else {\n      this.organSample = this.ancestors.find(e => e.entity_type === 'Sample' && e.specimen_type === 'organ') as JsonDict;\n    }\n\n    const donorDescription = (this.donor.description as string || '').toLowerCase();\n    let sex: 'Male' | 'Female' | undefined;\n    if (donorDescription.includes('female')) {\n      sex = 'Female';\n    } else if (donorDescription.includes('male')) {\n      sex = 'Male';\n    }\n    const ageMatch = donorDescription.match(/age\\ ([0-9]+)/);\n    let age: number | undefined;\n    if (ageMatch) {\n      age = toNumber(ageMatch[1]);\n    }\n    let bmi: number | undefined;\n    let ethnicity: string | undefined;\n    for (const md of get(this.donor, 'metadata.organ_donor_data', []) as JsonDict[]) {\n      if (md.preferred_term === 'Feminine gender' || md.preferred_term === 'Female') {\n        sex = 'Female';\n      } else if (md.preferred_term === 'Masculine gender' || md.preferred_term === 'Male') {\n        sex = 'Male';\n      } else if (md.preferred_term === 'Current chronological age' || md.preferred_term === 'Age') {\n        age = toNumber(md.data_value);\n      } else if (md.preferred_term === 'Body mass index') {\n        bmi = toNumber(md.data_value);\n      } else if (md.grouping_concept_preferred_term === 'Racial group' || md.grouping_concept_preferred_term === 'Race') {\n        ethnicity = md.preferred_term as string;\n      }\n    }\n    let label = '';\n    if (sex && age) {\n      label += `${sex}, Age ${age}`;\n      if (bmi) {\n        label += `, BMI ${bmi.toFixed(1)}`;\n      }\n    }\n\n    this.age = age;\n    this.sex = sex;\n    this.bmi = bmi;\n    this.ethnicity = ethnicity;\n    this.label = label;\n\n    this.doi = data.display_doi as string;\n    this.description = data.description as string;\n\n    const groupUUID = this.groupUUID = (data.group_uuid || this.donor.group_uuid) as string;\n    this.groupName = (GROUP_UUID_MAPPING[groupUUID] || data.group_name || this.donor.group_name) as string;\n    this.organName = [ data, ...this.ancestors, ...this.descendants ]\n      .map((d) => d.organ as string)\n      .find((organ) => !!organ) as string;\n    this.ontologyTerms = HBM_ORGANS[this.organName] || [RUI_ORGANS.body];\n    this.organ = this.ontologyTerms[this.ontologyTerms.length - 1];\n    this.protocolUrl = this.donor.protocol_url as string;\n\n    let ruiLocation = (data.rui_location || this.ancestors[0].rui_location) as OldRuiData;\n    if (ruiLocation) {\n      // RUI Location may come in as an unparsed string\n      if (typeof ruiLocation === 'string') {\n        ruiLocation = JSON.parse(ruiLocation as string) as OldRuiData;\n      }\n      if (groupUUID === '07a29e4c-ed43-11e8-b56a-0e8017bdda58') { // UFL\n        ruiLocation = fixUflRuiLocation(ruiLocation, data);\n      }\n      let refOrganId: string | undefined;\n      if (this.organ === RUI_ORGANS.left_kidney) {\n        refOrganId = ccf.x('VHLeftKidney').id;\n      } else if (this.organ === RUI_ORGANS.right_kidney) {\n        refOrganId = ccf.x('VHRightKidney').id;\n      }\n      this.spatialEntity = convertOldRuiToJsonLd(ruiLocation, 'SpatialEntity for ' + this.label, refOrganId);\n    }\n\n    // Find TIFF Images for use in the HuBMAP Tissue Viewer\n    let images: Url[] = [];\n    const imageProviders: Iri[] = [];\n    for (const d of [ data, ...this.ancestors, ...this.descendants ]) {\n      const tiffs = (get(d, 'metadata.files', []) as {rel_path: string}[])\n        .filter(f => /\\.(ome\\.tif|ome\\.tiff)$/.test(f.rel_path))\n        .map(f => `${this.assetsApi}/${d.uuid}/${f.rel_path}` + (serviceToken ? `?token=${serviceToken}` : ''));\n      if (tiffs.length > 0) {\n        images = images.concat(tiffs);\n        imageProviders.push(HBM_PREFIX + d.uuid);\n      }\n    }\n    if (images.length > 0) {\n      this.images = images;\n      this.imageProviders = imageProviders;\n    }\n\n    const dataTypes = new Set();\n    const assayTypes = new Set();\n    let containsSequence = false;\n    for (const e of [...this.ancestors, data, ...this.descendants] as JsonDict[]) {\n      (e.data_types as string[] || []).forEach(t => dataTypes.add(t));\n      const assayType = (e as {metadata: { metadata: JsonDict }}).metadata?.metadata?.assay_type as string;\n      if (assayType) {\n        assayTypes.add(assayType);\n      }\n      if (e.contains_human_genetic_sequences === 'yes') {\n        containsSequence = true;\n      }\n    }\n    this.containsHumanGeneticSequences = containsSequence;\n    this.dataTypes = [...dataTypes].sort();\n    this.assayTypes = [...assayTypes].sort();\n\n    const typesSearch = [ ...dataTypes, ...assayTypes].map(l => l.toLowerCase()).join('|');\n    if (typesSearch.indexOf('10x') !== -1) {\n      this.thumbnailUrl = 'assets/icons/ico-bulk-10x.svg';\n      this.spatialOrBulk = 'Bulk';\n    } else if (typesSearch.indexOf('af') !== -1) {\n      this.thumbnailUrl = 'assets/icons/ico-spatial-af.svg';\n      this.spatialOrBulk = 'Spatial';\n    } else if (typesSearch.indexOf('codex') !== -1) {\n      this.thumbnailUrl = 'assets/icons/ico-spatial-codex.svg';\n      this.spatialOrBulk = 'Spatial';\n    } else if (typesSearch.indexOf('imc') !== -1) {\n      this.thumbnailUrl = 'assets/icons/ico-spatial-imc.svg';\n      this.spatialOrBulk = 'Spatial';\n    } else if ((typesSearch.indexOf('lc') !== -1) && (typesSearch.indexOf('af') === -1)) {\n      this.thumbnailUrl = 'assets/icons/ico-bulk-lc.svg';\n      this.spatialOrBulk = 'Bulk';\n    } else {\n      this.thumbnailUrl = 'assets/icons/ico-unknown.svg';\n      this.spatialOrBulk = 'Bulk';\n    }\n\n    this.portalUrl = `${portalUrl}browse/sample/${this.id}`;\n\n    if (images.length > 0 && typesSearch.indexOf('codex') === -1) {\n      this.resultUrl = images[0];\n      this.resultType = 'image_viewer';\n      this.thumbnailUrl = 'assets/histology3.jpg';\n      if (groupUUID === '73bb26e4-ed43-11e8-8f19-0a7c1eab007a') { // VU\n        const thumb = this.resultUrl.split('/').slice(-1)[0].split('?')[0].replace('.ome.tif', '_thumbnail.png');\n        if (DR1_VU_THUMBS.has(thumb)) {\n          this.thumbnailUrl = `assets/thumbnails/DR1-VU/${thumb}`;\n        }\n      }\n    } else {\n      this.resultUrl = this.portalUrl;\n      this.resultType = 'external_link';\n    }\n  }\n\n  /**\n   * @returns the hubmap data in JSON-LD format\n   */\n  toJsonLd(): JsonLd {\n    const data = this.data;\n    return {\n      '@id': HBM_PREFIX + this.id,\n      '@type': 'Entity',\n      ...omit(this, [\n        'data', 'donor', 'organ_sample', 'ancestors', 'descendants', 'assetsApi'\n      ]),\n      donor: HBM_PREFIX + this.donor.uuid,\n      shortInfo0: this.doi,\n      shortInfo1: this.groupName,\n      shortInfo2: data.description || this.donor.description,\n      downloadUrl: this.portalUrl,\n      downloadTooltip: 'View in the HuBMAP Data Portal',\n\n      // image viewer metadata\n      organName: HBM_ORGAN_LABELS[this.organName] || this.organName,\n      sex: this.sex,\n      age: this.age,\n      bmi: this.bmi?.toFixed(1),\n      ethnicity: this.ethnicity,\n      authorGroup: this.groupName,\n      creator: data.created_by_user_displayname,\n      creation_date: new Date(data.create_timestamp as number || 0).toLocaleDateString(),\n      modified_date: new Date(data.last_modified_timestamp as number || 0).toLocaleDateString(),\n      donor_id: this.donor.display_doi,\n      organ_id: this.organSample.display_doi,\n      tissue_id: this.doi,\n      specimen_type: this.data.specimen_type,\n      data_types: this.dataTypes.join(', '),\n      assay_types: this.assayTypes.join(', '),\n      spatial_bulk: this.spatialOrBulk,\n      contains_sequence: this.containsHumanGeneticSequences ? 'Yes' : 'No',\n      description: data.description || this.donor.description,\n    };\n  }\n}\n\n/**\n * Adds hubmap data from a url to the triple store.\n *\n * @param store The triple store.\n * @param dataUrl The data url.\n * @param serviceType The service type.\n */\nexport async function addHubmapDataToStore(\n  store: N3Store, dataUrl: string, serviceType: 'static' | 'search-api', serviceToken?: string, assetsApi = '', portalUrl = ''\n): Promise {\n  let hubmapData: object | undefined;\n  if (serviceType === 'static') {\n    hubmapData = await fetch(dataUrl).then(r => r.ok ? r.json() : undefined).catch(() => {}) as object;\n  } else if (serviceType === 'search-api') {\n    const headers: Record = { 'Content-type': 'application/json' };\n    if (serviceToken && serviceToken.length > 0) {\n      headers.Authorization = `Bearer ${serviceToken}`;\n    }\n    hubmapData = await fetch(dataUrl, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({\n        version: true,\n        size: 10000,\n        _source: {\n          excludes: ['donor', 'immediate_ancestors', 'immediate_descendants', 'origin_sample', 'ancestor_ids', 'descendant_ids']\n        },\n        stored_fields: ['*'],\n        script_fields: {},\n        docvalue_fields: [],\n        query: { exists: { field: 'rui_location' } }\n      })\n    }).then(r => r.ok ? r.json() : undefined).catch(() => {}) as object;\n  }\n  if (hubmapData) {\n    await addJsonLdToStore(hubmapResponseAsJsonLd(hubmapData, assetsApi, portalUrl, serviceToken), store);\n  } else {\n    console.warn(`Unable to load ${dataUrl} as HuBMAP Data`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getArguments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/store/icon-registry/icon-registry.state.ts:120\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown[]\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMethodName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/store/icon-registry/icon-registry.state.ts:106\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerIcon\n                        \n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/icon-registry/icon-registry.state.ts:72\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerIconImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/store/icon-registry/icon-registry.state.ts:82\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdObject.html":{"url":"interfaces/IdObject.html","title":"interface - IdObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IdObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@id' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@id' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageViewer.html":{"url":"classes/ImageViewer.html","title":"class - ImageViewer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageViewer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channelConfigs\n                            \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _loaders\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                deck\n                            \n                            \n                                    Protected\n                                layerConfigs\n                            \n                            \n                                    Protected\n                                layers\n                            \n                            \n                                    Readonly\n                                props\n                            \n                            \n                                    Protected\n                                states\n                            \n                            \n                                    Protected\n                                views\n                            \n                            \n                                    Protected\n                                vivViews\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createVivViews\n                            \n                            \n                                finalize\n                            \n                            \n                                    Private\n                                initializeDeck\n                            \n                            \n                                    Private\n                                layerFilter\n                            \n                            \n                                    Private\n                                onViewStateChange\n                            \n                            \n                                    Private\n                                resetChannelConfigs\n                            \n                            \n                                    Async\n                                setSize\n                            \n                            \n                                    Async\n                                setSources\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Async\n                                updateChannelConfigs\n                            \n                            \n                                    Protected\n                                updateDeckProps\n                            \n                            \n                                    Protected\n                                updateLayers\n                            \n                            \n                                    Protected\n                                updateState\n                            \n                            \n                                    Protected\n                                updateViews\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    sources\n                                \n                                \n                                    loaders\n                                \n                                \n                                    channelNames\n                                \n                                \n                                    channelConfigs\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Props)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:86\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    Props\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _channelConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Loader[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayerConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Layer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            props\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            vivViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VivView[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:80\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalize\n                        \n                        \n                    \n                \n            \n            \n                \nfinalize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeDeck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDeck(props)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Deck\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            layerFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerFilter(undefined: LayerFilterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LayerFilterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewStateChange(undefined: OnViewStateChangeArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OnViewStateChangeArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChannelConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize(width: number, height: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSources(sources: DataSource[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            DataSource[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChannelConfigs(configs: Record>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Record>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateDeckProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDeckProps(props: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(args: ValueOrGenerator | >)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ValueOrGenerator | >\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n\n                \n                    \n                        getsources()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loaders\n                    \n                \n\n                \n                    \n                        getloaders()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        channelNames\n                    \n                \n\n                \n                    \n                        getchannelNames()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        channelConfigs\n                    \n                \n\n                \n                    \n                        getchannelConfigs()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:77\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerAccordionComponent.html":{"url":"components/ImageViewerAccordionComponent.html","title":"component - ImageViewerAccordionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerAccordionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts\n\n\n    \n        Description\n    \n    \n        Expandable accordion panel for the image viewer\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-accordion\n            \n\n            \n                styleUrls\n                ./image-viewer-accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                            \n                                metadata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:25\n                            \n                        \n                \n                    \n                        The list of layers used to render this and child components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metadata\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:20\n                            \n                        \n                \n                    \n                        Metadata of image to be displayed in the About panel\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:30\n                            \n                        \n                \n                    \n                        Output to pass up the changes made to the layers to parent components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:33\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.  \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme } from '../../color-scheme/color-schemes';\n\n\n/**\n * Expandable accordion panel for the image viewer\n */\n@Component({\n  selector: 'ccf-image-viewer-accordion',\n  templateUrl: './image-viewer-accordion.component.html',\n  styleUrls: ['./image-viewer-accordion.component.scss']\n})\nexport class ImageViewerAccordionComponent {\n\n  /**\n   * Metadata of image to be displayed in the About panel\n   */\n  @Input() metadata: { label: string; value: string; }[];\n\n  /**\n   * The list of layers used to render this and child components\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Output to pass up the changes made to the layers to parent components\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /** Emits when the default scheme has changed.  */\n  @Output() schemeChange = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n      Layers\n    \n    \n  \n\n  \n    \n      About\n    \n    \n      \n        {{ entry.label }}:\n        {{ entry.value }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-accordion.component.scss\n                \n                .mat-expansion-panel {\n  margin-left: 1.5rem;\n  margin-right: 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  border-radius: 0 !important;\n  position: unset;\n\n  .mat-expansion-panel-header {\n    padding: 0;\n\n    mat-panel-title {\n      font-weight: bold;\n    }\n\n    ::ng-deep .mat-expansion-indicator {\n      position: relative;\n      right: 1em;\n    }\n  }\n\n  .data-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    font-size: 0.75rem;\n\n    .data-entry {\n      display: flex;\n      text-overflow: ellipsis;\n      justify-content: center;\n      margin-bottom: .25rem;\n\n      .label,\n      .value {\n        display: flex;\n        height: 1rem;\n        line-height: 1rem;\n      }\n\n      .label {\n        justify-content: flex-end;\n        width: 50%;\n      }\n\n      .value {\n        justify-content: flex-start;\n        margin-left: 1rem;\n        width: 50%;\n        flex-wrap: wrap;\n        height: 100%;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Layers                      About                      {{ entry.label }}:        {{ entry.value }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerAccordionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerAccordionModule.html":{"url":"modules/ImageViewerAccordionModule.html","title":"module - ImageViewerAccordionModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerAccordionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerAccordionModule\n\n\n\ncluster_ImageViewerAccordionModule_declarations\n\n\n\ncluster_ImageViewerAccordionModule_imports\n\n\n\ncluster_ImageViewerAccordionModule_exports\n\n\n\n\nImageViewerAccordionComponent\n\nImageViewerAccordionComponent\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule -->\n\nImageViewerAccordionComponent->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent  -->\n\nImageViewerAccordionModule->ImageViewerAccordionComponent \n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerAccordionModule -->\n\nImageViewerLayersModule->ImageViewerAccordionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerAccordionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImageViewerLayersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerAccordionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\nimport { ImageViewerAccordionComponent } from './image-viewer-accordion.component';\nimport { ImageViewerLayersModule } from '../image-viewer-layers/image-viewer-layers.module';\n\n\n@NgModule({\n  imports: [CommonModule, MatExpansionModule, ImageViewerLayersModule],\n  declarations: [ImageViewerAccordionComponent],\n  exports: [ImageViewerAccordionComponent]\n})\nexport class ImageViewerAccordionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerContentComponent.html":{"url":"components/ImageViewerContentComponent.html","title":"component - ImageViewerContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts\n\n\n    \n        Description\n    \n    \n        Content for the image viewer sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-content\n            \n\n            \n                styleUrls\n                ./image-viewer-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeViewer\n                            \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ImageViewerData\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:21\n                            \n                        \n                \n                    \n                        Image data to be displayed in the sidebar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:26\n                            \n                        \n                \n                    \n                        The list of layers used to render this and child components\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeViewer\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:31\n                            \n                        \n                \n                    \n                        Emits closeViewer on close button click\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:36\n                            \n                        \n                \n                    \n                        Output to pass up the changes made to the layers to parent components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:39\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.  \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:44\n                \n            \n\n\n            \n                \n                    Hides the viewer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ImageViewerData } from 'ccf-database';\n\nimport { ColorScheme } from '../../../core/models/color-scheme';\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\n/**\n * Content for the image viewer sidebar\n */\n@Component({\n  selector: 'ccf-image-viewer-content',\n  templateUrl: './image-viewer-content.component.html',\n  styleUrls: ['./image-viewer-content.component.scss']\n})\nexport class ImageViewerContentComponent {\n\n  /**\n   * Image data to be displayed in the sidebar\n   */\n  @Input() data: ImageViewerData;\n\n  /**\n   * The list of layers used to render this and child components\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Emits closeViewer on close button click\n   */\n  @Output() closeViewer = new EventEmitter();\n\n  /**\n   * Output to pass up the changes made to the layers to parent components\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /** Emits when the default scheme has changed.  */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Hides the viewer\n   */\n  close(): void {\n    this.closeViewer.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n  \n  \n    {{ data.organName }}\n    {{ data.label }}\n  \n  \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-content.component.scss\n                \n                .viewer-sidebar {\n  .viewer-close-header {\n    display: flex;\n    justify-content: flex-end;\n    height: 3rem;\n    padding-right: 1.5rem;\n    padding-left: 1.5rem;\n    \n    .viewer-close-button {\n      border: none;\n      padding: 0;\n      background: inherit;\n      cursor: pointer;\n    }\n  }\n}\n  \n.sample-info {\n  padding-right: 1.5rem;\n  padding-left: 1.5rem;\n  padding-top: 1.5rem;\n  padding-bottom: 1rem;\n  \n  .sample-region {\n    font-weight: bold;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close            {{ data.organName }}    {{ data.label }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerContentModule.html":{"url":"modules/ImageViewerContentModule.html","title":"module - ImageViewerContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerContentModule\n\n\n\ncluster_ImageViewerContentModule_declarations\n\n\n\ncluster_ImageViewerContentModule_imports\n\n\n\ncluster_ImageViewerContentModule_exports\n\n\n\n\nImageViewerContentComponent\n\nImageViewerContentComponent\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerContentModule -->\n\nImageViewerContentComponent->ImageViewerContentModule\n\n\n\n\n\nImageViewerContentComponent \n\nImageViewerContentComponent \n\nImageViewerContentComponent  -->\n\nImageViewerContentModule->ImageViewerContentComponent \n\n\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerContentModule -->\n\nImageViewerAccordionModule->ImageViewerContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer-content/image-viewer-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImageViewerAccordionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ImageViewerAccordionModule } from '../image-viewer-accordion/image-viewer-accordion.module';\nimport { ImageViewerContentComponent } from './image-viewer-content.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, ImageViewerAccordionModule],\n  declarations: [ImageViewerContentComponent],\n  exports: [ImageViewerContentComponent]\n})\nexport class ImageViewerContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageViewerData.html":{"url":"interfaces/ImageViewerData.html","title":"interface - ImageViewerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageViewerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Data for image viewer display. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        metadata\n                                \n                                \n                                        organName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Other metadata. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Containing organ name. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageViewerLayer.html":{"url":"classes/ImageViewerLayer.html","title":"class - ImageViewerLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageViewerLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/image-viewer-layer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PureImageViewerLayer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightness\n                            \n                            \n                                color\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customizedColor\n                            \n                            \n                                defaultOrder\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                selected\n                            \n                            \n                                selectionOrder\n                            \n                            \n                                transparency\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrightness\n                            \n                            \n                                isDark\n                            \n                            \n                                isLight\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    background\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ImageViewerLayerArgs)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/image-viewer-layer.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ImageViewerLayerArgs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brightness\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [number, number]\n\n                        \n                    \n                    \n                        \n                            Default value : [20, 60]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customizedColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectionOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transparency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/image-viewer-layer.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrightness\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrightness()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/image-viewer-layer.ts:70\n                \n            \n\n\n            \n                \n                    Converts the layer's hex color code to RGB and calculates a value for the color brightness\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDark\n                        \n                        \n                    \n                \n            \n            \n                \nisDark()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/image-viewer-layer.ts:102\n                \n            \n\n\n            \n                \n                    Determines whether the color icon is dark enough to require a border (dark mode only)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLight\n                        \n                        \n                    \n                \n            \n            \n                \nisLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/image-viewer-layer.ts:95\n                \n            \n\n\n            \n                \n                    Determines whether the color icon is light enough to require a border (light mode only)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/models/image-viewer-layer.ts:47\n                                \n                            \n                    \n                        \n                                Dynamically creates a background style based on the layer's color or color scheme\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ColorScheme } from './color-scheme';\n\nexport interface PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number];\n  transparency: number;\n\n  selected: boolean;\n  customizedColor: boolean;\n  selectionOrder: number;\n  defaultOrder: number;\n}\n\nexport type ImageViewerLayerRequiredArgNames = 'id' | 'colorScheme';\nexport type ImageViewerLayerArgs =\n  Pick &\n  Partial>;\n\nexport class ImageViewerLayer implements PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number] = [20, 60];\n  transparency = 100;\n\n  selected = false;\n  customizedColor = false;\n  selectionOrder = 0;\n  defaultOrder = -1;\n\n  constructor(data: ImageViewerLayerArgs) {\n    Object.assign(this, {\n      label: data.id,\n      color: data.colorScheme.colors[0]\n    }, data);\n  }\n\n  /**\n   * Dynamically creates a background style based on the layer's color or color scheme\n   */\n  get background(): string {\n    if (this.colorScheme.type === 'discrete') {\n      return this.color;\n    }\n\n    const colors = this.colorScheme.colors;\n    const positions = this.colorScheme.positions;\n\n    let gradient = 'linear-gradient(to right, ';\n    colors.forEach((color, index) => {\n      gradient += `${color} ${positions[index] * 100}%`;\n      if (index  225 ? true : false;\n  }\n\n  /**\n   * Determines whether the color icon is dark enough to require a border (dark mode only)\n   */\n  isDark(): boolean {\n    return this.getBrightness() \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerLayersComponent.html":{"url":"components/ImageViewerLayersComponent.html","title":"component - ImageViewerLayersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerLayersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts\n\n\n    \n        Description\n    \n    \n        Component in charge of rendering list of the image layers along with the ability\nto choose which ones are to be showm and what display properties they have.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-layers\n            \n\n            \n                styleUrls\n                ./image-viewer-layers.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-layers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxOnChange\n                            \n                            \n                                layerChanged\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:21\n                            \n                        \n                \n                    \n                        The list of layers to be displayed which contain the styilng properties needed\nto make rendering decisions.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:26\n                            \n                        \n                \n                    \n                        A sorted list of selected layers containing information such as selectionOrder and colorScheme.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:31\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkboxOnChange\n                        \n                        \n                    \n                \n            \n            \n                \ncheckboxOnChange(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:49\n                \n            \n\n\n            \n                \n                    Function in charge of handling the layers' checkbox change events.  It keeps track of layers' selected\nand selectionOrder properties as well as emitting the updated layer list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the layer that needs updating based on the event passed with it.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            layerChanged\n                        \n                        \n                    \n                \n            \n            \n                \nlayerChanged(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:62\n                \n            \n\n\n            \n                \n                    This method captures changes to a layer's color options and updates the layers list accordingly\nbefore emitting the new set of active layers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the updated layer object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackById\n                        \n                        \n                    \n                \n            \n            \n                \ntrackById(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:39\n                \n            \n\n\n            \n                \n                    Used by ngFor to track changes across ImageViewerLayer instances.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The layer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The layer's unique id.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme } from '../../color-scheme/color-schemes';\n\n\n/**\n * Component in charge of rendering list of the image layers along with the ability\n * to choose which ones are to be showm and what display properties they have.\n */\n@Component({\n  selector: 'ccf-image-viewer-layers',\n  templateUrl: './image-viewer-layers.component.html',\n  styleUrls: ['./image-viewer-layers.component.scss']\n})\nexport class ImageViewerLayersComponent {\n  /**\n   * The list of layers to be displayed which contain the styilng properties needed\n   * to make rendering decisions.\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * A sorted list of selected layers containing information such as selectionOrder and colorScheme.\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /**\n   * Emits when the default scheme has changed.\n   */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Used by ngFor to track changes across ImageViewerLayer instances.\n   *\n   * @param layer The layer.\n   * @returns The layer's unique id.\n   */\n  trackById(layer: ImageViewerLayer): string {\n    return layer.id;\n  }\n\n  /**\n   * Function in charge of handling the layers' checkbox change events.  It keeps track of layers' selected\n   * and selectionOrder properties as well as emitting the updated layer list.\n   * @param event contains whether or not the layer was selected or unselected.\n   * @param layer is the layer that needs updating based on the event passed with it.\n   */\n  checkboxOnChange(layer: ImageViewerLayer): void {\n    this.layerChange.emit(new ImageViewerLayer({\n      ...layer,\n      selected: !layer.selected\n    }));\n  }\n\n  /**\n   * This method captures changes to a layer's color options and updates the layers list accordingly\n   * before emitting the new set of active layers.\n   * @param layer the updated layer object.\n   * @param referenceLayer the layer object before the changes, used for referencing which layer in the list to update.\n   */\n  layerChanged(layer: ImageViewerLayer): void {\n    this.layerChange.emit(layer);\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n      {{ layer.label }}\n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-layers.component.scss\n                \n                .layer {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  height: 1.5rem;\n}\n\n.hidden {\n    visibility: hidden !important;\n}\n\n.color-selector-placeholder {\n  height: 1rem;\n  width: 1rem;\n  border-radius: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ layer.label }}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerLayersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerLayersModule.html":{"url":"modules/ImageViewerLayersModule.html","title":"module - ImageViewerLayersModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerLayersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerLayersModule\n\n\n\ncluster_ImageViewerLayersModule_declarations\n\n\n\ncluster_ImageViewerLayersModule_imports\n\n\n\ncluster_ImageViewerLayersModule_exports\n\n\n\n\nImageViewerLayersComponent\n\nImageViewerLayersComponent\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerLayersModule -->\n\nImageViewerLayersComponent->ImageViewerLayersModule\n\n\n\n\n\nImageViewerLayersComponent \n\nImageViewerLayersComponent \n\nImageViewerLayersComponent  -->\n\nImageViewerLayersModule->ImageViewerLayersComponent \n\n\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nImageViewerLayersModule -->\n\nColorPickerLauncherModule->ImageViewerLayersModule\n\n\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nImageViewerLayersModule -->\n\nSchemeDropdownModule->ImageViewerLayersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerLayersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorPickerLauncherModule\n                        \n                        \n                            SchemeDropdownModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerLayersComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ImageViewerLayersComponent } from './image-viewer-layers.component';\nimport { SchemeDropdownModule } from '../../scheme-dropdown/scheme-dropdown.module';\nimport { ColorPickerLauncherModule } from '../../color-scheme/color-picker-launcher/color-picker-launcher.module';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule, ColorPickerLauncherModule, SchemeDropdownModule],\n  declarations: [ImageViewerLayersComponent],\n  exports: [ImageViewerLayersComponent]\n})\nexport class ImageViewerLayersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerLegendComponent.html":{"url":"components/ImageViewerLegendComponent.html","title":"component - ImageViewerLegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerLegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts\n\n\n    \n        Description\n    \n    \n        Legend in the image viewer displaying the selected layers and their colors\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-legend\n            \n\n            \n                styleUrls\n                ./image-viewer-legend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _layers\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layers\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:18\n                            \n                        \n                \n                    \n                        The list of layers used to render this components\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ImageViewerLayer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n\n                \n                    \n                        getlayers()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:21\n                                \n                            \n\n                \n                    \n                        setlayers(layers: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:18\n                                \n                            \n                    \n                        \n                                The list of layers used to render this components\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layers\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n/**\n * Legend in the image viewer displaying the selected layers and their colors\n */\n@Component({\n  selector: 'ccf-image-viewer-legend',\n  templateUrl: './image-viewer-legend.component.html',\n  styleUrls: ['./image-viewer-legend.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageViewerLegendComponent {\n  /**\n   * The list of layers used to render this components\n   */\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set layers(layers: ImageViewerLayer[]) {\n    this._layers = [...layers].sort((v1, v2) => v1.selectionOrder - v2.selectionOrder);\n  }\n  get layers(): ImageViewerLayer[] { return this._layers; }\n  private _layers: ImageViewerLayer[];\n}\n\n    \n\n    \n        \n  \n    \n    {{ layer.label }}\n  \n\n\n    \n\n    \n                \n                    ./image-viewer-legend.component.scss\n                \n                .legend {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  height: 3rem;\n\n  .legend-item {\n    margin-right: 1rem;\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .item-color {\n      margin-right: 1rem;\n      height: 1rem;\n      width: 1rem;\n    }\n\n    .item-title {\n      font-size: 14px;\n      display: flex;\n      align-items: center;\n    }\n  }\n}\n\n.circle {\n  border-radius: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ layer.label }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerLegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerLegendModule.html":{"url":"modules/ImageViewerLegendModule.html","title":"module - ImageViewerLegendModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerLegendModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerLegendModule\n\n\n\ncluster_ImageViewerLegendModule_declarations\n\n\n\ncluster_ImageViewerLegendModule_exports\n\n\n\n\nImageViewerLegendComponent\n\nImageViewerLegendComponent\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerLegendModule -->\n\nImageViewerLegendComponent->ImageViewerLegendModule\n\n\n\n\n\nImageViewerLegendComponent \n\nImageViewerLegendComponent \n\nImageViewerLegendComponent  -->\n\nImageViewerLegendModule->ImageViewerLegendComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerLegendComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerLegendComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageViewerLegendComponent } from './image-viewer-legend.component';\n\n\n\n@NgModule({\n  declarations: [ImageViewerLegendComponent],\n  imports: [CommonModule],\n  exports: [ImageViewerLegendComponent]\n})\nexport class ImageViewerLegendModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerModule.html":{"url":"modules/ImageViewerModule.html","title":"module - ImageViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerModule\n\n\n\ncluster_ImageViewerModule_imports\n\n\n\ncluster_ImageViewerModule_exports\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nImageViewerModule -->\n\nImageViewerContentModule->ImageViewerModule\n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerModule -->\n\nImageViewerLayersModule->ImageViewerModule\n\n\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerModule -->\n\nImageViewerPopoverModule->ImageViewerModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerModule -->\n\nViewerModule->ImageViewerModule\n\n\n\n\n\nImageViewerContentModule \n\nImageViewerContentModule \n\nImageViewerContentModule  -->\n\nImageViewerModule->ImageViewerContentModule \n\n\n\n\n\nImageViewerLayersModule \n\nImageViewerLayersModule \n\nImageViewerLayersModule  -->\n\nImageViewerModule->ImageViewerLayersModule \n\n\n\n\n\nImageViewerPopoverModule \n\nImageViewerPopoverModule \n\nImageViewerPopoverModule  -->\n\nImageViewerModule->ImageViewerPopoverModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLayersModule\n                        \n                        \n                            ImageViewerPopoverModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLayersModule\n                        \n                        \n                            ImageViewerPopoverModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { ImageViewerContentModule } from './image-viewer-content/image-viewer-content.module';\nimport { ImageViewerLayersModule } from './image-viewer-layers/image-viewer-layers.module';\nimport { ImageViewerPopoverModule } from './image-viewer-popover/image-viewer-popover.module';\nimport { ViewerModule } from './viewer/viewer.module';\n\n\n@NgModule({\n  imports: [ImageViewerPopoverModule, ImageViewerContentModule, ViewerModule, ImageViewerLayersModule],\n  providers: [],\n  declarations: [],\n  exports: [ImageViewerPopoverModule, ImageViewerContentModule, ImageViewerLayersModule]\n})\nexport class ImageViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerPopoverComponent.html":{"url":"components/ImageViewerPopoverComponent.html","title":"component - ImageViewerPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts\n\n\n    \n        Description\n    \n    \n        Popup that displays detailed information on a selected image along with viewing options\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-popover\n            \n\n            \n                styleUrls\n                ./image-viewer-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                result\n                            \n                            \n                                sourceUrls\n                            \n                            \n                                viewerVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                            \n                                    Private\n                                setSourceUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: ViewerState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:52\n                            \n                        \n\n                \n                    \n                            Initializes the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        ViewerState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The image viewer state.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to this components change detector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:65\n                \n            \n\n\n            \n                \n                    Returns viewer to closed state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(data: ImageViewerData, result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:74\n                \n            \n\n\n            \n                \n                    Changes viewer to opened state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ImageViewerData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data of the image to be passed into the viewer\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSourceUrls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSourceUrls(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EMPTY_DATA\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:37\n                            \n                        \n\n                \n                    \n                        Data of the image to be passed into the viewer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EMPTY_RESULT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:42\n                            \n                        \n\n                \n                    \n                        Currently active result.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceUrls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:47\n                            \n                        \n\n                \n                    \n                        Urls to load image data from.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewerVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:52\n                            \n                        \n\n                \n                    \n                        Whether or not the image viewer is visible\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ImageViewerData, ListResult } from 'ccf-database';\n\nimport { ViewerState } from '../../../core/store/viewer/viewer.state';\n\n\nconst EMPTY_DATA: ImageViewerData = {\n  '@id': '',\n  '@type': 'ImageViewerData',\n  id: '',\n  label: '',\n  organName: '',\n  metadata: []\n};\n\nconst EMPTY_RESULT: ListResult = {\n  '@id': '',\n  '@type': 'ListResult',\n  id: '',\n  label: ''\n};\n\n\n/**\n * Popup that displays detailed information on a selected image along with viewing options\n */\n@Component({\n  selector: 'ccf-image-viewer-popover',\n  templateUrl: './image-viewer-popover.component.html',\n  styleUrls: ['./image-viewer-popover.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageViewerPopoverComponent {\n  /**\n   * Data of the image to be passed into the viewer\n   */\n  data = EMPTY_DATA;\n\n  /**\n   * Currently active result.\n   */\n  result = EMPTY_RESULT;\n\n  /**\n   * Urls to load image data from.\n   */\n  sourceUrls: string[] = [];\n\n  /**\n   * Whether or not the image viewer is visible\n   */\n  viewerVisible = false;\n\n  /**\n   * Initializes the component.\n   *\n   * @param state The image viewer state.\n   * @param cdr Reference to this components change detector.\n   */\n  constructor(readonly state: ViewerState, private readonly cdr: ChangeDetectorRef) { }\n\n  /**\n   * Returns viewer to closed state\n   */\n  close(): void {\n    this.viewerVisible = false;\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Changes viewer to opened state\n   * @param data Data of the image to be passed into the viewer\n   */\n  open(data: ImageViewerData, result: ListResult): void {\n    this.viewerVisible = true;\n    this.data = data;\n    this.result = result;\n    this.setSourceUrls(result);\n    this.cdr.markForCheck();\n  }\n\n  private setSourceUrls(result: ListResult): void {\n    const { resultType, resultUrl } = result;\n    if (resultType !== 'image_viewer' || resultUrl === undefined) {\n      this.sourceUrls = [];\n    } else {\n      this.sourceUrls = [resultUrl];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n    \n  \n  \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-popover.component.scss\n                \n                .image-viewer-container {\n  position: fixed;\n  top: 4rem;\n  overflow: hidden;\n  z-index: 10;\n  flex-grow: 1;\n  height: calc(100% - 1.5rem);\n  width: 100%;\n  left: 100%;\n  transition-property: left;\n  transition-duration: .5s;\n  transition-timing-function: ease-in-out;\n\n  &.expanded {\n    left: 0%;\n  }\n\n  .image-viewer-window {\n    margin-top: 1.5rem;\n    height: calc(100% - 2rem);\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .viewer {\n      width: 100%;\n      height: calc(100% - 8rem);\n      margin-left: 1.5rem;\n    }\n\n    .legend {\n      width: 100%;\n      height: 3.5rem;\n      margin-top: 1.5rem;\n      margin-left: 1.5rem;\n    }\n  }\n\n  .image-viewer-drawer {\n    width: 25.5rem;\n    margin: 0 1.5rem;\n\n    .drawer-icons {\n      display: flex;\n\n      .button {\n        width: 3rem;\n        height: 3rem;\n        color: #9e9e9e;\n        background: none;\n        border: none;\n        cursor: pointer;\n        outline: none;\n\n        :hover {\n          color: #1e88e5;\n        }\n\n        mat-icon {\n          font-size: 2.2rem;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerPopoverModule.html":{"url":"modules/ImageViewerPopoverModule.html","title":"module - ImageViewerPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerPopoverModule\n\n\n\ncluster_ImageViewerPopoverModule_declarations\n\n\n\ncluster_ImageViewerPopoverModule_imports\n\n\n\ncluster_ImageViewerPopoverModule_exports\n\n\n\n\nImageViewerPopoverComponent\n\nImageViewerPopoverComponent\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule -->\n\nImageViewerPopoverComponent->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent  -->\n\nImageViewerPopoverModule->ImageViewerPopoverComponent \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nImageViewerPopoverModule -->\n\nDrawerModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerPopoverModule -->\n\nImageViewerContentModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerPopoverModule -->\n\nImageViewerLegendModule->ImageViewerPopoverModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerPopoverModule -->\n\nViewerModule->ImageViewerPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DrawerModule\n                        \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLegendModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DrawerModule } from '../../../shared/components/drawer/drawer.module';\nimport { ImageViewerContentModule } from '../image-viewer-content/image-viewer-content.module';\nimport { ImageViewerLegendModule } from '../image-viewer-legend/image-viewer-legend.module';\nimport { ViewerModule } from '../viewer/viewer.module';\nimport { ImageViewerPopoverComponent } from './image-viewer-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, ImageViewerContentModule, DrawerModule, ViewerModule, ImageViewerLegendModule],\n  declarations: [ImageViewerPopoverComponent],\n  exports: [ImageViewerPopoverComponent]\n})\nexport class ImageViewerPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageViewerProps.html":{"url":"interfaces/ImageViewerProps.html","title":"interface - ImageViewerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageViewerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canvas\n                                \n                                \n                                            Optional\n                                        channelNames\n                                \n                                \n                                            Optional\n                                        defaultChannelConfig\n                                \n                                \n                                            Optional\n                                        height\n                                \n                                \n                                        id\n                                \n                                \n                                        initialViewState\n                                \n                                \n                                            Optional\n                                        sources\n                                \n                                \n                                            Optional\n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLCanvasElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelNames\n                                    \n                                \n                                \n                                    \n                                        channelNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultChannelConfig\n                                    \n                                \n                                \n                                    \n                                        defaultChannelConfig:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialViewState\n                                    \n                                \n                                \n                                    \n                                        initialViewState:         State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sources\n                                    \n                                \n                                \n                                    \n                                        sources:     DataSource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DataSource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/info/info-button/info-button.component.ts\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/info/info-button/info-button.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            launchInfoDialog\n                        \n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/info/info-button/info-button.component.ts:26\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent {\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(): void {\n    this.dialog.open(InfoDialogComponent, {\n      width: '60em',\n      data: {}\n    });\n  }\n}\n\n    \n\n    \n        \n  info_outline\n\n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info {\n  cursor: pointer;\n  transition: color 1s;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  info_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/info/info-button/info-button.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/info/info-dialog/info-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: unknown)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/info/info-dialog/info-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/info/info-dialog/info-dialog.component.ts:27\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/info/info-dialog/info-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                        Data being injected into the dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/info/info-dialog/info-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                        A reference to the dialog that this component creates, used to call the dialog's methods\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent {\n  /**\n   * Creates an instance of info dialog component.\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown\n  ) { }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      HuBMAP\n      The Human Biomolecular Atlas Project\n\n      \n        \n          The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis technologies,\n          computational tools, and generate foundational tissue maps in order to accelerate the construction of an atlas of\n          the human body for the understanding the relationship between tissue organization and function.\n          \n          https://hubmapconsortium.org\n        \n\n        Common Coordinate Framework (CCF)\n        \n          The HuBMAP common coordinate (reference) framework is under active development. It aims to semantically\n          annotate and spatially index HuBMAP data for efficient spatial and semantic search, browsing, and filtering.\n          The CCF v1.0.0 became available in June 2020. CCF Ontology documentation is available\n          here\n          and OWL file is available on\n          GitHub.\n        \n\n        CCF Exploration User Interface (EUI)\n        \n          The CCF EUI represents data across multiple scales, supporting navigation by multiple coordinate\n          systems, including spatial, physiologic, and organ-based browsing. The first proof-of-concept user interface\n          for the CCF v1.0.0 became available in June 2020. It continues to evolve as more data becomes available. The CCF EUI\n          specification is available\n          here\n          and code is available on\n          GitHub.\n          A demo video is on YouTube\n          here.\n        \n\n        Acknowledgements\n        \n          The CCF work is under active development by the Indiana University Mapping Component as part of the HuBMAP HIVE\n          effort with expert input by the HuBMAP team. with expert input by the HuBMAP team. Data was provided by the HuBMAP\n          Tissue Mapping Centers. This research is funded by the NIH Common Fund through the Office of Strategic\n          Coordination/Office of the NIH Director under award\n          OT2OD026671,\n          by the NIDDK Kidney Precision Medicine Project grant U2CDK114886, and the NIH National Institute of Allergy and\n          Infectious Diseases (NIAID), Department of Health and Human Services under BCBB Support Services Contract HHSN316201300006W/HHSN27200002.\n        \n      \n\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.ccf-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n      background-color: white;\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .heading {\n      margin-bottom: 0;\n      font-size: 0.875rem;\n      font-weight: bold;\n    }\n\n    .close {\n      .close-icon {\n        float: right;\n        margin-top: 1rem;\n        margin-right: 1rem;\n        cursor: pointer;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin-bottom: 0;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .footer {\n      padding-top: 1.5rem;\n      .nih-logo {\n        height: 2.25rem;\n        display: block;\n        margin: auto;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              HuBMAP      The Human Biomolecular Atlas Project                        The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis technologies,          computational tools, and generate foundational tissue maps in order to accelerate the construction of an atlas of          the human body for the understanding the relationship between tissue organization and function.                    https://hubmapconsortium.org                Common Coordinate Framework (CCF)                  The HuBMAP common coordinate (reference) framework is under active development. It aims to semantically          annotate and spatially index HuBMAP data for efficient spatial and semantic search, browsing, and filtering.          The CCF v1.0.0 became available in June 2020. CCF Ontology documentation is available          here          and OWL file is available on          GitHub.                CCF Exploration User Interface (EUI)                  The CCF EUI represents data across multiple scales, supporting navigation by multiple coordinate          systems, including spatial, physiologic, and organ-based browsing. The first proof-of-concept user interface          for the CCF v1.0.0 became available in June 2020. It continues to evolve as more data becomes available. The CCF EUI          specification is available          here          and code is available on          GitHub.          A demo video is on YouTube          here.                Acknowledgements                  The CCF work is under active development by the Indiana University Mapping Component as part of the HuBMAP HIVE          effort with expert input by the HuBMAP team. with expert input by the HuBMAP team. Data was provided by the HuBMAP          Tissue Mapping Centers. This research is funded by the NIH Common Fund through the Office of Strategic          Coordination/Office of the NIH Director under award          OT2OD026671,          by the NIDDK Kidney Precision Medicine Project grant U2CDK114886, and the NIH National Institute of Allergy and          Infectious Diseases (NIAID), Department of Health and Human Services under BCBB Support Services Contract HHSN316201300006W/HHSN27200002.                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deferred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Promise(resolve => this.resolve = resolve)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                            \n                        \n\n                \n                    \n                        Promise used to await on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:33\n                            \n                        \n\n                \n                    \n                        Whether this state is true or false. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                            \n                        \n\n                \n                    \n                        Resolve function for the promise. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:42\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueOf\n                        \n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:59\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/drawer/drawer.component.ts:52\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => this.resolve = resolve);\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise { return this.deferred; }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean { return this.initialized; }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(`open, open-instant`, style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('1.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('1.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// tslint:disable-line: no-unsafe-any\n  get position(): 'start' | 'end' { return this._position; }\n  set position(value: 'start' | 'end') { this._position = value || 'start'; }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-opened') // tslint:disable-line: no-unsafe-any\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { this.toggle(coerceBooleanProperty(value)); }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-expanded') // tslint:disable-line: no-unsafe-any\n  get expanded(): boolean { return this._expanded; }\n  set expanded(value: boolean) { this.toggleExpanded(coerceBooleanProperty(value)); }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // tslint:disable-line: no-unsafe-any\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    }};\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) { return this._measuredWidth; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) { return 0; }\n\n    return this._measuredWidth = width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) { return this._measuredMargin; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    return this._measuredMargin = margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void { this.toggle(true); }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void { this.toggle(false); }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) { return; }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void { this.toggleExpanded(true); }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void { this.toggleExpanded(false); }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) { return; }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // tslint:disable-line: no-unsafe-any\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // tslint:disable-line: no-unsafe-any\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled':\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_position: '' | 'start' | 'end'; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_opened: BooleanInput; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_expanded: BooleanInput; // tslint:disable-line: variable-name member-ordering\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JsonOntologyNode.html":{"url":"interfaces/JsonOntologyNode.html","title":"interface - JsonOntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JsonOntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Structure of a single json ontology node.\n\n            \n\n            \n                Extends\n            \n            \n                        IdObject\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                \n                                \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                    \n                                \n                                \n                                    \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym:         ValueObject[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValueObject[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Json synonyms property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                    \n                                \n                                \n                                    \n                                        http://www.w3.org/2000/01/rdf-schema#label:         [ValueObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [ValueObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json label property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         [IdObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [IdObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json parent property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResult.html":{"url":"interfaces/ListResult.html","title":"interface - ListResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Result for list of tissues. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        downloadTooltip\n                                \n                                \n                                            Optional\n                                        downloadUrl\n                                \n                                \n                                            Optional\n                                        highlighted\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        resultType\n                                \n                                \n                                            Optional\n                                        resultUrl\n                                \n                                \n                                            Optional\n                                        shortInfo\n                                \n                                \n                                            Optional\n                                        thumbnailUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadTooltip\n                                    \n                                \n                                \n                                    \n                                        downloadTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of data download. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadUrl\n                                    \n                                \n                                \n                                    \n                                        downloadUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url for data download. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlighted\n                                    \n                                \n                                \n                                    \n                                        highlighted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the result should be highlighted \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultType\n                                    \n                                \n                                \n                                    \n                                        resultType:     \"external_link\" | \"local_link\" | \"image_viewer\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"external_link\" | \"local_link\" | \"image_viewer\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of result url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultUrl\n                                    \n                                \n                                \n                                    \n                                        resultUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Result url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortInfo\n                                    \n                                \n                                \n                                    \n                                        shortInfo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Short description. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnailUrl\n                                    \n                                \n                                \n                                    \n                                        thumbnailUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Small icon url. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        payload\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sender of the message. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: unknown, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                        Counter used to give each message a unique id. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:81\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:91\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSources\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:101\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            nextMessageId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:161\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message/message.service.ts:151\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/message/message.service.ts:126\n                            \n                        \n\n                \n                    \n                        The message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                        The message listener. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isolated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OMEZarrInfo.html":{"url":"interfaces/OMEZarrInfo.html","title":"interface - OMEZarrInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OMEZarrInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Loader, createZarrLoader, OMEZarrReader, createOMETiffLoader } from '@hubmap/vitessce-image-viewer';\n\nexport enum LoaderType {\n  Zarr = 'zarr',\n  OMEZarr = 'ome-zarr',\n  StaticZarr = 'static',\n\n  Tiff = 'tiff',\n  Tiff2 = 'tiff 2',\n  BFTiff = 'bf tiff',\n  CovidTiff = 'covid tiff',\n  StaticTiff = 'static tiff'\n}\n\n// createLoader info argument types\nexport type ZarrInfo = Parameters[0];\nexport interface OMEZarrInfo {\n  url: string;\n}\nexport interface TiffInfo {\n  url: string;\n  offsets?: string | number[];\n}\n\n// Copied from vitessce-image-viewer demo source\nexport async function createLoader(\n  type: LoaderType,\n  info: ZarrInfo | OMEZarrInfo | TiffInfo\n): Promise {\n  switch (type) {\n    case LoaderType.Zarr:\n    case LoaderType.StaticZarr:\n      return createZarrLoader(info as ZarrInfo);\n\n    case LoaderType.OMEZarr: {\n      const { url } = info as OMEZarrInfo;\n      const reader = await OMEZarrReader.fromUrl(url);\n      const { loader } = await reader.loadOMEZarr();\n      return loader;\n    }\n\n    case LoaderType.Tiff:\n    case LoaderType.Tiff2:\n    case LoaderType.BFTiff:\n    case LoaderType.CovidTiff:\n    case LoaderType.StaticTiff: {\n      const { url, offsets = [] } = info as TiffInfo;\n      return createOMETiffLoader({ url, offsets: await loadOffsets(offsets) });\n    }\n\n    default:\n      throw Error(`Pyramid type (${type}) is not supported`);\n  }\n}\n\nasync function loadOffsets(url: string | number[]): Promise {\n  if (typeof url !== 'string') { return url; }\n  const res = await fetch(url);\n  return res.status !== 404 ? await res.json() as number[] : [];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OldRuiData.html":{"url":"interfaces/OldRuiData.html","title":"interface - OldRuiData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OldRuiData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/hubmap/old-rui-utils.ts\n        \n\n            \n                Description\n            \n            \n                RUI v0.5.0 format \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alignment_datetime\n                                \n                                \n                                        alignment_id\n                                \n                                \n                                        alignment_operator_first_name\n                                \n                                \n                                        alignment_operator_last_name\n                                \n                                \n                                        reference_organ_id\n                                \n                                \n                                        tissue_object_rotation\n                                \n                                \n                                        tissue_object_size\n                                \n                                \n                                        tissue_position_mass_point\n                                \n                                \n                                        tissue_position_vertices\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_datetime\n                                    \n                                \n                                \n                                    \n                                        alignment_datetime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creation time. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_id\n                                    \n                                \n                                \n                                    \n                                        alignment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_operator_first_name\n                                    \n                                \n                                \n                                    \n                                        alignment_operator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creator first name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_operator_last_name\n                                    \n                                \n                                \n                                    \n                                        alignment_operator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creator last name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ_id\n                                    \n                                \n                                \n                                    \n                                        reference_organ_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organ reference identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_object_rotation\n                                    \n                                \n                                \n                                    \n                                        tissue_object_rotation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue object rotation. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_object_size\n                                    \n                                \n                                \n                                    \n                                        tissue_object_size:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue object size. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_position_mass_point\n                                    \n                                \n                                \n                                    \n                                        tissue_position_mass_point:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue point of mass. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_position_vertices\n                                    \n                                \n                                \n                                    \n                                        tissue_position_vertices:     unknown[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Position vertices. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ccf } from '../util/prefixes';\n\n/** RUI v0.5.0 format */\nexport interface OldRuiData {\n  /** Identifier. */\n  alignment_id: string;\n  /** Creator first name. */\n  alignment_operator_first_name: string;\n  /** Creator last name. */\n  alignment_operator_last_name: string;\n  /** Creation time. */\n  alignment_datetime: string;\n  /** Organ reference identifier. */\n  reference_organ_id: string;\n  /** Position vertices. */\n  tissue_position_vertices: unknown[];\n  /** Tissue point of mass. */\n  tissue_position_mass_point: {\n    x: number,\n    y: number,\n    z: number\n  };\n  /** Tissue object rotation. */\n  tissue_object_rotation: {\n    x: number,\n    y: number,\n    z: number\n  };\n  /** Tissue object size. */\n  tissue_object_size: {\n    x: number,\n    y: number,\n    z: number\n  };\n}\n\n/**\n * Fixes old RUI data from VU.\n *\n * @param data The original RUI data\n * @returns The fixed RUI data\n */\nfunction fixOldRuiKidneyData(data: OldRuiData): OldRuiData {\n  return {\n    ...data,\n    tissue_position_mass_point: {\n      x: data.tissue_position_mass_point.x - 60 / 2,\n      y: data.tissue_position_mass_point.y - 100 / 2,\n      z: data.tissue_position_mass_point.z - 60 / 2\n    }\n  };\n}\n\n/**\n * Converts version 0.5.0 RUI data to new JSONLD format.\n * @param data The old data.\n * @param [externalId] An optional label.\n * @param [refOrganId] The organ id.\n * @returns The translated JSONLD data.\n */\nexport function convertOldRuiToJsonLd(data: OldRuiData, label?: string, refOrganId?: string): object {\n  let placementTarget: string | undefined;\n  if (refOrganId) {\n    placementTarget = refOrganId;\n  } else if (data.reference_organ_id === 'uuid-1234-5678') {\n    placementTarget = ccf.x('VHKidney').id;\n  } else if(data.reference_organ_id) {\n    placementTarget = data.reference_organ_id;\n  }\n\n  if (placementTarget?.endsWith('Kidney')) {\n    data = fixOldRuiKidneyData(data);\n  }\n\n  const D = data.tissue_object_size;\n  const R = data.tissue_object_rotation;\n  const T = data.tissue_position_mass_point;\n\n  return {\n    '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n    '@id': 'http://purl.org/ccf/0.5/' + data.alignment_id,\n    '@type': 'SpatialEntity',\n    label: label || undefined,\n    creator: `${data.alignment_operator_first_name} ${data.alignment_operator_last_name}`,\n    creator_first_name: data.alignment_operator_first_name,\n    creator_last_name: data.alignment_operator_last_name,\n    // creator_orcid: data.alignment_operator_orcid,\n    creation_date: data.alignment_datetime,\n    ccf_annotations: [],\n    x_dimension: D.x, y_dimension: D.y, z_dimension: D.z, dimension_units: 'millimeter',\n\n    placement: {\n      '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n      '@id': 'http://purl.org/ccf/0.5/' + data.alignment_id + '_placement',\n      '@type': 'SpatialPlacement',\n      target: placementTarget,\n      placement_date: data.alignment_datetime,\n\n      x_scaling: 1, y_scaling: 1, z_scaling: 1, scaling_units: 'ratio',\n      x_rotation: R.x, y_rotation: R.y, z_rotation: R.z, rotation_order: 'XYZ', rotation_units: 'degree',\n      x_translation: T.x, y_translation: T.y, z_translation: T.z, translation_units: 'millimeter'\n    }\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyExplorationModule.html":{"url":"modules/OntologyExplorationModule.html","title":"module - OntologyExplorationModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyExplorationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/ontology-exploration/ontology-exploration.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from './ontology-search/ontology-search.module';\nimport { OntologySelectionModule } from './ontology-selection/ontology-selection.module';\nimport { OntologyTreeModule } from './ontology-tree/ontology-tree.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule,\n    OntologySelectionModule\n  ],\n  exports: [OntologySearchModule, OntologyTreeModule, OntologySelectionModule]\n})\nexport class OntologyExplorationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyNode.html":{"url":"interfaces/OntologyNode.html","title":"interface - OntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/ontology-node.ts\n        \n\n            \n                Description\n            \n            \n                A node in the ontology tree.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        parent\n                                \n                                \n                                        synonymLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of child identifiers.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of this node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for this ontology node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The identifier of the parent node. undefined if this is the root node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synonymLabels\n                                    \n                                \n                                \n                                    \n                                        synonymLabels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Labels for the synonyms of the label of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface OntologyNode {\n  /**\n   * The unique identifier of this node.\n   */\n  id: string;\n\n  /**\n   * Label for this ontology node.\n   */\n  label: string;\n\n  /**\n   * The identifier of the parent node. `undefined` if this is the root node.\n   */\n  parent: string;\n\n  /**\n   * An array of child identifiers.\n   */\n  children: string[];\n\n  /**\n   * Labels for the synonyms of the label of this node.\n   */\n  synonymLabels: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySearchComponent.html":{"url":"components/OntologySearchComponent.html","title":"component - OntologySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n\n\n    \n        Description\n    \n    \n        Componenet for searching the Ontology nodes.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-search\n            \n\n            \n                styleUrls\n                ./ontology-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleteOpen\n                            \n                            \n                                filteredResults$\n                            \n                            \n                                formControl\n                            \n                            \n                                    Public\n                                ontologyService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFormatter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                sortBySynonymResult\n                            \n                            \n                                sortLexically\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologyService: OntologySearchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologyService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of searchService which provides all the search functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:25\n                            \n                        \n                \n                    \n                        Output event-emitter which emits the id of the OntologyNode whose label was\nselected by the user in the search-results\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFormatter\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFormatter(option?: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:72\n                \n            \n\n\n            \n                \n                    A formatter function to enable different display and selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a part of the search result entry to be displayed as a display value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:54\n                \n            \n\n\n            \n                \n                    on-init lifecycle hook for this component -\ngets the searched value from the view, sends it to the filter function in the OntologyService,\nand gets the search results from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:98\n                \n            \n\n\n            \n                \n                    Callback function triggered when the user selects a value from search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of MatAutocompleteSelectedEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortBySynonymResult\n                        \n                        \n                    \n                \n            \n            \n                \nsortBySynonymResult(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:81\n                \n            \n\n\n            \n                \n                    Sorts by results which have synonyms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 or -1\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortLexically\n                        \n                        \n                    \n                \n            \n            \n                \nsortLexically(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:90\n                \n            \n\n\n            \n                \n                    Sorts lexically\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        lower case value of node label\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoCompleteOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:36\n                            \n                        \n\n                \n                    \n                        Determines if autocomplete is open or close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredResults$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:41\n                            \n                        \n\n                \n                    \n                        Observable which provides the filtered search results\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:30\n                            \n                        \n\n                \n                    \n                        Instance of FormControl - tracks the value and validation status of an individual form control\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ontologyService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologySearchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:47\n                            \n                        \n\n                \n                    \n                        instance of searchService which provides all the search functionality\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { get, sortBy } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../../core/models/ontology-node';\nimport { OntologySearchService, SearchResult } from '../../../core/services/ontology-search/ontology-search.service';\n\n\n/**\n * Componenet for searching the Ontology nodes.\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss']\n})\nexport class OntologySearchComponent implements OnInit {\n  /**\n   * Output event-emitter which emits the id of the OntologyNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() selected = new EventEmitter();\n\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new FormControl('');\n\n\n  /**\n   * Determines if autocomplete is open or close.\n   */\n  autoCompleteOpen = false;\n\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$: Observable;\n\n  /**\n   * Creates an instance of ontology search component.\n   * @param ontologyService instance of searchService which provides all the search functionality\n   */\n  constructor(public ontologyService: OntologySearchService) { }\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit(): void {\n    this.ontologyService.loadOntology();\n    const valueChanges = this.formControl.valueChanges as Observable;\n    this.filteredResults$ = valueChanges.pipe(\n      filter(value => typeof value === 'string'),\n      startWith(''),\n      switchMap(value => this.ontologyService.filter(value)),\n      map(searchResults => sortBy(searchResults, [\n        this.sortBySynonymResult, 'index', this.sortLexically\n      ]))\n    );\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option?: SearchResult): string {\n    return (option?.displayLabel ?? []).join('');\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Sorts lexically\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, ['option', 'value', 'node']) as OntologyNode;\n    if (node) {\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        \n          {{option.displayLabel[0]}}\n          {{option.displayLabel[1]}}\n          {{option.displayLabel[2]}}\n        \n      \n    \n\n    search\n  \n\n\n    \n\n    \n                \n                    ./ontology-search.component.scss\n                \n                .ccf-ontology-search {\n  width: 25rem;\n  margin-top: 1.5rem;\n\n  .field {\n    margin-left: 1.5rem;\n    width: 100%;\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-end {\n      border-radius: 0 500px 500px 0;\n      margin: 0;\n    }\n\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n          height: 3rem;\n\n          input {\n            margin-left: .4rem;\n          }\n        }\n        .mat-form-field-suffix {\n          top: .5rem;\n          border: none;\n        }\n      }\n    }\n\n    .mat-form-field-outline-start {\n      border-radius: 500px 0 0 500px;\n      min-width: 40px;\n\t  }\n  }\n}\n\n::ng-deep .ccf-ontology-search.detached {\n  border: 2px solid;\n  border-top: none;\n  border-radius: 0 0 1rem 1rem;\n  max-height: 18rem;\n\n  .results-container {\n    width: 380px;\n    margin-bottom: 1rem;\n    overflow: auto;\n    max-height: 15rem;\n    scrollbar-width: thin;\n\n    mat-option {\n      height: 1.5rem;\n      width: 380px;\n      \n      .search-term {\n        text-decoration: underline;\n      }\n    }\n  }\n\n}\n\n.autocomplete-open {\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-start {\n      border-radius: 50% 0 0 0;\n      border-bottom: none;\n    }\n\n    .mat-form-field-outline-end {\n      border-radius: 0 1rem 0 0;\n      border-bottom: none;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{option.displayLabel[0]}}          {{option.displayLabel[1]}}          {{option.displayLabel[2]}}                      search  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySearchModule.html":{"url":"modules/OntologySearchModule.html","title":"module - OntologySearchModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/ontology-exploration/ontology-search/ontology-search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OntologySearchComponent } from './ontology-search.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  declarations: [OntologySearchComponent],\n  exports: [OntologySearchComponent]\n})\nexport class OntologySearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologySearchService.html":{"url":"injectables/OntologySearchService.html","title":"injectable - OntologySearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologySearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable OntologySearchService responsible for search result computations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootNode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                formatLabel\n                            \n                            \n                                getChildren\n                            \n                            \n                                getIndexOfMatch\n                            \n                            \n                                loadOntology\n                            \n                            \n                                    Private\n                                lookup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, store: Store, ontologyState: OntologyState)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/ontology-search/ontology-search.service.ts:107\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http requests service.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global data store.\n\n                                                        \n                                                \n                                                \n                                                        ontologyState\n                                                  \n                                                        \n                                                                        OntologyState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global ontology state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:142\n                \n            \n\n\n            \n                \n                    Searches the ontology with the search-term\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an array of search-results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatLabel\n                        \n                        \n                    \n                \n            \n            \n                \nformatLabel(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:200\n                \n            \n\n\n            \n                \n                    Formats label based on where the search-term was found in the OntologyNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        label or first synonym-label of OntologyNode which has the search-term\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search-term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        an array in the form of [prefix, search-term, suffix]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChildren\n                        \n                        \n                    \n                \n            \n            \n                \ngetChildren(node: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:216\n                \n            \n\n\n            \n                \n                    Fetches the children of an ontology node.\nNote: This can be called without a reference to this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node for which to get children.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyNode[]\n\n                    \n                    \n                        An array of children, empty if the node has no children.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIndexOfMatch\n                        \n                        \n                    \n                \n            \n            \n                \ngetIndexOfMatch(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:190\n                \n            \n\n\n            \n                \n                    Gets index of match in the ontology label\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the provided ontology node label or synonym label\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the searched text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the index of the match in the label\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadOntology\n                        \n                        \n                    \n                \n            \n            \n                \nloadOntology()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:124\n                \n            \n\n\n            \n                \n                    Loads ontology.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lookup(nodes: Immutable[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:154\n                \n            \n\n\n            \n                \n                    looks up ontology nodes and composes search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                Immutable[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ontology nodes\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SearchResult[]\n\n                    \n                    \n                        search results\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/ontology-search/ontology-search.service.ts:107\n                            \n                        \n\n                \n                    \n                        Root node in ontology. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Immutable } from '@ngxs-labs/data/typings';\nimport { Store } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nimport { JsonOntologyNode, jsonToOntologyNode } from '../../models/json-ontology';\nimport { OntologyNode } from '../../models/ontology-node';\nimport { OntologyState, OntologyStateModel } from '../../store/ontology/ontology.state';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/** Type of function for getting child nodes from a parent node. */\nexport type GetChildrenFunc = (o: OntologyNode) => OntologyNode[];\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[''] = { parent: '', children: [] } as unknown as OntologyNode;\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[''].children) as string;\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[''];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = {\n    id: 'http://purl.obolibrary.org/obo/UBERON_0013702',\n    label: 'body',\n    parent: '',\n    children: organIds,\n    synonymLabels: []\n  };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /** Root node in ontology. */\n  rootNode: Observable>;\n\n  /**\n   * Creates an instance of ontology search service.\n   *\n   * @param http The http requests service.\n   * @param store The global data store.\n   * @param ontologyState The global ontology state.\n   */\n  constructor(private http: HttpClient, private store: Store, private ontologyState: OntologyState) {\n    this.rootNode = this.ontologyState.rootNode$;\n    this.getChildren = this.getChildren.bind(this) as GetChildrenFunc;\n  }\n\n  /**\n   * Loads ontology.\n   */\n  loadOntology(): void {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => this.ontologyState.setOntology(ontology));\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.ontologyState.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologySelection.html":{"url":"interfaces/OntologySelection.html","title":"interface - OntologySelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologySelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/ontology-selection.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         OntologyNode | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OntologyNode } from './ontology-node';\n\nexport interface OntologySelection {\n  location: OntologyNode | undefined;\n  id: string;\n  label: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySelectionComponent.html":{"url":"components/OntologySelectionComponent.html","title":"component - OntologySelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Ontology selection component that encapsulates ontology search and tree components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-selection\n            \n\n            \n                styleUrls\n                ./ontology-selection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ontologySearchService\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                occurenceData\n                            \n                            \n                                ontologyFilter\n                            \n                            \n                                termData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologySearchService: OntologySearchService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology selection component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologySearchService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for searching the ontology.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global state store.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        occurenceData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:28\n                            \n                        \n                \n                    \n                        A record of terms within the current filter.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ontologyFilter\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:40\n                            \n                        \n                \n                    \n                        Input list of selected ontology terms passed down to ontology-tree.\nUsed to change display of ontology tree when selection is made from\noutside the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        termData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:33\n                            \n                        \n                \n                    \n                        A record of terms the app currently has data for.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ontologySelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n                \n                    \n                        Captures and passes along the change in ontologySelections.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(ontologyNode: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:61\n                \n            \n\n\n            \n                \n                    Ontology selection event when node is selected from the search results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontologyNode\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected ontology node.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ontologySearchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologySearchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n\n                \n                    \n                        Service for searching the ontology.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tree\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologyTreeComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(OntologyTreeComponent, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        View child of search component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Output, EventEmitter, Input } from '@angular/core';\nimport { Store } from '@ngxs/store';\n\nimport { OntologyNode } from '../../../core/models/ontology-node';\nimport { OntologySearchService } from '../../../core/services/ontology-search/ontology-search.service';\nimport { OntologyState, OntologyStateModel } from '../../../core/store/ontology/ontology.state';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\nimport { OntologySelection } from '../../../core/models/ontology-selection';\n\n\n/**\n * Ontology selection component that encapsulates ontology search and tree components.\n */\n@Component({\n  selector: 'ccf-ontology-selection',\n  templateUrl: './ontology-selection.component.html',\n  styleUrls: ['./ontology-selection.component.scss']\n})\nexport class OntologySelectionComponent {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree: OntologyTreeComponent;\n\n  /**\n   * A record of terms within the current filter.  To be passed on to ontology-tree\n   */\n  @Input() occurenceData: Record;\n\n  /**\n   * A record of terms the app currently has data for.  To be passed on to ontology-tree\n   */\n  @Input() termData: Record;\n\n  /**\n   * Input list of selected ontology terms passed down to ontology-tree.\n   * Used to change display of ontology tree when selection is made from\n   * outside the component.\n   */\n  @Input() ontologyFilter: string[];\n\n  /**\n   * Captures and passes along the change in ontologySelections.\n   */\n  @Output() ontologySelection = new EventEmitter();\n\n  /**\n   * Creates an instance of ontology selection component.\n   * @param ontologySearchService Service for searching the ontology.\n   * @param store The global state store.\n   */\n  constructor(\n    public ontologySearchService: OntologySearchService,\n    private readonly store: Store\n  ) { }\n\n  /**\n   * Ontology selection event when node is selected from the search results.\n   * @param ontologyNode selected ontology node.\n   */\n  selected(ontologyNode: OntologyNode): void {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    this.tree.expandAndSelect(ontologyNode, node => nodes[node.parent]);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ontology-selection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySelectionModule.html":{"url":"modules/OntologySelectionModule.html","title":"module - OntologySelectionModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySelectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_imports\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/ontology-exploration/ontology-selection/ontology-selection.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { OntologySelectionComponent } from './ontology-selection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule\n  ],\n  declarations: [OntologySelectionComponent],\n  exports: [OntologySelectionComponent],\n})\nexport class OntologySelectionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologyState.html":{"url":"injectables/OntologyState.html","title":"injectable - OntologyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologyState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Ontology tree state.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                nodes$\n                            \n                            \n                                    Public\n                                    Readonly\n                                rootNode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setOntology\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOntology\n                        \n                        \n                    \n                \n            \n            \n                \nsetOntology(ontology: OntologyStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/ontology/ontology.state.ts:50\n                \n            \n\n\n            \n                \n                    Sets the ontology state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontology\n                                    \n                                                OntologyStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new state.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            nodes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(map(state => Object.values(state.nodes)))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/ontology/ontology.state.ts:39\n                            \n                        \n\n                \n                    \n                        All nodes in the ontology tree. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            rootNode$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(map(state => state.nodes[state.root]))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/ontology/ontology.state.ts:42\n                            \n                        \n\n                \n                    \n                        Root node of the ontology tree. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../models/ontology-node';\n\n\n/**\n * Data model for the ontology state.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n/**\n * Ontology tree state.\n */\n@StateRepository()\n@State({\n  name: 'ontology',\n  defaults: {\n    root: '',\n    nodes: {}\n  }\n})\n@Injectable()\nexport class OntologyState extends NgxsDataRepository {\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.state$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.state$.pipe(map(state => state.nodes[state.root]));\n\n  /**\n   * Sets the ontology state.\n   *\n   * @param ontology The new state.\n   */\n  @DataAction()\n  setOntology(ontology: OntologyStateModel): void {\n    this.ctx.setState(ontology);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyStateModel.html":{"url":"interfaces/OntologyStateModel.html","title":"interface - OntologyStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Data model for the ontology state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        nodes\n                                \n                                \n                                        root\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hash table of nodes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier of the root node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../models/ontology-node';\n\n\n/**\n * Data model for the ontology state.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n/**\n * Ontology tree state.\n */\n@StateRepository()\n@State({\n  name: 'ontology',\n  defaults: {\n    root: '',\n    nodes: {}\n  }\n})\n@Injectable()\nexport class OntologyState extends NgxsDataRepository {\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.state$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.state$.pipe(map(state => state.nodes[state.root]));\n\n  /**\n   * Sets the ontology state.\n   *\n   * @param ontology The new state.\n   */\n  @DataAction()\n  setOntology(ontology: OntologyStateModel): void {\n    this.ctx.setState(ontology);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyTreeModule.html":{"url":"modules/OntologyTreeModule.html","title":"module - OntologyTreeModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyTreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/ontology-exploration/ontology-tree/ontology-tree.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PictureInPictureViewer.html":{"url":"classes/PictureInPictureViewer.html","title":"class - PictureInPictureViewer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PictureInPictureViewer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ImageViewer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channelConfigs\n                            \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _loaders\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                deck\n                            \n                            \n                                    Protected\n                                layerConfigs\n                            \n                            \n                                    Protected\n                                layers\n                            \n                            \n                                    Readonly\n                                props\n                            \n                            \n                                    Protected\n                                states\n                            \n                            \n                                    Protected\n                                views\n                            \n                            \n                                    Protected\n                                vivViews\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Async\n                                createVivViews\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createVivViews\n                            \n                            \n                                finalize\n                            \n                            \n                                    Private\n                                initializeDeck\n                            \n                            \n                                    Private\n                                layerFilter\n                            \n                            \n                                    Private\n                                onViewStateChange\n                            \n                            \n                                    Private\n                                resetChannelConfigs\n                            \n                            \n                                    Async\n                                setSize\n                            \n                            \n                                    Async\n                                setSources\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Async\n                                updateChannelConfigs\n                            \n                            \n                                    Protected\n                                updateDeckProps\n                            \n                            \n                                    Protected\n                                updateLayers\n                            \n                            \n                                    Protected\n                                updateState\n                            \n                            \n                                    Protected\n                                updateViews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: PictureInPictureViewerProps)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        PictureInPictureViewerProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _channelConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:78\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:69\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Loader[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:74\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:73\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:68\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:86\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayerConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:83\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Layer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:82\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            props\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:84\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:81\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            vivViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VivView[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:80\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:158\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:157\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalize\n                        \n                        \n                    \n                \n            \n            \n                \nfinalize()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeDeck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDeck(props)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:201\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Deck\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            layerFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerFilter(undefined: LayerFilterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:233\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LayerFilterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewStateChange(undefined: OnViewStateChangeArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:239\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OnViewStateChangeArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChannelConfigs()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:220\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize(width: number, height: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:103\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSources(sources: DataSource[])\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:122\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            DataSource[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:160\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChannelConfigs(configs: Record>)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:137\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Record>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateDeckProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDeckProps(props: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:197\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:174\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(args: ValueOrGenerator | >)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:184\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ValueOrGenerator | >\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViews()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:170\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DetailView, OverviewView, OverviewViewNewArgs, VivView } from '@hubmap/vitessce-image-viewer';\n\nimport { ImageViewer, ImageViewerProps, LayerConfig } from './image-viewer';\n\nexport type OverviewArgs = Omit;\nexport interface PictureInPictureViewerProps extends ImageViewerProps {\n  overview: OverviewArgs;\n}\n\nconst OVERVIEW_DEFAULTS: Partial = {\n  margin: 25,\n  scale: 0.15,\n  position: 'bottom-left'\n};\n\nexport class PictureInPictureViewer extends ImageViewer {\n  constructor(props: PictureInPictureViewerProps) {\n    super({\n      ...props,\n      overview: { ...OVERVIEW_DEFAULTS, ...props.overview }\n    });\n  }\n\n  protected async createVivViews(): Promise {\n    const { loaders, width, height, props: { initialViewState, overview } } = this;\n    if (loaders.length === 0) { return []; }\n\n    const detailView = new DetailView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'detail',\n        width,\n        height\n      }\n    });\n\n    const overviewView = new OverviewView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'overview',\n        width,\n        height\n      },\n      loader: loaders[0],\n      ...overview\n    });\n\n    return [detailView, overviewView];\n  }\n\n  protected async createLayerConfigs(): Promise {\n    const { loaders, channelConfigs } = this;\n    if (loaders.length === 0) { return []; }\n\n    const loaderSelection: { channel: string }[] = [];\n    const channelIsOn: boolean[] = [];\n    const colorValues: [number, number, number][] = [];\n    const sliderValues: [number, number][] = [];\n    for (const [key, { active, color, slider }] of Object.entries(channelConfigs)) {\n      loaderSelection.push({ channel: key });\n      channelIsOn.push(active);\n      colorValues.push(color);\n      sliderValues.push(slider);\n    }\n\n    const isRgb = loaders[0].isRgb;\n    return [\n      {\n        loader: this.loaders[0],\n        loaderSelection,\n        channelIsOn: isRgb ? [true, true, true] : channelIsOn,\n        colorValues: isRgb ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]] : colorValues,\n        sliderValues: isRgb ? [[0, 255], [0, 255], [0, 255]] : sliderValues\n      }\n    ];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PictureInPictureViewerProps.html":{"url":"interfaces/PictureInPictureViewerProps.html","title":"interface - PictureInPictureViewerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PictureInPictureViewerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ImageViewerProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        overview\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                    \n                                \n                                \n                                    \n                                        overview:         OverviewArgs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OverviewArgs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DetailView, OverviewView, OverviewViewNewArgs, VivView } from '@hubmap/vitessce-image-viewer';\n\nimport { ImageViewer, ImageViewerProps, LayerConfig } from './image-viewer';\n\nexport type OverviewArgs = Omit;\nexport interface PictureInPictureViewerProps extends ImageViewerProps {\n  overview: OverviewArgs;\n}\n\nconst OVERVIEW_DEFAULTS: Partial = {\n  margin: 25,\n  scale: 0.15,\n  position: 'bottom-left'\n};\n\nexport class PictureInPictureViewer extends ImageViewer {\n  constructor(props: PictureInPictureViewerProps) {\n    super({\n      ...props,\n      overview: { ...OVERVIEW_DEFAULTS, ...props.overview }\n    });\n  }\n\n  protected async createVivViews(): Promise {\n    const { loaders, width, height, props: { initialViewState, overview } } = this;\n    if (loaders.length === 0) { return []; }\n\n    const detailView = new DetailView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'detail',\n        width,\n        height\n      }\n    });\n\n    const overviewView = new OverviewView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'overview',\n        width,\n        height\n      },\n      loader: loaders[0],\n      ...overview\n    });\n\n    return [detailView, overviewView];\n  }\n\n  protected async createLayerConfigs(): Promise {\n    const { loaders, channelConfigs } = this;\n    if (loaders.length === 0) { return []; }\n\n    const loaderSelection: { channel: string }[] = [];\n    const channelIsOn: boolean[] = [];\n    const colorValues: [number, number, number][] = [];\n    const sliderValues: [number, number][] = [];\n    for (const [key, { active, color, slider }] of Object.entries(channelConfigs)) {\n      loaderSelection.push({ channel: key });\n      channelIsOn.push(active);\n      colorValues.push(color);\n      sliderValues.push(slider);\n    }\n\n    const isRgb = loaders[0].isRgb;\n    return [\n      {\n        loader: this.loaders[0],\n        loaderSelection,\n        channelIsOn: isRgb ? [true, true, true] : channelIsOn,\n        colorValues: isRgb ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]] : colorValues,\n        sliderValues: isRgb ? [[0, 255], [0, 255], [0, 255]] : sliderValues\n      }\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PureImageViewerLayer.html":{"url":"interfaces/PureImageViewerLayer.html","title":"interface - PureImageViewerLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PureImageViewerLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/image-viewer-layer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        brightness\n                                \n                                \n                                        color\n                                \n                                \n                                        colorScheme\n                                \n                                \n                                        customizedColor\n                                \n                                \n                                        defaultOrder\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        selected\n                                \n                                \n                                        selectionOrder\n                                \n                                \n                                        transparency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brightness\n                                    \n                                \n                                \n                                    \n                                        brightness:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                    \n                                \n                                \n                                    \n                                        colorScheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customizedColor\n                                    \n                                \n                                \n                                    \n                                        customizedColor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOrder\n                                    \n                                \n                                \n                                    \n                                        defaultOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionOrder\n                                    \n                                \n                                \n                                    \n                                        selectionOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transparency\n                                    \n                                \n                                \n                                    \n                                        transparency:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColorScheme } from './color-scheme';\n\nexport interface PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number];\n  transparency: number;\n\n  selected: boolean;\n  customizedColor: boolean;\n  selectionOrder: number;\n  defaultOrder: number;\n}\n\nexport type ImageViewerLayerRequiredArgNames = 'id' | 'colorScheme';\nexport type ImageViewerLayerArgs =\n  Pick &\n  Partial>;\n\nexport class ImageViewerLayer implements PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number] = [20, 60];\n  transparency = 100;\n\n  selected = false;\n  customizedColor = false;\n  selectionOrder = 0;\n  defaultOrder = -1;\n\n  constructor(data: ImageViewerLayerArgs) {\n    Object.assign(this, {\n      label: data.id,\n      color: data.colorScheme.colors[0]\n    }, data);\n  }\n\n  /**\n   * Dynamically creates a background style based on the layer's color or color scheme\n   */\n  get background(): string {\n    if (this.colorScheme.type === 'discrete') {\n      return this.color;\n    }\n\n    const colors = this.colorScheme.colors;\n    const positions = this.colorScheme.positions;\n\n    let gradient = 'linear-gradient(to right, ';\n    colors.forEach((color, index) => {\n      gradient += `${color} ${positions[index] * 100}%`;\n      if (index  225 ? true : false;\n  }\n\n  /**\n   * Determines whether the color icon is dark enough to require a border (dark mode only)\n   */\n  isDark(): boolean {\n    return this.getBrightness() \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserComponent.html":{"url":"components/ResultsBrowserComponent.html","title":"component - ResultsBrowserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsBrowserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/results-browser/results-browser/results-browser.component.ts\n\n\n    \n        Description\n    \n    \n        ResultsBrowser is the container component in charge of rendering the label and stats of\nthe results as well as handling the virtual scrolling and click emitters of\nResultsBrowserItems.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser\n            \n\n            \n                styleUrls\n                ./results-browser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atScrollBottom\n                            \n                            \n                                selectedResult\n                            \n                            \n                                virtualScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aggregateData\n                            \n                            \n                                data\n                            \n                            \n                                dataLoading\n                            \n                            \n                                resultLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resultClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aggregateData\n                    \n                \n                \n                    \n                        Type :         AggregateResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:26\n                            \n                        \n                \n                    \n                        Input used to add a list of stats at the top the results browser.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ListResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:21\n                            \n                        \n                \n                    \n                        Input array of items used to generate the list of results in the results browser.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dataLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:36\n                            \n                        \n                \n                    \n                        Whether or not the state is currently loading in data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resultLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:31\n                            \n                        \n                \n                    \n                        Input allowing the title of the result browser to be set outside of the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resultClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:42\n                            \n                        \n                \n                    \n                        Output emitting the result that was clicked on and its relevant information.\nUsed for opening and rendering the result viewer.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:74\n                \n            \n\n\n            \n                \n                    After the view is initialized this is listening for scroll events to check whether or not the\nuser has reached the bottom of the virtual scroll viewport to properly display / hide the\ngradient at the bottom.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:63\n                \n            \n\n\n            \n                \n                    Re-Checks whether or not we need the gradient to be displayed everytime the data reloads.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            atScrollBottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:53\n                            \n                        \n\n                \n                    \n                        Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\nUsed to determine whether or not to render the gradient at the bottom.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListResult\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:58\n                            \n                        \n\n                \n                    \n                        Keeps track of the selected result for highlighting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            virtualScroll\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CdkVirtualScrollViewport\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CdkVirtualScrollViewport)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser/results-browser.component.ts:47\n                            \n                        \n\n                \n                    \n                        Linking the virtual scroll viewport in the html page to the ts page.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { AggregateResult, ListResult } from 'ccf-database';\n\n\n/**\n * ResultsBrowser is the container component in charge of rendering the label and stats of\n * the results as well as handling the virtual scrolling and click emitters of\n * ResultsBrowserItems.\n */\n@Component({\n  selector: 'ccf-results-browser',\n  templateUrl: './results-browser.component.html',\n  styleUrls: ['./results-browser.component.scss']\n})\nexport class ResultsBrowserComponent implements AfterViewInit, OnChanges {\n\n  /**\n   * Input array of items used to generate the list of results in the results browser.\n   */\n  @Input() data: ListResult[];\n\n  /**\n   * Input used to add a list of stats at the top the results browser.\n   */\n  @Input() aggregateData: AggregateResult[];\n\n  /**\n   * Input allowing the title of the result browser to be set outside of the component.\n   */\n  @Input() resultLabel: string;\n\n  /**\n   * Whether or not the state is currently loading in data.\n   */\n  @Input() dataLoading: boolean;\n\n  /**\n   * Output emitting the result that was clicked on and its relevant information.\n   * Used for opening and rendering the result viewer.\n   */\n  @Output() resultClicked = new EventEmitter();\n\n  /**\n   * Linking the virtual scroll viewport in the html page to the ts page.\n   */\n  @ViewChild(CdkVirtualScrollViewport) virtualScroll: CdkVirtualScrollViewport;\n\n  /**\n   * Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\n   * Used to determine whether or not to render the gradient at the bottom.\n   */\n  atScrollBottom = false;\n\n  /**\n   * Keeps track of the selected result for highlighting\n   */\n  selectedResult: ListResult;\n\n  /**\n   * Re-Checks whether or not we need the gradient to be displayed everytime the data reloads.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.dataLoading && !this.dataLoading) {\n      this.atScrollBottom = this.virtualScroll.measureScrollOffset('bottom') === 0;\n    }\n  }\n\n  /**\n   * After the view is initialized this is listening for scroll events to check whether or not the\n   * user has reached the bottom of the virtual scroll viewport to properly display / hide the\n   * gradient at the bottom.\n   */\n  ngAfterViewInit(): void {\n    this.virtualScroll.elementScrolled()\n      .subscribe(event => {\n        if (this.virtualScroll.measureScrollOffset('bottom') \n    \n\n    \n        \n  \n    {{ resultLabel }}\n    \n      {{stat.count}}\n      {{stat.label}}\n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./results-browser.component.scss\n                \n                .results-browser-container {\n    display: flex;\n    flex-direction: column;\n    height: calc(100% - 7rem);\n    padding: .75rem 1.5rem 1.5rem 1.5rem;\n\n    .stat-box {\n        margin-bottom: 1.5rem;\n        line-height: 1.25;\n\n        #title {\n            margin-bottom: .75rem;\n            font-weight: bold;\n        }\n\n        .stat-row {\n            display: flex;\n            flex-direction: row;\n\n            .stat-value {\n                margin-right: 1rem;\n                width: 5.5rem;\n                text-align: right;\n            }\n        }\n    }\n\n    .results-virtual-scroll {\n        flex-grow: 1;\n        scrollbar-width: thin;\n\n        .results-browser-list {\n            display: flex;\n            flex-direction: row;\n            flex-wrap: wrap;\n        }\n    }\n\n    .scroll-gradient {\n        position: absolute;\n        height: 9rem;\n        width: 95%;\n        bottom: 0;\n    }\n    .scroll-gradient.hidden {\n        display: none;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ resultLabel }}          {{stat.count}}      {{stat.label}}                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserItemComponent.html":{"url":"components/ResultsBrowserItemComponent.html","title":"component - ResultsBrowserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsBrowserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts\n\n\n    \n        Description\n    \n    \n        Component in charge of rendering the individual result browser items that are\nused in the ResultsBrowserComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser-item\n            \n\n            \n                styleUrls\n                ./results-browser-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                openImageViewer\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ListResult\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:19\n                            \n                        \n                \n                    \n                        Input object containing the label, download, click action,\nand image information for the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        openImageViewer\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:24\n                            \n                        \n                \n                    \n                        Output used to pass up the intent to open the ImageViewer\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openResult\n                        \n                        \n                    \n                \n            \n            \n                \nopenResult()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:30\n                \n            \n\n\n            \n                \n                    Decided which action to take based on the result's resultType property\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ListResult } from 'ccf-database';\n\n\n/**\n * Component in charge of rendering the individual result browser items that are\n * used in the ResultsBrowserComponent.\n */\n@Component({\n  selector: 'ccf-results-browser-item',\n  templateUrl: './results-browser-item.component.html',\n  styleUrls: ['./results-browser-item.component.scss']\n})\nexport class ResultsBrowserItemComponent {\n  /**\n   * Input object containing the label, download, click action,\n   * and image information for the component.\n   */\n  @Input() data: ListResult;\n\n  /**\n   * Output used to pass up the intent to open the ImageViewer\n   */\n  @Output() openImageViewer = new EventEmitter();\n\n  /**\n   * Decided which action to take based on the result's resultType property\n   * @param result the result which was clicked on\n   */\n  openResult(): void {\n    switch (this.data.resultType) {\n      case ('image_viewer'): {\n        // Open the image-viewer\n        this.openImageViewer.emit();\n        break;\n      }\n      case ('external_link'): {\n        // Open link in new tab\n        window.open(this.data.resultUrl, '_blank');\n        break;\n      }\n      case ('local_link'): {\n        // Open link in current tab\n        window.open(this.data.resultUrl, '_self');\n        break;\n      }\n      default: {\n        // When no resultType is set, image viewer is the default\n        this.openImageViewer.emit();\n        break;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n\n    \n      {{ data.label }}\n      {{ info }}\n    \n  \n\n  \n    \n      cloud_download\n    \n  \n  \n    \n      cloud_download\n    \n  \n\n\n    \n\n    \n                \n                    ./results-browser-item.component.scss\n                \n                @use '~@angular/material/theming' as *;\n\n.result-item {\n    border-top: 1px solid;\n    padding: .5rem;\n    display: flex;\n    flex-direction: row;\n    height: 4rem;\n\n    .result-item-click-area {\n        display: flex;\n        cursor: pointer;\n\n        .result-image {\n            width: 5rem;\n            height: 100%;\n            object-fit: cover;\n        }\n\n        .result-image-placeholder {\n            width: 5rem;\n        }\n\n        .result-description {\n            width: 15rem;\n            font-size: .625rem;\n            margin-left: 1rem;\n            margin-right: 1rem;\n            line-height: 1.25;\n\n            div {\n                width: 10rem;\n            }\n\n            .description-label {\n                font-weight: bold !important;\n            }\n\n            .description-data {\n                text-overflow: ellipsis;\n                overflow: hidden;\n                white-space: nowrap;\n                font-weight: lighter;\n            }\n        }\n    }\n\n    .result-download {\n        width: 1.5rem;\n\n        .download {\n            cursor: pointer;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ data.label }}      {{ info }}                  cloud_download                  cloud_download      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserItemModule.html":{"url":"modules/ResultsBrowserItemModule.html","title":"module - ResultsBrowserItemModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResultsBrowserItemModule\n\n\n\ncluster_ResultsBrowserItemModule_declarations\n\n\n\ncluster_ResultsBrowserItemModule_exports\n\n\n\n\nResultsBrowserItemComponent\n\nResultsBrowserItemComponent\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule -->\n\nResultsBrowserItemComponent->ResultsBrowserItemModule\n\n\n\n\n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent  -->\n\nResultsBrowserItemModule->ResultsBrowserItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/results-browser/results-browser-item/results-browser-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResultsBrowserItemComponent } from './results-browser-item.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [ResultsBrowserItemComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [ResultsBrowserItemComponent]\n})\nexport class ResultsBrowserItemModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserModule.html":{"url":"modules/ResultsBrowserModule.html","title":"module - ResultsBrowserModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_imports\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserModule -->\n\nResultsBrowserItemModule->ResultsBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/results-browser/results-browser/results-browser.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResultsBrowserItemModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResultsBrowserItemModule } from '../results-browser-item/results-browser-item.module';\nimport { ResultsBrowserComponent } from './results-browser.component';\n\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\n\n@NgModule({\n  declarations: [ResultsBrowserComponent],\n  imports: [\n    CommonModule,\n    ResultsBrowserItemModule,\n    ScrollingModule\n  ],\n  exports: [ResultsBrowserComponent]\n})\nexport class ResultsBrowserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchemeDropdownComponent.html":{"url":"components/SchemeDropdownComponent.html","title":"component - SchemeDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SchemeDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/scheme-dropdown/scheme-dropdown.component.ts\n\n\n    \n        Description\n    \n    \n        Scheme dropdown menu (for the Layers section)\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-scheme-dropdown\n            \n\n            \n                styleUrls\n                ./scheme-dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scheme-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                schemeIdx\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                schemeChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colorScheme\n                    \n                \n                \n                    \n                        Type :         ColorScheme\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES[0]\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Current color scheme\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:18\n                            \n                        \n                \n                    \n                        All scheme options available\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Emits ColorSchemeSelection of a selected scheme\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:38\n                \n            \n\n\n            \n                \n                    Filters out scheme options to include only discrete schemes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            schemeChanged\n                        \n                        \n                    \n                \n            \n            \n                \nschemeChanged(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:46\n                \n            \n\n\n            \n                \n                    Updates the current scheme index and emits the currently selected scheme\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeIdx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:33\n                            \n                        \n\n                \n                    \n                        Index of the currently selected scheme\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../../modules/color-scheme/color-schemes';\n\n/**\n * Scheme dropdown menu (for the Layers section)\n */\n@Component({\n  selector: 'ccf-scheme-dropdown',\n  templateUrl: './scheme-dropdown.component.html',\n  styleUrls: ['./scheme-dropdown.component.scss']\n})\nexport class SchemeDropdownComponent implements OnInit {\n\n  /**\n   * All scheme options available\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * Current color scheme\n   */\n  @Input() colorScheme: ColorScheme = DEFAULT_COLOR_SCHEMES[0];\n\n  /**\n   * Emits ColorSchemeSelection of a selected scheme\n   */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Index of the currently selected scheme\n   */\n  schemeIdx = 0;\n\n  /**\n   * Filters out scheme options to include only discrete schemes\n   */\n  ngOnInit(): void {\n    this.schemeOptions = this.schemeOptions.filter(scheme => scheme.type === 'discrete');\n    this.schemeChanged(0);\n  }\n\n  /**\n   * Updates the current scheme index and emits the currently selected scheme\n   */\n  schemeChanged(idx: number): void {\n    this.colorScheme = this.schemeOptions[idx];\n    this.schemeIdx = idx;\n    this.schemeChange.emit(this.colorScheme);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./scheme-dropdown.component.scss\n                \n                .container {\n  display: flex;\n  justify-content: flex-end;\n  width: 104%;\n  height: 3rem;\n\n  mat-form-field {\n    width: 9rem;\n\n    ::ng-deep .mat-form-field-wrapper {\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n// Disable label resizing effect\n::ng-deep .mat-form-field-label {\n  transform: none !important;\n}\n\n::ng-deep .scheme-option-panel {\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  border-width: 1px;\n  border-style: solid;\n  position: absolute;\n  right: -10rem;\n  top: -1rem;\n  display: flex;\n  flex-direction: column;\n  width: 12rem;\n  height: 9rem;\n\n  mat-option:first-child {\n    margin-top: 0.75rem;\n  }\n  mat-option:last-of-type {\n    margin-bottom: 0.75rem;\n  }\n\n  mat-option {\n    .mat-option-text {\n      display: flex;\n      justify-content: center;\n\n      .mat-radio-checked {\n        .mat-radio-label {\n          .mat-radio-container {\n            .mat-radio-outer-circle {\n              border-width: 0 !important;\n            }\n          }\n        }\n      }\n\n      .scheme-radio-button {\n        .mat-radio-label {\n          .mat-radio-container {\n            width: 1rem;\n            height: 1rem;\n            .mat-radio-outer-circle {\n              width: 1rem;\n              height: 1rem;\n              border-width: 1px; \n              border-style: solid;\n            }\n            .mat-radio-inner-circle {\n              width: 1rem;\n              height: 1rem;\n            }\n          }\n          .mat-radio-label-content {\n            padding-left: 1rem;\n          }\n        }\n\n        .swatch {\n          display: flex;\n          width: 7rem;\n          height: 1rem;\n\n          :hover {\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SchemeDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchemeDropdownModule.html":{"url":"modules/SchemeDropdownModule.html","title":"module - SchemeDropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    SchemeDropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchemeDropdownModule\n\n\n\ncluster_SchemeDropdownModule_declarations\n\n\n\ncluster_SchemeDropdownModule_imports\n\n\n\ncluster_SchemeDropdownModule_exports\n\n\n\n\nSchemeDropdownComponent\n\nSchemeDropdownComponent\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nSchemeDropdownModule -->\n\nSchemeDropdownComponent->SchemeDropdownModule\n\n\n\n\n\nSchemeDropdownComponent \n\nSchemeDropdownComponent \n\nSchemeDropdownComponent  -->\n\nSchemeDropdownModule->SchemeDropdownComponent \n\n\n\n\n\nColorBarModule\n\nColorBarModule\n\nSchemeDropdownModule -->\n\nColorBarModule->SchemeDropdownModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/scheme-dropdown/scheme-dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SchemeDropdownComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorBarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SchemeDropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ColorBarModule } from '../../modules/color-scheme/color-bar/color-bar.module';\nimport { SchemeDropdownComponent } from './scheme-dropdown.component';\n\n@NgModule({\n  declarations: [SchemeDropdownComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRadioModule,\n    ColorBarModule\n  ],\n  exports: [SchemeDropdownComponent]\n})\nexport class SchemeDropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Search result interface type for the search results\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayLabel\n                                \n                                \n                                        index\n                                \n                                \n                                        node\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayLabel\n                                    \n                                \n                                \n                                    \n                                        displayLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label to be displayed in the view \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ensures order of search-results \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:         OntologyNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    instance of OntologyNode, provides data associated with a search result \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Immutable } from '@ngxs-labs/data/typings';\nimport { Store } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\nimport { JsonOntologyNode, jsonToOntologyNode } from '../../models/json-ontology';\nimport { OntologyNode } from '../../models/ontology-node';\nimport { OntologyState, OntologyStateModel } from '../../store/ontology/ontology.state';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/** Type of function for getting child nodes from a parent node. */\nexport type GetChildrenFunc = (o: OntologyNode) => OntologyNode[];\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[''] = { parent: '', children: [] } as unknown as OntologyNode;\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[''].children) as string;\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[''];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = {\n    id: 'http://purl.obolibrary.org/obo/UBERON_0013702',\n    label: 'body',\n    parent: '',\n    children: organIds,\n    synonymLabels: []\n  };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /** Root node in ontology. */\n  rootNode: Observable>;\n\n  /**\n   * Creates an instance of ontology search service.\n   *\n   * @param http The http requests service.\n   * @param store The global data store.\n   * @param ontologyState The global ontology state.\n   */\n  constructor(private http: HttpClient, private store: Store, private ontologyState: OntologyState) {\n    this.rootNode = this.ontologyState.rootNode$;\n    this.getChildren = this.getChildren.bind(this) as GetChildrenFunc;\n  }\n\n  /**\n   * Loads ontology.\n   */\n  loadOntology(): void {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => this.ontologyState.setOntology(ontology));\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.ontologyState.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchableItem.html":{"url":"interfaces/SearchableItem.html","title":"interface - SearchableItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchableItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Item that can be searched for. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        age\n                                \n                                \n                                            Optional\n                                        bmi\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        ontologyTerms\n                                \n                                \n                                            Optional\n                                        sex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Age. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                    \n                                \n                                \n                                    \n                                        bmi:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    BMI. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ontology terms. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Gender. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntity.html":{"url":"interfaces/SpatialEntity.html","title":"interface - SpatialEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                A spatial entity. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        creation_date\n                                \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                            Optional\n                                        creator_first_name\n                                \n                                \n                                            Optional\n                                        creator_last_name\n                                \n                                \n                                            Optional\n                                        creator_orcid\n                                \n                                \n                                        dimension_units\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        object\n                                \n                                \n                                        x_dimension\n                                \n                                \n                                        y_dimension\n                                \n                                \n                                        z_dimension\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Coloring. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creation date. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator first name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator last name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_orcid\n                                    \n                                \n                                \n                                    \n                                        creator_orcid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units dimensions are in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    IRI of the Entity this Spatial Entity represents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Entity label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Data references. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z-dimension. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReference.html":{"url":"interfaces/SpatialObjectReference.html","title":"interface - SpatialObjectReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialObjectReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                A reference to a spatial object. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        file\n                                \n                                \n                                        file_format\n                                \n                                \n                                            Optional\n                                        file_subpath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data file name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data format. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_subpath\n                                    \n                                \n                                \n                                    \n                                        file_subpath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File subpath. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacement.html":{"url":"interfaces/SpatialPlacement.html","title":"interface - SpatialPlacement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialPlacement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                Object describing the placement of an entity. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        placement_date\n                                \n                                \n                                            Optional\n                                        rotation_order\n                                \n                                \n                                        rotation_units\n                                \n                                \n                                        scaling_units\n                                \n                                \n                                        source\n                                \n                                \n                                        target\n                                \n                                \n                                        translation_units\n                                \n                                \n                                            Optional\n                                        w_rotation\n                                \n                                \n                                        x_rotation\n                                \n                                \n                                        x_scaling\n                                \n                                \n                                        x_translation\n                                \n                                \n                                        y_rotation\n                                \n                                \n                                        y_scaling\n                                \n                                \n                                        y_translation\n                                \n                                \n                                        z_rotation\n                                \n                                \n                                        z_scaling\n                                \n                                \n                                        z_translation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date placement was made. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_order\n                                    \n                                \n                                \n                                    \n                                        rotation_order:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Order rotations should be applied in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units rotation is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units scaling is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     SpatialEntity | SpatialObjectReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialEntity | SpatialObjectReference\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Source entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         SpatialEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialEntity\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Target entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units translation is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        w_rotation\n                                    \n                                \n                                \n                                    \n                                        w_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Rotation in w-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in z-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in z-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in z-dimension. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _lighting\n                                \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        scenegraph\n                                \n                                \n                                            Optional\n                                        scenegraphNode\n                                \n                                \n                                        tooltip\n                                \n                                \n                                        transformMatrix\n                                \n                                \n                                            Optional\n                                        unpickable\n                                \n                                \n                                            Optional\n                                        wireframe\n                                \n                                \n                                            Optional\n                                        zoomBasedOpacity\n                                \n                                \n                                            Optional\n                                        zoomToOnLoad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { load, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { CubeGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\n\n// Programmers Note: had to disable tslint in a few places due to deficient typings.\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\n// tslint:disable: no-unsafe-any\nasync function loadGLTF(model: SpatialSceneNode): Promise {\n  const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n\n  const scenegraphNode = model.scenegraphNode ? gltf.nodes?.find((n) => n.name === model.scenegraphNode) : undefined;\n  if (scenegraphNode) {\n    if (!scenegraphNode.rotation && gltf.scene?.nodes?.length > 0) {\n      scenegraphNode.rotation = gltf.scene.nodes[gltf.scene.nodes.length-1].rotation;\n    }\n    gltf.scene = {\n      id: 'scene-1',\n      name: 'Scene',\n      nodes: [scenegraphNode]\n    };\n    gltf.scenes = [gltf.scene, ...gltf.scenes];\n  }\n  return gltf;\n}\n// tslint:enable: no-unsafe-any\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: {[key: string]: unknown}): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // tslint:disable-next-line: no-unsafe-any\n        mesh: new CubeGeometry(),\n        wireframe: false,\n        getTransformMatrix: (d) => (d as {transformMatrix: number[][]}).transformMatrix,\n        getColor: (d) => (d as {color: [number, number, number, number]}).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({data: data || [], zoomOpacity: 0.8});\n\n    // tslint:disable-next-line: no-unsafe-any\n    registerLoaders([DracoWorkerLoader, GLTFLoader]);\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as {data: SpatialSceneNode[], zoomOpacity: number};\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    return [\n      meshLayer('cubes', cubes, {wireframe: false}),\n      meshLayer('wireframes', wireframes, {wireframe: true, pickable: false}),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          ...{\n            id: 'models-' + model['@id'],\n            opacity: model.zoomBasedOpacity ? state.zoomOpacity : 1.0,\n            pickable: !model.unpickable,\n            coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n            data: [model],\n            scenegraph: model.scenegraphNode ? loadGLTF(model) : model.scenegraph,\n            _lighting: model._lighting,  // 'pbr' | undefined\n            getTransformMatrix: model.transformMatrix,\n            getColor: model.color || [0, 255, 0, 0.5*255],\n          }\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(e: {info: object}): unknown {\n    return e.info;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode-1.html":{"url":"interfaces/SpatialSceneNode-1.html","title":"interface - SpatialSceneNode-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-scene.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _lighting\n                                \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        scenegraph\n                                \n                                \n                                            Optional\n                                        scenegraphNode\n                                \n                                \n                                        tooltip\n                                \n                                \n                                        transformMatrix\n                                \n                                \n                                            Optional\n                                        unpickable\n                                \n                                \n                                            Optional\n                                        wireframe\n                                \n                                \n                                            Optional\n                                        zoomBasedOpacity\n                                \n                                \n                                            Optional\n                                        zoomToOnLoad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport { getSpatialEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { ccf, rui } from './util/prefixes';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': 'SpatialSceneNode';\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return getSpatialEntity(this.db.store, bodyId);\n  }\n\n  getReferenceOrgans(filter?: Filter): SpatialEntity[] {\n    let organsId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        organsId = ccf.spatial.MaleOrgans.id;\n        break;\n      case 'Female':\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n      case 'Both':\n      default:\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n    }\n    return [getSpatialEntity(this.db.store, organsId)];\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const wholeBody = getSpatialEntity(this.db.store, ccf.spatial.Body.id);\n    const body = this.getReferenceBody(filter);\n    const organs = getSpatialEntity(this.db.store, ccf.spatial.MaleOrgans.id);\n    const store = this.db.store;\n    const terms = filter?.ontologyTerms || [];\n    const hasTerm = {\n      body: terms.indexOf(rui.body.id) === 0,\n      kidney: terms.indexOf(rui.kidney.id) === 0,\n      right_kidney: terms.indexOf(rui.right_kidney.id) === 0,\n      left_kidney: terms.indexOf(rui.left_kidney.id) === 0,\n      spleen: terms.indexOf(rui.spleen.id) === 0,\n    };\n\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      this.getSceneNode(body, wholeBody, {unpickable: true, color: [255, 255, 255, 1*255]}),\n      ...this.getReferenceOrgans(filter).map((organ) =>\n        this.getSceneNode(organ, body, {unpickable: true, _lighting: 'pbr', zoomBasedOpacity: true,  color: [255, 0, 0, 1*255]})\n      ),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.right_kidney, zoomToOnLoad: hasTerm.right_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.left_kidney, zoomToOnLoad: hasTerm.left_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleen').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.spleen, zoomToOnLoad: hasTerm.spleen})\n    ];\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), wholeBody, {color: [0, 0, 255, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), wholeBody, {color: [255, 0, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC1').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC2').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC3').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true})\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const highlighted = new Set(filter?.highlightedEntities);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, {\n        color: highlighted.has(entity.entityId as string) ? [10, 10, 229, 0.9*255] : [255, 255, 255, 0.9*255]\n      })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial = {}): SpatialSceneNode | undefined {\n    const has3dObject = source.object && source.object.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4().rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId || undefined,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      } as SpatialSceneNode;\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerOverlayComponent.html":{"url":"components/SpinnerOverlayComponent.html","title":"component - SpinnerOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n\n\n    \n        Description\n    \n    \n        Overlay component that displays a progress spinner and\nan optional text description.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spinner-overlay\n            \n\n            \n                styleUrls\n                ./spinner-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:19\n                            \n                        \n                \n                    \n                        Whether the overlay is active/showing. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:22\n                            \n                        \n                \n                    \n                        Optional text description displayed alongside the spinner. \n\n                    \n                \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-spinner-overlay'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Overlay component that displays a progress spinner and\n * an optional text description.\n */\n@Component({\n  selector: 'ccf-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerOverlayComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spinner-overlay';\n\n  /** Whether the overlay is active/showing. */\n  @Input() @HostBinding('class.active') active = false;\n\n  /** Optional text description displayed alongside the spinner. */\n  @Input() text: string;\n}\n\n    \n\n    \n        \n{{ text }}\n\n    \n\n    \n                \n                    ./spinner-overlay.component.scss\n                \n                :host {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 4rem);\n  top: 4rem;\n  z-index: 100;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.6s, opacity 0.4s ease-in-out;\n\n  mat-spinner {\n    margin-bottom: 1rem;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out 0.3s;\n  }\n\n  &.active {\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n\n    mat-spinner {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpinnerOverlayModule.html":{"url":"modules/SpinnerOverlayModule.html","title":"module - SpinnerOverlayModule","body":"\n                   \n\n\n\n\n    Modules\n    SpinnerOverlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/spinner-overlay/spinner-overlay.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerOverlayComponent],\n  exports: [SpinnerOverlayComponent]\n})\nexport class SpinnerOverlayModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/store/store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { environment } from '../../../environments/environment';\nimport { DataState } from './data/data.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { OntologyState } from './ontology/ontology.state';\nimport { ViewerState } from './viewer/viewer.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  IconRegistryState,\n  DataState,\n  OntologyState,\n  ViewerState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/theming/theming.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                component\n                            \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                    Private\n                                initializeImpl\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/theming/theming.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyThemeClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:82\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:37\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:20\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeImpl(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:67\n                \n            \n\n\n            \n                \n                    Implementation of initialize.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The top level component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetTheme\n                        \n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:56\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theming/theming.service.ts:46\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theming/theming.service.ts:13\n                            \n                        \n\n                \n                    \n                        Top level component on which themes are applied. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theming/theming.service.ts:15\n                            \n                        \n\n                \n                    \n                        Default theme class. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theming/theming.service.ts:17\n                            \n                        \n\n                \n                    \n                        Currently active theme class. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, Inject, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  /** Top level component on which themes are applied. */\n  private component?: ComponentRef;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const service = component.injector.get(ThemingService);\n    service.initializeImpl(component);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme || '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) { return; }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Implementation of initialize.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  private initializeImpl(component: ComponentRef): void {\n    if (this.component) {\n      throw new Error('Theming service has already been initialized!');\n    }\n\n    this.component = component;\n    this.applyThemeClass(this.theme);\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const component = this.component;\n    if (!cls || !component) { return; }\n\n    const renderer = component.injector.get(Renderer2, null);\n    if (!renderer) { return; }\n\n    const root = component.location.nativeElement as HTMLElement;\n    const overlay = component.injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) { renderer[methodName](overlay, cls); }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TiffInfo.html":{"url":"interfaces/TiffInfo.html","title":"interface - TiffInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TiffInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        offsets\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offsets\n                                    \n                                \n                                \n                                    \n                                        offsets:     string | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Loader, createZarrLoader, OMEZarrReader, createOMETiffLoader } from '@hubmap/vitessce-image-viewer';\n\nexport enum LoaderType {\n  Zarr = 'zarr',\n  OMEZarr = 'ome-zarr',\n  StaticZarr = 'static',\n\n  Tiff = 'tiff',\n  Tiff2 = 'tiff 2',\n  BFTiff = 'bf tiff',\n  CovidTiff = 'covid tiff',\n  StaticTiff = 'static tiff'\n}\n\n// createLoader info argument types\nexport type ZarrInfo = Parameters[0];\nexport interface OMEZarrInfo {\n  url: string;\n}\nexport interface TiffInfo {\n  url: string;\n  offsets?: string | number[];\n}\n\n// Copied from vitessce-image-viewer demo source\nexport async function createLoader(\n  type: LoaderType,\n  info: ZarrInfo | OMEZarrInfo | TiffInfo\n): Promise {\n  switch (type) {\n    case LoaderType.Zarr:\n    case LoaderType.StaticZarr:\n      return createZarrLoader(info as ZarrInfo);\n\n    case LoaderType.OMEZarr: {\n      const { url } = info as OMEZarrInfo;\n      const reader = await OMEZarrReader.fromUrl(url);\n      const { loader } = await reader.loadOMEZarr();\n      return loader;\n    }\n\n    case LoaderType.Tiff:\n    case LoaderType.Tiff2:\n    case LoaderType.BFTiff:\n    case LoaderType.CovidTiff:\n    case LoaderType.StaticTiff: {\n      const { url, offsets = [] } = info as TiffInfo;\n      return createOMETiffLoader({ url, offsets: await loadOffsets(offsets) });\n    }\n\n    default:\n      throw Error(`Pyramid type (${type}) is not supported`);\n  }\n}\n\nasync function loadOffsets(url: string | number[]): Promise {\n  if (typeof url !== 'string') { return url; }\n  const res = await fetch(url);\n  return res.status !== 404 ? await res.json() as number[] : [];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-toggle-button'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether this button is attach to a drawer in position 'end'. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:79\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:59\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:69\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:91\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the owning drawer is opened. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"start\" | \"end\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'start'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:34\n                            \n                        \n\n                \n                    \n                        Position of the owning side drawer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:25\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'keyboard_arrow_right';\n    let collapse = 'keyboard_arrow_left';\n    if (this.position === 'end') { ([expand, collapse] = [collapse, expand]); }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0px 4px 4px 0px;\n  cursor: pointer;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 4px 0px 0px 4px;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  transform: scale(1,2);\n  top: .6rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValueObject.html":{"url":"interfaces/ValueObject.html","title":"interface - ValueObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValueObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@value' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @value\n                                    \n                                \n                                \n                                    \n                                        @value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@value' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerComponent.html":{"url":"components/ViewerComponent.html","title":"component - ViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/image-viewer/viewer/viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-viewer\n            \n\n            \n                styleUrls\n                ./viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _layers\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                canvas\n                            \n                            \n                                isDemo\n                            \n                            \n                                    Private\n                                sensor\n                            \n                            \n                                    Private\n                                viewer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                sourcesFromUrls\n                            \n                            \n                                    Private\n                                    Async\n                                updateLayers\n                            \n                            \n                                    Private\n                                    Async\n                                updateSources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                            \n                                sources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                channelsChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sources\n                                \n                                \n                                    layers\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(container: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        channelsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:75\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sourcesFromUrls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sourcesFromUrls(urls: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urls\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DataSource[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            updateSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSources()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ImageViewerLayer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDemo\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sensor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResizeSensor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageViewer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:80\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n\n                \n                    \n                        getsources()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:62\n                                \n                            \n\n                \n                    \n                        setsources(urls: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            urls\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n\n                \n                    \n                        getlayers()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:72\n                                \n                            \n\n                \n                    \n                        setlayers(layers: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/image-viewer/viewer/viewer.component.ts:68\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layers\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { ChannelConfig, DataSource, ImageViewer, LoaderType, PictureInPictureViewer, TiffInfo } from 'ccf-image-viewer';\nimport { ResizeSensor } from 'css-element-queries';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\nconst DEMO_SOURCE: DataSource = {\n  type: LoaderType.Tiff,\n  info: {\n    url: 'https://vitessce-demo-data.storage.googleapis.com/test-data/hubmap/pyramid_0.0.2/spraggins.ome.tif'\n  }\n};\n\nfunction hexToRgbTriple(hex: string): [number, number, number] {\n  // tslint:disable: no-bitwise\n  if (hex === undefined || hex.length !== 7) {\n    return [255, 255, 255];\n  }\n\n  const value = Number.parseInt(hex.slice(1), 16) | 0;\n  if (Number.isNaN(value)) {\n    return [255, 255, 255];\n  }\n\n  const red = (value >> 16) & 0xff;\n  const green = (value >> 8) & 0xff;\n  const blue = value & 0xff;\n\n  return [red, green, blue];\n  // tslint:enable: no-bitwise\n}\n\nfunction brightnessToSlider(brightness: [number, number]): [number, number] {\n  const SLIDER_MAX = 2 ** 16 - 1;\n  return [\n    Math.trunc(SLIDER_MAX * brightness[0] / 100),\n    Math.trunc(SLIDER_MAX * brightness[1] / 100)\n  ];\n}\n\n@Component({\n  selector: 'ccf-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewerComponent implements AfterViewInit, OnDestroy {\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set sources(urls: string[]) {\n    this._sources = this.sourcesFromUrls(urls);\n    this.isDemo = false;\n    if (this._sources.length === 0) {\n      this._sources = []; // Disabled showing demo image via [DEMO_SOURCE]\n      this.isDemo = true;\n    }\n\n    this.updateSources();\n  }\n  get sources(): string[] {\n    return this._sources.map(source => (source.info as TiffInfo).url);\n  }\n  private _sources: DataSource[] = []; // Disabled showing demo image via [DEMO_SOURCE]\n\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set layers(layers: ImageViewerLayer[]) {\n    this._layers = layers;\n    this.updateLayers();\n  }\n  get layers(): ImageViewerLayer[] { return this._layers; }\n  private _layers: ImageViewerLayer[] = [];\n\n  @Output() channelsChange = new EventEmitter();\n\n  @ViewChild('canvas', { read: ElementRef }) canvas: ElementRef;\n\n  isDemo = true;\n  private viewer: ImageViewer;\n  private sensor: ResizeSensor;\n\n  constructor(private readonly container: ElementRef) { }\n\n  ngAfterViewInit(): void {\n    const {\n      container: { nativeElement: container },\n      canvas: { nativeElement: element }\n    } = this;\n    const { clientWidth, clientHeight } = element;\n\n    this.viewer = new PictureInPictureViewer({\n      id: 'image-viewer',\n      initialViewState: {\n        zoom: -6,\n        target: [25000, 10000, 0]\n      },\n      canvas: element,\n      width: clientWidth,\n      height: clientHeight,\n      overview: {\n        detailWidth: clientWidth,\n        detailHeight: clientHeight\n      },\n      defaultChannelConfig: {\n        active: false\n      }\n    });\n\n    this.sensor = new ResizeSensor(container, ({ width, height }) => {\n      this.viewer.setSize(width, height);\n    });\n\n    (async () => {\n      await this.updateSources();\n      await this.updateLayers();\n    })();\n  }\n\n  ngOnDestroy(): void {\n    this.sensor.detach();\n    this.viewer.finalize();\n  }\n\n  private async updateSources(): Promise {\n    const { _sources: sources, viewer, channelsChange } = this;\n    if (!viewer) {\n      return;\n    }\n\n    await viewer.setSources(sources);\n    channelsChange.emit(viewer.channelNames);\n  }\n\n  private async updateLayers(): Promise {\n    const { layers, viewer } = this;\n    if (!viewer || layers.length === 0) {\n      return;\n    }\n\n    const configs: Record> = layers.reduce((result, layer) => ({\n      ...result,\n      [layer.id]: {\n        active: layer.selected,\n        color: hexToRgbTriple(layer.color),\n        slider: brightnessToSlider(layer.brightness)\n      }\n    }), {});\n\n    await viewer.updateChannelConfigs(configs);\n  }\n\n  private sourcesFromUrls(urls: string[]): DataSource[] {\n    return urls.filter(url => !!url).map(url => ({\n      type: LoaderType.Tiff,\n      info: { url }\n    }));\n  }\n}\n\n    \n\n    \n        \n  warning\n  This is a demo image\n\n\n\n    \n\n    \n                \n                    ./viewer.component.scss\n                \n                :host {\n  .demo-warning {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n    text-align: center;\n\n    .text {\n      vertical-align: top;\n    }\n  }\n\n  canvas {\n    position: relative !important;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  warning  This is a demo image'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewerModule.html":{"url":"modules/ViewerModule.html","title":"module - ViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nViewerComponent\n\nViewerComponent\n\n\n\nViewerModule\n\nViewerModule\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/image-viewer/viewer/viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ViewerComponent } from './viewer.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [ViewerComponent],\n  exports: [ViewerComponent]\n})\nexport class ViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewerState.html":{"url":"injectables/ViewerState.html","title":"injectable - ViewerState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ViewerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/viewer/viewer.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsDataEntityCollectionsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                activeLayers$\n                            \n                            \n                                    Readonly\n                                layers$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLayers\n                            \n                            \n                                    Private\n                                getAutoColor\n                            \n                            \n                                setDefaultScheme\n                            \n                            \n                                updateLayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createLayers\n                        \n                        \n                    \n                \n            \n            \n                \ncreateLayers(ids: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/viewer/viewer.state.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAutoColor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAutoColor(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/store/viewer/viewer.state.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDefaultScheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetDefaultScheme(scheme: ColorScheme)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/viewer/viewer.state.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scheme\n                                    \n                                                ColorScheme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLayer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLayer(id: string, changes: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in src/app/core/store/viewer/viewer.state.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changes\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            activeLayers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/viewer/viewer.state.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            layers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/store/viewer/viewer.state.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { EntityUpdate, NgxsEntityCollections } from '@ngxs-labs/data/typings';\nimport { createEntityCollections } from '@ngxs-labs/data/utils';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { DEFAULT_COLOR_SCHEMES } from '../../../modules/color-scheme/color-schemes';\nimport { ColorScheme } from '../../models/color-scheme';\nimport { ImageViewerLayer, PureImageViewerLayer } from '../../models/image-viewer-layer';\n\n\nconst NUM_LAYERS_SELECTED_ON_CREATION = 3;\nconst IMAGE_VIEWER_LAYER_DEFAULTS = {\n  brightness: [2, 31] as [number, number],\n  transparency: 100,\n  customizedColor: false,\n  defaultOrder: -1\n};\n\nexport interface ViewerStateModel extends NgxsEntityCollections {\n  defaultScheme: ColorScheme;\n  autoColorIndex: number;\n  selectionCounter: number;\n}\n\n@StateRepository()\n@State({\n  name: 'viewer',\n  defaults: {\n    ...createEntityCollections(),\n    defaultScheme: DEFAULT_COLOR_SCHEMES[0],\n    autoColorIndex: 0,\n    selectionCounter: 0\n  }\n})\n@Injectable()\nexport class ViewerState extends NgxsDataEntityCollectionsRepository {\n  readonly layers$ = this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  );\n  readonly activeLayers$ = this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  );\n\n  @DataAction()\n  createLayers(ids: string[]): void {\n    const maxSelected = NUM_LAYERS_SELECTED_ON_CREATION;\n    const { defaultScheme } = this.snapshot;\n    const length = ids.length;\n\n    this.removeEntitiesMany(this.ids);\n    this.addEntitiesMany(ids.map((id, index) => ({\n      id,\n      label: id,\n      colorScheme: defaultScheme,\n      color: index ): void {\n    const { autoColorIndex, selectionCounter } = this.snapshot;\n    const layer = this.entities[id];\n    let color = changes.color || layer.color;\n    let defaultOrder = layer.defaultOrder;\n    if (!layer.customizedColor && !changes.customizedColor &&\n        changes.selected && layer.defaultOrder === -1) {\n      color = this.getAutoColor(autoColorIndex);\n      defaultOrder = autoColorIndex;\n      this.ctx.patchState({ autoColorIndex: autoColorIndex + 1 });\n    }\n\n    this.updateEntitiesMany([{\n      id,\n      changes: {\n        ...changes,\n        color,\n        selectionOrder: selectionCounter,\n        defaultOrder\n      }\n    }]);\n    this.ctx.patchState({ selectionCounter: selectionCounter + 1 });\n  }\n\n  @DataAction()\n  setDefaultScheme(scheme: ColorScheme): void {\n    const { entities } = this;\n    const changes: EntityUpdate[] = [];\n    for (const [id, layer] of Object.entries(entities)) {\n      if (!layer.customizedColor) {\n        const index = layer.colorScheme.colors.indexOf(layer.color);\n        changes.push({\n          id,\n          changes: {\n            colorScheme: scheme,\n            color: scheme.colors[index]\n          }\n        });\n      }\n    }\n\n    this.updateEntitiesMany(changes);\n    this.ctx.patchState({ defaultScheme: scheme });\n  }\n\n  private getAutoColor(index: number): string {\n    const { defaultScheme: { colors } } = this.snapshot;\n    const order = [0, 6, 3, 1, 5, 2, 4];\n    return colors[order[index % order.length]];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewerStateModel.html":{"url":"interfaces/ViewerStateModel.html","title":"interface - ViewerStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewerStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/viewer/viewer.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsEntityCollections\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        autoColorIndex\n                                \n                                \n                                        defaultScheme\n                                \n                                \n                                        selectionCounter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoColorIndex\n                                    \n                                \n                                \n                                    \n                                        autoColorIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultScheme\n                                    \n                                \n                                \n                                    \n                                        defaultScheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionCounter\n                                    \n                                \n                                \n                                    \n                                        selectionCounter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { EntityUpdate, NgxsEntityCollections } from '@ngxs-labs/data/typings';\nimport { createEntityCollections } from '@ngxs-labs/data/utils';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { DEFAULT_COLOR_SCHEMES } from '../../../modules/color-scheme/color-schemes';\nimport { ColorScheme } from '../../models/color-scheme';\nimport { ImageViewerLayer, PureImageViewerLayer } from '../../models/image-viewer-layer';\n\n\nconst NUM_LAYERS_SELECTED_ON_CREATION = 3;\nconst IMAGE_VIEWER_LAYER_DEFAULTS = {\n  brightness: [2, 31] as [number, number],\n  transparency: 100,\n  customizedColor: false,\n  defaultOrder: -1\n};\n\nexport interface ViewerStateModel extends NgxsEntityCollections {\n  defaultScheme: ColorScheme;\n  autoColorIndex: number;\n  selectionCounter: number;\n}\n\n@StateRepository()\n@State({\n  name: 'viewer',\n  defaults: {\n    ...createEntityCollections(),\n    defaultScheme: DEFAULT_COLOR_SCHEMES[0],\n    autoColorIndex: 0,\n    selectionCounter: 0\n  }\n})\n@Injectable()\nexport class ViewerState extends NgxsDataEntityCollectionsRepository {\n  readonly layers$ = this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  );\n  readonly activeLayers$ = this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  );\n\n  @DataAction()\n  createLayers(ids: string[]): void {\n    const maxSelected = NUM_LAYERS_SELECTED_ON_CREATION;\n    const { defaultScheme } = this.snapshot;\n    const length = ids.length;\n\n    this.removeEntitiesMany(this.ids);\n    this.addEntitiesMany(ids.map((id, index) => ({\n      id,\n      label: id,\n      colorScheme: defaultScheme,\n      color: index ): void {\n    const { autoColorIndex, selectionCounter } = this.snapshot;\n    const layer = this.entities[id];\n    let color = changes.color || layer.color;\n    let defaultOrder = layer.defaultOrder;\n    if (!layer.customizedColor && !changes.customizedColor &&\n        changes.selected && layer.defaultOrder === -1) {\n      color = this.getAutoColor(autoColorIndex);\n      defaultOrder = autoColorIndex;\n      this.ctx.patchState({ autoColorIndex: autoColorIndex + 1 });\n    }\n\n    this.updateEntitiesMany([{\n      id,\n      changes: {\n        ...changes,\n        color,\n        selectionOrder: selectionCounter,\n        defaultOrder\n      }\n    }]);\n    this.ctx.patchState({ selectionCounter: selectionCounter + 1 });\n  }\n\n  @DataAction()\n  setDefaultScheme(scheme: ColorScheme): void {\n    const { entities } = this;\n    const changes: EntityUpdate[] = [];\n    for (const [id, layer] of Object.entries(entities)) {\n      if (!layer.customizedColor) {\n        const index = layer.colorScheme.colors.indexOf(layer.color);\n        changes.push({\n          id,\n          changes: {\n            colorScheme: scheme,\n            color: scheme.colors[index]\n          }\n        });\n      }\n    }\n\n    this.updateEntitiesMany(changes);\n    this.ctx.patchState({ defaultScheme: scheme });\n  }\n\n  private getAutoColor(index: number): string {\n    const { defaultScheme: { colors } } = this.snapshot;\n    const order = [0, 6, 3, 1, 5, 2, 4];\n    return colors[order[index % order.length]];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) - Exploration User Interface (EUI).\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, gender, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.11\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.11\n        \n            @angular/compiler : ^9.1.11\n        \n            @angular/core : ^9.1.11\n        \n            @angular/forms : ^9.1.11\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.11\n        \n            @angular/platform-browser-dynamic : ^9.1.11\n        \n            @angular/router : ^9.1.11\n        \n            @deck.gl/core : ^8.2.3\n        \n            @deck.gl/geo-layers : ^8.2.3\n        \n            @deck.gl/layers : ^8.2.3\n        \n            @deck.gl/mesh-layers : ^8.2.3\n        \n            @hubmap/vitessce-image-viewer : ^0.3.2\n        \n            @loaders.gl/core : ^2.2.8\n        \n            @loaders.gl/draco : ^2.2.8\n        \n            @loaders.gl/gltf : ^2.2.8\n        \n            @luma.gl/core : ^8.2.0\n        \n            @math.gl/core : ^3.2.2\n        \n            @ngxs-labs/data : ^3.0.5\n        \n            @ngxs/store : ^3.6.2\n        \n            @rdfjs/data-model : ^1.1.2\n        \n            bind-decorator : ^1.0.11\n        \n            comlink : ^4.3.0\n        \n            css-element-queries : ^1.2.3\n        \n            graphology : ^0.17.1\n        \n            graphology-shortest-path : ^1.3.3\n        \n            jsonld : ^3.1.1\n        \n            lodash : ^4.17.15\n        \n            n3 : ^1.4.0\n        \n            ng5-slider : ^1.2.4\n        \n            quaternion : ^1.1.0\n        \n            quaternion-to-euler : ^0.5.0\n        \n            rdf-literal : ^1.1.1\n        \n            rdfxml-streaming-parser : ^1.3.6\n        \n            react : ^16.13.1\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^1.13.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataQueryState   (src/.../data.state.ts)\n                        \n                        \n                            LoaderType   (projects/.../loader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/store/data/data.state.ts\n    \n        \n            \n                \n                    \n                        \n                        DataQueryState\n                    \n                \n                    \n                        \n                            Current state of data queries. \n\n                        \n                    \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : running\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    projects/ccf-image-viewer/src/lib/loader.ts\n    \n        \n            \n                \n                    \n                        \n                        LoaderType\n                    \n                \n                        \n                            \n                                 Zarr\n                            \n                        \n                        \n                            \n                                Value : zarr\n                            \n                        \n                        \n                            \n                                 OMEZarr\n                            \n                        \n                        \n                            \n                                Value : ome-zarr\n                            \n                        \n                        \n                            \n                                 StaticZarr\n                            \n                        \n                        \n                            \n                                Value : static\n                            \n                        \n                        \n                            \n                                 Tiff\n                            \n                        \n                        \n                            \n                                Value : tiff\n                            \n                        \n                        \n                            \n                                 Tiff2\n                            \n                        \n                        \n                            \n                                Value : tiff 2\n                            \n                        \n                        \n                            \n                                 BFTiff\n                            \n                        \n                        \n                            \n                                Value : bf tiff\n                            \n                        \n                        \n                            \n                                 CovidTiff\n                            \n                        \n                        \n                            \n                                Value : covid tiff\n                            \n                        \n                        \n                            \n                                 StaticTiff\n                            \n                        \n                        \n                            \n                                Value : static tiff\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - Exploration User Interface (EUI)\n\n\n\n\n\n\n\n\nCCF-EUI: Common Coordinate Framework (CCF) - Exploration User Interface (EUI)\nBackground and More Information\nFor more information, see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nCCF-EUI is developed at the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorBarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorPickerLauncherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorSchemeContentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorSchemePopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerAccordionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerLayersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerLegendModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyExplorationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySelectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyTreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchemeDropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpinnerOverlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_exports\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\ncluster_ColorBarModule\n\n\n\ncluster_ColorBarModule_declarations\n\n\n\ncluster_ColorBarModule_exports\n\n\n\ncluster_ColorPickerLauncherModule\n\n\n\ncluster_ColorPickerLauncherModule_declarations\n\n\n\ncluster_ColorPickerLauncherModule_imports\n\n\n\ncluster_ColorPickerLauncherModule_exports\n\n\n\ncluster_ColorSchemeContentsModule\n\n\n\ncluster_ColorSchemeContentsModule_declarations\n\n\n\ncluster_ColorSchemeContentsModule_exports\n\n\n\ncluster_ColorSchemePopupModule\n\n\n\ncluster_ColorSchemePopupModule_declarations\n\n\n\ncluster_ColorSchemePopupModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_ImageViewerAccordionModule\n\n\n\ncluster_ImageViewerAccordionModule_declarations\n\n\n\ncluster_ImageViewerAccordionModule_imports\n\n\n\ncluster_ImageViewerAccordionModule_exports\n\n\n\ncluster_ImageViewerContentModule\n\n\n\ncluster_ImageViewerContentModule_declarations\n\n\n\ncluster_ImageViewerContentModule_exports\n\n\n\ncluster_ImageViewerLayersModule\n\n\n\ncluster_ImageViewerLayersModule_declarations\n\n\n\ncluster_ImageViewerLayersModule_imports\n\n\n\ncluster_ImageViewerLayersModule_exports\n\n\n\ncluster_ImageViewerLegendModule\n\n\n\ncluster_ImageViewerLegendModule_declarations\n\n\n\ncluster_ImageViewerLegendModule_exports\n\n\n\ncluster_ImageViewerModule\n\n\n\ncluster_ImageViewerModule_imports\n\n\n\ncluster_ImageViewerModule_exports\n\n\n\ncluster_ImageViewerPopoverModule\n\n\n\ncluster_ImageViewerPopoverModule_declarations\n\n\n\ncluster_ImageViewerPopoverModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_ResultsBrowserItemModule\n\n\n\ncluster_ResultsBrowserItemModule_declarations\n\n\n\ncluster_ResultsBrowserItemModule_exports\n\n\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_SchemeDropdownModule\n\n\n\ncluster_SchemeDropdownModule_declarations\n\n\n\ncluster_SchemeDropdownModule_exports\n\n\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBodyModule\n\nBodyModule\n\nAppModule -->\n\nBodyModule->AppModule\n\n\n\n\n\nBodyUiModule \n\nBodyUiModule \n\nBodyUiModule  -->\n\nBodyModule->BodyUiModule \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule -->\n\nDrawerModule->ImageViewerPopoverModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule -->\n\nDualSliderModule->ColorSchemeContentsModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nAppModule -->\n\nImageViewerModule->AppModule\n\n\n\n\n\nImageViewerContentModule \n\nImageViewerContentModule \n\nImageViewerContentModule  -->\n\nImageViewerModule->ImageViewerContentModule \n\n\n\n\n\nImageViewerLayersModule \n\nImageViewerLayersModule \n\nImageViewerLayersModule  -->\n\nImageViewerModule->ImageViewerLayersModule \n\n\n\n\n\nImageViewerPopoverModule \n\nImageViewerPopoverModule \n\nImageViewerPopoverModule  -->\n\nImageViewerModule->ImageViewerPopoverModule \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nAppModule -->\n\nInfoDialogModule->AppModule\n\n\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyModule -->\n\nBodyUiModule->BodyModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nColorBarComponent\n\nColorBarComponent\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorBarModule -->\n\nColorBarComponent->ColorBarModule\n\n\n\n\n\nColorBarComponent \n\nColorBarComponent \n\nColorBarComponent  -->\n\nColorBarModule->ColorBarComponent \n\n\n\nColorSchemeContentsModule -->\n\nColorBarModule->ColorSchemeContentsModule\n\n\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nSchemeDropdownModule -->\n\nColorBarModule->SchemeDropdownModule\n\n\n\n\n\nColorPickerLauncherComponent\n\nColorPickerLauncherComponent\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule -->\n\nColorPickerLauncherComponent->ColorPickerLauncherModule\n\n\n\n\n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent  -->\n\nColorPickerLauncherModule->ColorPickerLauncherComponent \n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerLayersModule -->\n\nColorPickerLauncherModule->ImageViewerLayersModule\n\n\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorPickerLauncherModule -->\n\nColorSchemePopupModule->ColorPickerLauncherModule\n\n\n\n\n\nColorSchemePopupComponent \n\nColorSchemePopupComponent \n\nColorSchemePopupComponent  -->\n\nColorSchemePopupModule->ColorSchemePopupComponent \n\n\n\n\n\nColorSchemeContentsComponent\n\nColorSchemeContentsComponent\n\nColorSchemeContentsModule -->\n\nColorSchemeContentsComponent->ColorSchemeContentsModule\n\n\n\nColorSchemePopupModule -->\n\nColorSchemeContentsModule->ColorSchemePopupModule\n\n\n\n\n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent  -->\n\nColorSchemeContentsModule->ColorSchemeContentsComponent \n\n\n\n\n\nColorSchemePopupComponent\n\nColorSchemePopupComponent\n\nColorSchemePopupModule -->\n\nColorSchemePopupComponent->ColorSchemePopupModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nImageViewerAccordionComponent\n\nImageViewerAccordionComponent\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule -->\n\nImageViewerAccordionComponent->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent  -->\n\nImageViewerAccordionModule->ImageViewerAccordionComponent \n\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerContentModule -->\n\nImageViewerAccordionModule->ImageViewerContentModule\n\n\n\nImageViewerModule -->\n\nImageViewerLayersModule->ImageViewerModule\n\n\n\nImageViewerAccordionModule -->\n\nImageViewerLayersModule->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerLayersComponent \n\nImageViewerLayersComponent \n\nImageViewerLayersComponent  -->\n\nImageViewerLayersModule->ImageViewerLayersComponent \n\n\n\n\n\nImageViewerContentComponent\n\nImageViewerContentComponent\n\nImageViewerContentModule -->\n\nImageViewerContentComponent->ImageViewerContentModule\n\n\n\nImageViewerModule -->\n\nImageViewerContentModule->ImageViewerModule\n\n\n\n\n\nImageViewerContentComponent \n\nImageViewerContentComponent \n\nImageViewerContentComponent  -->\n\nImageViewerContentModule->ImageViewerContentComponent \n\n\n\nImageViewerPopoverModule -->\n\nImageViewerContentModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerLayersComponent\n\nImageViewerLayersComponent\n\nImageViewerLayersModule -->\n\nImageViewerLayersComponent->ImageViewerLayersModule\n\n\n\nImageViewerLayersModule -->\n\nSchemeDropdownModule->ImageViewerLayersModule\n\n\n\n\n\nSchemeDropdownComponent \n\nSchemeDropdownComponent \n\nSchemeDropdownComponent  -->\n\nSchemeDropdownModule->SchemeDropdownComponent \n\n\n\n\n\nImageViewerLegendComponent\n\nImageViewerLegendComponent\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerLegendModule -->\n\nImageViewerLegendComponent->ImageViewerLegendModule\n\n\n\n\n\nImageViewerLegendComponent \n\nImageViewerLegendComponent \n\nImageViewerLegendComponent  -->\n\nImageViewerLegendModule->ImageViewerLegendComponent \n\n\n\nImageViewerPopoverModule -->\n\nImageViewerLegendModule->ImageViewerPopoverModule\n\n\n\nImageViewerModule -->\n\nImageViewerPopoverModule->ImageViewerModule\n\n\n\n\n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent  -->\n\nImageViewerPopoverModule->ImageViewerPopoverComponent \n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerModule -->\n\nViewerModule->ImageViewerModule\n\n\n\nImageViewerPopoverModule -->\n\nViewerModule->ImageViewerPopoverModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\nImageViewerPopoverComponent\n\nImageViewerPopoverComponent\n\nImageViewerPopoverModule -->\n\nImageViewerPopoverComponent->ImageViewerPopoverModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nResultsBrowserItemComponent\n\nResultsBrowserItemComponent\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule -->\n\nResultsBrowserItemComponent->ResultsBrowserItemModule\n\n\n\nResultsBrowserModule -->\n\nResultsBrowserItemModule->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent  -->\n\nResultsBrowserItemModule->ResultsBrowserItemComponent \n\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nSchemeDropdownComponent\n\nSchemeDropdownComponent\n\nSchemeDropdownModule -->\n\nSchemeDropdownComponent->SchemeDropdownModule\n\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        34 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    42 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContainerPayload   (src/.../messages.ts)\n                        \n                        \n                            DeckCallbackArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            DeckProps   (projects/.../image-viewer.ts)\n                        \n                        \n                            DrawerPayload   (src/.../messages.ts)\n                        \n                        \n                            ExpandedState   (src/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (src/.../drawer.component.ts)\n                        \n                        \n                            GetChildrenFunc   (src/.../ontology-search.service.ts)\n                        \n                        \n                            ImageViewerLayerArgs   (src/.../image-viewer-layer.ts)\n                        \n                        \n                            ImageViewerLayerRequiredArgNames   (src/.../image-viewer-layer.ts)\n                        \n                        \n                            JsonDict   (projects/.../hubmap-data.ts)\n                        \n                        \n                            LayerConfig   (projects/.../image-viewer.ts)\n                        \n                        \n                            LayerFilterArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            Message   (src/.../messages.ts)\n                        \n                        \n                            MessageChannel   (src/.../messages.ts)\n                        \n                        \n                            MessageService   (src/.../messages.ts)\n                        \n                        \n                            OnViewStateChangeArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            OpenedState   (src/.../drawer.component.ts)\n                        \n                        \n                            OverviewArgs   (projects/.../picture-in-picture-viewer.ts)\n                        \n                        \n                            Payload   (src/.../messages.ts)\n                        \n                        \n                            State   (projects/.../image-viewer.ts)\n                        \n                        \n                            ValueOrGenerator   (projects/.../image-viewer.ts)\n                        \n                        \n                            ZarrInfo   (projects/.../loader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container. \n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers. \n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type. \n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type. \n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type. \n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components. \n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/image-viewer.ts\n    \n    \n        \n            \n                \n                    \n                    DeckCallbackArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeckProps\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerConfig\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerFilterArgs\n                \n            \n            \n                \n                            DeckCallbackArgs\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OnViewStateChangeArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    State\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValueOrGenerator\n                \n            \n            \n                \n                        T | \n\n                \n            \n        \n    \n    src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer. \n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    src/app/core/services/ontology-search/ontology-search.service.ts\n    \n    \n        \n            \n                \n                    \n                    GetChildrenFunc\n                \n            \n            \n                \n                    Type of function for getting child nodes from a parent node. \n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/core/models/image-viewer-layer.ts\n    \n    \n        \n            \n                \n                    \n                    ImageViewerLayerArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ImageViewerLayerRequiredArgNames\n                \n            \n            \n                \n                        \"id\" | \"colorScheme\"\n\n                \n            \n        \n    \n    projects/ccf-database/src/lib/hubmap/hubmap-data.ts\n    \n    \n        \n            \n                \n                    \n                    JsonDict\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n    \n    \n        \n            \n                \n                    \n                    OverviewArgs\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/loader.ts\n    \n    \n        \n            \n                \n                    \n                    ZarrInfo\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
