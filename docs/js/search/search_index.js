var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AggregateResult.html",[0,0.236,1,2.746]],["body/interfaces/AggregateResult.html",[0,0.442,1,3.923,2,1.182,3,0.05,4,0.05,5,0.05,6,0.038,7,3.76,8,1.001,9,4.98,10,5.536,11,0.005,12,0.352,13,0.822,14,5.987,15,3.358,16,1.563,17,0.006,18,1.734,19,0.682,20,1.512,21,5,22,3.306,23,0.085,24,3.105,25,3.34,26,3.627,27,3.794,28,2.291,29,2.727,30,3.76,31,3.76,32,3.229,33,2.046,34,3.644,35,3.76,36,1.868,37,4.441,38,3.76,39,3.76,40,3.602,41,3.463,42,3.602,43,3.602,44,3.463,45,4.672,46,1.622,47,1.533,48,1.086,49,1.487,50,4.036,51,2.121,52,1.324,53,0.541,54,3.602,55,1.838,56,3.035,57,3.34,58,3.602,59,4.789,60,4.441,61,4.605,62,4.441,63,4.989,64,5.381,65,1.404,66,3.923,67,4.441,68,2.01,69,2.083,70,2.95,71,3.128,72,3.035,73,2.901,74,3.229,75,4.605,76,3.463,77,3.463,78,4.441,79,4.293,80,3.128,81,3.602,82,1.423,83,2.662,84,3.229,85,3.463,86,3.602,87,0.816,88,3.76,89,2.6,90,3.229,91,3.602,92,2.6,93,3.044,94,3.34,95,3.289,96,3.34,97,2.289,98,3.602,99,0.004,100,0.003]],["title/components/AppComponent.html",[101,0.539,102,1.344]],["body/components/AppComponent.html",[3,0.069,4,0.047,5,0.031,6,0.052,8,0.412,11,0.003,12,0.401,13,0.58,15,2.392,16,1.039,17,0.006,19,0.368,20,0.949,23,0.031,24,1.435,26,2.559,33,1.92,34,1.406,36,1.881,47,1.592,48,1.817,49,1.894,51,1.303,52,1.242,53,0.616,55,0.849,56,1.865,65,1.527,67,4.582,73,1.822,93,1.406,99,0.003,100,0.004,101,0.969,102,1.981,103,1.988,104,0.837,105,0.9,106,0.941,107,0.849,108,3.309,109,3.379,110,4.522,111,5.054,112,3.702,113,3.249,114,2.272,115,5.054,116,2.848,117,2.631,118,2.134,119,2.236,120,1.297,121,5.486,122,1.335,123,4.522,124,6.131,125,1.833,126,6.131,127,1.135,128,1.403,129,1.289,130,3.309,131,1.355,132,3.911,133,3.249,134,5.16,135,4.172,136,1.74,137,2.893,138,5.054,139,5.054,140,5.054,141,2.271,142,4.172,143,3.309,144,2.236,145,1.375,146,3.133,147,3.249,148,1.717,149,5.054,150,0.238,151,0.256,152,2.624,153,1.303,154,1.812,155,1.984,156,1.257,157,6.029,158,2.732,159,3.249,160,4.28,161,2.961,162,2.424,163,2.561,164,3.379,165,3.309,166,2.561,167,3.528,168,2.961,169,1.668,170,2.961,171,2.561,172,4.172,173,1.866,174,2.961,175,1.812,176,2.561,177,1.981,178,3.309,179,0.061,180,1.527,181,1.081,182,3.702,183,1.588,184,2.213,185,2.732,186,3.309,187,3.309,188,3.309,189,3.309,190,3.309,191,2.561,192,1.676,193,1.999,194,2.713,195,3.379,196,7.791,197,1.078,198,5.486,199,1.735,200,5.054,201,3.309,202,2.561,203,3.309,204,0.913,205,1.102,206,3.309,207,3.309,208,3.309,209,3.309,210,3.309,211,3.309,212,2.732,213,2.732,214,3.309,215,1.676,216,1.116,217,2.31,218,3.309,219,0.501,220,3.309,221,3.309,222,3.309,223,2.424,224,1.791,225,2.052,226,6.102,227,3.911,228,2.31,229,3.309,230,3.309,231,5.719,232,2.561,233,1.257,234,3.309,235,1.922,236,1,237,1.224,238,1.718,239,2.333,240,2.559,241,3.309,242,5.054,243,3.309,244,3.309,245,5.054,246,3.309,247,1.236,248,1.865,249,2.498,250,3.309,251,5.054,252,1.307,253,1.326,254,3.309,255,5.054,256,3.309,257,3.309,258,3.309,259,1.865,260,2.961,261,2.128,262,5.054,263,5.054,264,4.522,265,5.054,266,5.054,267,5.054,268,2.858,269,1.528,270,1.812,271,2.267,272,2.911,273,2.848,274,2.693,275,1.99,276,2.213,277,1.328,278,2.732,279,2.191,280,2.128,281,1.924,282,1.922,283,1.954,284,1.733,285,2.77,286,1.464,287,3.309,288,2.052,289,2.385,290,1.423,291,2.333,292,2.385,293,1.528,294,2.31,295,1.865,296,1.464,297,2.624,298,1.812,299,2.893,300,1.353,301,1.353,302,1.28,303,2.213,304,3.309,305,1.528,306,2.236,307,1.922,308,1.922,309,1.812,310,2.732,311,2.732,312,2.213,313,2.961,314,2.561,315,2.732,316,3.309,317,0.487,318,1.207,319,1.26,320,0.941,321,1.951,322,0.941,323,1.437,324,0.887,325,0.849,326,1.743,327,0.9,328,0.941,329,0.9,330,0.941,331,0.9,332,1.289,333,0.941,334,0.9,335,0.913,336,0.941,337,0.9,338,0.941,339,0.9,340,0.941,341,1.355,342,1.437,343,1.596,344,2.102,345,0.9,346,0.913,347,0.941,348,1.437,349,0.9,350,1.437,351,0.9,352,0.927,353,1.437,354,0.9,355,1.355,356,1.437,357,1.355,358,1.437,359,0.9,360,0.941,361,0.9,362,0.9,363,0.941,364,0.9,365,0.941,366,1.355,367,1.951,368,1.355,369,1.437,370,0.9,371,0.927,372,0.9,373,0.941,374,0.9,375,1.437,376,0.887,377,0.9,378,0.941,379,0.9,380,0.941,381,0.913,382,0.941,383,0.887,384,0.941,385,0.9,386,0.941,387,0.9,388,0.941,389,0.9,390,0.887,391,0.802,392,0.9,393,0.887,394,0.862,395,0.9,396,0.941,397,0.9,398,0.862,399,0.941,400,0.9,401,0.941,402,1.355,403,0.9,404,0.941,405,0.941]],["title/components/AppComponent-1.html",[101,0.451,102,1.125,253,0.908]],["body/components/AppComponent-1.html",[3,0.082,4,0.049,5,0.049,6,0.037,11,0.003,17,0.005,23,0.049,47,1.69,48,1.84,49,1.458,52,1.298,53,0.8,55,1.356,65,1.562,99,0.004,100,0.004,101,0.857,102,2.378,103,1.641,104,1.336,105,1.437,106,1.502,107,1.356,114,2.295,117,2.69,118,2.175,119,3.129,120,1.814,121,7.131,122,1.868,123,6.327,128,1.209,136,1.244,148,1.48,150,0.141,151,0.409,169,1.437,173,1.437,177,1.895,179,0.097,193,1.356,199,1.336,224,1.931,237,1.28,253,1.143,268,2.734,269,2.439,270,2.893,271,2.169,272,2.784,273,2.977,274,2.816,275,2.081,281,1.375,290,1.641,293,1.317,317,0.777,318,1.689,319,1.763,320,1.502,321,2.42,322,1.502,323,2.011,324,1.416,325,1.356,326,2.266,327,1.437,328,1.502,329,1.437,330,1.502,331,1.437,332,1.599,333,1.502,334,1.437,335,1.458,336,1.502,337,1.437,338,1.502,339,1.437,340,1.502,341,1.895,342,2.011,343,2.075,344,2.523,345,1.437,346,1.458,347,1.502,348,2.011,349,1.437,350,2.011,351,1.437,352,1.48,353,2.011,354,1.437,355,1.895,356,2.011,357,1.895,358,2.011,359,1.437,360,1.502,361,1.437,362,1.437,363,1.502,364,1.437,365,1.502,366,1.895,367,2.42,368,1.895,369,2.011,370,1.437,371,1.48,372,1.437,373,1.502,374,1.437,375,2.011,376,1.416,377,1.437,378,1.502,379,1.437,380,1.502,381,1.458,382,1.502,383,1.416,384,1.502,385,1.437,386,1.502,387,1.437,388,1.502,389,1.437,390,1.416,391,1.28,392,1.437,393,1.416,394,1.375,395,1.437,396,1.502,397,1.437,398,1.375,399,1.502,400,1.437,401,1.502,402,1.895,403,1.437,404,1.502,405,1.502,406,5.283,407,2.338,408,4.728]],["title/modules/AppModule.html",[409,0.737,410,3.881]],["body/modules/AppModule.html",[3,0.055,4,0.055,5,0.055,6,0.042,11,0.003,17,0.006,23,0.055,99,0.004,100,0.003,102,2.684,136,1.395,150,0.272,151,0.459,170,5.3,171,4.583,174,5.3,175,3.244,179,0.109,204,1.635,226,4.89,231,4.583,317,0.871,409,0.871,410,8.03,411,1.659,412,1.659,413,2.469,414,2.396,415,2.167,416,1.735,417,5.3,418,5.3,419,5.3,420,5.3,421,6.902,422,6.902,423,6.578,424,6.301,425,6.902,426,6.902,427,6.578,428,6.902,429,6.902,430,6.902,431,2.104,432,1.52,433,5.923,434,2.267,435,2.233,436,3.859,437,2.734,438,6.82,439,5.096,440,6.82,441,5.3,442,5.923,443,5.923,444,5.923,445,5.3,446,5.923,447,5.3,448,3.96,449,5.3,450,5.923,451,3.96,452,5.923,453,5.3,454,4.89,455,4.339,456,4.583,457,5.923,458,5.583,459,5.923,460,5.923,461,4.89,462,5.923,463,6.292,464,5.923,465,4.89,466,4.89]],["title/classes/AppPage.html",[179,0.092,467,3.881]],["body/classes/AppPage.html",[3,0.069,4,0.069,5,0.069,6,0.066,11,0.004,12,0.49,17,0.006,23,0.069,95,4.078,99,0.005,100,0.004,119,3.314,129,1.654,136,1.764,150,0.2,179,0.138,197,1.878,247,1.775,283,2.897,319,1.867,467,6.815,468,3.793,469,7.491,470,8.641,471,8.641,472,7.491,473,1.519,474,7.491,475,6.703,476,6.703,477,6.703,478,6.703]],["title/classes/AppPage-1.html",[179,0.077,253,0.908,467,3.248]],["body/classes/AppPage-1.html",[3,0.069,4,0.069,5,0.069,6,0.066,11,0.004,12,0.49,17,0.006,23,0.069,95,4.078,99,0.005,100,0.004,119,3.314,129,1.654,136,1.764,150,0.2,179,0.138,197,1.878,247,1.775,283,2.897,319,1.867,467,6.815,468,3.793,470,8.641,471,8.641,473,1.519,475,6.703,476,6.703,477,6.703,478,6.703,479,7.491,480,7.491,481,7.491]],["title/interfaces/BlockSize.html",[0,0.236,482,3.353]],["body/interfaces/BlockSize.html",[0,0.4,2,1.32,3,0.056,4,0.056,5,0.056,6,0.042,8,0.748,11,0.003,12,0.393,13,0.884,16,0.911,17,0.006,18,1.771,19,0.618,20,1.13,23,0.071,29,4.299,51,3.032,53,0.773,99,0.004,100,0.003,101,0.913,117,1.544,118,1.596,120,1.544,122,1.59,125,1.689,150,0.161,151,0.466,179,0.142,183,1.509,205,1.236,219,1.166,233,2.286,271,2.362,281,2.005,293,2.398,318,1.437,319,1.5,324,1.613,325,2.615,482,5.985,483,4.968,484,4.657,485,4.201,486,5.958,487,5.365,488,5.066,489,4.572,490,4.093,491,6.89,492,2.729,493,2.508,494,3.245,495,2.729,496,3.125,497,5.385,498,7.598,499,5.043,500,4.657,501,4.201,502,4.201,503,2.508,504,3.047,505,3.73,506,3.731,507,4.201,508,5.385,509,1.066,510,2.508,511,5.375,512,3.047,513,4.007,514,4.024,515,3.731,516,5.385,517,4.657,518,4.201,519,4.201,520,7.598,521,4.657,522,6.89,523,4.657,524,5.385]],["title/components/BlockSizeInputComponent.html",[101,0.539,324,1.344]],["body/components/BlockSizeInputComponent.html",[0,0.27,3,0.074,4,0.036,5,0.036,6,0.058,8,0.712,11,0.002,12,0.256,16,1.026,17,0.006,18,1.22,19,0.417,20,1.401,22,1.806,23,0.053,29,4.019,47,1.512,48,1.672,49,1.581,51,1.541,52,0.962,53,0.882,55,1.004,65,1.328,87,0.593,93,1.663,99,0.003,100,0.004,101,0.853,102,1.535,103,1.33,104,0.99,105,1.064,106,1.113,107,1.004,113,2.516,114,2.009,117,2.655,118,2.148,120,1.47,122,1.513,125,1.257,127,1.061,128,0.896,129,1.491,136,0.921,148,1.096,150,0.105,151,0.303,169,1.064,173,1.064,177,1.535,179,0.146,183,1.123,193,1.004,197,1.222,199,1.449,205,1.197,219,0.867,224,1.642,233,2.176,237,0.948,253,1.239,268,2.62,271,2.288,276,2.616,281,1.942,285,1.768,289,1.847,290,1.33,292,1.847,293,2.503,301,1.6,302,1.513,305,2.644,306,2.535,317,0.575,318,1.781,319,1.859,320,1.113,321,2.121,322,1.113,323,1.629,324,1.999,325,2.55,326,1.927,327,1.064,328,1.113,329,1.064,330,1.113,331,1.064,332,1.401,333,1.113,334,1.064,335,1.08,336,1.113,337,1.064,338,1.113,339,1.064,340,1.113,341,1.535,342,1.629,343,1.764,344,2.257,345,1.064,346,1.08,347,1.113,348,1.629,349,1.064,350,1.629,351,1.064,352,1.096,353,1.629,354,1.064,355,1.535,356,1.629,357,1.535,358,1.629,359,1.064,360,1.113,361,1.064,362,1.064,363,1.113,364,1.064,365,1.113,366,1.535,367,2.121,368,1.535,369,1.629,370,1.064,371,1.096,372,1.064,373,1.113,374,1.064,375,1.629,376,1.049,377,1.064,378,1.113,379,1.064,380,1.113,381,1.08,382,1.113,383,1.049,384,1.113,385,1.064,386,1.113,387,1.064,388,1.113,389,1.064,390,1.049,391,0.948,392,1.064,393,1.049,394,1.019,395,1.064,396,1.113,397,1.064,398,1.019,399,1.113,400,1.064,401,1.113,402,1.535,403,1.064,404,1.113,405,1.113,407,1.731,473,0.988,482,5.308,483,6.847,484,6.418,485,2.732,486,3.028,487,4.758,488,4.085,489,3.686,490,3.3,491,6.064,492,2.402,493,1.631,494,3.181,495,2.031,496,2.032,497,3.501,498,6.674,499,4.473,500,4.433,501,3.999,502,4.731,503,1.631,504,1.981,505,3.661,506,3.551,507,3.999,508,6.064,509,0.938,510,2.387,511,5.542,512,2.9,513,3.746,514,3.83,515,3.551,516,5.126,517,3.028,518,2.732,519,2.732,520,6.064,521,3.028,522,5.126,523,4.433,524,6.674,525,5.728,526,2.668,527,2.298,528,2.703,529,3.913,530,3.913,531,3.913,532,3.913,533,3.913,534,0.858,535,5.728,536,4.964,537,2.516,538,2.143,539,2.205,540,2.085,541,3.028,542,3.501,543,3.028,544,1.981,545,2.426,546,1.847,547,2.866]],["title/modules/BlockSizeInputModule.html",[409,0.737,548,3.674]],["body/modules/BlockSizeInputModule.html",[3,0.067,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,23,0.067,99,0.005,100,0.004,150,0.26,151,0.557,179,0.132,204,1.985,293,2.293,317,1.057,324,2.753,325,1.845,409,1.057,411,2.015,412,2.015,413,2.695,414,2.045,415,2.045,416,2.695,431,2.373,432,1.845,434,2.14,435,2.519,436,4.353,437,3.32,483,5.938,484,5.565,548,7.32,549,6.436,550,6.436,551,6.436,552,5.938,553,2.764,554,2.276,555,6.653,556,5.565,557,5.938]],["title/modules/BodyModule.html",[409,0.737,421,3.674]],["body/modules/BodyModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,128,1.671,150,0.247,151,0.565,179,0.134,204,2.016,317,1.074,409,1.074,411,2.046,412,2.046,413,2.542,414,2.076,415,2.076,416,2.712,421,7.342,431,2.395,432,1.874,434,2.581,435,2.542,553,2.789,554,2.311,558,6.535,559,6.535,560,6.535,561,7.537,562,7.303,563,6.029,564,7.303]],["title/classes/BodyUI.html",[179,0.092,565,3.674]],["body/classes/BodyUI.html",[0,0.269,3,0.036,4,0.036,5,0.036,6,0.068,8,0.484,11,0.002,12,0.255,13,0.656,16,1.2,17,0.006,18,1.217,19,0.706,20,1.607,23,0.053,28,1,36,1.569,46,1.597,53,0.832,87,1.378,99,0.003,100,0.002,118,1.184,125,2.164,127,1.585,128,2.25,129,1.81,145,1.553,150,0.229,153,1.534,156,1.48,179,0.124,197,1.218,205,1.461,219,1.295,236,1.725,252,1.766,301,2.763,302,1.506,332,0.732,431,1.866,468,1.972,473,1.367,489,1.925,509,1.305,534,1.816,565,4.182,566,7.1,567,3.216,568,4.714,569,3.818,570,4.345,571,2.897,572,5.781,573,5.134,574,7.063,575,5.58,576,5.58,577,5.58,578,5.58,579,5.58,580,5.58,581,5.71,582,5.71,583,5.71,584,5.71,585,5.71,586,1.124,587,4.714,588,2.872,589,5.71,590,3.54,591,3.895,592,3.895,593,3.895,594,5.198,595,4.714,596,3.895,597,4.559,598,3.895,599,4.714,600,3.895,601,3.895,602,4.714,603,3.895,604,3.895,605,4.714,606,5.44,607,5.23,608,3.19,609,4.944,610,3.895,611,5.23,612,4.714,613,3.895,614,4.714,615,3.895,616,1.881,617,4.714,618,3.895,619,4.714,620,3.895,621,2.756,622,5.58,623,4.714,624,4.714,625,2.262,626,4.714,627,3.216,628,3.54,629,2.335,630,2.262,631,3.216,632,1.798,633,5.23,634,1.429,635,4.714,636,3.602,637,3.014,638,2.335,639,2.504,640,1.76,641,2.076,642,2.335,643,2.504,644,3.509,645,3.216,646,3.216,647,2.335,648,3.216,649,1.76,650,3.216,651,3.216,652,3.216,653,3.216,654,3.216,655,2.415,656,3.216,657,3.216,658,3.216,659,4.714,660,3.216,661,3.216,662,3.216,663,1.689,664,2.195,665,1.623,666,2.504,667,3.216,668,4.714,669,4.345,670,3.216,671,4.714,672,3.216,673,5.58,674,4.714,675,4.714,676,3.216,677,3.216,678,6.427,679,4.714,680,3.216,681,5.58,682,1.314,683,3.216,684,3.216,685,4.714,686,3.014,687,3.216,688,3.216,689,3.216,690,3.216,691,4.714,692,5.58,693,2.763,694,6.541,695,4.714,696,4.714,697,4.714,698,3.216,699,3.216,700,3.216,701,3.216,702,3.014,703,3.216,704,3.216,705,3.216,706,3.216,707,3.216,708,1.336,709,3.216,710,3.216,711,3.216,712,2.504,713,3.216,714,2.853,715,3.216,716,3.216,717,3.216,718,3.216]],["title/classes/BodyUILayer.html",[179,0.092,572,3.501]],["body/classes/BodyUILayer.html",[0,0.222,3,0.061,4,0.044,5,0.044,6,0.06,11,0.003,12,0.307,13,0.75,16,1.45,17,0.006,18,1.686,19,0.62,20,0.884,23,0.061,28,2.08,36,2.099,46,1.717,53,0.656,69,2.526,83,2.325,87,0.712,95,2.67,99,0.003,100,0.003,125,1.646,127,0.871,128,1.95,129,1.523,141,1.318,145,2.317,150,0.25,179,0.087,197,1.393,205,1.049,216,2.203,219,1.369,236,1.421,240,2.382,247,1.717,252,1.729,253,1.017,282,2.731,332,1.227,468,2.382,473,1.295,509,1.039,513,2.22,534,1.032,566,6.24,570,5.477,572,5.66,594,4.569,606,4.05,611,3.64,625,2.731,628,4.05,629,2.82,634,2.396,644,4.423,649,2.125,663,3.253,664,3.681,665,2.722,678,4.785,682,2.735,693,3.315,708,3.101,714,3.446,719,3.446,720,6.716,721,3.253,722,6.716,723,6.532,724,7.256,725,7.256,726,4.704,727,5.845,728,4.704,729,4.704,730,4.704,731,4.209,732,5.845,733,6.716,734,3.883,735,2.916,736,4.209,737,3.64,738,5.393,739,4.209,740,3.64,741,6.196,742,3.64,743,5.845,744,3.883,745,6.823,746,4.209,747,6.716,748,5.239,749,4.209,750,4.209,751,3.446,752,3.883,753,4.209,754,4.209,755,4.209,756,4.209,757,4.209,758,4.209,759,3.024,760,3.64,761,6.274,762,5.055,763,5.055,764,3.64,765,3.64,766,5.055,767,3.64,768,4.569,769,2.271,770,5.845,771,5.393,772,2.325,773,3.883,774,3.883,775,3.883,776,6.716,777,4.209,778,4.209,779,5.845,780,4.209,781,4.209,782,4.209,783,5.845,784,5.393,785,3.64,786,4.209,787,4.209,788,6.716,789,4.209,790,4.209,791,4.209,792,4.209,793,3.64,794,5.845,795,5.845,796,4.209,797,5.845,798,6.694,799,4.209,800,5.845,801,4.209,802,3.64,803,3.145,804,4.209,805,4.209,806,4.209,807,4.209,808,5.845,809,6.716,810,6.196,811,5.393,812,5.845,813,5.393,814,4.209,815,4.209,816,4.209,817,4.209,818,4.209,819,3.883,820,4.209,821,4.209,822,4.209,823,2.651,824,4.209,825,4.209,826,3.64,827,4.209,828,4.209,829,3.64,830,4.209,831,4.209,832,4.209]],["title/interfaces/BodyUIProps.html",[0,0.236,637,3.881]],["body/interfaces/BodyUIProps.html",[0,0.314,2,1.061,3,0.045,4,0.045,5,0.045,6,0.034,11,0.003,12,0.316,13,0.765,16,1.406,17,0.006,18,1.371,19,0.555,23,0.062,28,2.106,36,1.546,46,1.735,99,0.004,100,0.003,118,1.003,125,1.999,128,1.743,145,1.812,150,0.244,153,1.906,156,1.838,179,0.123,205,1.381,219,1.38,236,2.012,252,1.897,301,1.978,302,1.871,332,0.909,431,2.103,489,2.391,509,1.305,565,3.544,566,3.544,567,3.995,568,3.995,569,3.236,570,4.282,571,2.719,572,5.318,573,4.723,574,7.105,575,3.995,576,3.995,577,3.995,578,3.995,579,3.995,580,3.995,587,3.995,588,2.056,590,3,594,5.012,595,3.995,597,4.374,599,3.995,602,3.995,605,3.995,607,3.744,609,4.849,611,3.744,612,3.995,614,3.995,617,3.995,619,3.995,621,2.336,622,6.289,623,5.499,624,5.499,625,2.81,626,5.499,627,3.995,628,4.13,629,2.9,630,2.81,631,3.995,632,2.234,633,5.895,634,1.775,635,5.499,636,4.06,637,5.155,638,4.919,639,4.897,640,3.708,641,4.06,642,2.9,643,3.111,644,3.955,645,3.995,646,3.995,647,2.9,648,3.995,649,2.186,650,3.995,651,3.995,652,3.995,653,3.995,654,3.995,655,3,656,3.995,657,3.995,658,3.995,659,5.499,660,3.995,661,3.995,662,3.995,663,2.098,664,2.727,665,2.016,666,3.111,667,3.995,668,5.499,669,4.897,670,3.995,671,5.499,672,3.995,673,6.289,674,5.499,675,5.499,676,3.995,677,3.995,678,6.8,679,5.499,680,3.995,681,6.289,682,1.632,683,3.995,684,3.995,685,5.499,686,3.744,687,3.995,688,3.995,689,3.995,690,3.995,691,5.499,692,6.289,693,3.114,694,7.105,695,5.499,696,5.499,697,5.499,698,3.995,699,3.995,700,3.995,701,3.995,702,3.744,703,3.995,704,3.995,705,3.995,706,3.995,707,3.995,708,1.659,709,3.995,710,3.995,711,3.995,712,3.111,713,3.995,714,3.544,715,3.995,716,3.995,717,3.995,718,3.995]],["title/interfaces/BodyUIViewStateProps.html",[0,0.236,633,3.881]],["body/interfaces/BodyUIViewStateProps.html",[0,0.314,2,1.062,3,0.045,4,0.045,5,0.045,6,0.034,11,0.003,12,0.317,13,0.765,16,1.347,17,0.006,18,1.55,19,0.485,23,0.062,28,1.243,36,1.547,46,1.735,87,1.243,99,0.004,100,0.003,118,1.004,125,2,128,1.744,145,1.813,150,0.244,153,1.907,156,1.84,179,0.123,205,1.382,219,1.38,236,2.013,252,1.897,301,1.98,302,1.873,332,0.91,431,2.104,489,2.394,509,1.305,565,3.548,566,3.548,567,3.998,568,3.998,569,3.239,570,4.285,571,2.72,572,5.321,573,4.725,574,7.107,575,3.998,576,3.998,577,3.998,578,3.998,579,3.998,580,3.998,587,3.998,588,2.058,590,3.003,594,5.013,595,3.998,597,4.375,599,3.998,602,3.998,605,3.998,607,3.748,609,4.851,611,3.748,612,3.998,614,3.998,617,3.998,619,3.998,621,2.338,622,6.292,623,5.503,624,5.503,625,2.812,626,6.292,627,3.998,628,5.09,629,2.903,630,2.812,631,3.998,632,2.236,633,6.353,634,2.445,635,7.107,636,4.742,637,3.748,638,2.903,639,3.114,640,2.188,641,2.581,642,2.903,643,3.114,644,3.957,645,3.998,646,3.998,647,2.903,648,3.998,649,2.188,650,3.998,651,3.998,652,3.998,653,3.998,654,3.998,655,3.003,656,3.998,657,3.998,658,3.998,659,5.503,660,3.998,661,3.998,662,3.998,663,2.1,664,2.729,665,2.018,666,3.114,667,3.998,668,5.503,669,4.9,670,3.998,671,5.503,672,3.998,673,6.292,674,5.503,675,5.503,676,3.998,677,3.998,678,6.802,679,5.503,680,3.998,681,6.292,682,1.634,683,3.998,684,3.998,685,5.503,686,3.748,687,3.998,688,3.998,689,3.998,690,3.998,691,5.503,692,6.292,693,3.115,694,7.107,695,5.503,696,5.503,697,5.503,698,3.998,699,3.998,700,3.998,701,3.998,702,3.748,703,3.998,704,3.998,705,3.998,706,3.998,707,3.998,708,1.661,709,3.998,710,3.998,711,3.998,712,3.114,713,3.998,714,3.548,715,3.998,716,3.998,717,3.998,718,3.998]],["title/components/BodyUiComponent.html",[101,0.539,327,1.364]],["body/components/BodyUiComponent.html",[3,0.074,4,0.037,5,0.037,6,0.062,11,0.002,12,0.263,13,0.672,17,0.006,19,0.61,23,0.037,28,1.034,36,1.359,47,1.53,48,1.689,52,0.99,53,0.807,55,1.034,65,1.351,68,2.184,73,3.307,81,2.695,87,0.886,99,0.003,100,0.004,101,0.863,102,1.569,103,1.359,104,1.019,105,1.096,106,1.146,107,1.034,114,2.03,117,2.659,118,2.151,120,1.502,122,1.546,125,0.884,127,0.746,128,2.126,129,1.624,136,0.949,144,2.59,148,1.129,150,0.215,151,0.312,152,2.093,160,6.036,161,3.607,162,2.952,163,3.119,167,5.28,168,3.607,169,1.096,173,1.096,177,1.569,179,0.074,184,2.695,193,1.034,197,1.248,199,1.019,205,1.214,216,1.974,219,1.145,224,1.67,237,0.976,253,0.872,277,1.617,290,1.359,293,1.005,295,2.271,317,0.593,318,1.398,319,1.459,320,1.146,321,2.151,322,1.146,323,1.664,324,1.08,325,1.034,326,1.96,327,2.057,328,1.146,329,1.096,330,1.146,331,1.096,332,1.421,333,1.146,334,1.096,335,1.113,336,1.146,337,1.096,338,1.146,339,1.096,340,1.146,341,1.569,342,1.664,343,1.794,344,2.284,345,1.096,346,1.113,347,1.146,348,1.664,349,1.096,350,1.664,351,1.096,352,1.129,353,1.664,354,1.096,355,2.246,356,1.664,357,1.569,358,1.664,359,1.096,360,1.146,361,1.096,362,1.096,363,1.146,364,1.096,365,1.146,366,1.569,367,2.151,368,1.569,369,1.664,370,1.096,371,1.129,372,1.096,373,1.146,374,1.096,375,1.664,376,1.08,377,1.096,378,1.146,379,1.096,380,1.146,381,1.113,382,1.146,383,1.08,384,1.146,385,1.096,386,1.146,387,1.096,388,1.146,389,1.096,390,1.08,391,0.976,392,1.096,393,1.08,394,1.049,395,1.096,396,1.146,397,1.096,398,1.049,399,1.146,400,1.096,401,1.146,402,1.569,403,1.096,404,1.146,405,1.146,473,1.01,492,2.443,494,2.325,495,2.075,509,0.811,526,2.305,527,2.348,534,1.284,563,7.312,565,6.333,570,5.164,571,1.989,586,1.163,588,2.929,608,1.902,621,1.946,638,3.508,702,4.529,748,4.086,772,2.893,833,7.926,834,4.03,835,2.393,836,4.431,837,6.892,838,5.853,839,6.892,840,5.853,841,4.862,842,6.892,843,3.327,844,5.853,845,4.03,846,4.086,847,3.508,848,5.238,849,3.914,850,5.238,851,4.03,852,2.184,853,5.853,854,4.03,855,4.03,856,5.608,857,5.853,858,4.529,859,4.03,860,2.952,861,4.03,862,4.03,863,4.03,864,4.03,865,4.03,866,3.119,867,4.03,868,2.207,869,2.499,870,1.783,871,4.03,872,4.03,873,4.03,874,4.03,875,4.03,876,4.03,877,2.34,878,4.03,879,4.466,880,4.03,881,6.892,882,4.03,883,5.54,884,4.03,885,4.03,886,4.03,887,4.03,888,4.03,889,4.03,890,4.03,891,5.853,892,4.03,893,4.03,894,4.03,895,5.853,896,4.03,897,5.853,898,5.853,899,4.03,900,2.271]],["title/modules/BodyUiModule.html",[409,0.737,561,3.674]],["body/modules/BodyUiModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,128,1.676,150,0.248,151,0.567,179,0.135,204,2.021,317,1.077,327,2.799,409,1.077,411,2.051,412,2.051,413,2.715,414,2.082,415,2.082,416,2.715,431,2.399,432,1.879,434,2.179,435,2.546,553,2.794,554,2.317,561,7.346,563,6.046,833,6.553,901,6.553,902,6.553,903,6.553,904,7.323,905,7.323]],["title/classes/CCFDatabase.html",[179,0.092,906,3.353]],["body/classes/CCFDatabase.html",[0,0.149,1,1.731,2,0.694,3,0.029,4,0.029,5,0.029,6,0.066,8,1.109,9,3.89,11,0.003,12,0.207,13,0.56,16,1.35,17,0.006,18,0.878,19,0.677,20,1.119,23,0.055,24,3.742,25,3.025,26,1.601,27,2.073,28,2.113,32,1.895,34,2.847,36,2.228,45,2.833,47,1.276,48,0.637,50,1.781,53,0.882,65,1.313,66,2.672,68,2.855,69,3.597,73,3.728,80,3.89,83,4.342,85,3.137,87,1.33,92,2.877,94,3.025,95,3.77,96,3.025,99,0.004,100,0.004,118,1.012,127,1.241,128,1.117,129,1.732,131,1.308,145,1.822,150,0.238,152,4.14,179,0.058,180,2.024,181,1.594,183,1.722,194,4.041,197,1.041,219,1.014,236,2.311,237,2.128,240,3.392,247,1.74,249,2.411,252,1.429,253,1.055,259,1.781,468,1.601,473,1.647,486,3.776,509,1.003,534,1.927,586,0.913,594,1.781,721,2.115,735,1.96,748,6.026,769,4.556,772,2.411,835,1.995,906,4.48,907,6.814,908,2.829,909,4.366,910,5.92,911,3.137,912,4.028,913,4.611,914,4.879,915,4.611,916,4.028,917,4.919,918,4.366,919,4.879,920,3.831,921,3.161,922,6.54,923,4.879,924,5.303,925,4.611,926,3.161,927,5.332,928,3.161,929,4.365,930,4.586,931,4.366,932,3.161,933,5.995,934,4.366,935,3.161,936,2.925,937,5.116,938,3.776,939,4.366,940,3.137,941,4.366,942,3.161,943,4.366,944,5.995,945,3.161,946,4.366,947,3.161,948,6.583,949,5.332,950,3.161,951,2.6,952,3.161,953,4.028,954,3.161,955,4.366,956,3.831,957,4.028,958,3.776,959,3.161,960,3.137,961,4.907,962,1.887,963,3.025,964,4.366,965,3.161,966,4.366,967,3.161,968,2.829,969,2.829,970,2.829,971,2.829,972,2.114,973,2.829,974,2.829,975,2.829,976,5.341,977,2.829,978,2.829,979,2.829,980,2.829,981,2.829,982,2.829,983,2.446,984,2.829,985,2.316,986,1.526,987,5.332,988,2.61,989,4.366,990,1.474,991,4.366,992,4.028,993,4.154,994,2.114,995,4.028,996,4.366,997,2.829,998,4.366,999,1.781,1000,2.829,1001,2.829,1002,2.829,1003,2.61,1004,2.829,1005,2.829,1006,2.61,1007,7.37,1008,2.61,1009,2.829,1010,2.829,1011,2.829,1012,2.61,1013,4.366,1014,2.829,1015,2.829,1016,2.829,1017,2.829,1018,2.829,1019,4.366,1020,2.829,1021,2.829,1022,2.829,1023,2.829,1024,2.829,1025,2.829,1026,2.829,1027,2.829,1028,2.316,1029,2.829,1030,2.829,1031,2.829,1032,2.829,1033,2.829,1034,4.366,1035,2.829,1036,2.829,1037,2.637,1038,5.332,1039,2.829,1040,2.829,1041,3.574,1042,2.829,1043,2.829,1044,2.829,1045,2.829,1046,2.829,1047,2.829,1048,2.829,1049,2.829,1050,2.829,1051,2.829,1052,2.829,1053,2.829]],["title/interfaces/CCFDatabaseOptions.html",[0,0.236,922,3.881]],["body/interfaces/CCFDatabaseOptions.html",[0,0.182,1,2.118,2,1.246,3,0.036,4,0.036,5,0.036,6,0.027,8,0.481,9,3.297,11,0.004,12,0.253,13,0.652,16,1.487,17,0.006,18,0.696,19,0.651,23,0.062,24,3.425,25,2.397,26,1.958,27,1.643,28,1.903,32,2.318,34,3.721,36,2.234,45,3.297,47,1.082,48,0.779,50,2.179,65,1.113,66,2.118,68,2.512,69,3.513,73,3.673,80,3.297,83,4.218,85,3.651,87,0.86,92,2.741,94,2.397,95,3.579,96,2.397,99,0.004,100,0.004,118,1.177,127,0.716,128,0.885,131,1.036,145,1.83,150,0.249,152,4.101,179,0.071,180,1.715,181,1.263,183,1.805,194,3.777,219,1.123,236,2.033,237,2.068,240,2.875,247,1.831,249,1.911,252,1.582,253,1.228,259,2.179,473,1.567,486,2.992,509,1.094,594,2.179,721,3.215,735,3.521,748,5.515,769,3.987,772,2.806,835,1.581,906,3.797,907,2.832,908,3.46,909,3.46,910,5.208,913,2.992,915,2.992,917,3.192,920,4.326,922,6.113,924,5.432,925,4.394,927,5.081,929,4.16,930,4.445,931,3.46,933,6.022,934,3.46,936,2.318,938,2.992,939,3.46,940,2.486,941,3.46,943,3.46,944,6.022,946,3.46,948,6.122,949,5.081,951,2.061,953,3.192,955,3.46,956,3.651,957,3.192,958,2.992,960,2.486,961,4.16,962,1.495,963,2.397,964,3.46,966,3.46,968,3.46,969,3.46,970,3.46,971,3.46,972,2.585,973,3.46,974,3.46,975,3.46,976,5.765,977,3.46,978,3.46,979,3.46,980,3.46,981,3.46,982,3.46,983,2.992,984,3.46,985,2.832,986,1.867,987,7.39,988,4.688,989,7.069,990,2.24,991,7.069,992,6.522,993,5.428,994,3.797,995,6.522,996,7.069,997,5.081,998,7.069,999,3.2,1000,6.636,1001,3.46,1002,3.46,1003,3.192,1004,3.46,1005,3.46,1006,3.192,1007,7.835,1008,3.192,1009,3.46,1010,3.46,1011,3.46,1012,3.192,1013,5.081,1014,3.46,1015,3.46,1016,3.46,1017,3.46,1018,3.46,1019,5.081,1020,3.46,1021,3.46,1022,3.46,1023,3.46,1024,3.46,1025,3.46,1026,3.46,1027,3.46,1028,2.832,1029,3.46,1030,3.46,1031,3.46,1032,3.46,1033,3.46,1034,5.081,1035,3.46,1036,3.46,1037,2.978,1038,6.022,1039,3.46,1040,3.46,1041,4.16,1042,3.46,1043,3.46,1044,3.46,1045,3.46,1046,3.46,1047,3.46,1048,3.46,1049,3.46,1050,3.46,1051,3.46,1052,3.46,1053,3.46]],["title/classes/CCFSpatialGraph.html",[179,0.092,925,3.881]],["body/classes/CCFSpatialGraph.html",[3,0.045,4,0.071,5,0.045,6,0.066,11,0.004,12,0.317,13,0.766,16,1.381,17,0.006,18,1.373,19,0.686,23,0.062,53,0.865,80,2.815,83,4.799,84,3.998,87,1.304,99,0.004,100,0.003,118,1.383,127,0.898,129,1.713,150,0.252,152,2.517,179,0.089,197,1.422,205,1.491,216,1.635,219,1.444,236,2.303,237,1.174,247,1.736,252,1.034,253,1.649,259,4.297,272,1.909,468,2.455,473,1.485,509,1.056,534,1.889,586,1.399,628,5.653,629,2.906,636,4.377,663,2.102,664,2.732,665,2.02,693,3.357,768,2.732,877,2.815,879,4.064,883,5.585,906,5.492,907,6.803,910,5.9,925,5.161,930,5.162,976,3.384,985,3.551,986,2.34,1008,4.002,1037,3.374,1041,3.551,1054,4.848,1055,6.67,1056,6.67,1057,6.67,1058,8.213,1059,6.67,1060,4.338,1061,6.67,1062,5.161,1063,8.213,1064,6.67,1065,4.848,1066,6.67,1067,6.308,1068,4.848,1069,6.67,1070,6.67,1071,6.365,1072,4.848,1073,6.012,1074,4.848,1075,6.67,1076,8.612,1077,4.848,1078,7.625,1079,4.002,1080,5.968,1081,4.848,1082,4.338,1083,4.848,1084,4.848,1085,5.968,1086,4.848,1087,4.338,1088,4.338,1089,3.751,1090,4.002,1091,4.848,1092,4.848,1093,6.67,1094,6.823,1095,7.109,1096,4.848,1097,4.002,1098,3.751,1099,3.751,1100,4.002,1101,2.891,1102,4.848,1103,4.848,1104,4.848,1105,4.848,1106,4.848,1107,4.848,1108,4.848,1109,4.338,1110,4.848,1111,4.848,1112,4.848,1113,4.848,1114,4.848,1115,4.848,1116,4.848,1117,4.848,1118,2.732,1119,4.848,1120,4.002,1121,2.584,1122,7.625,1123,4.848,1124,7.625,1125,7.625,1126,4.848,1127,4.848,1128,4.848,1129,4.848,1130,4.848,1131,4.848,1132,4.848,1133,4.848,1134,4.848,1135,4.848,1136,4.848,1137,4.848,1138,4.848,1139,6.67,1140,6.295,1141,4.848,1142,4.848,1143,4.848,1144,4.848]],["title/classes/CCFSpatialScene.html",[179,0.092,929,3.674]],["body/classes/CCFSpatialScene.html",[0,0.187,2,0.871,3,0.037,4,0.054,5,0.037,6,0.062,11,0.003,12,0.26,16,1.362,17,0.006,18,1.438,19,0.655,20,0.746,23,0.054,28,1.486,45,2.307,46,1.514,53,0.864,61,3.723,62,3.591,66,2.175,73,3.566,74,3.471,83,4.446,87,1.303,90,2.381,99,0.003,100,0.002,118,1.201,127,1.391,128,2.019,129,1.617,145,2.4,150,0.223,152,2.062,179,0.073,197,1.235,219,1.403,237,0.962,240,2.932,247,1.735,252,2.073,253,1.803,272,1.564,332,1.759,468,2.011,473,1.438,487,2.381,499,3.264,509,0.802,534,1.888,540,4.003,586,1.147,588,2.905,594,5.412,628,3.591,629,2.381,636,3.643,644,5.135,693,3.678,745,4.482,759,3.723,760,6.452,761,6.452,762,4.482,763,4.482,764,4.482,765,5.813,766,4.482,767,4.482,793,3.074,802,4.482,826,3.074,829,6.18,877,3.969,879,4.794,883,6.59,906,5.023,907,6.462,918,5.183,929,4.242,930,5.552,937,5.34,958,4.482,963,2.463,976,2.773,985,2.91,986,1.918,1041,4.242,1060,3.555,1062,4.482,1079,3.279,1089,3.074,1090,3.279,1095,6.593,1097,3.279,1098,3.074,1099,3.074,1100,3.279,1118,2.238,1120,3.279,1145,3.555,1146,5.792,1147,5.792,1148,5.792,1149,5.792,1150,5.792,1151,3.972,1152,5.183,1153,3.972,1154,5.183,1155,3.972,1156,5.183,1157,3.972,1158,5.183,1159,3.972,1160,3.972,1161,5.183,1162,6.722,1163,3.972,1164,2.91,1165,7.146,1166,5.183,1167,3.555,1168,3.555,1169,3.555,1170,6.722,1171,7.146,1172,5.183,1173,5.183,1174,7.702,1175,3.555,1176,5.183,1177,3.555,1178,3.555,1179,3.555,1180,2.656,1181,3.555,1182,3.555,1183,3.555,1184,3.555,1185,3.555,1186,2.773,1187,3.555,1188,3.555,1189,5.183,1190,3.555,1191,3.555,1192,7.894,1193,5.183,1194,5.183,1195,5.183,1196,5.183,1197,5.183,1198,3.555,1199,5.183,1200,3.555,1201,5.183,1202,5.183,1203,3.555,1204,3.555,1205,3.555,1206,3.555,1207,3.555,1208,3.555,1209,3.555,1210,3.555,1211,3.555,1212,3.555,1213,7.146,1214,5.183,1215,3.555,1216,3.555,1217,3.555,1218,5.183,1219,3.555,1220,3.279,1221,3.555,1222,4.242,1223,2.463,1224,3.555,1225,3.555,1226,3.555,1227,3.555,1228,3.555,1229,3.555,1230,1.963,1231,3.555,1232,3.555,1233,3.555,1234,3.555,1235,3.555,1236,3.555,1237,3.555]],["title/interfaces/ChannelConfig.html",[0,0.236,1238,3.353]],["body/interfaces/ChannelConfig.html",[0,0.346,2,0.831,3,0.052,4,0.035,5,0.035,6,0.027,11,0.004,12,0.366,13,0.642,16,1.241,17,0.006,18,1.783,19,0.668,23,0.076,28,2.176,46,1.48,47,0.722,92,3.782,95,3.202,99,0.003,100,0.002,125,0.831,141,1.863,145,1.521,150,0.209,179,0.07,205,1.427,216,1.887,219,1.419,235,2.2,247,1.921,252,1.566,271,2.67,281,2.208,332,1.471,509,0.525,513,3.697,571,2.609,573,4.857,588,2.377,590,3.468,609,4.138,625,2.2,630,2.2,632,3.07,634,1.389,638,4.695,639,2.435,641,2.019,642,5.418,643,2.435,644,3.453,647,3.986,649,3.005,655,3.468,666,2.435,669,5.452,769,3.782,772,3.871,803,2.533,852,3.06,972,2.533,1037,1.676,1101,2.425,1238,4.447,1239,2.645,1240,2.435,1241,4.175,1242,3.782,1243,4.138,1244,5.126,1245,4.857,1246,4.447,1247,2.271,1248,2.271,1249,2.533,1250,3.468,1251,3.596,1252,3.468,1253,3.596,1254,2.775,1255,2.775,1256,3.74,1257,4.695,1258,2.775,1259,2.775,1260,3.905,1261,4.642,1262,2.775,1263,3.74,1264,3.74,1265,4.871,1266,4.767,1267,3.596,1268,2.435,1269,2.435,1270,3.813,1271,5.738,1272,5.126,1273,4.097,1274,4.642,1275,2.775,1276,2.775,1277,2.775,1278,4.642,1279,2.271,1280,4.871,1281,4.871,1282,2.645,1283,2.645,1284,4.642,1285,4.91,1286,4.871,1287,2.533,1288,2.645,1289,2.775,1290,2.533,1291,5.379,1292,2.645,1293,6.204,1294,3.905,1295,3.905,1296,4.138,1297,2.533,1298,2.775,1299,2.775,1300,2.775,1301,2.775,1302,2.775,1303,2.775,1304,2.349,1305,4.871,1306,4.871,1307,4.871,1308,5.379,1309,5.738,1310,2.645,1311,2.775,1312,2.645,1313,4.097,1314,2.775,1315,2.775,1316,2.775,1317,2.645,1318,2.775,1319,2.775,1320,2.775,1321,2.645,1322,2.775,1323,2.775,1324,4.097,1325,2.775,1326,2.775,1327,2.645,1328,4.871,1329,2.775,1330,2.904,1331,2.775,1332,4.097,1333,2.533,1334,2.533,1335,2.775,1336,2.645,1337,2.775,1338,4.097,1339,2.645,1340,2.775,1341,2.775,1342,2.533,1343,3.468,1344,2.775,1345,2.775,1346,2.775,1347,2.775,1348,2.775,1349,2.645,1350,2.775,1351,2.135,1352,2.775,1353,2.775,1354,2.775,1355,2.775,1356,2.775,1357,2.645,1358,2.775,1359,2.645,1360,3.905,1361,2.775,1362,2.775,1363,2.775,1364,2.775,1365,2.645,1366,2.775,1367,2.775,1368,2.775,1369,2.775,1370,2.775,1371,2.533,1372,2.775,1373,2.775,1374,4.097,1375,2.775,1376,2.775]],["title/components/CheckboxComponent.html",[101,0.539,329,1.364]],["body/components/CheckboxComponent.html",[3,0.074,4,0.037,5,0.037,6,0.059,8,0.727,11,0.002,12,0.263,15,3.086,16,1.366,17,0.006,19,0.584,20,1.293,23,0.037,24,3.275,46,1.178,47,1.529,48,1.688,49,1.11,52,0.988,53,0.759,55,1.032,65,1.349,69,2.922,73,2.482,82,1.544,87,0.609,89,2.821,99,0.003,100,0.004,101,0.863,102,1.566,103,1.356,104,1.017,105,1.094,106,1.143,107,1.032,114,2.028,117,2.659,118,2.148,120,1.499,122,1.544,127,0.745,128,0.92,129,1.508,131,1.566,136,0.947,144,2.586,146,3.623,148,1.127,150,0.156,151,0.311,159,5.691,169,1.094,173,1.094,177,1.566,179,0.074,180,1.765,183,1.145,193,1.032,197,1.246,199,1.741,205,0.938,219,0.609,224,1.668,232,4.522,233,3.18,236,1.765,237,0.974,248,3.293,259,3.293,268,2.662,269,1.856,275,2.301,281,1.047,284,2.36,286,1.779,290,1.356,291,3.178,292,1.898,293,1.002,295,2.266,308,2.335,309,2.202,311,3.32,317,0.591,318,1.396,319,1.457,320,1.143,321,2.148,322,1.143,323,1.662,324,1.078,325,1.032,326,1.957,327,1.094,328,1.143,329,2.055,330,1.143,331,1.094,332,1.508,333,1.143,334,1.094,335,1.11,336,1.143,337,1.094,338,1.143,339,1.094,340,1.143,341,1.566,342,1.662,343,1.792,344,2.282,345,1.094,346,1.11,347,1.143,348,1.662,349,1.094,350,1.662,351,1.094,352,1.127,353,1.662,354,1.094,355,1.566,356,1.662,357,1.566,358,1.662,359,1.094,360,1.143,361,1.094,362,1.094,363,1.143,364,1.094,365,1.143,366,1.566,367,2.148,368,1.566,369,1.662,370,1.094,371,1.928,372,1.094,373,1.143,374,1.094,375,1.662,376,1.078,377,1.094,378,1.143,379,1.094,380,1.143,381,1.11,382,1.143,383,1.078,384,1.143,385,1.094,386,1.143,387,1.094,388,1.143,389,1.094,390,1.078,391,0.974,392,1.094,393,1.078,394,1.047,395,1.094,396,1.143,397,1.094,398,1.047,399,1.143,400,1.094,401,1.143,402,1.566,403,1.094,404,1.143,405,1.143,473,0.694,492,2.44,494,2.548,495,2.071,509,0.557,512,2.959,515,3.623,526,2.301,527,2.344,534,0.882,538,2.202,539,2.266,616,3.647,640,2.64,852,2.181,1140,3.32,1377,4.021,1378,5.229,1379,8.373,1380,5.843,1381,8.55,1382,6.883,1383,5.843,1384,5.843,1385,5.682,1386,4.021,1387,5.843,1388,5.229,1389,5.843,1390,5.843,1391,4.021,1392,4.824,1393,6.237,1394,4.28,1395,4.021,1396,2.959,1397,8.203,1398,6.761,1399,4.021,1400,4.28,1401,5.843,1402,7.555,1403,6.803,1404,4.021,1405,3.393,1406,4.522,1407,5.843,1408,4.28,1409,4.387,1410,5.843,1411,5.843,1412,3.32,1413,4.021,1414,5.682,1415,4.021,1416,3.598,1417,4.021,1418,4.021,1419,4.021,1420,4.021,1421,3.112,1422,1.817,1423,4.021,1424,2.807,1425,4.079,1426,3.598,1427,4.021,1428,4.021]],["title/modules/CheckboxModule.html",[409,0.737,1429,3.674]],["body/modules/CheckboxModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,150,0.256,151,0.566,179,0.135,204,2.019,317,1.075,329,2.799,409,1.075,411,2.049,412,2.049,413,2.714,414,2.079,415,2.079,416,2.714,431,2.397,432,1.876,434,2.175,435,2.544,553,2.791,554,2.314,1412,6.037,1429,7.344,1430,6.544,1431,6.544,1432,6.544,1433,7.313,1434,7.77,1435,7.313]],["title/interfaces/Collision.html",[0,0.236,1436,4.488]],["body/interfaces/Collision.html",[0,0.231,2,1.073,3,0.045,4,0.045,5,0.045,6,0.035,11,0.003,12,0.32,13,0.771,16,1.5,17,0.006,19,0.629,23,0.045,28,2.528,29,4.175,53,0.995,95,2,99,0.004,100,0.003,128,1.536,145,1.826,150,0.239,205,1.078,216,2.264,219,1.539,247,1.353,252,1.432,253,1.869,291,2.259,509,1.347,544,3.399,570,3.146,594,3.782,606,4.162,621,2.362,628,4.75,629,2.933,632,2.259,636,2.608,663,2.121,686,3.786,708,2.627,735,3.034,737,3.786,738,5.542,740,3.786,741,5.542,742,3.786,748,4.686,759,4.926,768,3.782,769,2.362,771,6.326,772,2.418,773,4.04,774,4.04,775,4.04,784,4.04,785,3.786,810,5.542,811,4.04,819,5.542,823,2.757,1220,4.04,1436,6.856,1437,4.893,1438,4.893,1439,8.925,1440,8.246,1441,4.893,1442,4.379,1443,4.379,1444,4.893,1445,4.893,1446,6.713,1447,8.64,1448,4.893,1449,4.893,1450,4.893,1451,4.893,1452,4.893,1453,4.893,1454,4.893,1455,4.893,1456,4.893,1457,4.893,1458,4.893,1459,4.893,1460,4.893,1461,4.893,1462,4.893,1463,4.893,1464,4.893,1465,4.893,1466,4.893,1467,4.893,1468,7.662,1469,4.893,1470,4.893,1471,6.713,1472,8.246,1473,4.893,1474,8.246,1475,4.893,1476,4.893,1477,6.713,1478,6.326,1479,6.713,1480,6.713,1481,6.713,1482,6.713,1483,6.713,1484,6.713,1485,7.662,1486,4.893,1487,4.893,1488,4.893,1489,4.893,1490,6.713,1491,4.893,1492,4.893,1493,4.893,1494,4.893,1495,4.893,1496,4.893,1497,4.893,1498,4.893,1499,8.246,1500,6.713,1501,4.04,1502,4.893,1503,4.893,1504,4.893,1505,4.893,1506,4.893,1507,4.893,1508,4.893,1509,4.893,1510,4.893,1511,4.893,1512,4.893,1513,4.893,1514,4.893,1515,8.64,1516,6.713,1517,6.713,1518,6.713,1519,4.893,1520,4.893,1521,4.893,1522,4.893,1523,4.893]],["title/components/ColorBarComponent.html",[101,0.539,331,1.364]],["body/components/ColorBarComponent.html",[3,0.075,4,0.038,5,0.038,6,0.064,8,0.73,11,0.003,12,0.451,16,1.218,17,0.006,19,0.503,20,1.298,23,0.038,45,2.349,46,0.816,47,1.533,48,1.691,49,1.117,52,0.994,53,0.761,55,1.038,65,1.354,82,1.825,87,0.613,99,0.003,100,0.004,101,0.865,102,1.573,103,1.363,104,1.023,105,1.1,106,1.15,107,1.038,114,2.033,117,2.662,118,2.149,120,1.506,122,1.55,127,1.279,128,0.926,129,1.666,136,0.953,144,3.056,148,1.133,150,0.157,151,0.313,169,1.1,173,1.1,177,1.573,179,0.074,193,1.038,197,1.252,199,1.023,205,0.649,219,0.889,224,2.317,237,0.98,238,3.934,239,4.499,252,0.863,268,1.565,271,1.241,275,1.593,281,1.973,290,1.363,293,1.009,300,1.654,301,1.654,302,1.565,303,3.925,317,0.595,318,1.402,319,1.463,320,1.15,321,2.155,322,1.15,323,1.669,324,1.084,325,1.038,326,1.964,327,1.1,328,1.15,329,1.1,330,1.15,331,2.061,332,1.912,333,1.15,334,1.1,335,1.117,336,1.15,337,1.1,338,1.15,339,1.1,340,1.15,341,1.573,342,1.669,343,1.798,344,2.288,345,1.1,346,1.117,347,1.15,348,1.669,349,1.1,350,1.669,351,1.1,352,1.133,353,1.669,354,1.1,355,1.573,356,1.669,357,1.573,358,1.669,359,1.1,360,1.15,361,1.1,362,1.1,363,1.15,364,1.1,365,1.15,366,1.573,367,2.155,368,1.573,369,1.669,370,1.1,371,1.133,372,1.1,373,1.15,374,1.1,375,1.669,376,1.084,377,1.1,378,1.15,379,1.1,380,1.15,381,1.117,382,1.15,383,1.084,384,1.15,385,1.1,386,1.15,387,1.1,388,1.15,389,1.1,390,1.084,391,0.98,392,1.1,393,1.084,394,1.053,395,1.1,396,1.15,397,1.1,398,1.053,399,1.15,400,1.1,401,1.15,402,1.573,403,1.1,404,1.15,405,1.15,473,1.307,492,2.448,494,2.714,495,2.081,509,0.56,510,1.686,526,2.311,527,2.355,534,0.888,682,2.556,1396,2.049,1422,2.652,1524,5.417,1525,4.467,1526,6.994,1527,4.046,1528,6.861,1529,3.925,1530,6.907,1531,5.87,1532,5.252,1533,6.907,1534,4.147,1535,6.907,1536,6.907,1537,6.907,1538,3.047,1539,6.907,1540,4.046,1541,3.307,1542,4.046,1543,3.408,1544,4.282,1545,4.046,1546,4.046,1547,5.87,1548,4.046,1549,5.252,1550,3.621,1551,4.046,1552,4.046,1553,4.046,1554,4.046,1555,5.066,1556,3.621,1557,4.046,1558,4.046,1559,4.046,1560,4.846,1561,5.252,1562,5.252,1563,5.87,1564,2.508,1565,2.601,1566,3.621,1567,4.3,1568,3.925,1569,2.156,1570,3.621,1571,2.216,1572,1.953,1573,2.156,1574,3.131]],["title/modules/ColorBarModule.html",[409,0.737,1575,3.501]],["body/modules/ColorBarModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,150,0.248,151,0.566,179,0.135,204,2.019,317,1.075,331,2.799,332,1.374,409,1.075,411,2.049,412,2.049,413,2.714,414,2.079,415,2.079,416,2.714,431,2.397,432,1.876,434,2.175,435,2.544,553,2.791,554,2.314,1524,4.383,1525,3.614,1526,5.659,1575,6.999,1576,6.544,1577,6.544,1578,6.544,1579,7.313,1580,7.313]],["title/components/ColorPickerLauncherComponent.html",[101,0.539,334,1.364]],["body/components/ColorPickerLauncherComponent.html",[3,0.079,4,0.043,5,0.043,6,0.053,8,0.578,11,0.002,12,0.304,13,0.744,17,0.005,19,0.472,23,0.043,47,1.717,48,1.882,52,1.143,53,0.749,55,1.193,65,1.462,89,3.128,99,0.003,100,0.004,101,0.969,102,1.737,103,1.504,104,1.176,105,1.265,106,1.322,107,1.193,114,2.128,117,2.676,118,2.163,120,1.663,122,1.712,128,1.064,129,1.217,134,4.524,136,1.095,148,1.303,150,0.173,151,0.36,169,1.265,173,1.265,177,1.737,179,0.086,193,1.193,194,2.867,199,1.176,224,2.055,233,2.461,237,1.126,271,1.426,272,1.831,281,1.21,290,1.504,293,1.159,296,2.057,298,3.549,300,1.901,301,1.901,302,1.798,317,0.684,318,1.548,319,1.615,320,1.322,321,2.294,322,1.322,323,1.843,324,1.246,325,1.193,326,2.121,327,1.265,328,1.322,329,1.265,330,1.322,331,1.265,332,1.865,333,1.322,334,2.194,335,2.728,336,1.322,337,1.265,338,1.322,339,1.265,340,1.322,341,1.737,342,1.843,343,1.942,344,2.412,345,1.265,346,1.283,347,1.322,348,1.843,349,1.265,350,1.843,351,1.265,352,1.303,353,1.843,354,1.265,355,1.737,356,1.843,357,1.737,358,1.843,359,1.265,360,1.322,361,1.265,362,1.265,363,1.322,364,1.265,365,1.322,366,1.737,367,2.294,368,1.737,369,1.843,370,1.265,371,1.303,372,1.265,373,1.322,374,1.265,375,1.843,376,1.246,377,1.265,378,1.322,379,1.265,380,1.322,381,1.283,382,1.322,383,1.246,384,1.322,385,1.265,386,1.322,387,1.265,388,1.322,389,1.265,390,1.246,391,1.126,392,1.265,393,1.246,394,1.21,395,1.265,396,1.322,397,1.265,398,1.21,399,1.322,400,1.265,401,1.322,402,1.737,403,1.265,404,1.322,405,1.322,492,2.644,494,2.186,495,2.86,509,0.644,512,3.281,526,2.552,527,2.599,632,4.244,849,4.333,1274,4.524,1422,2.928,1524,4.47,1525,3.686,1562,5.798,1569,2.478,1581,6.157,1582,4.65,1583,5.35,1584,4.333,1585,5.798,1586,6.48,1587,6.48,1588,3.058,1589,3.058,1590,6.48,1591,7.458,1592,6.48,1593,5.207,1594,4.085,1595,4.65,1596,4.65,1597,5.798,1598,5.014,1599,3.549,1600,5.014,1601,2.194,1602,2.989,1603,4.65,1604,3.839]],["title/modules/ColorPickerLauncherModule.html",[409,0.737,1605,3.674]],["body/modules/ColorPickerLauncherModule.html",[3,0.066,4,0.066,5,0.066,6,0.05,11,0.004,17,0.006,23,0.066,99,0.005,100,0.004,150,0.254,151,0.551,179,0.131,204,1.964,224,2.069,317,1.046,332,1.605,334,2.79,335,2.527,409,1.046,411,1.993,412,1.993,413,2.682,414,2.023,415,2.023,416,2.682,431,2.358,432,1.825,434,2.541,435,2.503,553,2.746,554,2.251,1524,4.264,1525,3.516,1581,5.873,1605,7.414,1606,6.366,1607,6.366,1608,6.366,1609,6.366,1610,7.223,1611,7.114,1612,7.114,1613,5.873,1614,7.114]],["title/interfaces/ColorScheme.html",[0,0.236,1534,2.478]],["body/interfaces/ColorScheme.html",[0,0.352,2,1.638,3,0.069,4,0.069,5,0.069,6,0.053,11,0.004,12,0.488,13,1.01,16,1.51,17,0.005,18,1.682,19,0.738,23,0.069,53,0.969,99,0.005,100,0.004,1534,4.345,1544,5.981,1555,6.248,1565,6.202,1568,6.248,1615,7.469,1616,7.469]],["title/interfaces/ColorScheme-1.html",[0,0.198,253,0.908,1534,2.074]],["body/interfaces/ColorScheme-1.html",[0,0.303,2,1.007,3,0.06,4,0.043,5,0.043,6,0.032,8,0.571,11,0.002,12,0.484,13,0.738,16,1.325,17,0.006,18,1.445,19,0.725,23,0.09,36,1.491,47,0.875,51,1.809,53,0.991,69,1.776,82,1.697,99,0.003,100,0.002,127,1.766,131,1.986,219,1.444,224,2.331,236,1.387,239,2.966,252,2.012,253,2.041,332,1.392,506,2.847,649,2.075,852,1.714,1524,2.753,1525,2.27,1534,4.792,1544,6.17,1555,6.376,1565,6.344,1568,6.679,1599,2.515,1617,4.11,1618,4.593,1619,5.304,1620,5.304,1621,5.749,1622,5.749,1623,4.11,1624,4.11,1625,5.749,1626,4.11,1627,5.749,1628,4.11,1629,4.11,1630,4.11,1631,8.442,1632,8.442,1633,6.911,1634,8.442,1635,8.442,1636,5.749,1637,5.749,1638,4.11,1639,4.11,1640,4.11,1641,4.11,1642,4.11,1643,4.11,1644,6.63,1645,4.11,1646,4.11,1647,4.11,1648,5.749,1649,4.11,1650,4.11,1651,4.11,1652,6.63,1653,4.11,1654,4.11,1655,4.11,1656,4.11,1657,4.11,1658,5.749,1659,4.11,1660,4.11,1661,6.63,1662,4.11,1663,4.11,1664,4.11,1665,4.11,1666,4.11,1667,4.11,1668,4.11,1669,6.63,1670,4.11,1671,4.11,1672,4.11,1673,4.11,1674,4.11,1675,4.11,1676,4.11,1677,6.63,1678,4.11,1679,4.11,1680,4.11,1681,4.11,1682,4.11,1683,4.11,1684,4.11,1685,4.11,1686,6.63,1687,4.11,1688,4.11,1689,4.11,1690,4.11,1691,4.11,1692,4.11,1693,4.11,1694,4.11,1695,6.63,1696,4.11,1697,4.11,1698,4.11,1699,4.11,1700,4.11,1701,4.11,1702,4.11,1703,4.11,1704,6.63,1705,4.11,1706,4.11,1707,4.11,1708,4.11,1709,4.11,1710,4.11,1711,4.11,1712,3.071,1713,2.075,1714,3.554,1715,4.11]],["title/components/ColorSchemeContentsComponent.html",[101,0.539,337,1.364]],["body/components/ColorSchemeContentsComponent.html",[3,0.064,4,0.027,5,0.027,6,0.066,8,0.565,11,0.002,12,0.297,13,0.845,15,1.005,16,0.851,17,0.006,18,1.63,19,0.612,20,1.787,23,0.027,24,1.969,33,1.725,47,1.321,48,1.553,49,1.759,52,0.708,53,0.802,55,0.74,65,1.101,68,2.096,69,3.316,87,1.05,93,1.225,99,0.002,100,0.003,101,0.745,102,1.217,103,1.054,104,0.729,105,0.784,106,0.82,107,0.74,114,1.784,117,2.609,118,2.108,120,1.165,122,1.199,127,0.841,128,0.66,129,1.732,131,1.708,135,3.749,136,0.679,144,2.82,145,1.733,148,0.808,150,0.17,151,0.223,159,3.611,169,0.784,173,0.784,177,1.217,179,0.053,183,0.565,193,0.74,197,0.968,199,1.148,205,1.377,213,3.749,219,0.851,224,2.465,233,1.725,237,0.698,238,2.358,239,2.096,247,1.132,252,0.615,253,1.215,268,2.681,269,2.096,270,2.487,271,1.723,272,1.135,275,1.135,277,2.254,279,3.006,281,1.805,282,2.637,284,2.377,286,3.41,290,1.054,293,1.589,299,1.361,300,2.834,301,1.178,302,2.681,305,1.331,306,1.276,308,1.674,309,1.579,317,0.424,318,1.084,319,1.132,320,0.82,321,1.812,322,0.82,323,1.291,324,0.773,325,0.74,326,1.597,327,0.784,328,0.82,329,0.784,330,0.82,331,0.784,332,1.757,333,0.82,334,0.784,335,0.796,336,0.82,337,1.733,338,0.82,339,0.784,340,0.82,341,1.217,342,1.291,343,1.462,344,1.971,345,0.784,346,0.796,347,0.82,348,1.291,349,0.784,350,1.291,351,0.784,352,0.808,353,1.291,354,0.784,355,1.217,356,1.291,357,1.217,358,1.291,359,0.784,360,0.82,361,0.784,362,0.784,363,0.82,364,0.784,365,0.82,366,1.217,367,1.812,368,1.217,369,1.291,370,0.784,371,0.808,372,0.784,373,0.82,374,0.784,375,1.291,376,0.773,377,0.784,378,0.82,379,0.784,380,0.82,381,0.796,382,0.82,383,0.773,384,0.82,385,0.784,386,0.82,387,0.784,388,0.82,389,0.784,390,0.773,391,0.698,392,0.784,393,0.773,394,0.751,395,0.784,396,0.82,397,0.784,398,0.751,399,0.82,400,0.784,401,0.82,402,1.217,403,0.784,404,0.82,405,0.82,473,1.451,490,1.276,492,1.991,494,2.15,495,1.61,509,1.24,510,3.633,512,3.227,515,2.815,526,1.788,527,1.822,534,1.521,545,1.787,571,1.621,586,1.621,588,1.93,632,4.37,682,1.532,852,2.98,1099,2.231,1230,1.425,1242,4.209,1400,3.326,1422,2.88,1524,5.568,1525,4.591,1528,2.231,1529,3.036,1532,4.063,1534,3.808,1538,2.358,1543,2.637,1550,4.063,1564,3.483,1567,2.112,1569,1.536,1571,1.579,1572,2.192,1573,2.42,1574,2.231,1593,4.449,1594,3.49,1599,2.487,1602,1.853,1712,3.756,1716,7.669,1717,2.883,1718,3.749,1719,4.541,1720,3.514,1721,5.262,1722,5.618,1723,4.541,1724,5.618,1725,5.618,1726,6.373,1727,6.373,1728,5.027,1729,4.638,1730,5.618,1731,5.618,1732,6.559,1733,2.883,1734,4.541,1735,2.883,1736,3.036,1737,1.788,1738,2.883,1739,3.326,1740,4.063,1741,2.883,1742,3.17,1743,2.883,1744,2.883,1745,6.752,1746,2.883,1747,4.063,1748,3.326,1749,3.17,1750,2.299,1751,2.052,1752,2.883,1753,2.883,1754,2.883,1755,4.932,1756,2.883,1757,2.883,1758,2.883,1759,2.883,1760,5.703,1761,2.883,1762,2.883,1763,2.883,1764,2.883,1765,5.703,1766,2.883,1767,2.883,1768,2.883,1769,2.883,1770,2.883,1771,2.883,1772,4.669,1773,2.883,1774,2.883,1775,6.373,1776,2.883,1777,2.883,1778,2.883,1779,2.883,1780,2.883,1781,2.883,1782,5.618,1783,2.58,1784,2.58,1785,2.231,1786,2.58,1787,2.58,1788,2.883,1789,2.883,1790,2.883,1791,2.883,1792,4.541,1793,2.112,1794,2.883,1795,2.883,1796,2.883,1797,1.787,1798,2.013,1799,3.326,1800,2.112,1801,3.17,1802,2.013,1803,2.231,1804,2.38,1805,1.674,1806,4.541,1807,2.013,1808,2.58,1809,3.514,1810,2.231,1811,2.883,1812,2.58]],["title/modules/ColorSchemeContentsModule.html",[409,0.737,1813,3.674]],["body/modules/ColorSchemeContentsModule.html",[3,0.064,4,0.064,5,0.064,6,0.049,11,0.004,17,0.006,23,0.064,99,0.004,100,0.004,150,0.262,151,0.536,179,0.127,204,1.912,224,2.192,317,1.018,332,1.579,337,2.781,409,1.018,411,1.94,412,1.94,413,2.651,414,1.969,415,1.969,416,2.651,424,6.552,431,2.32,432,1.777,434,2.5,435,2.463,454,5.718,455,5.073,456,5.359,553,2.702,554,2.192,1242,3.344,1524,4.151,1525,3.423,1526,5.359,1575,6.841,1716,5.718,1772,5.073,1813,7.459,1814,6.197,1815,6.197,1816,6.926,1817,6.197,1818,6.926,1819,7.521,1820,6.926,1821,6.197]],["title/components/ColorSchemePopupComponent.html",[101,0.539,339,1.364]],["body/components/ColorSchemePopupComponent.html",[3,0.072,4,0.035,5,0.035,6,0.064,8,0.468,11,0.002,12,0.246,13,0.939,17,0.006,19,0.596,20,1.245,23,0.035,47,1.489,48,1.706,49,1.537,52,0.926,53,0.735,55,0.966,65,1.299,87,1.004,99,0.003,100,0.004,101,0.84,102,1.493,103,1.293,104,0.953,105,1.024,106,1.071,107,0.966,114,1.982,117,2.653,118,2.141,120,1.429,122,1.471,127,1.227,128,0.862,129,1.667,136,0.887,145,1.515,148,1.055,150,0.177,151,0.292,169,1.024,173,1.024,177,1.493,179,0.069,183,0.738,193,0.966,197,1.188,199,0.953,205,1.064,215,2.82,219,0.843,224,2.448,233,2.116,237,0.912,247,0.759,248,3.139,269,3.38,274,2.007,277,2.659,283,1.457,286,2.932,290,1.293,293,0.939,296,2.464,299,1.778,317,0.554,318,1.33,319,2.251,320,1.071,321,2.082,322,1.071,323,1.584,324,1.01,325,1.429,326,1.885,327,1.024,328,1.071,329,1.024,330,1.071,331,1.024,332,1.741,333,1.071,334,1.024,335,1.04,336,1.071,337,1.024,338,1.071,339,1.992,340,1.071,341,1.493,342,1.584,343,1.725,344,2.222,345,1.024,346,1.04,347,1.071,348,1.584,349,1.024,350,1.584,351,1.024,352,1.055,353,1.584,354,1.024,355,1.493,356,1.584,357,1.493,358,1.584,359,1.024,360,1.071,361,1.024,362,1.024,363,1.071,364,1.024,365,1.071,366,1.493,367,2.082,368,1.493,369,1.584,370,1.024,371,1.055,372,1.024,373,1.071,374,1.024,375,1.584,376,1.01,377,1.024,378,1.071,379,1.024,380,1.071,381,1.04,382,1.071,383,1.01,384,1.071,385,1.024,386,1.071,387,1.024,388,1.071,389,1.024,390,1.01,391,0.912,392,1.024,393,1.01,394,0.981,395,1.024,396,1.071,397,1.024,398,0.981,399,1.071,400,1.024,401,1.071,402,1.493,403,1.024,404,1.071,405,1.071,473,0.65,492,2.349,494,2.235,495,2.596,509,0.522,526,2.193,527,2.234,534,0.826,571,1.913,607,5.129,608,1.778,616,3.535,632,4.012,636,2.007,641,2.968,663,1.633,682,2.47,693,1.54,721,2.415,768,2.122,847,3.338,856,5.456,858,4.31,860,2.759,937,2.519,1396,2.82,1400,4.08,1524,5.411,1525,4.461,1529,6.409,1534,3.275,1564,4.109,1593,4.627,1594,3.629,1602,2.421,1613,7.453,1712,4.432,1729,5.471,1736,5.47,1740,4.984,1742,3.888,1805,2.187,1822,3.767,1823,6.628,1824,5.57,1825,7.323,1826,8.874,1827,8.181,1828,4.984,1829,4.984,1830,3.767,1831,4.389,1832,3.581,1833,3.767,1834,4.984,1835,3.767,1836,2.629,1837,4.598,1838,3.37,1839,3.767,1840,4.984,1841,4.984,1842,5.364,1843,3.888,1844,5.57,1845,5.57,1846,3.767,1847,4.984,1848,3.767,1849,6.553,1850,5.57,1851,3.767,1852,3.767,1853,3.581,1854,3.453,1855,3.767,1856,4.31,1857,2.915,1858,3.37,1859,3.37,1860,3.37,1861,3.767,1862,4.984,1863,3.767,1864,3.767,1865,3.767,1866,5.57,1867,3.767,1868,3.767,1869,3.767,1870,3.11]],["title/modules/ColorSchemePopupModule.html",[409,0.737,1610,3.674]],["body/modules/ColorSchemePopupModule.html",[3,0.066,4,0.066,5,0.066,6,0.05,11,0.004,17,0.006,23,0.066,99,0.005,100,0.004,150,0.254,151,0.551,179,0.131,204,1.964,224,2.353,317,1.046,332,1.605,339,2.79,409,1.046,411,1.993,412,1.993,413,2.682,414,2.023,415,2.023,416,2.682,431,2.358,432,1.825,434,2.541,435,2.503,553,2.746,554,2.251,1524,4.264,1525,3.516,1610,7.414,1613,5.873,1716,5.873,1813,7.223,1871,6.366,1872,6.366,1873,7.114,1874,6.366,1875,7.114,1876,7.114,1877,7.114]],["title/interfaces/ColorSchemeSelection.html",[0,0.236,1714,3.881]],["body/interfaces/ColorSchemeSelection.html",[0,0.307,2,1.026,3,0.069,4,0.043,5,0.043,6,0.033,8,0.582,11,0.002,12,0.556,13,0.747,16,0.985,17,0.006,18,1.456,19,0.708,23,0.09,36,1.086,51,2.563,53,0.969,69,1.809,82,1.236,99,0.003,100,0.002,127,1.772,131,1.254,219,1.449,224,2.371,236,1.966,239,3.734,252,2.02,253,2.048,332,1.52,506,4.035,852,2.429,1524,2.804,1525,2.312,1534,4.837,1544,6.03,1555,6.157,1565,6.206,1568,6.614,1599,3.564,1617,4.187,1619,3.863,1620,5.373,1621,5.824,1622,5.824,1623,4.187,1624,4.187,1625,5.824,1626,4.187,1627,5.824,1628,4.187,1629,4.187,1630,4.187,1631,8.474,1632,8.474,1633,6.937,1634,8.474,1635,8.474,1636,5.824,1637,5.824,1638,4.187,1639,4.187,1640,4.187,1641,4.187,1642,4.187,1643,4.187,1644,6.696,1645,4.187,1646,4.187,1647,4.187,1648,5.824,1649,4.187,1650,4.187,1651,4.187,1652,6.696,1653,4.187,1654,4.187,1655,4.187,1656,4.187,1657,4.187,1658,5.824,1659,4.187,1660,4.187,1661,6.696,1662,4.187,1663,4.187,1664,4.187,1665,4.187,1666,4.187,1667,4.187,1668,4.187,1669,6.696,1670,4.187,1671,4.187,1672,4.187,1673,4.187,1674,4.187,1675,4.187,1676,4.187,1677,6.696,1678,4.187,1679,4.187,1680,4.187,1681,4.187,1682,4.187,1683,4.187,1684,4.187,1685,4.187,1686,6.696,1687,4.187,1688,4.187,1689,4.187,1690,4.187,1691,4.187,1692,4.187,1693,4.187,1694,4.187,1695,6.696,1696,4.187,1697,4.187,1698,4.187,1699,4.187,1700,4.187,1701,4.187,1702,4.187,1703,4.187,1704,6.696,1705,4.187,1706,4.187,1707,4.187,1708,4.187,1709,4.187,1710,4.187,1711,4.187,1712,3.129,1713,2.941,1714,5.036,1715,7.239]],["title/components/ContainerComponent.html",[101,0.539,341,1.344]],["body/components/ContainerComponent.html",[3,0.068,4,0.031,5,0.031,6,0.065,8,0.762,11,0.002,12,0.33,13,0.58,17,0.006,18,0.909,19,0.608,20,0.948,23,0.031,46,1.382,47,1.407,48,1.57,49,0.912,51,1.302,52,0.812,53,0.742,55,0.848,65,1.201,82,1.334,87,0.764,99,0.003,100,0.003,101,0.955,102,1.353,103,1.808,104,0.836,105,0.899,106,0.94,107,0.848,109,3.376,114,2.288,117,2.631,118,2.129,120,1.295,122,1.334,125,0.725,127,0.935,128,0.756,129,1.713,131,1.353,136,0.778,145,2.204,148,0.926,150,0.208,151,0.256,153,1.302,156,1.255,169,0.899,173,0.899,177,1.98,179,0.136,180,1.525,181,1.649,183,1.344,192,4.423,193,0.848,197,1.077,199,0.836,205,1.101,216,1.703,219,1.038,224,1.484,237,0.801,247,1.382,252,0.705,253,1.325,273,2.845,274,1.761,275,3.591,277,2.963,283,3.597,290,1.172,293,0.824,314,2.558,317,0.486,318,1.638,319,1.259,320,0.94,321,1.95,322,0.94,323,1.436,324,0.886,325,1.295,326,1.742,327,0.899,328,0.94,329,0.899,330,0.94,331,0.899,332,1.288,333,0.94,334,0.899,335,0.912,336,0.94,337,0.899,338,0.94,339,0.899,340,0.94,341,1.98,342,1.436,343,2.027,344,2.1,345,0.899,346,0.912,347,0.94,348,1.436,349,0.899,350,1.436,351,0.899,352,0.926,353,1.436,354,0.899,355,1.353,356,1.436,357,1.353,358,1.436,359,0.899,360,0.94,361,0.899,362,0.899,363,0.94,364,0.899,365,0.94,366,1.353,367,1.95,368,1.353,369,1.436,370,0.899,371,0.926,372,0.899,373,0.94,374,0.899,375,1.436,376,0.886,377,0.899,378,0.94,379,0.899,380,0.94,381,0.912,382,0.94,383,0.886,384,0.94,385,0.899,386,0.94,387,0.899,388,0.94,389,0.899,390,0.886,391,0.801,392,0.899,393,0.886,394,0.86,395,0.899,396,0.94,397,0.899,398,0.86,399,0.94,400,0.899,401,0.94,402,1.353,403,0.899,404,0.94,405,0.94,407,1.462,415,1.436,473,1.397,490,1.462,493,1.377,503,1.377,509,0.848,528,2.383,534,1.108,571,2.811,586,0.954,608,2.891,616,3.76,693,2.064,835,2.064,836,3.938,841,4.409,869,4.252,900,1.862,962,1.952,990,1.525,1538,2.621,1565,3.246,1588,2.383,1589,2.383,1601,1.56,1713,3.098,1737,2.701,1751,2.281,1878,3.305,1879,2.891,1880,3.907,1881,4.518,1882,3.351,1883,5.482,1884,4.518,1885,2.857,1886,5.482,1887,5.482,1888,5.023,1889,3.525,1890,3.236,1891,6.136,1892,5.482,1893,3.525,1894,4.11,1895,4.11,1896,5.049,1897,2.145,1898,3.078,1899,3.13,1900,3.305,1901,4.518,1902,3.25,1903,3.305,1904,3.907,1905,4.518,1906,3.13,1907,3.376,1908,3.246,1909,3.305,1910,2.845,1911,4.168,1912,4.518,1913,3.305,1914,3.026,1915,3.305,1916,4.518,1917,2.656,1918,3.305,1919,2.845,1920,7.249,1921,4.518,1922,6.136,1923,3.305,1924,3.907,1925,6.136,1926,4.518,1927,3.305,1928,3.698,1929,3.907,1930,4.518,1931,3.305,1932,3.798,1933,3.13,1934,2.958,1935,3.305,1936,3.698,1937,2.958,1938,3.305,1939,2.958,1940,2.958,1941,2.729,1942,2.558,1943,2.21,1944,2.558,1945,1.862,1946,2.958,1947,2.558,1948,3.907,1949,2.958,1950,2.558,1951,2.958,1952,2.958,1953,3.265,1954,3.181,1955,2.958,1956,2.21,1957,2.958,1958,2.049,1959,2.958,1960,2.958,1961,2.958,1962,1.862,1963,2.307,1964,2.558,1965,2.307,1966,2.049,1967,2.958,1968,2.958,1969,3.907,1970,1.862,1971,3.698,1972,2.958,1973,2.958,1974,2.049,1975,2.958,1976,2.958,1977,2.958,1978,4.518,1979,4.518,1980,2.958,1981,2.958,1982,2.958,1983,2.958,1984,2.958,1985,2.958,1986,2.958,1987,2.421,1988,2.729]],["title/components/ContainerComponent-1.html",[101,0.451,253,0.908,341,1.125]],["body/components/ContainerComponent-1.html",[3,0.068,4,0.031,5,0.031,6,0.065,8,0.761,11,0.002,12,0.33,13,0.579,17,0.006,18,0.908,19,0.608,20,0.948,23,0.031,46,1.382,47,1.407,48,1.569,49,0.912,51,1.301,52,0.812,53,0.742,55,0.848,65,1.2,82,1.333,87,0.764,99,0.003,100,0.003,101,0.955,102,1.353,103,1.807,104,0.835,105,0.898,106,0.939,107,0.848,109,3.374,114,2.288,117,2.631,118,2.129,120,1.295,122,1.333,125,0.725,127,0.935,128,0.756,129,1.713,131,1.353,136,0.778,145,2.203,148,0.925,150,0.208,151,0.256,153,1.301,156,1.255,169,0.898,173,0.898,177,1.979,179,0.136,180,1.524,181,1.648,183,1.343,192,4.422,193,0.848,197,1.076,199,0.835,205,1.1,216,1.702,219,1.038,224,1.484,237,0.8,247,1.382,252,0.704,253,1.483,273,2.844,274,1.76,275,3.591,277,2.962,283,3.596,290,1.171,293,0.823,314,2.556,317,0.486,318,1.637,319,1.258,320,0.939,321,1.949,322,0.939,323,1.435,324,0.885,325,1.295,326,1.741,327,0.898,328,0.939,329,0.898,330,0.939,331,0.898,332,1.288,333,0.939,334,0.898,335,0.912,336,0.939,337,0.898,338,0.939,339,0.898,340,0.939,341,1.979,342,1.435,343,2.027,344,2.1,345,0.898,346,0.912,347,0.939,348,1.435,349,0.898,350,1.435,351,0.898,352,0.925,353,1.435,354,0.898,355,1.353,356,1.435,357,1.353,358,1.435,359,0.898,360,0.939,361,0.898,362,0.898,363,0.939,364,0.898,365,0.939,366,1.353,367,1.949,368,1.353,369,1.435,370,0.898,371,0.925,372,0.898,373,0.939,374,0.898,375,1.435,376,0.885,377,0.898,378,0.939,379,0.898,380,0.939,381,0.912,382,0.939,383,0.885,384,0.939,385,0.898,386,0.939,387,0.898,388,0.939,389,0.898,390,0.885,391,0.8,392,0.898,393,0.885,394,0.86,395,0.898,396,0.939,397,0.898,398,0.86,399,0.939,400,0.898,401,0.939,402,1.353,403,0.898,404,0.939,405,0.939,407,1.462,415,1.435,473,1.397,490,1.462,493,1.376,503,1.376,509,0.848,528,2.382,534,1.107,571,2.811,586,0.953,608,2.89,616,3.759,693,2.063,835,2.063,836,3.937,841,4.407,869,4.25,900,1.861,962,1.951,990,1.524,1538,2.62,1565,3.244,1588,2.382,1589,2.382,1601,1.559,1713,3.097,1737,2.7,1751,2.28,1879,2.89,1880,3.905,1881,4.516,1882,3.351,1883,5.48,1884,4.516,1885,2.856,1886,5.48,1887,5.48,1888,5.022,1889,3.523,1890,3.235,1891,6.134,1892,5.48,1893,3.523,1894,4.109,1895,4.109,1897,2.144,1898,3.077,1899,3.129,1901,4.516,1902,3.249,1904,3.905,1905,4.516,1906,3.129,1907,3.374,1908,3.244,1910,2.844,1911,4.166,1912,4.516,1914,3.025,1916,4.516,1917,2.655,1919,2.844,1920,7.248,1921,4.516,1922,6.134,1924,3.905,1925,6.134,1926,4.516,1928,3.696,1929,3.905,1930,4.516,1932,3.797,1933,3.129,1934,2.956,1936,3.696,1937,2.956,1939,2.956,1940,2.956,1941,2.727,1942,2.556,1943,2.209,1944,2.556,1945,1.861,1946,2.956,1947,2.556,1948,3.905,1949,2.956,1950,2.556,1951,2.956,1952,2.956,1953,3.263,1954,3.179,1955,2.956,1956,2.209,1957,2.956,1958,2.048,1959,2.956,1960,2.956,1961,2.956,1962,1.861,1963,2.306,1964,2.556,1965,2.306,1966,2.048,1967,2.956,1968,2.956,1969,3.905,1970,1.861,1971,3.696,1972,2.956,1973,2.956,1974,2.048,1975,2.956,1976,2.956,1977,2.956,1978,4.516,1979,4.516,1980,2.956,1981,2.956,1982,2.956,1983,2.956,1984,2.956,1985,2.956,1986,2.956,1987,2.42,1988,2.727,1989,3.303,1990,5.046,1991,3.303,1992,3.303,1993,3.303,1994,3.303,1995,3.303,1996,3.303,1997,3.303,1998,3.303,1999,3.303,2000,3.303,2001,3.303]],["title/components/ContentComponent.html",[101,0.539,343,1.306]],["body/components/ContentComponent.html",[3,0.082,4,0.044,5,0.044,6,0.053,11,0.003,12,0.311,17,0.006,20,0.892,23,0.044,47,1.629,48,1.783,49,1.816,52,1.168,53,0.859,55,1.219,65,1.479,89,3.642,90,2.848,93,2.019,99,0.004,100,0.004,101,0.811,102,1.763,103,1.527,104,1.202,105,1.292,106,1.351,107,1.219,114,2.143,117,2.679,118,2.167,120,1.688,122,1.737,125,1.042,127,0.88,128,1.087,129,1.236,136,1.119,148,1.331,150,0.127,151,0.368,169,1.292,173,1.292,177,1.763,179,0.157,193,1.219,197,1.403,199,1.664,204,2.082,205,1.056,224,1.828,225,2.946,237,1.593,247,1.326,253,1.028,268,1.837,271,1.457,272,2.59,277,2.639,279,2.852,281,1.237,283,3.306,284,1.629,285,2.147,289,3.104,290,1.527,293,1.184,294,4.592,301,1.942,302,1.837,305,2.193,306,2.102,307,2.759,317,0.698,318,1.945,319,1.64,320,1.351,321,2.315,322,1.351,323,1.87,324,1.273,325,2.194,326,2.145,327,1.292,328,1.351,329,1.292,330,1.351,331,1.292,332,1.606,333,1.351,334,1.292,335,1.311,336,1.351,337,1.292,338,1.351,339,1.292,340,1.351,341,1.763,342,1.87,343,2.303,344,2.431,345,1.292,346,1.311,347,1.351,348,1.87,349,1.292,350,1.87,351,1.292,352,1.331,353,1.87,354,1.292,355,1.763,356,1.87,357,1.763,358,1.87,359,1.292,360,1.351,361,1.292,362,1.292,363,1.351,364,1.292,365,1.351,366,1.763,367,2.315,368,1.763,369,1.87,370,1.292,371,1.331,372,1.292,373,1.351,374,1.292,375,1.87,376,1.273,377,1.292,378,1.351,379,1.292,380,1.351,381,1.311,382,1.351,383,1.273,384,1.351,385,1.292,386,1.351,387,1.292,388,1.351,389,1.292,390,1.273,391,1.151,392,1.292,393,1.273,394,1.237,395,1.292,396,1.351,397,1.292,398,1.237,399,1.351,400,1.292,401,1.351,402,1.763,403,1.292,404,1.351,405,1.351,407,2.102,473,0.82,488,2.602,489,2.348,490,2.102,493,1.98,503,1.98,504,2.406,528,3.104,536,4.818,540,2.532,541,3.676,1405,3.819,1421,3.676,1528,3.676,1588,3.104,1589,3.104,1601,2.242,1953,2.532,2002,4.751,2003,5.526,2004,5.43,2005,8.143,2006,4.751,2007,4.751,2008,4.677,2009,7.544,2010,6.578,2011,4.751,2012,3.922,2013,4.751,2014,4.751,2015,4.251,2016,4.751,2017,3.317,2018,3.922,2019,3.48,2020,4.751]],["title/components/ContentComponent-1.html",[101,0.451,253,0.908,343,1.093]],["body/components/ContentComponent-1.html",[3,0.068,4,0.03,5,0.03,6,0.064,8,0.842,11,0.002,12,0.324,13,0.569,17,0.006,18,1.389,19,0.493,20,1.509,23,0.03,46,1.473,47,1.392,48,1.555,49,0.891,52,0.793,53,0.775,55,0.828,65,1.183,82,2.038,87,0.914,99,0.003,100,0.003,101,0.914,102,1.329,103,1.151,104,1.254,105,0.878,106,0.918,107,0.828,114,2.352,117,2.627,118,2.126,120,1.272,125,0.708,127,1.536,128,0.739,129,1.683,131,1.329,136,0.76,141,1.691,145,2.185,148,0.904,150,0.195,151,0.25,153,1.271,169,0.878,173,0.878,177,2.068,179,0.134,180,1.498,181,1.619,183,1.574,192,3.7,193,1.98,197,1.057,199,1.951,205,1.238,216,1.089,219,1.217,224,1.462,237,0.782,247,1.365,248,2.794,252,1.559,253,1.072,271,0.99,273,1.819,277,2.717,281,2.214,282,2.879,283,3.547,284,3.284,290,1.151,293,2.003,306,2.194,310,2.665,312,2.158,317,0.475,318,1.618,319,1.236,320,0.918,321,1.926,322,0.918,323,1.41,324,0.865,325,1.272,326,1.716,327,0.878,328,0.918,329,0.878,330,0.918,331,0.878,332,1.272,333,0.918,334,0.878,335,0.891,336,0.918,337,0.878,338,0.918,339,0.878,340,0.918,341,1.329,342,1.41,343,2.008,344,2.078,345,0.878,346,0.891,347,0.918,348,1.41,349,0.878,350,1.41,351,0.878,352,0.904,353,1.41,354,0.878,355,1.329,356,1.41,357,1.329,358,1.41,359,0.878,360,0.918,361,0.878,362,0.878,363,0.918,364,0.878,365,0.918,366,1.329,367,1.926,368,1.329,369,1.41,370,0.878,371,0.904,372,0.878,373,0.918,374,0.878,375,1.41,376,0.865,377,0.878,378,0.918,379,0.878,380,0.918,381,0.891,382,0.918,383,0.865,384,0.918,385,0.878,386,0.918,387,0.878,388,0.918,389,0.878,390,0.865,391,0.782,392,0.878,393,0.865,394,0.84,395,0.878,396,0.918,397,0.878,398,0.84,399,0.918,400,0.878,401,0.918,402,1.329,403,0.878,404,0.918,405,0.918,407,1.428,432,0.828,473,1.261,490,1.428,493,1.345,503,1.345,509,0.687,510,2.822,528,2.34,534,1.324,571,2.673,586,0.932,616,3.725,682,2.465,835,2.027,877,1.874,879,3.217,962,1.917,990,1.498,1121,2.642,1230,1.595,1296,2.794,1409,1.874,1567,2.364,1572,2.914,1588,2.34,1589,2.34,1601,1.523,1713,3.06,1737,1.952,1751,1.458,1807,2.253,1879,2.849,1882,3.095,1888,4.981,1889,3.461,1890,3.197,1893,3.461,1894,4.06,1895,4.06,1897,2.107,1898,2.822,1899,3.074,1902,3.095,1906,3.074,1907,3.315,1908,3.187,1914,2.972,1929,3.837,1932,3.743,1933,3.074,1943,2.158,1953,4.282,1954,4.006,1958,2.001,1966,2.001,1970,1.819,1974,2.001,2003,4.422,2021,3.228,2022,4.437,2023,6.58,2024,6.061,2025,4.437,2026,4.437,2027,4.437,2028,6.061,2029,5.402,2030,5.402,2031,4.958,2032,2.794,2033,3.228,2034,3.837,2035,3.228,2036,3.228,2037,4.437,2038,3.228,2039,3.228,2040,3.461,2041,3.228,2042,3.461,2043,3.461,2044,3.228,2045,3.228,2046,4.437,2047,5.402,2048,4.437,2049,4.585,2050,3.228,2051,3.228,2052,3.187,2053,2.498,2054,2.574,2055,2.498,2056,2.364,2057,2.888,2058,2.888,2059,2.888,2060,2.888,2061,2.888,2062,2.888,2063,2.888,2064,4.437,2065,2.888,2066,2.888,2067,2.888,2068,2.888,2069,2.888,2070,2.888,2071,2.253,2072,4.437,2073,2.888,2074,4.437,2075,1.676,2076,2.888,2077,1.634,2078,1.819,2079,2.888,2080,2.888,2081,2.888,2082,5.402,2083,2.888,2084,2.888,2085,4.437,2086,2.888,2087,2.888,2088,4.437,2089,2.888,2090,2.888,2091,2.888,2092,2.498,2093,2.665,2094,2.665,2095,2.158]],["title/components/ContentComponent-2.html",[101,0.451,343,1.093,1230,2.074]],["body/components/ContentComponent-2.html",[3,0.068,4,0.03,5,0.03,6,0.064,8,0.843,11,0.002,12,0.324,13,0.57,17,0.006,18,1.389,19,0.493,20,1.509,23,0.03,46,1.474,47,1.393,48,1.556,49,0.891,52,0.794,53,0.775,55,0.829,65,1.183,82,2.038,87,0.914,99,0.003,100,0.003,101,0.914,102,1.33,103,1.151,104,1.255,105,0.878,106,0.918,107,0.829,114,2.353,117,2.627,118,2.126,120,1.273,125,0.708,127,1.536,128,0.739,129,1.683,131,1.33,136,0.76,141,1.692,145,2.186,148,0.905,150,0.195,151,0.25,153,1.272,169,0.878,173,0.878,177,2.068,179,0.135,180,1.498,181,1.62,183,1.575,192,3.701,193,1.98,197,1.058,199,1.952,205,1.239,216,1.089,219,1.217,224,1.463,237,0.782,247,1.366,248,2.795,252,1.559,253,0.699,271,0.991,272,1.272,273,1.82,277,2.718,281,2.214,282,2.88,283,3.547,284,3.285,290,1.151,293,2.003,306,2.195,310,2.666,317,0.475,318,1.618,319,1.237,320,0.918,321,1.927,322,0.918,323,1.41,324,0.866,325,1.273,326,1.717,327,0.878,328,0.918,329,0.878,330,0.918,331,0.878,332,1.273,333,0.918,334,0.878,335,0.891,336,0.918,337,0.878,338,0.918,339,0.878,340,0.918,341,1.33,342,1.41,343,2.009,344,2.079,345,0.878,346,0.891,347,0.918,348,1.41,349,0.878,350,1.41,351,0.878,352,0.905,353,1.41,354,0.878,355,1.33,356,1.41,357,1.33,358,1.41,359,0.878,360,0.918,361,0.878,362,0.878,363,0.918,364,0.878,365,0.918,366,1.33,367,1.927,368,1.33,369,1.41,370,0.878,371,0.905,372,0.878,373,0.918,374,0.878,375,1.41,376,0.866,377,0.878,378,0.918,379,0.878,380,0.918,381,0.891,382,0.918,383,0.866,384,0.918,385,0.878,386,0.918,387,0.878,388,0.918,389,0.878,390,0.866,391,0.782,392,0.878,393,0.866,394,0.841,395,0.878,396,0.918,397,0.878,398,0.841,399,0.918,400,0.878,401,0.918,402,1.33,403,0.878,404,0.918,405,0.918,407,1.429,432,0.829,473,1.261,490,1.429,493,1.346,503,1.346,509,0.687,510,2.823,528,2.341,534,1.325,571,2.673,586,0.932,616,3.725,682,2.466,835,2.028,877,1.875,879,3.218,962,1.918,990,1.498,1121,2.643,1230,2.451,1296,2.795,1409,1.875,1572,2.915,1588,2.341,1589,2.341,1601,1.524,1713,3.061,1737,1.953,1751,1.459,1807,2.255,1879,2.85,1882,3.096,1888,4.982,1889,3.463,1890,3.198,1893,3.463,1894,4.061,1895,4.061,1897,2.108,1898,2.823,1899,3.075,1902,3.096,1906,3.075,1907,3.317,1908,3.189,1914,2.973,1929,3.838,1932,3.744,1933,3.075,1943,2.16,1953,4.282,1954,4.007,1958,2.002,1966,2.002,1970,1.82,1974,2.002,2003,4.423,2022,4.439,2023,6.581,2024,6.063,2025,4.439,2026,4.439,2027,4.439,2028,6.063,2029,5.404,2030,5.404,2032,2.795,2034,3.838,2037,4.439,2040,3.463,2042,3.463,2043,3.463,2046,4.439,2047,5.404,2048,4.439,2049,4.586,2052,3.189,2053,2.499,2054,2.575,2055,2.499,2056,2.366,2057,2.89,2058,2.89,2059,2.89,2060,2.89,2061,2.89,2062,2.89,2063,2.89,2064,4.439,2065,2.89,2066,2.89,2067,2.89,2068,2.89,2069,2.89,2070,2.89,2071,2.255,2072,4.439,2073,2.89,2074,4.439,2075,1.677,2076,2.89,2077,1.635,2078,1.82,2079,2.89,2080,2.89,2081,2.89,2082,5.404,2083,2.89,2084,2.89,2085,4.439,2086,2.89,2087,2.89,2088,4.439,2089,2.89,2090,2.89,2091,2.89,2092,2.499,2093,2.666,2094,2.666,2095,2.16,2096,3.23,2097,4.96,2098,3.23,2099,3.23,2100,3.23,2101,3.23,2102,3.23,2103,3.23,2104,3.23,2105,3.23,2106,3.23,2107,3.23]],["title/interfaces/ContentContainerChanged.html",[0,0.236,2108,2.912]],["body/interfaces/ContentContainerChanged.html",[0,0.416,2,1.272,3,0.054,4,0.054,5,0.054,6,0.041,8,0.721,11,0.003,12,0.379,13,0.863,17,0.006,18,1.353,19,0.751,23,0.092,46,1.515,53,0.582,82,1.986,97,3.545,99,0.004,100,0.003,101,0.983,103,1.745,114,2.431,116,3.267,131,1.554,141,1.624,150,0.155,179,0.107,192,3.806,215,2.936,219,0.878,233,3.352,275,2.96,281,1.957,283,3.778,284,2.577,290,1.346,296,2.566,505,2.416,509,1.041,663,2.514,665,2.416,693,2.37,708,3.135,962,3.226,986,3.629,990,2.271,1121,3.09,1751,3.397,1882,3.346,1885,2.242,1897,2.464,1898,3.133,1902,4.026,1917,3.259,1970,3.267,2049,3.903,2075,3.01,2077,2.936,2108,4.844,2109,4.247,2110,4.631,2111,4.661,2112,4.661,2113,5.172,2114,3.595,2115,4.365,2116,3.595,2117,4.362,2118,4.661,2119,3.728,2120,3.728,2121,4.365,2122,4.365,2123,3.903,2124,3.728,2125,3.728,2126,4.661,2127,3.367,2128,3.175]],["title/interfaces/ContentContainerChanged-1.html",[0,0.198,253,0.908,2108,2.437]],["body/interfaces/ContentContainerChanged-1.html",[0,0.416,2,1.272,3,0.054,4,0.054,5,0.054,6,0.041,8,0.721,11,0.003,12,0.379,13,0.863,17,0.006,18,1.353,19,0.751,23,0.092,46,1.515,53,0.582,82,1.986,97,3.545,99,0.004,100,0.003,101,0.983,103,1.745,114,2.431,116,3.267,131,1.554,141,1.624,150,0.155,179,0.107,192,3.806,215,2.936,219,0.878,233,3.352,275,2.96,281,1.957,283,3.778,284,2.577,290,1.346,296,2.566,505,2.416,509,1.041,663,2.514,665,2.416,693,2.37,708,3.135,962,3.226,986,3.629,990,2.271,1121,3.09,1751,3.397,1882,3.346,1885,2.242,1897,2.464,1898,3.133,1902,4.026,1917,3.259,1970,3.267,2049,3.903,2075,3.01,2077,2.936,2108,4.844,2110,4.631,2111,4.661,2112,4.661,2113,5.172,2114,3.595,2115,4.365,2116,3.595,2117,4.362,2118,4.661,2119,3.728,2120,3.728,2121,4.365,2122,4.365,2123,3.903,2124,3.728,2125,3.728,2126,4.661,2127,3.367,2128,3.175,2129,4.247]],["title/modules/ContentModule.html",[409,0.737,2130,3.881]],["body/modules/ContentModule.html",[3,0.065,4,0.065,5,0.065,6,0.049,11,0.004,17,0.006,23,0.065,99,0.005,100,0.004,118,1.453,150,0.263,151,0.543,179,0.129,204,1.935,317,1.03,343,2.665,398,1.825,409,1.03,411,1.964,412,1.964,413,2.665,414,1.993,415,1.993,416,2.665,431,2.337,432,1.798,434,2.518,435,2.481,436,4.286,437,3.236,553,2.721,554,2.218,1942,5.424,2130,7.893,2131,6.272,2132,6.272,2133,6.272,2134,6.272,2135,7.198,2136,7.198,2137,7.009,2138,6.272,2139,5.424,2140,7.009]],["title/modules/CoreModule.html",[409,0.737,422,3.674]],["body/modules/CoreModule.html",[3,0.064,4,0.064,5,0.064,6,0.049,11,0.004,17,0.006,23,0.064,87,1.05,99,0.004,100,0.004,119,3.069,150,0.258,151,0.537,179,0.128,204,1.914,317,1.02,409,1.331,411,1.943,412,1.943,413,2.032,414,1.972,415,1.972,416,2.653,422,7.49,431,2.322,432,1.779,434,2.502,435,2.465,509,0.96,1956,4.637,2141,6.206,2142,6.206,2143,6.206,2144,7.49,2145,7.18,2146,7.18,2147,6.935,2148,8.411,2149,5.725,2150,5.215,2151,6.935,2152,6.935,2153,6.935,2154,4.637,2155,9.054,2156,6.935,2157,5.08,2158,6.935]],["title/interfaces/DataSource.html",[0,0.236,92,2.421]],["body/interfaces/DataSource.html",[0,0.445,1,2.833,2,1.135,3,0.048,4,0.048,5,0.048,6,0.06,7,3.612,8,0.981,9,4.579,10,5.846,11,0.005,12,0.338,14,3.612,15,3.163,16,1.554,17,0.006,18,1.67,19,0.687,20,1.31,21,3.612,22,2.388,23,0.084,24,3.418,25,3.208,26,3.53,27,3.743,28,2.26,29,2.62,30,3.612,31,3.612,32,3.101,33,1.965,34,3.586,35,3.612,36,1.83,37,4.322,38,3.612,39,3.612,40,3.459,41,3.326,42,3.459,43,3.459,44,3.326,45,4.579,46,1.59,47,1.608,48,1.043,49,1.428,50,3.928,51,2.037,52,1.271,53,0.847,54,3.459,55,1.789,56,2.915,57,3.208,58,3.459,59,4.662,60,4.322,61,4.482,62,4.322,63,4.889,64,5.273,65,1.366,66,3.818,67,4.322,68,1.931,69,2.001,70,2.833,71,3.004,72,2.915,73,3.445,74,3.101,75,4.482,76,3.326,77,3.326,78,4.322,79,4.179,80,3.004,81,3.459,82,1.367,83,2.557,84,3.101,85,3.326,86,3.459,87,1.278,88,3.612,89,2.498,90,3.101,91,4.662,92,3.366,93,3.586,94,4.322,95,3.709,96,4.322,97,2.963,98,4.662,99,0.004,100,0.003,129,1.481,197,1.487,217,3.612,473,1.36,534,1.73,913,5.395,915,5.395,916,5.756,937,4.662,2159,5.174,2160,5.174,2161,5.174]],["title/interfaces/DataSource-1.html",[0,0.198,92,2.026,253,0.908]],["body/interfaces/DataSource-1.html",[0,0.347,2,0.834,3,0.073,4,0.035,5,0.035,6,0.027,11,0.004,12,0.367,13,0.644,16,1.243,17,0.006,18,1.689,19,0.683,23,0.076,28,2.178,46,1.131,47,0.724,92,3.963,95,3.207,99,0.003,100,0.002,125,0.834,141,1.867,145,1.525,150,0.21,179,0.07,205,1.428,216,1.892,219,1.42,235,2.208,247,1.922,252,1.569,271,2.673,281,2.21,332,1.054,509,0.527,513,3.702,571,2.611,573,4.864,588,2.383,590,3.477,609,4.145,625,2.208,630,2.208,632,3.076,634,1.394,638,4.702,639,2.444,641,2.026,642,5.423,643,2.444,644,3.46,647,3.994,649,3.011,655,3.477,666,2.444,669,5.458,769,3.787,772,3.877,803,2.542,852,3.064,972,2.542,1037,1.682,1101,2.431,1238,3.75,1239,2.654,1240,2.444,1241,2.989,1242,2.708,1243,4.145,1244,5.135,1245,4.864,1246,4.456,1247,2.279,1248,2.279,1249,2.542,1250,4.561,1251,4.729,1252,4.561,1253,4.729,1254,2.785,1255,2.785,1256,3.75,1257,4.702,1258,2.785,1259,2.785,1260,3.915,1261,4.652,1262,2.785,1263,3.75,1264,3.75,1265,4.881,1266,4.772,1267,3.606,1268,2.444,1269,2.444,1270,3.819,1271,5.747,1272,5.135,1273,4.108,1274,4.652,1275,2.785,1276,2.785,1277,2.785,1278,4.652,1279,2.279,1280,4.881,1281,4.881,1282,2.654,1283,2.654,1284,4.652,1285,4.919,1286,4.881,1287,2.542,1288,2.654,1289,2.785,1290,2.542,1291,5.388,1292,2.654,1293,6.208,1294,3.915,1295,3.915,1296,4.145,1297,2.542,1298,2.785,1299,2.785,1300,2.785,1301,2.785,1302,2.785,1303,2.785,1304,2.357,1305,4.881,1306,4.881,1307,4.881,1308,5.388,1309,5.747,1310,2.654,1311,2.785,1312,2.654,1313,4.108,1314,2.785,1315,2.785,1316,2.785,1317,2.654,1318,2.785,1319,2.785,1320,2.785,1321,2.654,1322,2.785,1323,2.785,1324,4.108,1325,2.785,1326,2.785,1327,2.654,1328,4.881,1329,2.785,1330,2.912,1331,2.785,1332,4.108,1333,2.542,1334,2.542,1335,2.785,1336,2.654,1337,2.785,1338,4.108,1339,2.654,1340,2.785,1341,2.785,1342,2.542,1343,3.477,1344,2.785,1345,2.785,1346,2.785,1347,2.785,1348,2.785,1349,2.654,1350,2.785,1351,2.142,1352,2.785,1353,2.785,1354,2.785,1355,2.785,1356,2.785,1357,2.654,1358,2.785,1359,2.654,1360,3.915,1361,2.785,1362,2.785,1363,2.785,1364,2.785,1365,2.654,1366,2.785,1367,2.785,1368,2.785,1369,2.785,1370,2.785,1371,2.542,1372,2.785,1373,2.785,1374,4.108,1375,2.785,1376,2.785]],["title/injectables/DataSourceService.html",[160,3.501,2162,1.538]],["body/injectables/DataSourceService.html",[1,2.485,3,0.042,4,0.068,5,0.042,6,0.066,8,1.045,9,3.698,11,0.004,12,0.297,13,0.731,16,1.115,17,0.006,19,0.665,23,0.042,24,2.761,26,2.297,27,2.707,28,1.164,36,2.023,47,1.521,50,2.556,53,0.802,65,1.248,68,1.693,69,2.463,70,4.774,72,5.303,73,3.629,87,1.209,91,4.259,92,3.553,94,3.949,95,3.563,96,3.949,97,2.707,98,4.259,99,0.003,100,0.005,118,0.941,119,2.007,129,1.745,137,4.671,150,0.225,151,0.351,152,4.939,153,1.787,160,4.447,162,6.893,179,0.083,180,1.924,181,2.08,183,1.564,194,2.818,197,1.358,217,4.447,219,0.687,236,1.924,238,4.526,247,1.695,409,0.667,473,1.623,505,3.326,509,0.882,534,1.751,571,2.516,586,2.125,693,1.855,708,1.556,769,3.553,772,2.242,906,5.829,913,4.929,915,4.929,916,5.258,917,5.258,922,6.506,924,4.666,937,4.922,953,5.258,956,4.095,957,5.258,962,2.463,990,1.924,1062,6.176,1351,3.589,1425,3.167,1750,4.627,1831,2.719,1936,4.666,2162,1.954,2163,2.418,2164,9.41,2165,4.537,2166,7.361,2167,7.982,2168,7.982,2169,6.37,2170,4.537,2171,4.537,2172,7.982,2173,4.537,2174,4.537,2175,4.537,2176,5.7,2177,7.982,2178,4.537,2179,6.37,2180,4.537,2181,4.06,2182,3.034,2183,3.034,2184,2.634,2185,6.37,2186,4.537,2187,4.537,2188,4.537,2189,7.982,2190,4.537,2191,7.361,2192,4.537,2193,4.929,2194,3.034,2195,4.537,2196,6.37,2197,4.06,2198,4.06,2199,4.537,2200,4.537,2201,3.323,2202,7.361,2203,4.537,2204,7.982,2205,4.537,2206,4.537,2207,4.537,2208,4.537]],["title/injectables/DataState.html",[167,3.501,2162,1.538]],["body/injectables/DataState.html",[0,0.154,1,1.785,3,0.03,4,0.068,5,0.03,6,0.067,8,0.963,9,3.953,10,6.051,11,0.004,12,0.327,13,0.574,17,0.006,18,0.587,19,0.564,20,1.708,23,0.063,24,2.952,26,1.651,36,2.266,46,0.657,53,0.778,60,2.021,65,0.979,66,2.736,67,2.021,71,4.497,72,5.31,73,3.65,74,1.954,76,2.096,77,2.096,78,2.021,79,1.954,87,1.173,99,0.003,100,0.002,118,0.676,125,2.208,127,1.663,129,1.77,131,2.076,133,3.212,137,4.024,141,2.438,142,4.124,145,0.887,146,2.021,150,0.228,151,0.252,152,1.693,153,1.284,154,1.785,155,1.954,156,1.238,160,4.753,162,2.388,163,2.523,166,3.866,167,3.488,179,0.06,180,1.509,181,1.632,183,1.671,197,1.065,205,1.093,216,2.719,219,0.756,233,1.898,237,0.79,247,1.561,249,3.002,253,0.705,309,1.785,355,0.874,473,1.501,496,1.693,505,2.531,506,2.021,509,1.152,510,2.082,534,1.61,571,2.738,586,0.941,588,2.581,597,4.718,608,3.213,609,4.687,630,1.893,634,1.832,664,2.815,852,3.517,870,2.21,956,4.377,983,5.269,990,2.057,1101,1.413,1118,1.837,1296,3.423,1599,2.736,1832,2.096,1897,1.385,1944,4.7,1945,1.837,1953,1.737,2127,1.893,2162,1.532,2163,1.737,2209,2.691,2210,4.47,2211,3.905,2212,5.435,2213,5.435,2214,5.435,2215,7.04,2216,6.569,2217,7.214,2218,6.569,2219,5.435,2220,5.435,2221,6.569,2222,6.569,2223,4.47,2224,2.691,2225,3.26,2226,4.47,2227,3.26,2228,7.214,2229,4.47,2230,3.26,2231,4.47,2232,3.26,2233,4.47,2234,3.002,2235,3.26,2236,6.931,2237,3.26,2238,4.979,2239,3.26,2240,3.26,2241,6.931,2242,4.47,2243,4.47,2244,3.26,2245,5.906,2246,4.47,2247,3.26,2248,6.867,2249,4.47,2250,3.26,2251,4.47,2252,4.47,2253,3.26,2254,4.47,2255,3.26,2256,3.26,2257,4.47,2258,5.435,2259,4.47,2260,4.47,2261,4.47,2262,5.435,2263,4.47,2264,5.435,2265,6.569,2266,5.435,2267,3.26,2268,4.47,2269,4.47,2270,3.26,2271,4.47,2272,3.26,2273,2.469,2274,1.611,2275,1.611,2276,1.413,2277,4.47,2278,4.47,2279,2.917,2280,2.917,2281,4.47,2282,2.691,2283,2.523,2284,2.917,2285,4.47,2286,2.917,2287,2.691,2288,2.917,2289,2.523,2290,2.523,2291,2.276,2292,2.388,2293,5.014,2294,5.673,2295,2.691,2296,2.691,2297,2.917,2298,1.785,2299,2.096,2300,2.917,2301,2.917,2302,2.917,2303,4.47,2304,2.917,2305,2.917,2306,2.917,2307,2.917,2308,2.691,2309,1.837,2310,2.917,2311,2.523,2312,2.917,2313,2.917,2314,2.917,2315,2.917,2316,2.691,2317,1.893,2318,2.917,2319,2.917,2320,2.917,2321,2.917,2322,4.47,2323,2.917,2324,2.917,2325,2.917,2326,2.917,2327,2.917,2328,2.917,2329,2.917,2330,2.917,2331,2.917,2332,2.917,2333,2.917,2334,2.917,2335,2.917]],["title/interfaces/DataStateModel.html",[0,0.236,2316,4.14]],["body/interfaces/DataStateModel.html",[0,0.197,1,2.285,2,0.915,3,0.039,4,0.071,5,0.039,6,0.029,8,0.519,9,3.484,10,5.96,11,0.004,12,0.392,13,0.689,17,0.006,18,0.751,19,0.304,20,1.127,23,0.071,24,2.601,26,2.112,36,2.247,46,0.841,53,0.419,60,2.586,65,0.818,66,2.285,67,2.586,71,4.081,72,5.208,73,3.656,74,2.5,76,2.682,77,2.682,78,2.586,79,2.5,87,0.632,99,0.003,100,0.002,118,0.865,125,2.093,127,0.773,131,1.884,133,2.682,137,3.843,141,2.551,142,3.444,145,1.135,146,2.586,150,0.243,151,0.323,152,2.166,153,1.643,154,2.285,155,2.5,156,1.585,160,4.189,162,3.056,163,3.228,166,4.644,167,2.912,179,0.077,180,1.26,181,1.363,183,1.785,205,1.128,216,2.947,219,0.909,233,1.585,237,1.454,247,1.709,249,3.473,253,0.902,309,2.285,355,1.118,473,1.463,496,2.166,505,2.929,506,2.586,509,1.128,510,1.738,571,2.447,588,1.773,597,4.765,609,4.588,630,2.422,634,1.53,664,3.381,852,3.492,870,2.655,956,3.858,983,4.644,990,1.813,1101,1.809,1118,2.351,1296,3.96,1599,2.285,1832,2.682,1897,1.773,1944,5.438,1945,2.351,1953,2.223,2127,2.422,2162,1.841,2209,3.444,2210,3.733,2211,3.858,2212,3.733,2213,3.733,2214,3.733,2215,5.802,2216,5.37,2217,5.37,2218,5.37,2219,3.733,2220,3.733,2221,3.733,2222,5.37,2226,3.733,2228,6.877,2229,3.733,2231,3.733,2233,3.733,2234,2.966,2236,6.289,2238,4.518,2241,6.289,2242,3.733,2243,3.733,2245,5.63,2246,3.733,2248,6.345,2249,3.733,2251,3.733,2252,3.733,2254,3.733,2257,3.733,2258,5.37,2259,3.733,2260,3.733,2261,3.733,2262,5.37,2263,3.733,2264,5.37,2265,6.877,2266,5.37,2268,3.733,2269,3.733,2271,3.733,2273,2.966,2274,2.062,2275,2.062,2276,1.809,2277,5.37,2278,5.37,2279,3.733,2280,3.733,2281,5.37,2282,3.444,2283,3.228,2284,3.733,2285,5.37,2286,3.733,2287,3.444,2288,3.733,2289,3.228,2290,3.228,2291,2.912,2292,3.056,2293,5.802,2294,6.211,2295,3.444,2296,3.444,2297,3.733,2298,2.285,2299,2.682,2300,3.733,2301,3.733,2302,3.733,2303,5.37,2304,3.733,2305,3.733,2306,3.733,2307,3.733,2308,3.444,2309,2.351,2310,3.733,2311,3.228,2312,3.733,2313,3.733,2314,3.733,2315,3.733,2316,4.954,2317,2.422,2318,3.733,2319,3.733,2320,3.733,2321,3.733,2322,5.37,2323,3.733,2324,3.733,2325,3.733,2326,3.733,2327,3.733,2328,3.733,2329,3.733,2330,3.733,2331,3.733,2332,3.733,2333,3.733,2334,3.733,2335,3.733]],["title/interfaces/DefaultIconDefinition.html",[0,0.236,2336,3.881]],["body/interfaces/DefaultIconDefinition.html",[0,0.305,2,1.421,3,0.06,4,0.06,5,0.06,6,0.046,8,0.806,11,0.003,12,0.424,13,0.926,16,1.535,17,0.006,19,0.67,23,0.075,33,3.891,34,4.235,51,3.177,53,0.993,68,3.599,73,2.336,87,1.497,99,0.004,100,0.003,127,1.2,182,4.747,219,0.981,236,2.437,259,3.651,288,5.002,318,2.336,940,4.166,1749,4.524,1832,4.166,2008,4.018,2336,6.798,2337,5.35,2338,5.799,2339,5.799,2340,4.524,2341,7.219,2342,5.799,2343,5.799,2344,5.799,2345,5.799,2346,5.799,2347,6.827,2348,5.002,2349,6.148,2350,6.148,2351,5.632,2352,5.799,2353,4.524,2354,4.747,2355,6.48,2356,5.799,2357,6.48,2358,5.35]],["title/interfaces/DefaultIconDefinition-1.html",[0,0.198,253,0.908,2336,3.248]],["body/interfaces/DefaultIconDefinition-1.html",[0,0.268,2,1.247,3,0.053,4,0.053,5,0.053,6,0.04,8,0.707,11,0.003,12,0.372,13,0.852,16,1.508,17,0.006,19,0.638,23,0.069,33,3.834,34,4.358,51,2.923,53,1.028,68,3.478,87,1.458,99,0.004,100,0.003,127,1.053,182,7.365,219,0.861,236,2.242,259,3.203,288,4.601,318,2.267,940,3.655,1180,3.801,1186,3.969,1749,3.969,1832,3.655,2008,3.525,2336,6.394,2338,5.087,2339,5.087,2340,3.969,2341,6.641,2342,5.087,2343,5.087,2344,5.087,2345,5.087,2346,5.087,2347,7.146,2348,4.601,2349,5.857,2350,5.857,2351,5.181,2352,5.087,2353,3.969,2354,4.164,2356,5.087,2358,4.693,2359,4.693,2360,5.685,2361,4.693,2362,10.009,2363,5.685,2364,4.693,2365,5.685,2366,4.399,2367,5.685,2368,4.164,2369,5.685,2370,5.685,2371,4.693,2372,5.685,2373,4.399,2374,5.685,2375,5.685,2376,5.685,2377,5.685,2378,4.693,2379,5.685,2380,5.685,2381,5.685,2382,5.685,2383,5.685,2384,4.693,2385,5.685,2386,4.693,2387,5.685]],["title/components/DetailsLabelComponent.html",[101,0.539,345,1.364]],["body/components/DetailsLabelComponent.html",[3,0.078,4,0.042,5,0.042,6,0.056,8,0.795,11,0.002,12,0.298,15,2.789,16,1.467,17,0.006,19,0.466,20,1.201,23,0.042,33,2.428,47,1.605,48,1.76,49,2.037,52,1.121,53,0.877,55,1.17,65,1.447,87,0.691,93,2.717,99,0.003,100,0.004,101,0.905,102,1.713,103,1.484,104,1.153,105,1.24,106,1.297,107,1.17,114,2.115,117,2.674,118,2.163,120,1.64,122,1.689,125,1,127,1.184,128,1.044,129,1.387,136,1.074,148,1.278,150,0.122,151,0.353,169,1.24,173,1.24,177,1.713,179,0.155,183,0.894,193,1.17,197,1.363,199,1.153,216,2.156,224,1.788,237,1.105,247,0.919,249,4.656,260,5.721,271,1.399,290,1.484,293,1.137,317,0.67,318,1.911,319,1.594,320,1.297,321,2.275,322,1.297,323,1.818,324,1.222,325,1.64,326,2.099,327,1.24,328,1.297,329,1.24,330,1.297,331,1.24,332,1.64,333,1.297,334,1.24,335,1.259,336,1.297,337,1.24,338,1.297,339,1.24,340,1.297,341,1.713,342,1.818,343,1.922,344,2.395,345,2.176,346,2.707,347,1.297,348,1.818,349,1.24,350,1.818,351,1.24,352,1.278,353,1.818,354,1.24,355,1.713,356,1.818,357,1.713,358,1.818,359,1.24,360,1.297,361,1.24,362,1.24,363,1.297,364,1.24,365,1.297,366,1.713,367,2.275,368,1.713,369,1.818,370,1.24,371,1.278,372,1.24,373,1.297,374,1.24,375,1.818,376,1.222,377,1.24,378,1.297,379,1.24,380,1.297,381,1.259,382,1.297,383,1.222,384,1.297,385,1.24,386,1.297,387,1.24,388,1.297,389,1.24,390,1.222,391,1.105,392,1.24,393,1.222,394,1.187,395,1.24,396,1.297,397,1.24,398,1.187,399,1.297,400,1.24,401,1.297,402,1.713,403,1.24,404,1.297,405,1.297,407,2.018,473,1.103,493,1.9,494,2.156,503,1.9,504,2.309,526,2.518,528,3.017,534,1,1541,3.602,1747,5.721,2388,7.158,2389,6.604,2390,4.561,2391,6.393,2392,8,2393,6.393,2394,8,2395,6.393,2396,7.381,2397,6.393,2398,6.393,2399,4.561,2400,4.561,2401,6.393,2402,4.561,2403,4.11,2404,6.393,2405,5.721,2406,8,2407,6.393,2408,5.721,2409,4.561,2410,6.393,2411,3.529]],["title/modules/DetailsLabelModule.html",[409,0.737,2412,3.674]],["body/modules/DetailsLabelModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,150,0.248,151,0.569,179,0.135,204,2.027,317,1.08,345,2.8,346,2.027,409,1.08,411,2.057,412,2.057,413,2.719,414,2.088,415,2.088,416,2.719,431,2.403,432,1.884,434,2.185,435,2.551,553,2.798,554,2.324,2388,6.571,2389,6.063,2412,7.35,2413,6.571,2414,6.571,2415,6.571,2416,7.344,2417,7.344]],["title/interfaces/DrawerContainersChanged.html",[0,0.236,2115,2.912]],["body/interfaces/DrawerContainersChanged.html",[0,0.415,2,1.266,3,0.054,4,0.054,5,0.054,6,0.041,8,0.718,11,0.003,12,0.377,13,0.861,17,0.006,18,1.349,19,0.75,23,0.092,46,1.511,53,0.58,82,1.98,97,3.537,99,0.004,100,0.003,101,0.947,103,1.932,114,2.45,116,3.253,131,1.547,141,1.617,150,0.154,179,0.106,192,4.623,215,2.923,219,0.874,233,3.347,275,2.952,281,1.951,283,3.407,284,2.57,290,1.34,296,2.554,505,3.124,509,0.799,663,2.503,665,2.405,693,3.064,708,3.267,962,2.899,986,3.619,990,2.264,1121,3.995,1751,3.387,1882,3.339,1885,2.232,1897,2.453,1898,3.124,1902,4.023,1917,3.25,1970,3.253,2049,3.892,2075,2.997,2077,2.923,2108,4.352,2109,4.228,2110,4.625,2111,4.647,2112,4.647,2113,5.161,2114,3.579,2115,4.833,2116,4.647,2117,4.355,2118,4.647,2119,3.711,2120,3.711,2121,4.352,2122,4.352,2123,3.892,2124,3.711,2125,3.711,2126,4.647,2127,3.352,2128,3.161]],["title/interfaces/DrawerContainersChanged-1.html",[0,0.198,253,0.908,2115,2.437]],["body/interfaces/DrawerContainersChanged-1.html",[0,0.415,2,1.266,3,0.054,4,0.054,5,0.054,6,0.041,8,0.718,11,0.003,12,0.377,13,0.861,17,0.006,18,1.349,19,0.75,23,0.092,46,1.511,53,0.58,82,1.98,97,3.537,99,0.004,100,0.003,101,0.947,103,1.932,114,2.45,116,3.253,131,1.547,141,1.617,150,0.154,179,0.106,192,4.623,215,2.923,219,0.874,233,3.347,275,2.952,281,1.951,283,3.407,284,2.57,290,1.34,296,2.554,505,3.124,509,0.799,663,2.503,665,2.405,693,3.064,708,3.267,962,2.899,986,3.619,990,2.264,1121,3.995,1751,3.387,1882,3.339,1885,2.232,1897,2.453,1898,3.124,1902,4.023,1917,3.25,1970,3.253,2049,3.892,2075,2.997,2077,2.923,2108,4.352,2110,4.625,2111,4.647,2112,4.647,2113,5.161,2114,3.579,2115,4.833,2116,4.647,2117,4.355,2118,4.647,2119,3.711,2120,3.711,2121,4.352,2122,4.352,2123,3.892,2124,3.711,2125,3.711,2126,4.647,2127,3.352,2128,3.161,2129,4.228]],["title/interfaces/DrawerInitialized.html",[0,0.236,2121,2.912]],["body/interfaces/DrawerInitialized.html",[0,0.418,2,1.288,3,0.054,4,0.054,5,0.054,6,0.041,8,0.73,11,0.003,12,0.384,13,0.87,17,0.006,18,1.364,19,0.75,23,0.092,46,1.527,53,0.589,82,2.001,97,3.566,99,0.004,100,0.003,101,0.902,103,1.759,114,2.445,116,3.307,131,1.573,141,1.644,150,0.157,179,0.108,192,3.837,215,2.972,219,0.889,233,3.187,275,2.984,281,1.973,283,3.429,284,2.598,290,1.363,296,2.597,505,2.446,509,0.813,663,2.545,665,2.446,693,2.399,708,2.877,962,2.93,986,3.658,990,2.289,1121,3.128,1751,3.424,1882,3.366,1885,2.27,1897,2.494,1898,3.157,1902,4.032,1917,3.285,1970,3.307,2049,3.934,2075,3.048,2077,2.972,2108,4.4,2109,4.3,2110,4.646,2111,4.698,2112,4.698,2113,5.202,2114,3.639,2115,4.4,2116,3.639,2117,4.382,2118,4.698,2119,4.871,2120,4.871,2121,4.872,2122,4.4,2123,3.934,2124,3.774,2125,3.774,2126,4.698,2127,3.408,2128,3.214]],["title/interfaces/DrawerInitialized-1.html",[0,0.198,253,0.908,2121,2.437]],["body/interfaces/DrawerInitialized-1.html",[0,0.418,2,1.288,3,0.054,4,0.054,5,0.054,6,0.041,8,0.73,11,0.003,12,0.384,13,0.87,17,0.006,18,1.364,19,0.75,23,0.092,46,1.527,53,0.589,82,2.001,97,3.566,99,0.004,100,0.003,101,0.902,103,1.759,114,2.445,116,3.307,131,1.573,141,1.644,150,0.157,179,0.108,192,3.837,215,2.972,219,0.889,233,3.187,275,2.984,281,1.973,283,3.429,284,2.598,290,1.363,296,2.597,505,2.446,509,0.813,663,2.545,665,2.446,693,2.399,708,2.877,962,2.93,986,3.658,990,2.289,1121,3.128,1751,3.424,1882,3.366,1885,2.27,1897,2.494,1898,3.157,1902,4.032,1917,3.285,1970,3.307,2049,3.934,2075,3.048,2077,2.972,2108,4.4,2110,4.646,2111,4.698,2112,4.698,2113,5.202,2114,3.639,2115,4.4,2116,3.639,2117,4.382,2118,4.698,2119,4.871,2120,4.871,2121,4.872,2122,4.4,2123,3.934,2124,3.774,2125,3.774,2126,4.698,2127,3.408,2128,3.214,2129,4.3]],["title/modules/DrawerModule.html",[409,0.737,423,3.501]],["body/modules/DrawerModule.html",[3,0.061,4,0.061,5,0.061,6,0.046,11,0.004,17,0.006,23,0.061,99,0.004,100,0.004,136,1.551,150,0.267,151,0.51,177,2.723,179,0.121,204,1.818,290,1.529,317,0.968,341,2.723,343,2.555,402,2.723,409,0.968,411,1.845,412,1.845,413,2.593,414,1.873,415,2.317,416,2.593,423,7.163,431,2.249,432,1.69,434,1.959,435,2.388,436,4.126,437,3.04,438,7.292,439,5.449,440,7.292,441,5.893,465,5.437,466,5.437,1942,5.096,1943,4.404,2114,4.083,2418,5.893,2419,5.893,2420,5.893,2421,6.586,2422,5.052,2423,5.052,2424,6.586,2425,5.437,2426,5.893]],["title/interfaces/DrawerToggled.html",[0,0.236,2122,2.912]],["body/interfaces/DrawerToggled.html",[0,0.41,2,1.227,3,0.052,4,0.052,5,0.052,6,0.039,8,0.696,11,0.003,12,0.366,13,0.843,17,0.006,18,1.67,19,0.752,23,0.092,46,1.87,53,0.562,82,2.299,97,3.484,99,0.004,100,0.003,101,0.881,103,1.705,114,2.464,116,3.152,131,1.968,141,2.057,150,0.15,179,0.103,192,3.718,215,3.718,219,0.847,233,3.306,275,2.892,281,2.415,283,3.366,284,3.181,290,1.705,296,3.249,505,2.331,509,0.775,663,2.425,665,2.331,693,2.287,708,2.811,962,2.84,986,3.545,990,2.218,1121,2.981,1751,3.318,1882,3.289,1885,2.163,1897,3.121,1898,3.06,1902,4.006,1917,3.184,1970,3.152,2049,4.817,2075,2.904,2077,2.832,2108,4.264,2109,4.097,2110,4.468,2111,4.553,2112,4.553,2113,5.083,2114,3.468,2115,4.264,2116,3.468,2117,4.302,2118,4.553,2119,3.596,2120,3.596,2121,4.264,2122,4.76,2123,4.817,2124,4.721,2125,4.721,2126,4.553,2127,3.248,2128,3.063]],["title/interfaces/DrawerToggled-1.html",[0,0.198,253,0.908,2122,2.437]],["body/interfaces/DrawerToggled-1.html",[0,0.41,2,1.227,3,0.052,4,0.052,5,0.052,6,0.039,8,0.696,11,0.003,12,0.366,13,0.843,17,0.006,18,1.67,19,0.752,23,0.092,46,1.87,53,0.562,82,2.299,97,3.484,99,0.004,100,0.003,101,0.881,103,1.705,114,2.464,116,3.152,131,1.968,141,2.057,150,0.15,179,0.103,192,3.718,215,3.718,219,0.847,233,3.306,275,2.892,281,2.415,283,3.366,284,3.181,290,1.705,296,3.249,505,2.331,509,0.775,663,2.425,665,2.331,693,2.287,708,2.811,962,2.84,986,3.545,990,2.218,1121,2.981,1751,3.318,1882,3.289,1885,2.163,1897,3.121,1898,3.06,1902,4.006,1917,3.184,1970,3.152,2049,4.817,2075,2.904,2077,2.832,2108,4.264,2110,4.468,2111,4.553,2112,4.553,2113,5.083,2114,3.468,2115,4.264,2116,3.468,2117,4.302,2118,4.553,2119,3.596,2120,3.596,2121,4.264,2122,4.76,2123,4.817,2124,4.721,2125,4.721,2126,4.553,2127,3.248,2128,3.063,2129,4.097]],["title/components/DropdownComponent.html",[101,0.539,349,1.364]],["body/components/DropdownComponent.html",[3,0.072,4,0.034,5,0.034,6,0.061,8,0.682,11,0.002,12,0.241,13,0.629,15,2.7,16,1.36,17,0.006,19,0.591,20,1.622,22,3.881,23,0.034,47,1.476,48,1.636,52,0.906,53,0.728,55,0.946,65,1.283,69,2.531,87,0.558,99,0.003,100,0.003,101,0.904,102,1.469,103,1.273,104,0.932,105,1.003,106,1.048,107,0.946,114,1.967,117,2.647,118,2.14,120,1.407,122,1.448,125,0.809,127,0.683,128,0.844,129,1.579,131,1.469,136,0.868,144,2.426,147,2.37,148,1.033,150,0.099,151,0.285,159,4.979,169,1.003,173,1.003,177,1.469,179,0.068,183,0.723,193,1.987,197,1.169,199,1.655,205,1.163,224,1.586,228,2.574,237,0.893,239,3.987,252,1.545,253,0.797,261,2.37,268,1.426,271,2.223,272,2.577,277,1.479,279,1.598,281,2.248,282,3.8,286,3.206,289,3.655,290,1.273,291,3.987,292,3.089,293,1.632,295,3.089,297,3.398,298,2.019,299,3.089,300,3.436,308,4.497,309,4.242,317,0.542,318,1.309,319,1.367,320,1.048,321,2.061,322,1.048,323,1.559,324,0.988,325,0.946,326,1.861,327,1.003,328,1.048,329,1.003,330,1.048,331,1.003,332,1.455,333,1.048,334,1.003,335,1.018,336,1.048,337,1.003,338,1.048,339,1.003,340,1.048,341,1.469,342,1.559,343,1.704,344,2.202,345,1.003,346,1.018,347,1.048,348,1.559,349,1.971,350,1.559,351,1.003,352,1.033,353,1.559,354,1.003,355,1.469,356,1.559,357,1.469,358,1.559,359,1.003,360,1.048,361,1.003,362,1.003,363,1.048,364,1.003,365,1.048,366,1.469,367,2.061,368,1.469,369,1.559,370,1.003,371,1.033,372,1.003,373,1.048,374,1.003,375,1.559,376,0.988,377,1.003,378,1.048,379,1.003,380,1.048,381,1.018,382,1.048,383,0.988,384,1.048,385,1.003,386,1.048,387,1.003,388,1.048,389,1.003,390,0.988,391,0.893,392,1.003,393,0.988,394,0.96,395,1.003,396,1.048,397,1.003,398,0.96,399,1.048,400,1.003,401,1.048,402,1.469,403,1.003,404,1.048,405,1.048,473,0.946,492,2.32,494,2.444,495,1.943,509,0.906,510,2.285,526,2.159,527,2.199,534,0.809,538,2.019,539,2.078,540,2.922,544,1.867,569,4.376,852,2.046,960,5.404,1028,4.016,1223,4.802,1385,5.403,1403,6.326,1414,3.044,1541,3.089,1543,3.183,1569,1.965,1571,3.002,1572,2.647,1573,2.922,1718,7.13,1721,4.526,1736,3.666,1751,2.477,1797,2.286,1798,2.574,1799,4.016,1800,2.701,1801,4.569,1802,2.574,1805,2.141,1849,4.906,2034,5.608,2054,1.914,2427,3.687,2428,7.524,2429,5.856,2430,4.906,2431,6.545,2432,5.482,2433,7.247,2434,3.687,2435,4.242,2436,3.687,2437,5.482,2438,3.687,2439,3.687,2440,5.482,2441,3.687,2442,3.687,2443,6.485,2444,5.983,2445,3.687,2446,5.482,2447,3.687,2448,4.906,2449,5.482,2450,3.687,2451,4.906,2452,6.394,2453,2.853,2454,3.044,2455,4.526,2456,3.044,2457,3.044,2458,3.044,2459,2.701,2460,5.608,2461,2.853,2462,4.906,2463,3.044,2464,3.687,2465,3.044,2466,3.299,2467,3.687,2468,3.044,2469,3.687,2470,4.016,2471,3.687,2472,3.299,2473,3.044,2474,3.299,2475,3.299,2476,3.299]],["title/modules/DropdownModule.html",[409,0.737,2477,3.674]],["body/modules/DropdownModule.html",[3,0.067,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,22,3.343,23,0.067,99,0.005,100,0.004,150,0.261,151,0.561,179,0.133,204,1.999,317,1.065,349,2.796,409,1.065,411,2.029,412,2.029,413,2.703,414,2.059,415,2.059,416,2.703,431,2.383,432,1.858,434,2.154,435,2.53,553,2.775,554,2.292,2477,7.33,2478,6.48,2479,6.48,2480,6.48,2481,7.242,2482,6.681,2483,5.604,2484,7.127,2485,5.979,2486,6.48]],["title/components/DualSliderComponent.html",[101,0.539,351,1.364]],["body/components/DualSliderComponent.html",[3,0.055,4,0.02,5,0.02,6,0.065,8,0.744,11,0.001,12,0.142,13,0.619,15,2.498,16,0.906,17,0.006,18,1.29,19,0.617,20,1.631,22,2.763,23,0.02,47,1.14,48,1.302,49,1.783,51,1.42,52,0.533,53,0.72,55,0.556,63,2.235,65,0.907,69,3.113,71,2.094,75,4.783,82,1.424,87,0.816,93,1.532,99,0.002,100,0.002,101,0.825,102,0.966,103,0.837,104,1.17,105,0.981,106,0.617,107,0.556,114,1.565,117,2.553,118,2.068,120,0.925,122,0.952,127,0.857,128,0.496,129,1.725,131,1.731,134,3.231,136,0.511,144,2.386,145,1.628,147,5.276,148,0.608,150,0.144,151,0.168,159,5.062,169,0.59,173,0.59,177,0.966,179,0.04,180,1.629,181,1.178,183,1.173,193,1.384,197,0.769,199,1.364,202,7.146,205,1.377,219,1.085,223,2.641,224,1.121,228,1.514,233,2.453,235,1.259,237,0.525,239,1.665,247,1.206,249,1.782,252,1.587,253,1.001,268,2.647,269,1.665,270,1.975,271,1.981,272,1.42,274,1.156,277,1.446,279,2.338,281,1.937,282,3.475,283,0.839,284,2.052,286,2.048,289,2.824,290,0.837,291,2.763,292,2.824,293,1.787,295,1.222,296,2.858,297,1.872,298,1.188,299,2.545,300,2.64,302,3.113,305,2.136,306,1.595,307,1.259,308,3.131,309,2.953,317,0.319,318,0.861,319,2.007,320,0.617,321,1.533,322,0.617,323,1.025,324,0.581,325,0.556,326,1.316,327,0.59,328,0.617,329,0.59,330,0.617,331,0.59,332,1.124,333,0.617,334,0.59,335,0.599,336,0.617,337,0.59,338,0.617,339,0.59,340,0.617,341,0.966,342,1.025,343,1.205,344,1.702,345,0.59,346,0.599,347,0.617,348,1.025,349,0.59,350,1.025,351,1.467,352,2.149,353,1.025,354,0.59,355,0.966,356,1.025,357,0.966,358,1.025,359,0.59,360,0.617,361,0.59,362,0.59,363,0.617,364,0.59,365,0.617,366,0.966,367,1.533,368,0.966,369,1.025,370,0.59,371,0.608,372,0.59,373,0.617,374,0.59,375,1.025,376,0.581,377,0.59,378,0.617,379,0.59,380,0.617,381,0.599,382,0.617,383,0.581,384,0.617,385,0.59,386,0.617,387,0.59,388,0.617,389,0.59,390,0.581,391,0.525,392,0.59,393,0.581,394,0.565,395,0.59,396,0.617,397,0.59,398,0.565,399,0.617,400,0.59,401,0.617,402,0.966,403,0.59,404,0.617,405,0.617,455,6.765,473,1.283,492,1.64,494,2.178,495,1.278,505,2.247,509,0.641,510,3.1,513,2.184,515,2.235,526,1.42,527,1.446,534,1.183,538,1.975,539,2.032,540,1.922,546,1.023,569,2.411,571,2.215,586,1.041,608,1.702,616,3.962,636,1.156,641,1.922,663,2.006,682,2.509,693,1.474,721,2.338,751,2.641,768,2.608,835,1.474,847,2.161,852,2.012,856,5.004,858,2.79,860,1.589,960,3.848,962,2.772,990,1.089,1012,1.79,1028,2.641,1223,3.711,1230,1.782,1242,4.797,1385,3.82,1394,1.589,1414,1.79,1416,1.941,1422,2.436,1426,1.941,1528,1.678,1538,1.872,1543,3.75,1571,1.975,1572,1.741,1573,1.922,1599,2.953,1713,1.629,1721,2.977,1737,1.42,1751,0.98,1760,4.825,1765,4.141,1772,3.95,1783,3.226,1784,4.141,1785,1.678,1786,1.941,1787,1.941,1797,1.345,1798,1.514,1799,2.641,1800,1.589,1801,3.764,1802,1.514,1805,1.259,1828,3.226,1829,3.226,1831,1.3,1836,1.514,1837,4.451,1838,1.941,1840,3.226,1841,3.226,1842,2.641,1843,2.517,1853,2.318,1856,3.581,1857,1.678,1858,1.941,1859,1.941,1860,4.141,1870,2.977,1879,2.824,1890,2.545,1914,2.161,1953,1.922,1954,1.126,1988,2.977,2034,4.631,2054,1.126,2075,2.799,2435,2.79,2443,3.226,2444,2.977,2448,3.226,2451,3.226,2452,2.977,2453,1.678,2454,2.977,2455,1.79,2456,1.79,2457,1.79,2458,1.79,2459,1.589,2460,4.172,2461,2.79,2462,3.226,2465,1.79,2466,1.941,2468,1.79,2472,3.226,2473,1.79,2474,1.941,2475,1.941,2487,8.264,2488,1.79,2489,4.628,2490,3.82,2491,2.977,2492,4.628,2493,7.167,2494,6.459,2495,7.167,2496,7.44,2497,6.845,2498,5.985,2499,5.392,2500,5.392,2501,3.606,2502,3.606,2503,3.606,2504,6.459,2505,5.392,2506,5.392,2507,4.628,2508,5.985,2509,2.169,2510,3.606,2511,3.226,2512,3.606,2513,2.411,2514,2.169,2515,3.606,2516,2.169,2517,2.169,2518,2.79,2519,3.606,2520,2.169,2521,2.169,2522,3.606,2523,3.606,2524,3.226,2525,3.606,2526,2.169,2527,2.517,2528,3.606,2529,5.392,2530,2.169,2531,3.606,2532,2.169,2533,3.606,2534,3.226,2535,2.169,2536,5.985,2537,2.169,2538,6.845,2539,4.825,2540,4.628,2541,3.606,2542,2.169,2543,2.169,2544,2.977,2545,2.169,2546,3.606,2547,2.169,2548,2.169,2549,2.169,2550,5.392,2551,3.226,2552,2.169,2553,3.226,2554,2.169,2555,2.169,2556,2.169,2557,3.606,2558,2.169,2559,2.79,2560,4.628,2561,3.606,2562,2.169,2563,2.169,2564,2.169,2565,3.606,2566,3.606,2567,1.678,2568,1.941,2569,2.169,2570,2.169,2571,2.169,2572,2.169,2573,3.606,2574,2.169,2575,2.169,2576,2.169,2577,2.169,2578,2.169,2579,2.169,2580,2.169,2581,1.941,2582,2.169,2583,3.606,2584,2.169,2585,3.606,2586,2.169,2587,3.606,2588,2.169,2589,2.169,2590,2.169,2591,2.169,2592,2.169,2593,2.169,2594,2.169,2595,2.169,2596,2.169,2597,2.169,2598,3.606,2599,4.628,2600,3.606,2601,4.628,2602,2.169,2603,2.169,2604,2.169,2605,5.392,2606,2.169,2607,2.169,2608,2.169,2609,3.606,2610,3.606,2611,3.606,2612,2.169,2613,2.169,2614,2.169,2615,2.169,2616,3.606,2617,2.169,2618,2.169,2619,2.169,2620,2.169,2621,2.169,2622,3.226,2623,1.79,2624,2.169,2625,1.941,2626,2.169]],["title/modules/DualSliderModule.html",[409,0.737,424,3.353]],["body/modules/DualSliderModule.html",[3,0.065,4,0.065,5,0.065,6,0.049,11,0.004,17,0.006,22,3.236,23,0.065,99,0.005,100,0.004,150,0.268,151,0.543,179,0.129,204,1.935,317,1.03,351,2.785,352,1.964,409,1.03,411,1.964,412,1.964,413,2.665,414,1.993,415,1.993,416,2.665,424,6.647,431,2.337,432,1.798,434,2.085,435,2.481,455,5.134,553,2.721,554,2.218,1242,3.384,1772,5.134,1819,7.575,2482,6.551,2483,5.424,2484,6.989,2485,5.787,2487,6.272,2567,5.424,2568,6.272,2627,6.272,2628,6.272,2629,6.272,2630,6.272,2631,8.466,2632,8.466,2633,6.272]],["title/interfaces/ExtDeckProps.html",[0,0.236,1260,3.501]],["body/interfaces/ExtDeckProps.html",[0,0.348,2,0.838,3,0.052,4,0.035,5,0.035,6,0.027,11,0.004,12,0.368,13,0.646,16,1.321,17,0.006,18,1.69,19,0.649,23,0.076,28,2.182,46,1.135,47,0.728,87,0.852,92,3.795,95,3.214,99,0.003,100,0.002,125,0.838,141,1.872,145,1.531,150,0.21,179,0.07,205,1.43,216,1.899,219,1.422,235,2.219,247,1.924,252,1.573,271,2.677,281,2.214,332,1.058,509,0.529,513,3.71,571,2.615,573,4.874,588,2.392,590,4.144,609,4.155,625,2.219,630,2.219,632,3.086,634,2.065,638,5.231,639,2.457,641,3.562,642,5.43,643,2.457,644,3.47,647,4.006,649,3.02,655,3.49,666,2.457,669,5.467,769,3.795,772,3.885,803,2.555,852,3.069,972,2.555,1037,1.691,1101,2.441,1238,3.764,1239,2.668,1240,2.457,1241,3,1242,2.718,1243,4.155,1244,5.148,1245,4.874,1246,4.469,1247,2.291,1248,2.291,1249,2.555,1250,3.49,1251,3.619,1252,3.49,1253,3.619,1254,2.799,1255,2.799,1256,3.764,1257,4.712,1258,2.799,1259,2.799,1260,4.666,1261,4.666,1262,2.799,1263,3.764,1264,3.764,1265,4.896,1266,4.779,1267,3.619,1268,2.457,1269,2.457,1270,3.829,1271,5.759,1272,5.148,1273,4.124,1274,4.666,1275,2.799,1276,2.799,1277,2.799,1278,4.666,1279,2.291,1280,4.896,1281,4.896,1282,2.668,1283,2.668,1284,4.666,1285,4.931,1286,4.896,1287,2.555,1288,2.668,1289,2.799,1290,2.555,1291,5.402,1292,2.668,1293,6.215,1294,3.93,1295,3.93,1296,4.155,1297,2.555,1298,2.799,1299,2.799,1300,2.799,1301,2.799,1302,2.799,1303,2.799,1304,2.369,1305,4.896,1306,4.896,1307,4.896,1308,5.402,1309,5.759,1310,2.668,1311,2.799,1312,2.668,1313,4.124,1314,2.799,1315,2.799,1316,2.799,1317,2.668,1318,2.799,1319,2.799,1320,2.799,1321,2.668,1322,2.799,1323,2.799,1324,4.124,1325,2.799,1326,2.799,1327,2.668,1328,4.896,1329,2.799,1330,2.923,1331,2.799,1332,4.124,1333,2.555,1334,2.555,1335,2.799,1336,2.668,1337,2.799,1338,4.124,1339,2.668,1340,2.799,1341,2.799,1342,2.555,1343,3.49,1344,2.799,1345,2.799,1346,2.799,1347,2.799,1348,2.799,1349,2.668,1350,2.799,1351,2.153,1352,2.799,1353,2.799,1354,2.799,1355,2.799,1356,2.799,1357,2.668,1358,2.799,1359,2.668,1360,3.93,1361,2.799,1362,2.799,1363,2.799,1364,2.799,1365,2.668,1366,2.799,1367,2.799,1368,2.799,1369,2.799,1370,2.799,1371,2.555,1372,2.799,1373,2.799,1374,4.124,1375,2.799,1376,2.799]],["title/interfaces/Filter.html",[0,0.236,73,1.808]],["body/interfaces/Filter.html",[0,0.433,1,2.731,2,1.094,3,0.046,4,0.046,5,0.046,6,0.035,7,3.481,8,0.962,9,3.948,10,5.153,11,0.005,12,0.326,13,0.781,14,3.481,15,3.129,16,1.562,17,0.006,18,1.788,19,0.719,20,1.277,21,3.481,22,2.302,23,0.083,24,2.948,25,3.091,26,3.443,27,3.696,28,2.232,29,2.525,30,3.481,31,3.481,32,2.989,33,1.894,34,3.532,35,3.481,36,1.796,37,4.216,38,3.481,39,3.481,40,3.334,41,3.206,42,3.334,43,3.334,44,3.206,45,4.826,46,1.852,47,1.474,48,1.005,49,1.376,50,3.832,51,1.964,52,1.225,53,0.501,54,3.334,55,1.745,56,2.81,57,3.091,58,3.334,59,5.174,60,5.392,61,5.343,62,5.153,63,5.153,64,5.557,65,1.516,66,4.237,67,5.392,68,1.861,69,2.629,70,3.724,71,3.948,72,3.832,73,2.996,74,4.638,75,5.343,76,5.343,77,5.343,78,5.565,79,5.38,80,3.948,81,5.557,82,1.796,83,3.361,84,4.076,85,5.343,86,4.547,87,1.416,88,4.747,89,3.283,90,4.981,91,3.334,92,2.407,93,2.889,94,3.091,95,3.163,96,3.091,97,2.119,98,3.334,99,0.004,100,0.003]],["title/components/FiltersContentComponent.html",[101,0.539,354,1.364]],["body/components/FiltersContentComponent.html",[3,0.074,4,0.037,5,0.037,6,0.061,8,0.727,11,0.002,12,0.263,16,1.043,17,0.006,19,0.585,20,1.508,23,0.037,46,1.179,47,1.529,48,1.688,49,2.216,52,0.989,53,0.759,55,1.033,65,1.35,68,2.182,70,3.202,73,3.349,87,0.609,99,0.003,100,0.004,101,0.863,102,1.567,103,1.754,104,1.018,105,1.095,106,1.144,107,1.033,114,2.029,117,2.659,118,2.151,120,1.5,122,1.544,128,0.921,129,1.573,136,0.948,144,3.706,148,1.127,150,0.108,151,0.312,169,1.095,173,1.095,177,1.567,179,0.074,183,1.146,193,1.5,197,1.247,199,1.018,205,1.213,224,1.668,233,2.221,236,1.766,237,0.975,268,2.663,269,1.858,274,4.463,275,1.585,279,2.535,281,1.968,283,2.261,284,2.361,289,1.899,290,1.357,293,1.003,295,3.88,296,3.344,298,3.202,299,3.567,300,2.815,301,1.645,302,1.556,303,3.909,317,0.592,318,1.396,319,1.458,320,1.144,321,2.149,322,1.144,323,1.662,324,1.079,325,1.033,326,1.958,327,1.095,328,1.144,329,1.095,330,1.144,331,1.095,332,1.508,333,1.144,334,1.095,335,1.111,336,1.144,337,1.095,338,1.144,339,1.095,340,1.144,341,1.567,342,1.662,343,1.793,344,2.283,345,1.095,346,1.111,347,1.144,348,1.662,349,1.095,350,1.662,351,1.095,352,1.638,353,1.662,354,2.056,355,2.686,356,1.662,357,1.567,358,1.662,359,1.095,360,1.144,361,1.095,362,1.095,363,1.144,364,1.095,365,1.144,366,1.567,367,2.149,368,1.567,369,1.662,370,1.095,371,1.127,372,1.095,373,1.144,374,1.095,375,1.662,376,1.079,377,1.095,378,1.144,379,1.095,380,1.144,381,1.111,382,1.144,383,1.079,384,1.144,385,1.095,386,1.144,387,1.095,388,1.144,389,1.095,390,1.079,391,0.975,392,1.095,393,1.079,394,1.048,395,1.095,396,1.144,397,1.095,398,1.048,399,1.144,400,1.095,401,1.144,402,1.567,403,1.095,404,1.144,405,1.144,473,1.009,492,2.846,494,2.323,495,2.441,509,1.047,510,2.436,512,2.96,513,4.079,526,2.302,527,2.345,534,0.883,708,2.361,846,4.082,847,3.504,852,2.182,1223,3.625,1242,1.943,1266,3.202,1424,2.809,1529,3.909,1543,3.395,1569,2.145,1571,2.204,1572,1.943,1573,2.145,1713,2.642,1755,4.524,1797,2.495,1798,2.809,1801,2.809,1802,2.809,1803,3.114,1812,5.232,1853,3.759,2003,5.044,2004,4.827,2223,5.232,2403,3.759,2428,3.322,2458,3.322,2476,3.601,2634,6.687,2635,7.135,2636,3.601,2637,7.558,2638,6.162,2639,6.162,2640,3.601,2641,4.024,2642,3.601,2643,3.601,2644,5.232,2645,4.024,2646,7.558,2647,5.847,2648,4.024,2649,5.847,2650,6.763,2651,5.232,2652,4.024,2653,4.024,2654,5.847,2655,4.024,2656,4.024,2657,4.024,2658,4.024,2659,4.024,2660,4.024,2661,3.601,2662,5.847]],["title/modules/FiltersContentModule.html",[409,0.737,2663,3.674]],["body/modules/FiltersContentModule.html",[3,0.064,4,0.064,5,0.064,6,0.049,11,0.004,17,0.006,23,0.064,99,0.004,100,0.004,150,0.262,151,0.536,179,0.127,204,1.912,317,1.018,354,2.781,355,1.856,409,1.018,411,1.94,412,1.94,413,2.651,414,1.969,415,1.969,416,2.651,424,6.552,431,2.32,432,1.777,434,2.5,435,2.463,454,5.718,455,5.073,456,5.359,553,2.702,554,2.192,1429,7.178,2477,7.178,2634,5.359,2635,5.718,2663,7.514,2664,6.197,2665,6.197,2666,6.926,2667,6.197,2668,6.197,2669,6.926,2670,6.926,2671,6.197]],["title/components/FiltersPopoverComponent.html",[101,0.539,169,1.364]],["body/components/FiltersPopoverComponent.html",[3,0.073,4,0.036,5,0.036,6,0.062,8,0.702,11,0.002,12,0.438,13,0.648,17,0.006,19,0.538,20,0.72,23,0.036,46,1.138,47,1.5,48,1.66,51,2.909,52,0.943,53,0.742,55,0.984,65,1.313,68,2.757,73,2.663,82,1.951,87,0.581,99,0.003,100,0.004,101,0.846,102,1.513,103,1.31,104,0.97,105,1.822,106,1.091,107,0.984,114,2.116,117,2.652,118,2.143,120,1.448,122,1.491,127,0.71,128,1.691,129,1.599,133,4.749,136,0.903,144,3.269,148,1.075,150,0.103,151,0.297,169,2.009,171,6.76,173,1.043,177,1.513,179,0.071,183,0.752,193,1.448,197,1.204,199,1.694,202,7.114,205,1.322,216,1.904,223,4.135,224,1.623,236,1.705,237,0.929,238,2.931,252,1.204,253,0.83,271,1.732,275,2.223,277,3.158,279,1.663,281,2.144,282,3.889,285,1.733,289,2.664,290,1.31,293,0.956,295,2.161,297,2.931,298,2.1,299,3.161,300,3.02,301,1.568,302,1.483,303,2.565,317,0.564,318,1.348,319,1.407,320,1.091,321,2.101,322,1.091,323,1.605,324,1.028,325,0.984,326,1.905,327,1.043,328,1.091,329,1.043,330,1.091,331,1.043,332,1.388,333,1.091,334,1.043,335,1.059,336,1.091,337,1.043,338,1.091,339,1.043,340,1.091,341,1.513,342,1.605,343,1.744,344,2.239,345,1.043,346,1.059,347,1.091,348,1.605,349,1.043,350,1.605,351,1.043,352,1.075,353,1.605,354,1.043,355,2.692,356,1.605,357,1.513,358,1.605,359,1.043,360,1.091,361,1.043,362,1.043,363,1.091,364,1.043,365,1.091,366,1.513,367,2.101,368,1.513,369,1.605,370,1.043,371,1.075,372,1.043,373,1.091,374,1.043,375,1.605,376,1.028,377,1.043,378,1.091,379,1.043,380,1.091,381,1.059,382,1.091,383,1.028,384,1.091,385,1.043,386,1.091,387,1.043,388,1.091,389,1.043,390,1.028,391,0.929,392,1.043,393,1.028,394,0.999,395,1.043,396,1.091,397,1.043,398,0.999,399,1.091,400,1.043,401,1.091,402,1.513,403,1.043,404,1.091,405,1.091,473,1.155,490,2.498,492,2.374,494,2.259,495,2.001,499,2.161,509,0.531,526,2.223,527,2.264,534,0.841,682,2.259,846,3.941,847,3.383,848,5.051,849,3.774,850,5.051,852,2.757,900,3.774,1028,4.135,1223,4.881,1266,4.312,1409,3.278,1529,5.265,1571,2.1,1572,1.852,1573,2.044,1633,2.81,1713,2.551,1755,4.368,1797,5.528,1798,2.678,1799,4.135,1800,2.81,1801,2.678,1802,2.678,1805,2.227,1832,3.629,1854,3.5,1870,3.166,2054,4.42,2092,5.183,2123,3.478,2461,5.183,2470,2.81,2634,6.76,2638,5.051,2639,5.994,2651,3.432,2672,3.432,2673,5.994,2674,5.051,2675,6.698,2676,7.387,2677,7.387,2678,6.698,2679,3.836,2680,5.717,2681,5.051,2682,3.836,2683,3.836,2684,5.645,2685,3.836,2686,6.61,2687,3.836,2688,3.836,2689,3.836,2690,6.698,2691,3.836,2692,3.836,2693,5.051,2694,3.836,2695,3.836,2696,3.836,2697,3.836,2698,3.836,2699,5.645,2700,3.836,2701,3.836]],["title/modules/FiltersPopoverModule.html",[409,0.737,425,3.674]],["body/modules/FiltersPopoverModule.html",[3,0.066,4,0.066,5,0.066,6,0.05,11,0.004,17,0.006,23,0.066,99,0.005,100,0.004,150,0.26,151,0.551,169,2.79,171,5.505,172,5.873,179,0.131,204,1.964,317,1.046,355,2.289,409,1.046,411,1.993,412,1.993,413,2.682,414,2.023,415,2.023,416,2.682,425,7.414,431,2.358,432,1.825,434,2.541,435,2.503,436,4.325,437,3.284,553,2.746,554,2.251,2634,5.505,2635,5.873,2663,7.223,2702,6.366,2703,6.366,2704,7.114,2705,6.366,2706,6.366,2707,5.873]],["title/classes/FlatNode.html",[179,0.092,2708,4.488]],["body/classes/FlatNode.html",[3,0.055,4,0.055,5,0.055,6,0.065,8,1.045,11,0.003,12,0.385,15,3.202,16,1.149,17,0.006,18,1.693,19,0.646,23,0.055,46,1.53,53,0.762,65,1.92,82,2.004,87,1.149,99,0.004,100,0.003,101,0.816,107,2.488,125,1.29,129,1.667,131,2.034,150,0.157,179,0.108,180,2.681,181,2.478,183,1.739,184,3.934,194,3.358,197,1.618,236,2.841,247,1.693,252,1.255,468,2.979,473,1.531,509,1.272,534,1.665,586,1.698,621,4.966,721,3.642,1538,3.94,1549,6.79,2511,6.79,2551,6.79,2708,7.941,2709,9.186,2710,5.264,2711,7.517,2712,5.883,2713,5.241,2714,7.842,2715,5.883,2716,9.879,2717,7.581,2718,7.588,2719,5.883,2720,5.883,2721,5.883,2722,7.588,2723,5.883,2724,5.883,2725,7.588,2726,5.074,2727,5.883,2728,5.883,2729,5.883]],["title/components/HeaderComponent.html",[101,0.539,357,1.344]],["body/components/HeaderComponent.html",[3,0.083,4,0.038,5,0.038,6,0.06,8,0.515,11,0.002,12,0.271,16,0.904,17,0.006,19,0.592,23,0.038,33,1.575,34,2.538,36,1.387,37,5.246,46,1.204,47,1.548,48,1.706,49,2.115,52,1.019,53,0.703,55,1.064,60,3.703,63,3.703,64,3.994,65,1.372,73,2.928,93,2.538,99,0.003,100,0.004,101,0.753,102,1.601,103,1.387,104,1.048,105,1.127,106,1.179,107,1.064,113,5.222,114,2.05,117,2.663,118,2.154,120,1.533,122,1.578,128,0.949,129,1.526,136,0.976,148,1.161,150,0.111,151,0.321,169,1.127,173,1.127,177,1.601,179,0.076,191,4.622,193,1.064,199,1.511,224,1.697,237,1.004,252,1.274,253,0.897,268,3.141,271,2.492,272,1.632,276,2.772,280,2.665,281,2.115,283,1.603,284,2.048,285,3.164,286,2.643,289,1.956,290,1.387,291,1.914,292,2.819,293,1.489,294,5.671,296,3.594,299,1.956,300,2.863,301,1.695,302,1.603,305,2.758,306,3.099,307,2.407,308,2.407,309,2.27,317,0.609,318,1.427,319,1.489,320,1.179,321,2.179,322,1.179,323,1.699,324,1.111,325,1.064,326,1.991,327,1.127,328,1.179,329,1.127,330,1.179,331,1.127,332,1.526,333,1.179,334,1.127,335,1.144,336,1.179,337,1.127,338,1.179,339,1.127,340,1.179,341,1.601,342,1.699,343,1.823,344,2.31,345,1.127,346,1.144,347,1.179,348,1.699,349,1.127,350,1.699,351,1.127,352,1.161,353,1.699,354,1.127,355,2.177,356,1.699,357,2.177,358,1.699,359,1.127,360,1.179,361,1.127,362,1.127,363,1.179,364,1.127,365,1.179,366,1.601,367,2.179,368,1.601,369,1.699,370,1.127,371,1.161,372,1.127,373,1.179,374,1.127,375,1.699,376,1.111,377,1.127,378,1.179,379,1.127,380,1.179,381,1.144,382,1.179,383,1.111,384,1.179,385,1.127,386,1.179,387,1.127,388,1.179,389,1.127,390,1.111,391,1.004,392,1.127,393,1.111,394,1.079,395,1.127,396,1.179,397,1.127,398,1.079,399,1.179,400,1.127,401,1.179,402,1.601,403,1.127,404,1.179,405,1.179,492,2.879,494,2.585,495,2.482,506,4.751,509,0.827,512,3.024,526,2.352,527,2.396,536,5.95,543,3.208,544,2.099,546,1.956,547,3.036,852,2.86,993,4.342,994,4.682,995,5.781,1266,3.271,1394,3.036,1396,3.024,1541,3.366,1569,2.209,1571,2.27,1572,2.001,1573,2.209,1588,2.819,1589,2.819,1601,1.956,1755,4.622,1853,5.439,1950,4.622,2054,2.152,2354,5.613,2459,3.036,2730,4.145,2731,6.857,2732,4.931,2733,4.17,2734,6.266,2735,5.345,2736,7.003,2737,7.003,2738,7.003,2739,4.145,2740,4.145,2741,4.145,2742,5.973,2743,4.145,2744,4.145,2745,5.973,2746,5.973,2747,5.973,2748,5.973,2749,5.973,2750,5.345,2751,5.973,2752,5.973,2753,3.422,2754,4.145,2755,3.422,2756,4.145,2757,4.145,2758,3.208,2759,3.422,2760,4.145,2761,4.145,2762,4.145,2763,4.145,2764,4.145]],["title/components/HeaderComponent-1.html",[101,0.451,253,0.908,357,1.125]],["body/components/HeaderComponent-1.html",[0,0.3,3,0.078,4,0.042,5,0.042,6,0.052,8,0.791,11,0.002,12,0.296,17,0.006,19,0.33,20,0.851,23,0.042,33,1.72,36,1.477,47,1.601,48,1.756,49,1.756,52,1.113,53,0.875,55,1.162,65,1.441,87,0.686,93,2.703,99,0.003,100,0.004,101,0.903,102,1.705,103,1.477,104,1.145,105,1.232,106,1.288,107,1.162,113,5.872,114,2.111,117,2.673,118,2.164,120,1.632,122,1.68,125,0.994,127,0.839,128,1.037,129,1.195,136,1.066,148,1.269,150,0.17,151,0.351,169,1.232,173,1.232,177,1.705,179,0.155,180,1.922,181,2.078,183,0.888,184,3.028,193,1.162,199,1.609,224,1.782,237,1.097,252,1.357,253,1.376,268,2.844,271,2.256,276,3.028,280,2.912,281,1.914,284,2.181,285,3.323,286,2.815,288,2.808,289,2.137,290,1.477,292,3.47,293,1.988,299,2.137,300,2.601,301,1.851,302,1.751,305,2.937,306,2.815,317,0.666,318,1.905,319,1.586,320,1.288,321,2.268,322,1.288,323,1.809,324,1.214,325,1.162,326,2.091,327,1.232,328,1.288,329,1.232,330,1.288,331,1.232,332,1.578,333,1.288,334,1.232,335,1.25,336,1.288,337,1.232,338,1.288,339,1.232,340,1.288,341,1.705,342,1.809,343,1.914,344,2.389,345,1.232,346,1.25,347,1.288,348,1.809,349,1.232,350,1.809,351,1.232,352,1.269,353,1.809,354,1.232,355,1.705,356,1.809,357,2.252,358,1.809,359,1.232,360,1.288,361,1.232,362,1.232,363,1.288,364,1.232,365,1.288,366,1.705,367,2.268,368,1.705,369,1.809,370,1.232,371,1.269,372,1.232,373,1.288,374,1.232,375,1.809,376,1.214,377,1.232,378,1.288,379,1.232,380,1.288,381,1.25,382,1.288,383,1.214,384,1.288,385,1.232,386,1.288,387,1.232,388,1.288,389,1.232,390,1.214,391,1.097,392,1.232,393,1.214,394,1.179,395,1.232,396,1.288,397,1.232,398,1.179,399,1.288,400,1.232,401,1.288,402,1.705,403,1.232,404,1.288,405,1.288,407,2.004,493,1.887,503,1.887,504,2.293,528,3.002,534,0.994,538,2.48,546,3.002,547,3.318,586,1.307,993,2.808,1222,3.318,1396,3.221,1422,2.046,1571,2.48,1572,2.187,1573,2.414,1588,3.002,1589,3.002,1601,2.137,1737,1.784,1950,3.505,2008,3.944,2015,5.693,2017,3.162,2054,2.351,2354,3.318,2405,4.053,2411,5.69,2465,3.739,2732,3.739,2733,6.247,2734,6.58,2735,5.693,2758,3.505,2759,3.739,2765,4.529,2766,4.053,2767,5.568,2768,6.362,2769,4.053,2770,5.693,2771,4.053,2772,4.529,2773,4.529,2774,3.318,2775,4.529,2776,4.529,2777,4.053]],["title/modules/HeaderModule.html",[409,0.737,2144,3.674]],["body/modules/HeaderModule.html",[3,0.065,4,0.065,5,0.065,6,0.049,11,0.004,17,0.006,23,0.065,99,0.005,100,0.004,150,0.268,151,0.54,179,0.128,204,1.924,317,1.025,357,2.742,409,1.025,411,1.953,412,1.953,413,2.659,414,1.982,415,1.982,416,2.659,431,2.329,432,1.789,434,2.51,435,2.473,436,4.273,437,3.218,447,6.239,553,2.713,554,2.206,2144,7.39,2778,6.239,2779,6.239,2780,6.239,2781,6.239,2782,7.189,2783,6.972,2784,7.551,2785,6.239,2786,8.438,2787,6.972,2788,7.551,2789,6.239,2790,5.395,2791,6.972,2792,6.972]],["title/interfaces/IconDefinition.html",[0,0.236,2793,3.501]],["body/interfaces/IconDefinition.html",[0,0.224,2,1.04,3,0.044,4,0.044,5,0.044,6,0.033,8,0.59,11,0.003,12,0.31,13,0.754,16,1.399,17,0.006,19,0.593,20,0.891,23,0.061,33,3.857,34,4.142,46,1.324,51,2.587,53,0.985,68,3.299,87,1.42,99,0.004,100,0.003,127,1.217,131,2.02,136,1.117,141,2.279,145,2.05,150,0.242,151,0.367,179,0.087,180,1.433,181,1.549,183,1.732,195,3.171,205,0.761,219,1.399,236,1.984,247,1.862,249,2.344,288,5.045,291,3.033,318,2.311,437,2.189,439,3.171,473,1.404,509,0.91,571,2.348,634,1.739,682,2.982,708,2.79,870,2.907,990,1.433,1037,2.098,1257,4.877,1405,4.961,1831,3.938,1836,3.311,2008,5.045,2154,3.171,2157,3.474,2162,2.015,2211,4.223,2234,3.247,2238,3.049,2273,3.247,2274,2.344,2275,2.344,2276,2.056,2317,2.754,2337,3.915,2340,6.45,2347,6.755,2348,5.297,2349,6.06,2350,5.441,2351,4.586,2353,4.586,2513,3.171,2774,3.474,2793,6.327,2794,3.474,2795,3.67,2796,5.083,2797,6.296,2798,6.296,2799,5.832,2800,5.083,2801,3.67,2802,3.171,2803,6.84,2804,5.083,2805,3.67,2806,3.311,2807,3.67,2808,3.67,2809,3.67,2810,3.67,2811,3.67,2812,5.083,2813,4.812,2814,3.67,2815,3.67,2816,3.67,2817,3.67,2818,3.67,2819,5.083,2820,3.67,2821,3.67,2822,3.67,2823,3.311,2824,3.67,2825,3.67,2826,3.67,2827,3.67,2828,3.67,2829,3.67,2830,3.67,2831,4.586,2832,3.67,2833,3.67,2834,3.67,2835,3.67,2836,3.67,2837,3.67,2838,3.67,2839,3.311,2840,3.67,2841,3.67]],["title/interfaces/IconDefinition-1.html",[0,0.198,253,0.908,2793,2.93]],["body/interfaces/IconDefinition-1.html",[0,0.224,2,1.04,3,0.044,4,0.044,5,0.044,6,0.033,8,0.59,11,0.003,12,0.31,13,0.754,16,1.399,17,0.006,19,0.593,20,0.891,23,0.061,33,3.857,34,4.142,46,1.324,51,2.587,53,0.985,68,3.299,87,1.42,99,0.004,100,0.003,127,1.217,131,2.02,136,1.117,141,2.279,145,2.05,150,0.242,151,0.367,179,0.087,180,1.433,181,1.549,183,1.732,195,3.171,205,0.761,219,1.399,236,1.984,247,1.862,249,2.344,288,5.045,291,3.033,318,2.311,437,2.189,439,3.171,473,1.404,509,0.91,571,2.348,634,1.739,682,2.982,708,2.79,870,2.907,990,1.433,1037,2.098,1257,4.877,1405,4.961,1831,3.938,1836,3.311,2008,5.045,2154,3.171,2157,3.474,2162,2.015,2211,4.223,2234,3.247,2238,3.049,2273,3.247,2274,2.344,2275,2.344,2276,2.056,2317,2.754,2340,6.45,2347,6.755,2348,5.297,2349,6.06,2350,5.441,2351,4.586,2353,4.586,2359,3.915,2513,3.171,2774,3.474,2793,6.327,2794,3.474,2795,3.67,2796,5.083,2797,6.296,2798,6.296,2799,5.832,2800,5.083,2801,3.67,2802,3.171,2803,6.84,2804,5.083,2805,3.67,2806,3.311,2807,3.67,2808,3.67,2809,3.67,2810,3.67,2811,3.67,2812,5.083,2813,4.812,2814,3.67,2815,3.67,2816,3.67,2817,3.67,2818,3.67,2819,5.083,2820,3.67,2821,3.67,2822,3.67,2823,3.311,2824,3.67,2825,3.67,2826,3.67,2827,3.67,2828,3.67,2829,3.67,2830,3.67,2831,4.586,2832,3.67,2833,3.67,2834,3.67,2835,3.67,2836,3.67,2837,3.67,2838,3.67,2839,3.311,2840,3.67,2841,3.67]],["title/injectables/IconRegistryState.html",[2162,1.538,2802,3.353]],["body/injectables/IconRegistryState.html",[0,0.203,3,0.04,4,0.04,5,0.04,6,0.06,8,0.97,11,0.002,12,0.282,16,1.249,17,0.006,19,0.601,20,0.81,23,0.057,33,3.832,34,3.9,46,1.573,51,1.698,53,0.982,68,2.672,87,1.298,99,0.003,100,0.002,127,1.326,129,1.549,131,2.298,136,1.015,141,2.402,145,2.243,150,0.236,151,0.334,179,0.079,180,1.856,181,2.007,183,1.68,195,4.109,197,1.311,205,0.692,219,1.366,236,1.303,247,1.818,249,3.037,288,4.838,291,3.602,318,2.192,437,1.991,439,2.884,473,1.556,509,0.597,534,1.809,571,2.687,586,1.245,608,2.035,634,2.254,682,3.042,708,2.828,870,2.719,990,1.856,1037,3.168,1257,4.677,1405,5.237,1831,4.677,1836,4.29,2008,5.592,2154,2.884,2157,4.501,2162,1.885,2163,2.298,2211,4.603,2234,3.538,2238,3.951,2273,3.037,2274,2.131,2275,2.131,2276,1.87,2317,2.504,2337,7.078,2340,6.408,2347,6.297,2348,4.838,2349,6.031,2350,4.109,2351,3.011,2353,4.29,2513,4.109,2774,4.501,2793,6.748,2794,6.281,2795,3.337,2796,3.337,2797,4.755,2798,4.755,2799,6.635,2800,6.038,2801,3.337,2802,4.109,2803,7.204,2804,6.038,2805,4.755,2806,4.29,2807,3.337,2808,3.337,2809,3.337,2810,3.337,2811,4.755,2812,6.038,2813,5.716,2814,4.755,2815,3.337,2816,4.755,2817,6.038,2818,4.755,2819,4.755,2820,3.337,2821,3.337,2822,3.337,2823,3.011,2824,3.337,2825,3.337,2826,3.337,2827,3.337,2828,3.337,2829,3.337,2830,3.337,2831,5.447,2832,5.54,2833,3.337,2834,3.337,2835,3.337,2836,3.337,2837,3.337,2838,3.337,2839,4.29,2840,5.54,2841,3.337,2842,5.499,2843,3.859,2844,3.859,2845,3.859,2846,3.859,2847,3.859,2848,3.859,2849,3.859,2850,3.859]],["title/injectables/IconRegistryState-1.html",[253,0.908,2162,1.287,2802,2.806]],["body/injectables/IconRegistryState-1.html",[0,0.203,3,0.04,4,0.04,5,0.04,6,0.06,8,0.97,11,0.002,12,0.282,16,1.249,17,0.006,19,0.601,20,0.81,23,0.057,33,3.832,34,3.9,46,1.573,51,1.698,53,0.982,68,2.672,87,1.298,99,0.003,100,0.002,127,1.326,129,1.549,131,2.298,136,1.015,141,2.402,145,2.243,150,0.236,151,0.334,179,0.079,180,1.856,181,2.007,183,1.68,195,4.109,197,1.311,205,0.692,219,1.366,236,1.303,247,1.818,249,3.037,288,4.838,291,3.602,318,2.192,437,1.991,439,2.884,473,1.556,509,0.597,534,1.809,571,2.687,586,1.245,608,2.035,634,2.254,682,3.042,708,2.828,870,2.719,990,1.856,1037,3.168,1257,4.677,1405,5.237,1831,4.677,1836,4.29,2008,5.592,2154,2.884,2157,4.501,2162,1.885,2163,2.298,2211,4.603,2234,3.538,2238,3.951,2273,3.037,2274,2.131,2275,2.131,2276,1.87,2317,2.504,2340,6.408,2347,6.297,2348,4.838,2349,6.031,2350,4.109,2351,3.011,2353,4.29,2359,7.078,2513,4.109,2774,4.501,2793,6.748,2794,6.281,2795,3.337,2796,3.337,2797,4.755,2798,4.755,2799,6.635,2800,6.038,2801,3.337,2802,4.109,2803,7.204,2804,6.038,2805,4.755,2806,4.29,2807,3.337,2808,3.337,2809,3.337,2810,3.337,2811,4.755,2812,6.038,2813,5.716,2814,4.755,2815,3.337,2816,4.755,2817,6.038,2818,4.755,2819,4.755,2820,3.337,2821,3.337,2822,3.337,2823,3.011,2824,3.337,2825,3.337,2826,3.337,2827,3.337,2828,3.337,2829,3.337,2830,3.337,2831,5.447,2832,5.54,2833,3.337,2834,3.337,2835,3.337,2836,3.337,2837,3.337,2838,3.337,2839,4.29,2840,5.54,2841,3.337,2842,5.499,2843,3.859,2844,3.859,2845,3.859,2846,3.859,2847,3.859,2848,3.859,2849,3.859,2850,3.859]],["title/interfaces/IdObject.html",[0,0.236,2851,3.881]],["body/interfaces/IdObject.html",[0,0.438,2,1.232,3,0.052,4,0.052,5,0.052,6,0.04,8,0.699,11,0.003,12,0.367,13,0.845,15,3.039,16,1.371,17,0.006,19,0.409,20,1.745,22,4.179,23,0.081,28,2.55,51,3.235,53,0.909,65,1.774,99,0.004,100,0.003,150,0.197,154,3.077,183,1.101,216,3.133,219,1.484,247,1.132,473,0.969,588,3.129,621,4.485,634,2.06,640,4.197,868,4.775,1409,5.853,2713,4.033,2726,3.756,2851,6.747,2852,4.638,2853,4.638,2854,7.178,2855,7.198,2856,3.756,2857,6.357,2858,4.638,2859,5.141,2860,6.079,2861,6.079,2862,6.018,2863,6.079,2864,4.638,2865,7.473,2866,7.473,2867,6.079,2868,4.638,2869,4.638,2870,6.782,2871,4.638,2872,4.638,2873,4.638,2874,4.638,2875,6.079,2876,4.638,2877,4.638,2878,4.638,2879,4.638,2880,4.638,2881,4.638,2882,4.638,2883,4.115,2884,4.115,2885,6.079,2886,4.638,2887,4.638,2888,4.638,2889,4.638,2890,4.638,2891,3.922,2892,4.638]],["title/classes/ImageViewer.html",[179,0.092,1279,3.006]],["body/classes/ImageViewer.html",[0,0.295,3,0.041,4,0.026,5,0.026,6,0.07,11,0.003,12,0.289,13,0.507,16,1.099,17,0.006,18,1.674,19,0.704,20,1.482,23,0.067,28,1.951,46,1.107,47,1.887,53,0.816,87,1.23,92,3.808,95,3.403,99,0.002,100,0.001,125,1.205,127,1.461,129,1.857,141,1.539,145,1.202,150,0.182,179,0.051,197,0.942,205,1.482,216,1.49,219,1.328,235,3.63,247,1.811,252,1.333,271,2.651,281,2.167,332,0.83,468,1.41,473,1.566,509,0.386,513,3.217,534,1.782,571,2.818,573,5.037,586,0.804,588,2.657,590,2.739,608,2.085,609,4.088,625,1.617,630,1.617,632,2.886,634,1.021,638,4.086,639,1.79,641,1.484,642,5.489,643,1.79,644,2.851,647,4.086,649,3.08,655,3.876,666,1.79,669,4.888,769,4.338,772,3.369,803,1.862,852,2.708,972,1.862,1037,1.232,1101,1.915,1238,2.954,1239,6.915,1240,1.79,1241,2.355,1242,2.133,1243,3.841,1244,4.364,1245,4.498,1246,4.18,1247,1.669,1248,1.669,1249,1.862,1250,2.739,1251,2.84,1252,2.739,1253,2.84,1254,2.04,1255,2.04,1256,4.18,1257,4.349,1258,2.04,1259,2.04,1260,3.084,1261,3.834,1262,2.04,1263,4.18,1264,4.18,1265,4.023,1266,4.733,1267,3.531,1268,1.79,1269,1.79,1270,3.948,1271,5.57,1272,4.364,1273,3.236,1274,3.834,1275,2.04,1276,2.04,1277,2.04,1278,5.308,1279,2.648,1280,4.023,1281,4.023,1282,3.834,1283,3.834,1284,3.834,1285,4.851,1286,4.023,1287,3.672,1288,3.834,1289,2.04,1290,3.672,1291,4.579,1292,3.834,1293,6.623,1294,4.364,1295,4.364,1296,4.088,1297,2.954,1298,2.04,1299,2.04,1300,2.04,1301,2.04,1302,2.04,1303,2.04,1304,3.876,1305,4.023,1306,4.023,1307,4.023,1308,4.579,1309,4.994,1310,4.364,1311,2.04,1312,3.084,1313,3.236,1314,2.04,1315,2.04,1316,2.04,1317,3.084,1318,2.04,1319,2.04,1320,2.04,1321,1.944,1322,2.04,1323,2.04,1324,3.236,1325,2.04,1326,2.04,1327,3.084,1328,4.023,1329,2.04,1330,2.294,1331,2.04,1332,3.236,1333,4.18,1334,4.18,1335,2.04,1336,1.944,1337,2.04,1338,3.236,1339,4.364,1340,2.04,1341,2.04,1342,4.18,1343,2.739,1344,2.04,1345,2.04,1346,2.04,1347,2.04,1348,2.04,1349,3.834,1350,2.04,1351,1.569,1352,2.04,1353,2.04,1354,2.04,1355,2.04,1356,2.04,1357,3.084,1358,2.04,1359,3.084,1360,4.364,1361,2.04,1362,2.04,1363,2.04,1364,2.04,1365,4.364,1366,2.04,1367,2.04,1368,2.04,1369,2.04,1370,2.04,1371,2.954,1372,2.04,1373,2.04,1374,3.236,1375,2.04,1376,2.04,1538,2.294,2893,3.954,2894,3.954,2895,3.954,2896,3.954,2897,3.954,2898,4.418,2899,2.785,2900,2.785,2901,2.785,2902,2.785,2903,2.785,2904,2.785,2905,2.785,2906,2.785,2907,2.785,2908,2.785,2909,2.785,2910,2.785,2911,2.785,2912,2.785,2913,2.785,2914,2.785,2915,2.492,2916,2.785,2917,2.492,2918,2.785,2919,2.785,2920,2.785,2921,2.785,2922,2.785,2923,2.785,2924,2.785,2925,2.785,2926,2.492,2927,2.785,2928,2.785,2929,2.785,2930,2.785,2931,2.785,2932,2.785,2933,2.492,2934,2.785,2935,2.785,2936,2.785,2937,2.785,2938,2.785,2939,2.785,2940,2.785]],["title/components/ImageViewerAccordionComponent.html",[101,0.539,359,1.364]],["body/components/ImageViewerAccordionComponent.html",[3,0.074,4,0.037,5,0.037,6,0.059,8,0.497,11,0.002,12,0.261,15,2.392,16,0.881,17,0.006,19,0.609,20,1.289,23,0.037,24,2.523,36,1.351,46,1.173,47,1.843,48,2.033,49,1.894,52,0.983,53,0.689,55,2.144,65,1.345,82,1.537,99,0.003,100,0.004,101,0.738,102,1.56,103,1.94,104,1.012,105,1.088,106,1.137,107,1.026,113,2.571,114,2.025,117,2.658,118,2.148,120,1.494,122,1.537,127,1.078,128,0.915,129,1.504,131,1.56,136,0.942,144,2.575,148,1.12,150,0.183,151,0.31,169,1.088,173,1.088,175,4.577,177,1.56,179,0.074,193,1.761,199,1.736,224,1.94,233,2.211,237,0.969,252,1.241,268,3.336,269,1.846,270,2.19,271,2.105,272,1.575,273,2.254,275,1.575,277,2.335,281,1.786,283,3.232,284,2.584,285,2.63,286,3.036,289,1.888,290,1.351,291,3.479,292,2.747,293,1.451,295,2.254,300,2.805,306,2.575,307,4.376,308,2.322,309,2.19,317,0.588,318,1.39,319,1.451,320,1.137,321,2.143,322,1.137,323,1.655,324,1.072,325,1.026,326,1.951,327,1.088,328,1.137,329,1.088,330,1.137,331,1.088,332,1.504,333,1.137,334,1.088,335,1.104,336,1.137,337,1.088,338,1.137,339,1.088,340,1.137,341,1.56,342,1.655,343,1.786,344,2.277,345,1.088,346,1.104,347,1.137,348,1.655,349,1.088,350,1.655,351,1.088,352,1.12,353,1.655,354,1.088,355,1.56,356,1.655,357,1.56,358,1.655,359,2.05,360,1.137,361,1.088,362,1.088,363,1.137,364,1.088,365,1.137,366,1.56,367,2.143,368,1.56,369,1.655,370,1.088,371,1.12,372,1.088,373,1.137,374,1.088,375,1.655,376,1.072,377,1.088,378,1.137,379,1.088,380,1.137,381,1.104,382,1.137,383,1.072,384,1.137,385,1.088,386,1.137,387,1.088,388,1.137,389,1.088,390,1.072,391,0.969,392,1.088,393,1.072,394,1.041,395,1.088,396,1.137,397,1.088,398,1.041,399,1.137,400,1.088,401,1.137,402,1.56,403,1.088,404,1.137,405,1.137,492,2.839,494,2.542,495,2.839,509,0.806,526,2.292,527,2.335,537,2.571,538,2.19,539,2.254,544,2.947,545,2.48,546,1.888,606,2.48,632,1.846,640,2.63,649,4.072,665,1.667,849,3.892,900,2.254,940,3.742,1422,3.1,1425,4.063,1525,1.977,1534,1.977,1541,3.28,1564,2.48,1569,2.132,1571,2.19,1572,1.931,1573,2.132,1593,4.791,1594,3.758,1599,3.188,1602,2.571,1737,2.292,1751,2.63,1953,2.132,1954,2.077,2176,3.579,2452,3.302,2463,7.121,2711,5.209,2941,4.577,2942,6.9,2943,4,2944,7.536,2945,6.862,2946,5.821,2947,5.31,2948,5.31,2949,4,2950,4.805,2951,4,2952,4,2953,4,2954,4.805,2955,4,2956,5.821,2957,5.821,2958,6.862,2959,3.302,2960,3.095,2961,3.579,2962,3.579,2963,4.504]],["title/modules/ImageViewerAccordionModule.html",[409,0.737,2964,3.674]],["body/modules/ImageViewerAccordionModule.html",[3,0.066,4,0.066,5,0.066,6,0.05,11,0.004,17,0.006,23,0.066,47,1.622,48,1.955,99,0.005,100,0.004,150,0.259,151,0.548,175,3.875,179,0.13,204,1.953,317,1.04,359,2.788,409,1.04,411,1.982,412,1.982,413,2.676,414,2.012,415,2.012,416,2.676,431,2.35,432,1.816,434,2.533,435,2.495,553,2.737,554,2.239,2941,3.875,2942,5.841,2964,7.408,2965,6.331,2966,6.331,2967,6.331,2968,6.331,2969,6.875,2970,7.076,2971,8.514,2972,7.076,2973,7.076,2974,5.475,2975,6.331]],["title/components/ImageViewerContentComponent.html",[101,0.539,361,1.364]],["body/components/ImageViewerContentComponent.html",[3,0.078,4,0.037,5,0.037,6,0.062,8,0.499,11,0.002,12,0.262,17,0.006,19,0.609,23,0.037,24,2.529,36,1.861,46,1.176,47,1.844,48,2.061,49,1.107,50,3.873,52,0.986,53,0.69,55,1.029,65,1.347,82,1.541,99,0.003,100,0.004,101,0.739,102,1.564,103,1.942,104,1.015,105,1.091,106,1.141,107,1.029,113,2.579,114,2.027,117,2.658,118,2.149,120,1.497,122,1.541,127,1.08,128,0.918,129,1.622,131,1.564,136,0.945,144,3.339,148,1.124,150,0.202,151,0.311,152,2.083,169,1.091,173,1.091,175,4.845,177,1.564,179,0.074,193,1.764,197,1.244,199,1.739,205,0.936,224,2.027,233,2.216,237,0.972,252,0.856,268,2.256,271,1.231,279,1.739,283,3.339,285,3.623,286,1.775,289,4.075,290,1.354,292,1.893,293,1,296,3.042,297,2.083,298,2.197,299,1.893,300,1.64,301,1.64,302,1.551,307,2.33,317,0.59,318,1.393,319,1.454,320,1.141,321,2.146,322,1.141,323,1.659,324,1.075,325,1.029,326,1.955,327,1.091,328,1.141,329,1.091,330,1.141,331,1.091,332,1.418,333,1.141,334,1.091,335,1.107,336,1.141,337,1.091,338,1.141,339,1.091,340,1.141,341,1.564,342,1.659,343,1.79,344,2.28,345,1.091,346,1.107,347,1.141,348,1.659,349,1.091,350,1.659,351,1.091,352,1.124,353,1.659,354,1.091,355,1.564,356,1.659,357,1.564,358,1.659,359,1.091,360,1.141,361,2.053,362,1.091,363,1.141,364,1.091,365,1.141,366,1.564,367,2.146,368,1.564,369,1.659,370,1.091,371,1.124,372,1.091,373,1.141,374,1.091,375,1.659,376,1.075,377,1.091,378,1.141,379,1.091,380,1.141,381,1.107,382,1.141,383,1.075,384,1.141,385,1.091,386,1.141,387,1.091,388,1.141,389,1.091,390,1.075,391,0.972,392,1.091,393,1.075,394,1.044,395,1.091,396,1.141,397,1.091,398,1.044,399,1.141,400,1.091,401,1.141,402,1.564,403,1.091,404,1.141,405,1.141,473,0.692,492,3.06,494,2.546,495,2.966,509,0.952,526,2.297,527,2.34,538,2.197,539,2.261,544,2.954,632,1.852,640,2.636,649,3.901,849,3.901,940,3.75,1422,1.813,1534,1.983,1541,3.287,1593,4.799,1594,3.765,1599,3.195,1602,2.579,1737,2.297,1751,2.636,1842,4.273,1854,5.68,1954,2.083,2003,5.035,2004,4.816,2636,3.59,2640,3.59,2642,3.59,2643,3.59,2686,5.22,2693,3.59,2941,4.845,2947,5.319,2948,5.319,2950,4.816,2954,4.816,2976,6.845,2977,6.619,2978,8.018,2979,4.012,2980,4.012,2981,4.012,2982,4.012,2983,4.012,2984,4.012,2985,5.834,2986,5.22,2987,5.22,2988,4.012]],["title/modules/ImageViewerContentModule.html",[409,0.737,2989,3.501]],["body/modules/ImageViewerContentModule.html",[3,0.065,4,0.065,5,0.065,6,0.05,11,0.004,17,0.006,23,0.065,47,1.619,48,1.953,99,0.005,100,0.004,150,0.259,151,0.546,175,3.864,179,0.13,204,1.948,317,1.037,361,2.787,409,1.037,411,1.977,412,1.977,413,2.673,414,2.006,415,2.006,416,2.673,431,2.346,432,1.811,434,2.529,435,2.491,436,4.304,437,3.258,553,2.732,554,2.233,2668,6.314,2671,6.314,2941,3.864,2942,5.826,2964,7.209,2976,5.46,2989,7.057,2990,6.314,2991,6.314,2992,7.057,2993,6.314,2994,7.057]],["title/interfaces/ImageViewerData.html",[0,0.236,50,2.826]],["body/interfaces/ImageViewerData.html",[0,0.438,1,2.864,2,1.147,3,0.049,4,0.049,5,0.049,6,0.037,7,3.651,8,0.986,9,4.078,10,5.255,11,0.005,12,0.342,13,0.806,14,3.651,15,3.373,16,1.568,17,0.006,18,1.674,19,0.731,20,1.319,21,3.651,22,2.415,23,0.084,24,3.045,25,3.243,26,3.556,27,3.952,28,2.504,29,2.648,30,3.651,31,3.651,32,3.135,33,1.987,34,3.602,35,3.651,36,1.968,37,4.354,38,3.651,39,3.651,40,3.497,41,3.363,42,3.497,43,3.497,44,3.363,45,4.604,46,1.598,47,1.684,48,1.416,49,1.939,50,4.468,51,2.766,52,1.726,53,0.705,54,5.667,55,2.336,56,2.947,57,3.243,58,3.497,59,4.696,60,4.354,61,4.515,62,4.354,63,4.916,64,5.302,65,1.376,66,3.846,67,4.354,68,1.952,69,2.023,70,2.864,71,3.037,72,2.947,73,2.859,74,3.135,75,4.515,76,3.363,77,3.363,78,4.354,79,4.21,80,3.037,81,3.497,82,1.382,83,2.585,84,3.135,85,3.363,86,3.497,87,0.792,88,3.651,89,2.525,90,3.135,91,3.497,92,2.525,93,2.984,94,3.243,95,3.241,96,3.243,97,2.223,98,3.497,99,0.004,100,0.003,606,4.354]],["title/classes/ImageViewerLayer.html",[179,0.092,1594,2.746]],["body/classes/ImageViewerLayer.html",[0,0.237,3,0.047,4,0.047,5,0.047,6,0.07,11,0.003,12,0.508,13,0.786,15,3.042,16,1.468,17,0.006,18,1.759,19,0.7,20,1.73,23,0.077,28,2.239,33,2.954,36,1.589,46,1.759,48,2.013,53,0.506,82,2.054,87,0.762,99,0.004,100,0.003,127,1.667,129,1.868,145,1.369,150,0.135,179,0.093,180,2.067,197,1.46,199,1.273,219,1.036,224,1.884,226,5.65,227,6.457,228,5.429,239,3.852,247,1.38,248,3.857,252,1.46,253,1.48,272,3.062,298,4.779,300,3.179,332,1.876,468,2.549,473,1.439,534,1.104,586,1.453,588,2.139,682,2.943,719,3.688,835,2.798,843,5.65,1534,4.695,1538,3.553,1543,4.515,1544,3.121,1555,4.576,1565,3.236,1568,3.366,1572,3.304,1583,5.65,1594,3.748,1600,6.017,1732,6.112,1745,6.392,1793,6.112,1847,4.505,2884,3.688,2995,8.243,2996,5.696,2997,6.457,2998,6.112,2999,7.776,3000,7.467,3001,7.776,3002,6.889,3003,6.844,3004,6.124,3005,5.65,3006,5.034,3007,5.034,3008,5.034,3009,5.034,3010,5.034,3011,5.034,3012,5.034,3013,5.034,3014,5.034,3015,5.034,3016,4.505,3017,3.896,3018,4.505,3019,5.034,3020,6.958,3021,6.958,3022,5.034,3023,5.034,3024,5.034,3025,4.156,3026,3.688,3027,4.505,3028,4.505,3029,4.505,3030,4.505,3031,4.505,3032,4.505,3033,4.505,3034,4.505,3035,4.505,3036,4.505,3037,4.505,3038,4.505,3039,4.505]],["title/components/ImageViewerLayersComponent.html",[101,0.539,362,1.364]],["body/components/ImageViewerLayersComponent.html",[3,0.071,4,0.033,5,0.033,6,0.06,8,0.885,11,0.002,12,0.232,13,0.919,16,0.808,17,0.006,19,0.605,23,0.033,24,3.918,28,1.369,46,1.075,47,1.781,48,2.019,49,1.767,51,2.101,52,0.873,53,0.804,55,0.912,65,1.255,68,1.991,69,2.063,82,1.691,87,0.97,89,2.575,93,1.51,99,0.003,100,0.003,101,0.82,102,1.43,103,1.238,104,0.899,105,0.967,106,1.011,107,0.912,112,5.213,114,1.94,117,2.644,118,2.135,120,1.369,122,1.409,127,0.988,128,0.813,129,1.56,131,1.716,133,4.575,134,3.724,136,0.837,144,2.36,148,0.996,150,0.171,151,0.275,169,0.967,173,0.967,175,4.679,177,1.43,179,0.065,183,1.494,193,0.912,197,1.138,199,0.899,205,1.142,216,1.799,224,1.847,225,2.204,232,4.128,233,2.897,235,2.064,236,1.934,237,0.861,239,3.697,247,0.716,248,3.006,268,2.063,269,1.641,271,1.636,272,1.4,274,2.843,281,0.925,283,2.476,285,1.606,290,1.238,293,0.886,295,2.003,300,1.453,305,2.463,306,2.36,307,2.064,317,0.523,318,1.274,319,1.33,320,1.011,321,2.023,322,1.011,323,1.517,324,0.953,325,0.912,326,1.821,327,0.967,328,1.011,329,0.967,330,1.011,331,0.967,332,1.605,333,1.011,334,0.967,335,0.981,336,1.011,337,0.967,338,1.011,339,0.967,340,1.011,341,1.43,342,1.517,343,1.667,344,2.168,345,0.967,346,0.981,347,1.011,348,1.517,349,0.967,350,1.517,351,0.967,352,0.996,353,1.517,354,0.967,355,1.43,356,1.517,357,1.43,358,1.517,359,0.967,360,1.011,361,0.967,362,1.936,363,1.011,364,0.967,365,1.011,366,1.43,367,2.023,368,1.43,369,1.517,370,0.967,371,0.996,372,0.967,373,1.011,374,0.967,375,1.517,376,0.953,377,0.967,378,1.011,379,0.967,380,1.011,381,0.981,382,1.011,383,0.953,384,1.011,385,0.967,386,1.011,387,0.967,388,1.011,389,0.967,390,0.953,391,0.861,392,0.967,393,0.953,394,0.925,395,0.967,396,1.011,397,0.967,398,0.925,399,1.011,400,0.967,401,1.011,402,1.43,403,0.967,404,1.011,405,1.011,407,1.573,473,1.228,492,2.703,494,2.16,495,2.27,509,0.985,510,2.223,512,1.8,515,4.412,526,2.101,527,2.14,534,1.405,546,2.517,616,3.091,632,4.483,649,4.388,940,3.429,1241,2.843,1381,4.773,1405,3.097,1406,4.128,1422,2.41,1424,2.481,1525,1.757,1534,3.165,1541,3.006,1564,2.204,1569,1.894,1593,4.47,1594,5.162,1598,4.128,1600,5.507,1602,2.285,1713,2.41,1739,5.213,1749,4.47,1750,3.603,1751,2.41,1834,4.773,1856,2.75,1907,3.567,2017,2.481,2116,3.307,2198,4.773,2513,3.567,2524,4.773,2680,4.128,2681,4.773,2941,4.679,2947,4.955,2948,4.955,2950,4.404,2974,6.611,2998,5.213,3018,4.773,3040,3.554,3041,5.334,3042,5.334,3043,5.334,3044,6.403,3045,5.334,3046,5.334,3047,5.334,3048,5.334,3049,3.554,3050,3.554,3051,5.334,3052,4.404,3053,5.334,3054,3.554,3055,5.334,3056,3.554,3057,5.334,3058,3.554,3059,4.404,3060,4.128,3061,5.334,3062,3.554,3063,5.334,3064,3.554,3065,5.334,3066,5.334,3067,3.197,3068,3.181,3069,3.554,3070,3.554,3071,2.75,3072,3.554,3073,3.554,3074,3.554,3075,4.773,3076,4.773,3077,5.334,3078,2.934]],["title/modules/ImageViewerLayersModule.html",[409,0.737,2969,3.501]],["body/modules/ImageViewerLayersModule.html",[3,0.064,4,0.064,5,0.064,6,0.049,11,0.004,17,0.006,23,0.064,47,1.316,48,1.822,99,0.004,100,0.004,150,0.262,151,0.535,175,3.783,179,0.127,204,1.907,224,1.673,317,1.016,332,1.298,335,2.316,362,2.78,409,1.016,411,1.935,412,1.935,413,2.648,414,1.964,415,1.964,416,2.648,431,2.316,432,1.772,434,2.496,435,2.459,553,2.697,554,2.186,1412,5.703,1434,7.509,1525,3.414,1581,5.703,1605,7.174,2941,3.783,2969,7.107,2974,5.345,3079,6.181,3080,6.181,3081,6.181,3082,6.181,3083,7.174,3084,6.908,3085,6.908,3086,5.703,3087,6.908,3088,6.908]],["title/components/ImageViewerLegendComponent.html",[101,0.539,364,1.364]],["body/components/ImageViewerLegendComponent.html",[3,0.077,4,0.041,5,0.041,6,0.059,8,0.548,11,0.002,12,0.288,13,0.716,17,0.006,19,0.528,23,0.041,24,3.141,47,1.848,48,2.042,49,2,52,1.083,53,0.791,55,1.131,56,4.083,65,1.42,68,1.645,87,0.667,93,2.652,99,0.003,100,0.004,101,0.779,102,1.673,103,1.93,104,1.115,105,1.199,106,1.253,107,1.131,114,2.092,117,2.67,118,2.158,120,1.601,122,1.648,128,1.009,129,1.48,131,1.942,136,1.038,148,1.235,150,0.167,151,0.341,169,1.199,173,1.199,175,4.554,177,1.673,179,0.081,193,1.131,199,1.832,205,0.707,224,1.755,237,1.068,239,2.881,247,0.888,268,3.216,269,2.034,270,2.413,271,2.222,272,1.736,281,1.147,284,2.14,285,1.991,290,1.449,292,2.08,293,1.556,297,2.288,300,1.802,305,2.881,306,2.761,317,1.305,318,1.49,319,1.556,320,1.253,321,2.24,322,1.253,323,1.774,324,1.181,325,1.131,326,2.06,327,1.199,328,1.253,329,1.199,330,1.253,331,1.199,332,1.562,333,1.253,334,1.199,335,1.216,336,1.253,337,1.199,338,1.253,339,1.199,340,1.253,341,1.673,342,1.774,343,1.886,344,2.365,345,1.199,346,1.216,347,1.253,348,1.774,349,1.199,350,1.774,351,1.199,352,1.235,353,1.774,354,1.199,355,1.673,356,1.774,357,1.673,358,1.774,359,1.199,360,1.253,361,1.199,362,1.199,363,1.253,364,2.143,365,1.253,366,1.673,367,2.24,368,1.673,369,1.774,370,1.199,371,1.235,372,1.199,373,1.253,374,1.199,375,1.774,376,1.181,377,1.199,378,1.253,379,1.199,380,1.253,381,1.216,382,1.253,383,1.181,384,1.253,385,1.199,386,1.253,387,1.199,388,1.253,389,1.199,390,1.181,391,1.068,392,1.199,393,1.181,394,1.147,395,1.199,396,1.253,397,1.199,398,1.147,399,1.253,400,1.199,401,1.253,402,1.673,403,1.199,404,1.253,405,1.253,473,0.76,494,2.105,526,2.458,534,0.967,537,2.833,571,2.091,632,2.034,649,4.275,663,1.911,664,2.483,665,1.836,768,2.483,849,4.844,1422,3.56,1425,4.357,1538,3.24,1544,3.869,1569,2.349,1588,2.945,1589,2.945,1594,4.554,1601,2.08,1602,2.833,1604,3.638,2019,4.571,2454,3.638,2941,4.554,3075,5.584,3089,6.866,3090,4.407,3091,7.245,3092,6.24,3093,6.483,3094,6.24,3095,4.407,3096,3.944,3097,4.407,3098,3.944,3099,3.944,3100,5.584,3101,4.407,3102,4.407,3103,4.407,3104,4.407]],["title/modules/ImageViewerLegendModule.html",[409,0.737,3105,3.674]],["body/modules/ImageViewerLegendModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,47,1.391,48,1.866,99,0.005,100,0.004,150,0.247,151,0.565,175,3.999,179,0.134,204,2.016,317,1.074,364,2.798,409,1.074,411,2.046,412,2.046,413,2.712,414,2.076,415,2.076,416,2.712,431,2.395,432,1.874,434,2.172,435,2.542,553,2.789,554,2.311,2941,3.999,3089,6.029,3105,7.342,3106,6.535,3107,6.535,3108,6.535,3109,7.303,3110,7.303]],["title/modules/ImageViewerModule.html",[409,0.737,426,3.674]],["body/modules/ImageViewerModule.html",[3,0.063,4,0.063,5,0.063,6,0.048,11,0.004,17,0.006,23,0.063,47,1.704,48,1.963,99,0.004,100,0.004,150,0.256,151,0.522,175,3.695,176,5.221,179,0.124,204,1.862,317,0.992,409,0.992,411,1.89,412,1.89,413,2.424,414,1.919,415,2.352,416,2.621,426,7.534,431,2.283,432,1.731,434,2.461,435,2.424,445,6.038,2707,5.57,2941,3.695,2969,7.114,2974,5.221,2975,6.038,2976,5.221,2989,7.114,3111,6.038,3112,6.038,3113,6.038,3114,7.464,3115,6.799,3116,6.747,3117,6.038]],["title/components/ImageViewerPopoverComponent.html",[101,0.539,173,1.364]],["body/components/ImageViewerPopoverComponent.html",[3,0.068,4,0.056,5,0.03,6,0.062,8,0.847,11,0.005,12,0.327,13,0.574,15,1.744,16,1.113,17,0.006,19,0.588,20,1.38,23,0.03,26,4.32,28,1.749,33,1.241,36,2.203,40,4.066,41,3.216,44,2.1,47,1.878,48,2.062,49,1.381,50,4.368,52,0.803,53,0.81,54,2.184,55,1.284,65,1.192,69,1.935,82,1.8,87,1.032,89,2.415,99,0.003,100,0.003,101,0.79,102,1.341,103,1.582,104,0.826,105,0.888,106,0.929,107,0.838,114,2.016,117,2.629,118,2.126,120,1.284,122,1.322,125,0.716,127,1.361,128,0.747,129,1.636,134,4.758,136,0.769,141,2.39,145,1.854,148,0.915,150,0.163,151,0.253,152,1.696,169,0.888,173,1.854,175,4.85,176,6.853,177,1.341,179,0.06,183,1.336,184,2.184,193,1.989,197,1.067,199,0.826,202,3.871,205,1.336,215,2.533,216,1.102,219,0.921,224,1.473,233,1.9,237,0.791,238,4.024,239,2.31,252,1.067,253,0.706,268,2.635,269,1.508,270,1.789,271,2.254,272,2.684,273,2.819,274,2.666,275,1.286,276,2.184,277,1.31,278,2.696,279,2.636,280,2.1,281,1.913,284,2.519,285,3.502,288,2.025,290,1.161,291,1.508,292,1.541,293,1.247,294,2.28,296,1.445,297,2.598,298,1.789,299,2.87,300,1.335,301,1.335,302,1.263,303,2.184,312,4.066,317,0.736,318,1.195,319,1.247,320,0.929,321,1.938,322,0.929,323,1.423,324,0.875,325,0.838,326,1.729,327,0.888,328,0.929,329,0.888,330,0.929,331,0.888,332,1.456,333,0.929,334,0.888,335,0.902,336,0.929,337,0.888,338,0.929,339,0.888,340,0.929,341,1.341,342,1.423,343,1.583,344,2.089,345,0.888,346,0.902,347,0.929,348,1.423,349,0.888,350,1.423,351,0.888,352,0.915,353,1.423,354,0.888,355,1.341,356,1.423,357,1.341,358,1.423,359,0.888,360,0.929,361,0.888,362,0.888,363,0.929,364,0.888,365,0.929,366,1.341,367,1.938,368,1.341,369,1.423,370,0.888,371,0.915,372,0.888,373,0.929,374,0.888,375,1.423,376,0.875,377,0.888,378,0.929,379,0.888,380,0.929,381,0.902,382,0.929,383,0.875,384,0.929,385,0.888,386,0.929,387,0.888,388,0.929,389,0.888,390,0.875,391,0.791,392,0.888,393,0.875,394,0.85,395,0.888,396,0.929,397,0.888,398,0.85,399,0.929,400,0.888,401,0.929,402,1.341,403,0.888,404,0.929,405,0.929,408,2.923,432,0.838,473,1.337,490,1.445,499,1.84,534,1.495,571,1.967,586,0.943,682,2.299,693,1.335,735,3.102,962,1.935,1223,3.102,1241,4.131,1409,1.896,1529,3.345,1574,2.527,1584,3.345,1588,2.361,1589,2.361,1598,3.871,1601,1.541,1713,2.26,1854,4.225,1894,4.085,1895,4.085,1899,3.102,1910,2.819,1971,4.454,2049,2.598,2054,3.157,2092,2.527,2093,2.696,2094,2.696,2095,2.184,2123,1.696,2527,3.493,2672,2.923,2673,5.441,2674,4.477,2806,4.758,2941,4.85,2947,4.706,3118,5.003,3119,4.477,3120,6.081,3121,6.081,3122,5.003,3123,5.003,3124,3.266,3125,4.992,3126,5.003,3127,3.266,3128,3.871,3129,5.003,3130,3.266,3131,1.789,3132,5.003,3133,3.266,3134,5.003,3135,3.266,3136,6.081,3137,3.266,3138,3.266,3139,4.477,3140,6.081,3141,3.266,3142,3.266,3143,3.266,3144,5.003,3145,3.266,3146,3.266,3147,5.003,3148,3.266,3149,3.266,3150,5.003,3151,3.266,3152,3.266,3153,2.923,3154,3.266,3155,3.266,3156,3.266]],["title/modules/ImageViewerPopoverModule.html",[409,0.737,3114,3.674]],["body/modules/ImageViewerPopoverModule.html",[3,0.062,4,0.062,5,0.062,6,0.047,11,0.004,17,0.006,23,0.062,47,1.701,48,1.987,99,0.004,100,0.004,150,0.263,151,0.52,172,5.549,173,2.77,175,3.681,176,5.201,179,0.124,204,1.855,317,0.988,409,0.988,411,1.883,412,1.883,413,2.617,414,1.911,415,1.911,416,2.617,423,6.792,431,2.278,432,1.725,434,2.455,435,2.418,453,6.014,553,2.653,554,2.127,2706,6.014,2707,5.549,2941,3.681,2976,5.201,2989,6.792,3089,5.549,3105,7.127,3114,7.531,3115,6.792,3117,6.014,3157,6.014,3158,6.014,3159,6.721,3160,6.014,3161,6.721]],["title/interfaces/ImageViewerProps.html",[0,0.236,1268,3.224]],["body/interfaces/ImageViewerProps.html",[0,0.341,2,0.807,3,0.051,4,0.034,5,0.034,6,0.026,11,0.004,12,0.358,13,0.628,16,1.359,17,0.006,18,1.73,19,0.695,23,0.075,28,2.303,46,1.103,47,0.701,87,1.396,92,4.055,95,3.163,99,0.003,100,0.002,125,0.807,141,2.168,145,1.489,150,0.207,179,0.068,205,1.416,216,1.846,219,1.411,235,2.136,247,1.911,252,1.544,271,2.794,281,2.337,332,1.028,509,0.51,513,3.652,571,2.591,573,4.798,588,3.076,590,3.394,609,4.079,625,2.136,630,2.136,632,3.017,634,1.349,638,5.173,639,4.202,641,1.961,642,5.38,643,2.365,644,3.394,647,3.918,649,2.953,655,3.394,666,2.365,669,5.401,769,3.736,772,3.824,803,2.46,852,3.027,972,2.46,1037,1.628,1101,2.373,1238,3.66,1239,2.568,1240,2.365,1241,2.917,1242,2.643,1243,4.079,1244,5.054,1245,4.798,1246,4.371,1247,2.205,1248,2.205,1249,2.46,1250,3.394,1251,3.519,1252,3.394,1253,3.519,1254,2.695,1255,2.695,1256,3.66,1257,4.638,1258,2.695,1259,2.695,1260,3.821,1261,4.563,1262,2.695,1263,3.66,1264,3.66,1265,4.788,1266,4.727,1267,3.519,1268,3.519,1269,4.654,1270,4.361,1271,6.322,1272,5.864,1273,4.01,1274,4.563,1275,2.695,1276,2.695,1277,2.695,1278,4.563,1279,2.205,1280,4.788,1281,4.788,1282,2.568,1283,2.568,1284,4.563,1285,4.841,1286,4.788,1287,2.46,1288,2.568,1289,2.695,1290,2.46,1291,5.303,1292,2.568,1293,6.167,1294,3.821,1295,3.821,1296,4.079,1297,2.46,1298,2.695,1299,2.695,1300,2.695,1301,2.695,1302,2.695,1303,2.695,1304,2.281,1305,4.788,1306,4.788,1307,4.788,1308,5.303,1309,5.668,1310,2.568,1311,2.695,1312,2.568,1313,4.01,1314,2.695,1315,2.695,1316,2.695,1317,2.568,1318,2.695,1319,2.695,1320,2.695,1321,2.568,1322,2.695,1323,2.695,1324,4.01,1325,2.695,1326,2.695,1327,2.568,1328,4.788,1329,2.695,1330,2.842,1331,2.695,1332,4.01,1333,2.46,1334,2.46,1335,2.695,1336,2.568,1337,2.695,1338,4.01,1339,2.568,1340,2.695,1341,2.695,1342,2.46,1343,3.394,1344,2.695,1345,2.695,1346,2.695,1347,2.695,1348,2.695,1349,2.568,1350,2.695,1351,2.073,1352,2.695,1353,2.695,1354,2.695,1355,2.695,1356,2.695,1357,2.568,1358,2.695,1359,2.568,1360,3.821,1361,2.695,1362,2.695,1363,2.695,1364,2.695,1365,2.568,1366,2.695,1367,2.695,1368,2.695,1369,2.695,1370,2.695,1371,2.46,1372,2.695,1373,2.695,1374,4.01,1375,2.695,1376,2.695]],["title/components/InfoButtonComponent.html",[101,0.539,366,1.344]],["body/components/InfoButtonComponent.html",[3,0.093,4,0.044,5,0.044,6,0.053,8,0.818,11,0.003,12,0.311,17,0.006,19,0.346,23,0.044,33,2.498,36,1.103,47,1.629,48,1.783,52,1.168,53,0.818,55,1.219,65,1.479,87,0.719,89,3.175,99,0.004,100,0.004,101,0.975,102,1.763,103,1.527,104,1.202,105,1.292,106,1.351,107,1.219,114,2.143,117,2.679,118,2.165,120,1.688,122,1.737,125,1.042,128,1.087,129,1.236,136,1.119,148,1.331,150,0.202,151,0.368,169,1.292,173,1.292,177,1.763,179,0.087,180,1.987,181,2.148,183,0.931,193,1.219,197,1.403,199,1.202,205,1.056,224,1.828,237,1.151,281,1.237,290,1.527,293,1.184,296,3.913,301,1.942,302,1.837,317,0.698,318,1.571,319,1.64,320,1.351,321,2.315,322,1.351,323,1.87,324,1.273,325,1.219,326,2.145,327,1.292,328,1.351,329,1.292,330,1.351,331,1.292,332,1.606,333,1.351,334,1.292,335,1.311,336,1.351,337,1.292,338,1.351,339,1.292,340,1.351,341,1.763,342,1.87,343,1.964,344,2.431,345,1.292,346,2.36,347,1.351,348,1.87,349,1.292,350,1.87,351,1.292,352,1.331,353,1.87,354,1.292,355,1.763,356,1.87,357,1.763,358,1.87,359,1.292,360,1.351,361,1.292,362,1.292,363,1.351,364,1.292,365,1.351,366,2.292,367,2.315,368,2.022,369,1.87,370,1.292,371,1.331,372,1.292,373,1.351,374,1.292,375,1.87,376,1.273,377,1.292,378,1.351,379,1.292,380,1.351,381,1.311,382,1.351,383,1.273,384,1.351,385,1.292,386,1.351,387,1.292,388,1.351,389,1.292,390,1.273,391,1.151,392,1.292,393,1.273,394,1.237,395,1.292,396,1.351,397,1.292,398,1.237,399,1.351,400,1.292,401,1.351,402,1.763,403,1.292,404,1.351,405,1.351,448,3.177,473,0.82,534,1.042,586,1.371,962,2.544,990,1.987,1118,2.677,1584,4.398,1736,4.398,1853,4.229,2054,2.467,2758,3.676,2790,5.838,3162,5.838,3163,3.676,3164,5.965,3165,5.838,3166,5.09,3167,7.287,3168,4.251,3169,7.287,3170,4.251,3171,6.616,3172,4.592,3173,4.251,3174,5.886,3175,3.48,3176,3.922,3177,4.251,3178,4.251,3179,5.886]],["title/components/InfoButtonComponent-1.html",[101,0.451,253,0.908,366,1.125]],["body/components/InfoButtonComponent-1.html",[3,0.093,4,0.044,5,0.044,6,0.053,8,0.811,11,0.003,12,0.307,17,0.006,19,0.342,23,0.044,33,2.478,36,1.09,47,1.622,48,1.776,52,1.154,53,0.814,55,1.205,65,1.469,87,0.711,89,3.15,99,0.003,100,0.004,101,0.972,102,1.749,103,1.515,104,1.188,105,1.277,106,1.335,107,1.205,114,2.135,116,2.646,117,2.677,118,2.164,120,1.674,122,1.723,125,1.03,128,1.075,129,1.226,136,1.106,148,1.315,150,0.2,151,0.364,169,1.277,173,1.277,177,1.749,179,0.086,180,1.971,181,2.131,183,0.92,193,1.205,197,1.391,199,1.188,205,1.047,224,1.816,227,3.634,237,1.138,253,1.016,281,1.222,290,1.515,292,2.216,293,1.627,294,3.278,296,3.999,301,1.919,302,1.816,305,2.168,317,0.69,318,1.558,319,1.627,320,1.335,321,2.304,322,1.335,323,1.855,324,1.259,325,1.205,326,2.132,327,1.277,328,1.335,329,1.277,330,1.335,331,1.277,332,1.599,333,1.335,334,1.277,335,1.296,336,1.335,337,1.277,338,1.335,339,1.277,340,1.335,341,1.749,342,1.855,343,1.952,344,2.421,345,1.277,346,2.35,347,1.335,348,1.855,349,1.277,350,1.855,351,1.277,352,1.315,353,1.855,354,1.277,355,1.749,356,1.855,357,1.749,358,1.855,359,1.277,360,1.335,361,1.277,362,1.277,363,1.335,364,1.277,365,1.335,366,2.282,367,2.304,368,2.01,369,1.855,370,1.277,371,1.315,372,1.277,373,1.335,374,1.277,375,1.855,376,1.259,377,1.277,378,1.335,379,1.277,380,1.335,381,1.296,382,1.335,383,1.259,384,1.335,385,1.277,386,1.335,387,1.277,388,1.335,389,1.277,390,1.259,391,1.138,392,1.277,393,1.259,394,1.222,395,1.277,396,1.335,397,1.277,398,1.222,399,1.335,400,1.277,401,1.335,402,1.749,403,1.277,404,1.335,405,1.335,448,3.14,473,0.81,534,1.03,586,1.355,962,2.523,990,1.971,1118,2.646,1584,4.362,1736,4.362,1853,4.194,2054,2.438,2758,3.634,2790,5.802,3163,3.634,3164,5.935,3165,5.802,3166,5.049,3167,7.25,3168,4.202,3169,7.25,3170,4.202,3171,6.588,3172,4.555,3173,4.202,3174,5.838,3175,3.44,3176,3.877,3177,4.202,3178,4.202,3179,5.838,3180,6.709,3181,4.696,3182,3.877,3183,4.696,3184,4.202]],["title/modules/InfoButtonModule.html",[409,0.737,2782,3.674]],["body/modules/InfoButtonModule.html",[3,0.085,4,0.066,5,0.066,6,0.05,11,0.004,17,0.006,23,0.066,99,0.005,100,0.004,150,0.26,151,0.552,179,0.131,204,1.966,317,1.047,366,2.75,409,1.047,411,1.996,412,1.996,413,2.684,414,2.026,415,2.026,416,2.684,427,6.886,431,2.36,432,1.828,434,2.543,435,2.505,436,4.328,437,3.289,448,4.763,449,6.375,553,2.748,554,2.254,2426,6.375,2782,7.415,2790,5.512,3162,5.512,3185,6.375,3186,6.375,3187,7.124,3188,6.375,3189,7.124]],["title/components/InfoDialogComponent.html",[101,0.539,368,1.344]],["body/components/InfoDialogComponent.html",[0,0.361,3,0.086,4,0.029,5,0.055,6,0.051,8,0.742,11,0.002,12,0.39,13,0.561,17,0.005,19,0.434,23,0.029,29,3.876,33,1.202,36,2.176,47,1.38,48,1.543,49,0.874,52,1.465,53,0.673,55,0.812,65,1.563,79,2.927,83,3.313,87,0.479,89,2.358,99,0.003,100,0.003,101,0.982,102,1.309,103,1.134,104,0.801,105,0.861,106,0.9,107,0.812,114,1.854,117,2.624,118,2.148,120,1.253,122,1.29,128,1.365,129,1.259,131,1.598,136,0.745,147,3.14,148,0.887,150,0.131,151,0.245,169,0.861,173,0.861,177,1.309,179,0.058,180,2.188,181,1.595,183,0.957,193,0.812,195,3.987,197,1.545,199,1.508,205,0.784,216,1.647,224,1.445,225,3.028,237,0.767,248,2.752,252,1.43,271,1.498,275,1.923,279,2.585,283,1.224,284,2.825,285,2.694,286,2.966,289,2.814,290,1.134,291,1.461,292,3.419,293,1.806,297,1.643,298,1.733,301,1.294,302,1.224,308,1.838,309,1.733,317,0.465,318,1.166,319,1.218,320,0.9,321,1.906,322,0.9,323,1.389,324,0.848,325,1.253,326,1.696,327,0.861,328,0.9,329,0.861,330,0.9,331,0.861,332,1.361,333,0.9,334,0.861,335,0.874,336,0.9,337,0.861,338,0.9,339,0.861,340,0.9,341,1.309,342,1.389,343,1.552,344,2.06,345,0.861,346,0.874,347,0.9,348,1.389,349,0.861,350,1.389,351,0.861,352,0.887,353,1.389,354,0.861,355,1.309,356,1.389,357,1.309,358,1.389,359,0.861,360,0.9,361,0.861,362,0.861,363,0.9,364,0.861,365,0.9,366,1.309,367,1.906,368,1.942,369,1.389,370,0.861,371,0.887,372,0.861,373,0.9,374,0.861,375,1.389,376,0.848,377,0.861,378,0.9,379,0.861,380,0.9,381,0.874,382,0.9,383,0.848,384,0.9,385,0.861,386,0.9,387,0.861,388,0.9,389,0.861,390,0.848,391,0.767,392,0.861,393,0.848,394,0.824,395,0.861,396,0.9,397,0.861,398,0.824,399,0.9,400,0.861,401,0.9,402,1.309,403,0.861,404,0.9,405,0.9,448,4.844,473,0.546,494,1.647,534,0.694,537,2.035,538,1.733,539,1.784,586,1.41,608,1.494,664,2.752,665,1.319,708,2.299,868,2.675,869,3.028,911,4.921,920,3.14,962,2.306,993,5.664,994,3.266,1180,3.266,1241,3.573,1304,3.028,1392,4.032,1396,3.876,1421,2.449,1422,3.029,1584,3.266,1619,5.534,1742,6.028,1807,2.21,1809,2.449,1843,3.41,1854,4.746,2019,3.578,2197,5.999,2292,3.578,2350,5.509,2354,2.319,2403,3.14,2411,2.449,3017,3.779,3162,5.605,3164,6.035,3171,6.991,3175,2.319,3182,4.032,3190,2.832,3191,4.37,3192,3.266,3193,4.37,3194,5.336,3195,4.37,3196,6.482,3197,2.832,3198,6.482,3199,2.832,3200,5.336,3201,4.923,3202,5.336,3203,2.832,3204,4.37,3205,2.832,3206,2.832,3207,1.784,3208,2.832,3209,2.832,3210,7.373,3211,6.704,3212,7.655,3213,4.884,3214,4.884,3215,4.884,3216,4.884,3217,4.884,3218,4.884,3219,4.884,3220,4.884,3221,3.14,3222,4.884,3223,4.884,3224,4.37,3225,4.884,3226,4.884,3227,4.884,3228,4.884,3229,4.884,3230,5.923,3231,5.923,3232,5.188,3233,4.884,3234,4.884,3235,4.884,3236,4.884,3237,4.884,3238,4.37,3239,5.999,3240,4.884,3241,6.704,3242,5.999,3243,6.704,3244,5.999,3245,4.884,3246,5.999,3247,4.884,3248,4.032,3249,4.032,3250,4.884,3251,4.884,3252,4.884,3253,5.188,3254,6.375,3255,3.41,3256,6.704,3257,4.884,3258,4.884,3259,4.37,3260,4.37,3261,4.032,3262,4.884,3263,2.752,3264,4.884,3265,4.884,3266,4.884,3267,4.884,3268,4.884,3269,3.578,3270,4.37,3271,4.37,3272,4.37,3273,4.37,3274,4.032,3275,4.032,3276,4.37,3277,4.37,3278,4.884,3279,4.37,3280,4.37,3281,4.884,3282,4.884,3283,4.032,3284,6.586,3285,4.884,3286,4.032,3287,4.884,3288,4.884,3289,4.884,3290,4.884,3291,4.032,3292,4.032,3293,4.884,3294,4.884,3295,4.37,3296,4.884,3297,4.884,3298,4.37,3299,4.884,3300,4.884,3301,4.884,3302,4.884,3303,4.884,3304,4.884,3305,4.884,3306,6.704,3307,4.884,3308,4.37,3309,4.37,3310,4.884,3311,2.832,3312,4.37,3313,3.165,3314,2.832,3315,2.832,3316,3.165]],["title/components/InfoDialogComponent-1.html",[101,0.451,253,0.908,368,1.125]],["body/components/InfoDialogComponent-1.html",[0,0.387,2,1.059,3,0.086,4,0.029,5,0.029,6,0.051,8,0.735,11,0.002,12,0.204,13,0.554,17,0.005,19,0.43,23,0.029,29,4.698,33,1.184,36,2.171,47,1.371,48,1.534,52,1.768,53,0.764,55,0.8,65,1.158,87,0.472,89,3.673,99,0.003,100,0.003,101,0.955,102,1.294,103,1.121,104,0.789,105,0.848,106,0.887,107,0.8,114,1.843,117,2.622,118,2.138,120,1.239,122,1.275,128,0.714,129,1.249,131,2.127,132,3.736,133,3.104,136,0.734,147,3.104,148,0.874,150,0.129,151,0.241,169,0.848,173,0.848,177,1.294,179,0.057,180,2.173,181,1.577,183,0.946,193,0.8,195,3.95,197,1.534,199,1.494,205,0.775,224,1.431,237,0.755,252,1.03,253,0.674,271,0.956,275,1.901,277,1.937,279,2.093,283,1.206,284,2.609,285,2.181,286,2.614,289,2.278,290,1.121,291,1.439,292,2.788,293,1.897,297,1.619,301,1.275,302,1.206,305,1.439,306,1.38,308,1.811,309,1.708,317,0.458,318,1.153,319,1.204,320,0.887,321,1.891,322,0.887,323,1.373,324,0.836,325,2.16,326,1.68,327,0.848,328,0.887,329,0.848,330,0.887,331,0.848,332,1.249,333,0.887,334,0.848,335,0.861,336,0.887,337,0.848,338,0.887,339,0.848,340,0.887,341,1.294,342,1.373,343,1.538,344,2.046,345,0.848,346,0.861,347,0.887,348,1.373,349,0.848,350,1.373,351,0.848,352,0.874,353,1.373,354,0.848,355,1.294,356,1.373,357,1.294,358,1.373,359,0.848,360,0.887,361,0.848,362,0.848,363,0.887,364,0.848,365,0.887,366,1.294,367,1.891,368,1.928,369,1.373,370,0.848,371,0.874,372,0.848,373,0.887,374,0.848,375,1.373,376,0.836,377,0.848,378,0.887,379,0.848,380,0.887,381,0.861,382,0.887,383,0.836,384,0.887,385,0.848,386,0.887,387,0.848,388,0.887,389,0.848,390,0.836,391,0.755,392,0.848,393,0.836,394,0.812,395,0.848,396,0.887,397,0.848,398,0.812,399,0.887,400,0.848,401,0.887,402,1.294,403,0.848,404,0.887,405,0.887,448,4.81,473,0.538,487,2.894,494,1.628,534,0.684,537,2.005,546,1.472,586,1.393,608,1.472,665,1.299,708,2.28,813,3.986,852,1.802,869,2.993,911,4.891,951,3.544,961,6.006,962,3.255,963,2.993,993,5.331,994,4.447,1073,3.37,1164,6.165,1180,4.447,1186,3.37,1223,2.993,1266,2.644,1304,2.993,1388,4.32,1396,4.151,1422,3.005,1584,3.228,1742,5.311,1809,2.413,1831,2.894,1843,3.37,1854,4.717,2008,5.646,2019,3.536,2042,3.37,2358,5.491,2366,3.736,2368,3.536,2373,3.736,2403,3.104,2411,2.413,2455,3.986,2539,4.32,2650,4.32,2731,4.32,3017,3.736,3059,3.986,3164,4.872,3171,6.968,3175,2.284,3180,6.437,3182,3.986,3190,2.79,3191,4.32,3192,3.228,3193,4.32,3194,5.286,3195,4.32,3196,6.437,3197,2.79,3198,6.437,3199,2.79,3200,5.286,3201,4.877,3202,5.286,3203,2.79,3204,4.32,3205,2.79,3206,2.79,3207,1.757,3208,2.79,3209,2.79,3210,4.32,3230,3.736,3231,3.736,3232,3.736,3242,4.32,3246,4.32,3249,3.986,3253,3.736,3254,3.736,3260,5.951,3263,2.72,3269,3.536,3270,4.32,3271,4.32,3272,4.32,3273,4.32,3274,5.491,3275,5.491,3277,4.32,3279,4.32,3280,6.808,3283,3.986,3284,3.986,3291,3.986,3292,3.986,3295,4.32,3298,4.32,3311,2.79,3312,2.79,3314,2.79,3315,2.79,3317,6.651,3318,4.828,3319,7.608,3320,6.651,3321,4.828,3322,6.344,3323,4.828,3324,4.828,3325,4.828,3326,4.828,3327,4.828,3328,4.828,3329,4.828,3330,4.828,3331,4.828,3332,4.828,3333,4.828,3334,4.828,3335,4.828,3336,4.828,3337,4.828,3338,4.828,3339,5.951,3340,4.32,3341,4.828,3342,4.828,3343,4.828,3344,3.986,3345,4.828,3346,4.828,3347,5.951,3348,4.828,3349,5.951,3350,5.951,3351,4.32,3352,4.828,3353,4.828,3354,4.828,3355,4.828,3356,4.828,3357,4.828,3358,4.828,3359,4.828,3360,4.828,3361,4.828,3362,4.828,3363,4.828,3364,6.651,3365,4.828,3366,4.828,3367,4.828,3368,4.828,3369,4.828,3370,4.828,3371,4.828,3372,4.828,3373,4.828,3374,4.828,3375,4.828,3376,4.828,3377,4.828,3378,4.828,3379,4.828,3380,4.828,3381,4.828,3382,4.828,3383,4.828,3384,4.828,3385,4.828,3386,4.828,3387,4.828,3388,4.828,3389,4.828,3390,4.828,3391,4.32,3392,4.828,3393,4.828,3394,4.828,3395,4.828,3396,4.828]],["title/modules/InfoDialogModule.html",[409,0.737,427,3.501]],["body/modules/InfoDialogModule.html",[3,0.08,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,23,0.067,99,0.005,100,0.004,150,0.261,151,0.56,179,0.133,204,1.996,317,1.063,368,2.755,409,1.063,411,2.026,412,2.026,413,2.701,414,2.056,415,2.056,416,2.701,427,6.983,431,2.381,432,1.856,434,2.151,435,2.528,436,4.368,437,3.339,448,4.836,553,2.773,554,2.288,3162,5.596,3175,5.297,3176,5.97,3397,6.471,3398,6.471,3399,6.471,3400,7.232,3401,8.626]],["title/classes/InitializationState.html",[179,0.092,3402,3.881]],["body/classes/InitializationState.html",[3,0.025,4,0.025,5,0.025,6,0.053,8,0.334,11,0.001,12,0.176,13,0.493,17,0.006,18,0.774,19,0.52,20,1.259,23,0.025,46,1.726,53,0.539,68,3.139,82,1.981,95,3.439,99,0.002,100,0.001,101,0.768,103,0.624,105,0.731,114,2.375,117,0.69,118,0.891,120,0.69,122,0.71,125,1.344,127,1.135,129,1.342,131,1.152,141,2.606,145,2.288,146,1.667,150,0.179,151,0.208,153,1.059,177,1.438,179,0.099,180,0.812,181,0.878,183,1.47,193,1.102,194,3.161,197,0.916,199,1.087,205,1.415,215,4.463,216,1.81,219,1.247,223,3.147,225,2.664,233,1.021,236,1.298,247,1.849,252,1.855,277,2.459,281,2.294,284,3.022,290,0.624,299,1.269,312,2.873,318,1.026,319,1.87,432,1.102,468,1.361,473,1.232,492,0.953,493,1.12,494,2.067,495,2.658,503,1.12,509,1.039,512,1.361,534,0.943,540,1.433,571,2.768,616,2.959,663,3.712,665,3.568,682,2.628,708,0.922,721,2.326,768,4.526,769,2.959,772,2.652,835,1.099,836,2.762,841,1.729,852,2.003,856,3,877,1.561,879,1.433,900,2.421,924,3.147,962,1.662,986,2.591,990,0.812,1230,1.329,1409,3.559,1478,2.22,1572,3.621,1588,1.269,1589,1.269,1601,1.269,1713,1.941,1736,1.798,1737,1.059,1749,1.877,1750,2.717,1843,1.877,1854,2.664,1857,2.081,1879,2.028,1880,2.081,1882,2.153,1885,2.075,1888,3.327,1890,1.269,1893,1.877,1894,2.575,1895,2.575,1898,1.79,1899,1.667,1902,2.153,1904,2.081,1906,1.667,1908,1.729,1910,2.421,1914,1.612,1917,1.863,1919,1.515,1932,2.664,1933,1.667,1936,3.147,1953,4.151,1954,4.045,1958,1.667,1962,1.515,1963,1.877,1964,2.081,1965,1.877,1966,1.667,1969,3.325,1974,1.667,2023,2.081,2040,1.877,2043,1.877,2049,4.367,2052,1.729,2053,2.081,2054,2.231,2055,2.081,2056,1.97,2071,1.877,2075,3.479,2077,2.176,2078,1.515,2095,2.873,2123,4.515,2128,2.939,2294,1.97,2298,1.473,2299,2.762,2309,2.421,2460,5.185,2527,1.877,2559,2.081,3128,6.215,3192,3.588,3402,4.152,3403,2.406,3404,3.845,3405,4.802,3406,6.711,3407,5.484,3408,5.484,3409,3.845,3410,4.802,3411,2.689,3412,2.689,3413,2.689,3414,2.689,3415,2.689,3416,2.689,3417,4.802,3418,2.406,3419,2.406,3420,2.22,3421,4.43,3422,6.191,3423,4.43,3424,4.43,3425,5.898,3426,4.43,3427,5.532,3428,3.547,3429,4.43,3430,5.484,3431,3.845,3432,5.484,3433,3.845,3434,2.406,3435,2.081,3436,2.406,3437,2.406,3438,2.406,3439,2.406,3440,2.406,3441,2.406,3442,2.406,3443,3.845,3444,2.406,3445,3.845,3446,2.406,3447,2.406,3448,2.406,3449,2.081,3450,5.185,3451,2.406,3452,2.406,3453,2.406,3454,4.152,3455,2.081,3456,3.325,3457,3.845,3458,2.406,3459,6.393,3460,2.406,3461,3.845,3462,2.406,3463,2.406,3464,2.406,3465,4.802,3466,2.406,3467,2.406,3468,2.406,3469,2.406,3470,4.802,3471,2.406,3472,2.406,3473,3.325,3474,2.406,3475,2.406,3476,2.406,3477,6.393,3478,3.845,3479,5.484,3480,3.845,3481,3.845,3482,2.406,3483,4.802,3484,3.845,3485,2.406,3486,2.406,3487,2.406,3488,3.845,3489,3.845,3490,2.406,3491,2.406,3492,4.802,3493,2.406,3494,2.406,3495,2.406,3496,2.406,3497,2.406,3498,2.406,3499,2.081,3500,2.406,3501,2.406,3502,2.406,3503,4.743,3504,4.802,3505,5.484,3506,3.845,3507,3.845,3508,2.406,3509,2.406,3510,2.406,3511,2.406,3512,2.406,3513,2.406,3514,2.081,3515,2.081,3516,2.406,3517,6.393,3518,3.845,3519,2.406,3520,2.406,3521,2.406,3522,2.406,3523,2.406,3524,2.406,3525,2.406,3526,2.406,3527,1.612,3528,2.406,3529,2.406,3530,3.845,3531,2.406,3532,2.406,3533,2.406,3534,2.406,3535,2.406,3536,2.406,3537,3.845,3538,4.802,3539,2.406,3540,2.406,3541,3.845,3542,2.406,3543,2.406,3544,4.802,3545,4.152,3546,4.802,3547,4.43,3548,2.406,3549,4.802,3550,4.802,3551,2.406,3552,2.406]],["title/classes/InitializationState-1.html",[179,0.077,253,0.908,3402,3.248]],["body/classes/InitializationState-1.html",[3,0.025,4,0.025,5,0.025,6,0.053,8,0.334,11,0.001,12,0.176,13,0.493,17,0.006,18,0.774,19,0.52,20,1.259,23,0.025,46,1.726,53,0.539,68,3.139,82,1.981,95,3.439,99,0.002,100,0.001,101,0.768,103,0.624,105,0.731,114,2.375,117,0.69,118,0.891,120,0.69,122,0.71,125,1.344,127,1.135,129,1.342,131,1.152,141,2.606,145,2.288,146,1.667,150,0.179,151,0.208,153,1.059,177,1.438,179,0.099,180,0.812,181,0.878,183,1.47,193,1.102,194,3.161,197,0.916,199,1.087,205,1.415,215,4.463,216,1.81,219,1.247,223,3.147,225,2.664,233,1.021,236,1.298,247,1.849,252,1.855,277,2.459,281,2.294,284,3.022,290,0.624,299,1.269,312,2.873,318,1.026,319,1.87,432,1.102,468,1.361,473,1.232,492,0.953,493,1.12,494,2.067,495,2.658,503,1.12,509,1.039,512,1.361,534,0.943,540,1.433,571,2.768,616,2.959,663,3.712,665,3.568,682,2.628,708,0.922,721,2.326,768,4.526,769,2.959,772,2.652,835,1.099,836,2.762,841,1.729,852,2.003,856,3,877,1.561,879,1.433,900,2.421,924,3.147,962,1.662,986,2.591,990,0.812,1230,1.329,1409,3.559,1478,2.22,1572,3.621,1588,1.269,1589,1.269,1601,1.269,1713,1.941,1736,1.798,1737,1.059,1749,1.877,1750,2.717,1843,1.877,1854,2.664,1857,2.081,1879,2.028,1880,2.081,1882,2.153,1885,2.075,1888,3.327,1890,1.269,1893,1.877,1894,2.575,1895,2.575,1898,1.79,1899,1.667,1902,2.153,1904,2.081,1906,1.667,1908,1.729,1910,2.421,1914,1.612,1917,1.863,1919,1.515,1932,2.664,1933,1.667,1936,3.147,1953,4.151,1954,4.045,1958,1.667,1962,1.515,1963,1.877,1964,2.081,1965,1.877,1966,1.667,1969,3.325,1974,1.667,2023,2.081,2040,1.877,2043,1.877,2049,4.367,2052,1.729,2053,2.081,2054,2.231,2055,2.081,2056,1.97,2071,1.877,2075,3.479,2077,2.176,2078,1.515,2095,2.873,2123,4.515,2128,2.939,2294,1.97,2298,1.473,2299,2.762,2309,2.421,2460,5.185,2527,1.877,2559,2.081,3128,6.215,3192,3.588,3402,4.152,3404,3.845,3405,4.802,3406,6.711,3407,5.484,3408,5.484,3409,3.845,3410,4.802,3417,4.802,3418,2.406,3419,2.406,3420,2.22,3421,4.43,3422,6.191,3423,4.43,3424,4.43,3425,5.898,3426,4.43,3427,5.532,3428,3.547,3429,4.43,3430,5.484,3431,3.845,3432,5.484,3433,3.845,3434,2.406,3435,2.081,3436,2.406,3437,2.406,3438,2.406,3439,2.406,3440,2.406,3441,2.406,3442,2.406,3443,3.845,3444,2.406,3445,3.845,3446,2.406,3447,2.406,3448,2.406,3449,2.081,3450,5.185,3451,2.406,3452,2.406,3453,2.406,3454,4.152,3455,2.081,3456,3.325,3457,3.845,3458,2.406,3459,6.393,3460,2.406,3461,3.845,3462,2.406,3463,2.406,3464,2.406,3465,4.802,3466,2.406,3467,2.406,3468,2.406,3469,2.406,3470,4.802,3471,2.406,3472,2.406,3473,3.325,3474,2.406,3475,2.406,3476,2.406,3477,6.393,3478,3.845,3479,5.484,3480,3.845,3481,3.845,3482,2.406,3483,4.802,3484,3.845,3485,2.406,3486,2.406,3487,2.406,3488,3.845,3489,3.845,3490,2.406,3491,2.406,3492,4.802,3493,2.406,3494,2.406,3495,2.406,3496,2.406,3497,2.406,3498,2.406,3499,2.081,3500,2.406,3501,2.406,3502,2.406,3503,4.743,3504,4.802,3505,5.484,3506,3.845,3507,3.845,3508,2.406,3509,2.406,3510,2.406,3511,2.406,3512,2.406,3513,2.406,3514,2.081,3515,2.081,3516,2.406,3517,6.393,3518,3.845,3519,2.406,3520,2.406,3521,2.406,3522,2.406,3523,2.406,3524,2.406,3525,2.406,3526,2.406,3527,1.612,3528,2.406,3529,2.406,3530,3.845,3531,2.406,3532,2.406,3533,2.406,3534,2.406,3535,2.406,3536,2.406,3537,3.845,3538,4.802,3539,2.406,3540,2.406,3541,3.845,3542,2.406,3543,2.406,3544,4.802,3545,4.152,3546,4.802,3547,4.43,3548,2.406,3549,4.802,3550,4.802,3551,2.406,3552,2.406,3553,2.406,3554,2.689,3555,2.689,3556,2.689,3557,2.689,3558,2.689,3559,2.689]],["title/interfaces/JsonOntologyNode.html",[0,0.236,2859,3.501]],["body/interfaces/JsonOntologyNode.html",[0,0.423,2,1.199,3,0.051,4,0.051,5,0.051,6,0.039,8,0.68,11,0.003,12,0.357,13,0.83,15,3.127,16,1.227,17,0.006,19,0.59,20,1.732,22,4.142,23,0.08,28,2.413,51,2.848,53,0.901,65,1.807,87,1.095,99,0.004,100,0.003,150,0.193,154,2.993,183,1.071,216,3.109,219,1.477,247,1.102,473,0.943,588,3.073,621,4.539,634,2.652,640,4.407,868,4.724,1409,5.855,2713,3.96,2726,3.654,2851,7.133,2852,4.512,2853,4.512,2854,7.185,2855,7.121,2856,3.654,2857,7.276,2858,5.97,2859,5.658,2860,7.407,2861,7.407,2862,6.319,2863,7.407,2864,4.512,2865,7.407,2866,7.407,2867,5.97,2868,4.512,2869,4.512,2870,6.691,2871,4.512,2872,4.512,2873,4.512,2874,4.512,2875,5.97,2876,4.512,2877,4.512,2878,4.512,2879,4.512,2880,4.512,2881,4.512,2882,4.512,2883,4.003,2884,4.003,2885,5.97,2886,4.512,2887,4.512,2888,4.512,2889,4.512,2890,4.512,2891,3.815,2892,4.512]],["title/components/LabeledSlideToggleComponent.html",[101,0.539,370,1.364]],["body/components/LabeledSlideToggleComponent.html",[3,0.075,4,0.038,5,0.038,6,0.063,8,0.738,11,0.002,12,0.269,15,1.433,16,1.156,17,0.006,19,0.507,20,1.752,23,0.038,46,1.632,47,1.542,48,1.7,52,1.01,53,0.847,55,1.054,65,1.366,69,2.296,82,1.568,87,0.622,99,0.003,100,0.004,101,0.87,102,1.591,103,1.378,104,1.039,105,1.118,106,1.169,107,1.054,114,2.044,117,2.662,118,2.153,120,1.523,122,1.568,125,0.901,127,1.414,128,0.941,129,1.634,136,0.968,141,1.663,144,3.377,148,1.151,150,0.11,151,0.318,159,5.204,169,1.118,173,1.118,177,1.591,179,0.149,183,0.805,193,2.364,197,1.266,199,1.762,205,0.953,219,0.622,224,1.688,237,0.996,238,3.963,239,3.894,247,0.828,252,0.876,284,1.409,290,2.226,293,1.025,317,0.604,318,1.823,319,1.48,320,1.169,321,2.17,322,1.169,323,1.688,324,1.101,325,1.054,326,1.982,327,1.118,328,1.169,329,1.118,330,1.169,331,1.118,332,1.434,333,1.169,334,1.118,335,1.134,336,1.169,337,1.118,338,1.169,339,1.118,340,1.169,341,1.591,342,1.688,343,1.814,344,2.302,345,1.118,346,1.134,347,1.169,348,1.688,349,1.118,350,1.688,351,1.118,352,1.151,353,1.688,354,1.118,355,1.591,356,1.688,357,1.591,358,1.688,359,1.118,360,1.169,361,1.118,362,1.118,363,1.169,364,1.118,365,1.169,366,1.591,367,2.17,368,1.591,369,1.688,370,2.076,371,2.581,372,2.744,373,1.169,374,1.118,375,1.688,376,1.101,377,1.118,378,1.169,379,1.118,380,1.169,381,1.134,382,1.169,383,1.101,384,1.169,385,1.118,386,1.169,387,1.118,388,1.169,389,1.118,390,1.101,391,0.996,392,1.118,393,1.101,394,1.07,395,1.118,396,1.169,397,1.118,398,1.07,399,1.169,400,1.118,401,1.169,402,1.591,403,1.118,404,1.169,405,1.169,407,1.818,473,1.024,492,2.47,493,1.712,494,2.845,495,2.104,503,1.712,504,2.081,509,0.569,510,2.474,526,2.338,527,2.381,528,2.801,534,0.901,682,2.002,852,2.215,1242,4.073,1394,5.591,1403,6.179,1422,1.857,1538,3.082,1543,3.447,2077,3.006,3560,7.968,3561,6.891,3562,4.11,3563,5.936,3564,6.969,3565,5.936,3566,5.936,3567,6.683,3568,6.969,3569,4.11,3570,4.11,3571,5.312,3572,4.11,3573,4.11,3574,5.936,3575,4.11,3576,5.936,3577,4.11,3578,5.936,3579,5.936,3580,4.11,3581,4.11,3582,5.936,3583,4.11,3584,4.11,3585,4.11,3586,4.11,3587,4.11,3588,4.11]],["title/modules/LabeledSlideToggleModule.html",[409,0.737,3589,3.501]],["body/modules/LabeledSlideToggleModule.html",[3,0.067,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,23,0.067,99,0.005,100,0.004,150,0.255,151,0.561,179,0.133,204,1.999,290,1.681,317,1.065,370,2.796,371,2.029,372,2.509,409,1.065,411,2.029,412,2.029,413,2.703,414,2.059,415,2.059,416,2.703,431,2.383,432,1.858,434,2.154,435,2.53,553,2.775,554,2.292,3560,6.48,3561,5.604,3589,6.985,3590,6.48,3591,6.48,3592,6.48,3593,7.242,3594,7.725,3595,6.48,3596,7.242]],["title/components/LeftSidebarComponent.html",[101,0.539,374,1.364]],["body/components/LeftSidebarComponent.html",[3,0.079,4,0.043,5,0.043,6,0.057,11,0.002,12,0.305,13,0.746,16,0.984,17,0.006,19,0.473,20,1.22,23,0.043,47,1.618,48,1.773,49,1.793,52,1.596,53,0.883,55,1.197,62,4.027,65,1.464,87,0.707,93,1.983,99,0.003,100,0.004,101,0.803,102,1.741,103,1.508,104,1.18,105,1.269,106,1.327,107,1.197,114,2.131,117,2.677,118,2.165,120,1.667,122,1.716,125,1.024,127,1.203,128,1.068,129,1.404,136,1.099,148,1.307,150,0.174,151,0.361,169,1.269,173,1.269,177,1.741,179,0.156,184,3.12,193,2.476,199,1.643,224,1.81,237,1.13,252,1.385,268,2.89,269,2.154,270,2.555,271,1.993,272,2.558,279,3.24,281,1.691,284,3.094,285,3.651,286,2.065,290,1.735,293,1.163,297,2.423,300,2.655,305,2.154,306,2.065,317,0.686,318,1.93,319,1.619,320,1.327,321,2.298,322,1.327,323,1.847,324,1.251,325,1.197,326,2.125,327,1.269,328,1.327,329,1.269,330,1.327,331,1.269,332,1.518,333,1.327,334,1.269,335,1.288,336,1.327,337,1.269,338,1.327,339,1.269,340,1.327,341,1.741,342,1.847,343,1.945,344,2.415,345,1.269,346,1.288,347,1.327,348,1.847,349,1.269,350,1.847,351,1.269,352,1.307,353,1.847,354,1.269,355,1.741,356,1.847,357,1.741,358,1.847,359,1.269,360,1.327,361,1.269,362,1.269,363,1.327,364,1.269,365,1.327,366,1.741,367,2.298,368,1.741,369,1.847,370,1.269,371,1.307,372,1.269,373,1.327,374,2.198,375,1.847,376,1.251,377,1.269,378,1.327,379,1.269,380,1.327,381,1.288,382,1.327,383,1.251,384,1.327,385,1.269,386,1.327,387,1.269,388,1.327,389,1.269,390,1.251,391,1.13,392,1.269,393,1.251,394,1.215,395,1.269,396,1.327,397,1.269,398,1.215,399,1.327,400,1.269,401,1.327,402,1.741,403,1.269,404,1.327,405,1.327,407,2.065,493,1.944,503,1.944,504,2.363,528,3.066,534,1.024,544,2.363,545,2.893,586,1.347,1572,2.253,1573,2.487,1588,3.066,1589,3.066,1601,2.202,1720,3.611,2368,4.758,2733,4.535,2766,4.176,2767,5.641,2769,4.176,2977,6.671,3263,2.629,3597,7.23,3598,7.23,3599,4.176,3600,6.687,3601,5.813,3602,7.473,3603,6.496,3604,4.176,3605,6.496,3606,4.176,3607,4.176,3608,4.176]],["title/modules/LeftSidebarModule.html",[409,0.737,3609,3.881]],["body/modules/LeftSidebarModule.html",[3,0.062,4,0.062,5,0.062,6,0.048,11,0.004,17,0.006,23,0.062,99,0.004,100,0.004,150,0.264,151,0.522,179,0.124,193,1.729,204,1.86,317,0.991,372,2.248,374,2.771,409,0.991,411,1.888,412,1.888,413,2.62,414,1.916,415,1.916,416,2.62,431,2.281,432,1.729,434,2.459,435,2.422,553,2.657,554,2.132,2389,5.563,2412,7.131,3561,5.214,3589,6.796,3597,6.03,3598,6.03,3609,7.958,3610,6.03,3611,6.03,3612,6.03,3613,6.03,3614,7.131,3615,7.131,3616,6.03,3617,6.03,3618,6.739,3619,5.214,3620,6.03,3621,6.739,3622,5.214,3623,6.739,3624,6.739,3625,6.739,3626,6.03,3627,6.03]],["title/interfaces/ListResult.html",[0,0.236,26,2.539]],["body/interfaces/ListResult.html",[0,0.431,1,2.682,2,1.074,3,0.045,4,0.045,5,0.045,6,0.035,7,3.419,8,1.075,9,3.9,10,5.114,11,0.005,12,0.32,13,0.771,14,3.419,15,3.331,16,1.573,17,0.006,18,1.646,19,0.735,20,1.262,21,3.419,22,2.261,23,0.083,24,3.323,25,4.164,26,3.881,27,3.885,28,2.476,29,3.401,30,4.689,31,5.759,32,4.026,33,2.551,34,3.956,35,5.759,36,2.006,37,5.114,38,5.759,39,5.759,40,5.516,41,5.303,42,5.126,43,5.126,44,4.928,45,5.309,46,1.742,47,1.461,48,0.987,49,1.352,50,3.785,51,1.929,52,1.204,53,0.492,54,3.275,55,1.723,56,2.76,57,3.037,58,3.275,59,4.491,60,4.164,61,4.318,62,4.164,63,4.753,64,5.126,65,1.316,66,3.678,67,4.164,68,1.828,69,1.894,70,2.682,71,2.844,72,2.76,73,2.764,74,2.936,75,4.318,76,3.149,77,3.149,78,4.164,79,4.026,80,2.844,81,3.275,82,1.294,83,2.421,84,2.936,85,3.149,86,3.275,87,1.5,88,3.419,89,2.364,90,2.936,91,3.275,92,2.364,93,2.854,94,3.037,95,3.134,96,3.037,97,2.081,98,3.275,99,0.004,100,0.003]],["title/interfaces/Message.html",[0,0.236,1902,2.012]],["body/interfaces/Message.html",[0,0.304,2,1.013,3,0.043,4,0.092,5,0.043,6,0.033,8,0.574,11,0.002,12,0.302,13,0.74,17,0.006,18,1.523,19,0.638,23,0.081,27,3.418,28,2.249,36,1.497,46,0.931,69,1.785,73,1.665,82,1.22,87,0.976,97,1.962,99,0.003,100,0.002,104,1.879,119,2.853,125,1.63,127,0.855,131,1.237,137,4.58,145,1.256,150,0.199,151,0.358,153,1.818,156,1.754,179,0.119,180,2.244,181,1.508,183,1.827,194,3.288,205,1.035,219,0.976,247,1.706,252,0.985,473,1.46,509,1.172,571,2.53,586,1.333,597,4.286,640,3.823,708,3.085,721,2.002,835,1.887,868,2.528,936,2.767,951,3.436,990,2.772,999,2.602,1037,2.043,1101,3.9,1270,3.858,1330,3.348,1737,1.818,1750,3.762,1879,3.043,1882,2.587,1885,3.652,1890,2.179,1897,1.962,1898,3.978,1902,4.118,1917,2.795,1919,2.602,1945,2.602,1962,3.633,2032,2.602,2078,3.633,2110,4.332,2117,4.717,2150,3.998,2162,1.978,2184,3.744,2298,2.528,2309,2.602,2422,2.862,2423,3.998,3067,4.821,3131,2.528,3207,2.602,3527,2.767,3628,3.573,3629,4.145,3630,3.865,3631,2.968,3632,2.968,3633,4.768,3634,4.454,3635,2.968,3636,4.145,3637,2.767,3638,2.968,3639,2.968,3640,4.145,3641,2.968,3642,2.767,3643,2.968,3644,2.968,3645,2.968,3646,4.145,3647,2.968,3648,2.968,3649,2.968,3650,2.968,3651,3.998,3652,2.968,3653,4.145,3654,2.767,3655,2.968,3656,2.968,3657,2.968,3658,2.968,3659,2.968,3660,2.968,3661,4.777,3662,2.968,3663,2.968,3664,2.968,3665,2.968,3666,2.968,3667,2.968,3668,2.968,3669,2.968]],["title/interfaces/Message-1.html",[0,0.198,253,0.908,1902,1.684]],["body/interfaces/Message-1.html",[0,0.304,2,1.013,3,0.043,4,0.092,5,0.043,6,0.033,8,0.574,11,0.002,12,0.302,13,0.74,17,0.006,18,1.523,19,0.638,23,0.081,27,3.418,28,2.249,36,1.497,46,0.931,69,1.785,73,1.665,82,1.22,87,0.976,97,1.962,99,0.003,100,0.002,104,1.879,119,2.853,125,1.63,127,0.855,131,1.237,137,4.58,145,1.256,150,0.199,151,0.358,153,1.818,156,1.754,179,0.119,180,2.244,181,1.508,183,1.827,194,3.288,205,1.035,219,0.976,247,1.706,252,0.985,473,1.46,509,1.172,571,2.53,586,1.333,597,4.286,640,3.823,708,3.085,721,2.002,835,1.887,868,2.528,936,2.767,951,3.436,990,2.772,999,2.602,1037,2.043,1101,3.9,1270,3.858,1330,3.348,1737,1.818,1750,3.762,1879,3.043,1882,2.587,1885,3.652,1890,2.179,1897,1.962,1898,3.978,1902,4.118,1917,2.795,1919,2.602,1945,2.602,1962,3.633,2032,2.602,2078,3.633,2110,4.332,2117,4.717,2150,3.998,2162,1.978,2184,3.744,2298,2.528,2309,2.602,2422,2.862,2423,3.998,3067,4.821,3131,2.528,3207,2.602,3527,2.767,3629,4.145,3630,3.865,3631,2.968,3632,2.968,3633,4.768,3634,4.454,3635,2.968,3636,4.145,3637,2.767,3638,2.968,3639,2.968,3640,4.145,3641,2.968,3642,2.767,3643,2.968,3644,2.968,3645,2.968,3646,4.145,3647,2.968,3648,2.968,3649,2.968,3650,2.968,3651,3.998,3652,2.968,3653,4.145,3654,2.767,3655,2.968,3656,2.968,3657,2.968,3658,2.968,3659,2.968,3660,2.968,3661,4.777,3662,2.968,3663,2.968,3664,2.968,3665,2.968,3666,2.968,3667,2.968,3668,2.968,3669,2.968,3670,3.573]],["title/classes/MessageChannel.html",[179,0.092,1917,2.174]],["body/classes/MessageChannel.html",[0,0.278,3,0.038,4,0.091,5,0.038,6,0.063,8,1.003,11,0.002,12,0.266,13,0.677,17,0.006,18,1.514,19,0.647,20,0.765,23,0.078,27,3.428,28,1.951,36,0.946,46,0.821,53,0.763,69,1.576,73,1.469,82,1.076,87,1.274,97,2.507,99,0.003,100,0.002,104,1.754,119,2.61,125,1.521,127,1.093,129,1.63,131,1.581,137,4.736,145,1.108,150,0.185,151,0.315,153,1.604,156,1.548,179,0.109,180,2.437,181,1.331,183,1.774,194,3.722,197,1.258,205,1.113,219,0.893,247,1.626,252,1.258,468,2.063,473,1.586,509,1.165,534,1.668,571,2.654,586,1.703,597,4.623,640,3.645,708,3.193,721,3.006,835,1.666,868,3.231,936,2.442,951,2.171,990,2.684,999,2.296,1037,1.803,1101,3.761,1270,4.367,1330,3.063,1737,1.604,1750,4.259,1879,2.784,1882,2.367,1885,3.674,1890,1.923,1897,2.507,1898,4.102,1902,4.107,1917,3.006,1919,2.296,1945,2.296,1962,3.324,2032,3.324,2078,3.324,2110,4.391,2117,4.602,2150,3.658,2162,1.81,2184,3.425,2224,3.364,2298,3.231,2309,2.296,2422,2.526,2423,3.658,3067,4.836,3131,2.231,3207,2.296,3527,3.536,3628,3.153,3629,2.619,3630,3.536,3631,2.619,3632,2.619,3633,4.546,3634,4.157,3635,2.619,3636,3.793,3637,2.442,3638,2.619,3639,3.793,3640,5.187,3641,3.793,3642,3.536,3643,3.793,3644,2.619,3645,2.619,3646,3.793,3647,3.793,3648,3.793,3649,4.887,3650,2.619,3651,4.713,3652,3.793,3653,3.793,3654,3.536,3655,3.793,3656,2.619,3657,4.887,3658,2.619,3659,2.619,3660,2.619,3661,4.458,3662,2.619,3663,2.619,3664,2.619,3665,2.619,3666,2.619,3667,2.619,3668,2.619,3669,2.619,3671,3.153,3672,5.279,3673,5.279,3674,5.279,3675,5.899,3676,4.074,3677,4.074,3678,4.074,3679,4.074,3680,4.074]],["title/classes/MessageChannel-1.html",[179,0.077,253,0.908,1917,1.819]],["body/classes/MessageChannel-1.html",[0,0.278,3,0.038,4,0.091,5,0.038,6,0.063,8,1.003,11,0.002,12,0.266,13,0.677,17,0.006,18,1.514,19,0.647,20,0.765,23,0.078,27,3.428,28,1.951,36,0.946,46,0.821,53,0.763,69,1.576,73,1.469,82,1.076,87,1.274,97,2.507,99,0.003,100,0.002,104,1.754,119,2.61,125,1.521,127,1.093,129,1.63,131,1.581,137,4.736,145,1.108,150,0.185,151,0.315,153,1.604,156,1.548,179,0.109,180,2.437,181,1.331,183,1.774,194,3.722,197,1.258,205,1.113,219,0.893,247,1.626,252,1.258,468,2.063,473,1.586,509,1.165,534,1.668,571,2.654,586,1.703,597,4.623,640,3.645,708,3.193,721,3.006,835,1.666,868,3.231,936,2.442,951,2.171,990,2.684,999,2.296,1037,1.803,1101,3.761,1270,4.367,1330,3.063,1737,1.604,1750,4.259,1879,2.784,1882,2.367,1885,3.674,1890,1.923,1897,2.507,1898,4.102,1902,4.107,1917,3.006,1919,2.296,1945,2.296,1962,3.324,2032,3.324,2078,3.324,2110,4.391,2117,4.602,2150,3.658,2162,1.81,2184,3.425,2224,3.364,2298,3.231,2309,2.296,2422,2.526,2423,3.658,3067,4.836,3131,2.231,3207,2.296,3527,3.536,3629,2.619,3630,3.536,3631,2.619,3632,2.619,3633,4.546,3634,4.157,3635,2.619,3636,3.793,3637,2.442,3638,2.619,3639,3.793,3640,5.187,3641,3.793,3642,3.536,3643,3.793,3644,2.619,3645,2.619,3646,3.793,3647,3.793,3648,3.793,3649,4.887,3650,2.619,3651,4.713,3652,3.793,3653,3.793,3654,3.536,3655,3.793,3656,2.619,3657,4.887,3658,2.619,3659,2.619,3660,2.619,3661,4.458,3662,2.619,3663,2.619,3664,2.619,3665,2.619,3666,2.619,3667,2.619,3668,2.619,3669,2.619,3670,3.153,3671,3.153,3672,5.279,3673,5.279,3674,5.279,3681,5.899,3682,4.074,3683,4.074,3684,4.074,3685,4.074,3686,4.074]],["title/injectables/MessageService.html",[1882,2.012,2162,1.538]],["body/injectables/MessageService.html",[0,0.291,3,0.04,4,0.09,5,0.04,6,0.061,8,0.894,11,0.002,12,0.284,13,0.709,17,0.006,18,1.294,19,0.626,20,0.816,23,0.08,27,3.055,28,1.845,36,1.009,46,0.876,53,0.62,69,1.68,73,1.566,82,1.148,87,1.186,97,1.846,99,0.003,100,0.002,104,1.818,119,2.734,125,1.577,127,1.144,129,1.554,131,1.165,137,4.567,145,1.182,150,0.192,151,0.336,153,1.711,156,1.65,179,0.114,180,2.365,181,2.018,183,1.802,194,3.181,197,1.317,205,1.154,219,0.935,247,1.667,252,0.927,473,1.525,509,1.225,534,1.355,571,2.692,586,1.783,597,4.408,640,4.083,708,3.032,721,1.884,835,1.776,868,2.379,912,5.1,936,3.703,951,2.316,990,2.878,999,2.448,1037,3.181,1101,3.586,1270,3.732,1330,3.732,1737,2.433,1750,3.64,1879,2.916,1882,3.318,1885,3.742,1890,3.695,1897,1.846,1898,4.032,1902,4.11,1917,3.116,1919,3.481,1945,3.481,1962,3.481,2032,2.448,2078,3.481,2110,4.248,2117,4.466,2150,3.83,2162,1.895,2163,2.316,2184,3.587,2298,2.379,2309,3.481,2422,2.694,2423,3.83,3067,4.309,3131,3.383,3207,2.448,3527,2.604,3628,3.362,3629,2.793,3630,3.703,3631,2.793,3632,2.793,3633,4.843,3634,4.958,3635,2.793,3636,3.972,3637,2.604,3638,2.793,3639,2.793,3640,3.972,3641,2.793,3642,2.604,3643,2.793,3644,2.793,3645,2.793,3646,3.972,3647,2.793,3648,2.793,3649,2.793,3650,2.793,3651,3.83,3652,2.793,3653,3.972,3654,2.604,3655,2.793,3656,2.793,3657,2.793,3658,2.793,3659,2.793,3660,2.793,3661,4.622,3662,2.793,3663,2.793,3664,2.793,3665,2.793,3666,3.972,3667,2.793,3668,3.972,3669,2.793,3671,3.362,3687,3.888,3688,6.178,3689,4.345,3690,4.345,3691,4.345]],["title/injectables/MessageService-1.html",[253,0.908,1882,1.684,2162,1.287]],["body/injectables/MessageService-1.html",[0,0.291,3,0.04,4,0.09,5,0.04,6,0.061,8,0.894,11,0.002,12,0.284,13,0.709,17,0.006,18,1.294,19,0.626,20,0.816,23,0.08,27,3.055,28,1.845,36,1.009,46,0.876,53,0.62,69,1.68,73,1.566,82,1.148,87,1.186,97,1.846,99,0.003,100,0.002,104,1.818,119,2.734,125,1.577,127,1.144,129,1.554,131,1.165,137,4.567,145,1.182,150,0.192,151,0.336,153,1.711,156,1.65,179,0.114,180,2.365,181,2.018,183,1.802,194,3.181,197,1.317,205,1.154,219,0.935,247,1.667,252,0.927,473,1.525,509,1.225,534,1.355,571,2.692,586,1.783,597,4.408,640,4.083,708,3.032,721,1.884,835,1.776,868,2.379,912,5.1,936,3.703,951,2.316,990,2.878,999,2.448,1037,3.181,1101,3.586,1270,3.732,1330,3.732,1737,2.433,1750,3.64,1879,2.916,1882,3.318,1885,3.742,1890,3.695,1897,1.846,1898,4.032,1902,4.11,1917,3.116,1919,3.481,1945,3.481,1962,3.481,2032,2.448,2078,3.481,2110,4.248,2117,4.466,2150,3.83,2162,1.895,2163,2.316,2184,3.587,2298,2.379,2309,3.481,2422,2.694,2423,3.83,3067,4.309,3131,3.383,3207,2.448,3527,2.604,3629,2.793,3630,3.703,3631,2.793,3632,2.793,3633,4.843,3634,4.958,3635,2.793,3636,3.972,3637,2.604,3638,2.793,3639,2.793,3640,3.972,3641,2.793,3642,2.604,3643,2.793,3644,2.793,3645,2.793,3646,3.972,3647,2.793,3648,2.793,3649,2.793,3650,2.793,3651,3.83,3652,2.793,3653,3.972,3654,2.604,3655,2.793,3656,2.793,3657,2.793,3658,2.793,3659,2.793,3660,2.793,3661,4.622,3662,2.793,3663,2.793,3664,2.793,3665,2.793,3666,3.972,3667,2.793,3668,3.972,3669,2.793,3670,3.362,3671,3.362,3687,3.888,3692,6.178,3693,4.345,3694,4.345,3695,4.345]],["title/interfaces/MessageServiceConfig.html",[0,0.236,3634,3.006]],["body/interfaces/MessageServiceConfig.html",[0,0.307,2,1.028,3,0.043,4,0.09,5,0.043,6,0.033,8,0.583,11,0.003,12,0.306,13,0.748,17,0.006,18,1.348,19,0.59,23,0.082,27,3.183,28,1.922,36,1.088,46,1.51,69,2.52,73,1.69,82,1.721,87,0.987,97,1.992,99,0.003,100,0.003,104,1.894,119,2.883,125,1.643,127,0.868,131,1.256,137,4.591,145,1.275,150,0.2,151,0.363,153,1.846,156,1.78,179,0.12,180,2.263,181,1.531,183,1.833,194,3.314,205,1.046,219,0.987,247,1.715,252,1,473,1.468,509,1.178,571,2.542,586,1.353,597,4.314,640,3.979,708,2.917,721,2.032,835,1.916,868,2.567,936,2.809,951,2.498,990,2.826,999,2.641,1037,2.074,1101,3.688,1270,3.889,1330,3.383,1737,1.846,1750,3.793,1879,3.075,1882,2.614,1885,3.618,1890,2.212,1897,1.992,1898,4.024,1902,4.099,1917,2.825,1919,2.641,1945,2.641,1962,3.672,2032,2.641,2078,3.672,2110,4.205,2117,4.553,2150,4.04,2162,1.999,2184,3.784,2298,2.567,2309,2.641,2422,2.906,2423,4.04,3067,4.49,3131,2.567,3207,2.641,3527,2.809,3628,3.627,3629,3.013,3630,3.906,3631,3.013,3632,3.013,3633,4.963,3634,4.852,3635,4.189,3636,5.47,3637,2.809,3638,3.013,3639,3.013,3640,4.189,3641,3.013,3642,2.809,3643,3.013,3644,3.013,3645,3.013,3646,4.189,3647,3.013,3648,3.013,3649,3.013,3650,3.013,3651,4.04,3652,3.013,3653,4.189,3654,2.809,3655,3.013,3656,3.013,3657,3.013,3658,3.013,3659,3.013,3660,3.013,3661,4.815,3662,3.013,3663,3.013,3664,3.013,3665,3.013,3666,3.013,3667,3.013,3668,3.013,3669,3.013]],["title/interfaces/MessageServiceConfig-1.html",[0,0.198,253,0.908,3634,2.516]],["body/interfaces/MessageServiceConfig-1.html",[0,0.307,2,1.028,3,0.043,4,0.09,5,0.043,6,0.033,8,0.583,11,0.003,12,0.306,13,0.748,17,0.006,18,1.348,19,0.59,23,0.082,27,3.183,28,1.922,36,1.088,46,1.51,69,2.52,73,1.69,82,1.721,87,0.987,97,1.992,99,0.003,100,0.003,104,1.894,119,2.883,125,1.643,127,0.868,131,1.256,137,4.591,145,1.275,150,0.2,151,0.363,153,1.846,156,1.78,179,0.12,180,2.263,181,1.531,183,1.833,194,3.314,205,1.046,219,0.987,247,1.715,252,1,473,1.468,509,1.178,571,2.542,586,1.353,597,4.314,640,3.979,708,2.917,721,2.032,835,1.916,868,2.567,936,2.809,951,2.498,990,2.826,999,2.641,1037,2.074,1101,3.688,1270,3.889,1330,3.383,1737,1.846,1750,3.793,1879,3.075,1882,2.614,1885,3.618,1890,2.212,1897,1.992,1898,4.024,1902,4.099,1917,2.825,1919,2.641,1945,2.641,1962,3.672,2032,2.641,2078,3.672,2110,4.205,2117,4.553,2150,4.04,2162,1.999,2184,3.784,2298,2.567,2309,2.641,2422,2.906,2423,4.04,3067,4.49,3131,2.567,3207,2.641,3527,2.809,3629,3.013,3630,3.906,3631,3.013,3632,3.013,3633,4.963,3634,4.852,3635,4.189,3636,5.47,3637,2.809,3638,3.013,3639,3.013,3640,4.189,3641,3.013,3642,2.809,3643,3.013,3644,3.013,3645,3.013,3646,4.189,3647,3.013,3648,3.013,3649,3.013,3650,3.013,3651,4.04,3652,3.013,3653,4.189,3654,2.809,3655,3.013,3656,3.013,3657,3.013,3658,3.013,3659,3.013,3660,3.013,3661,4.815,3662,3.013,3663,3.013,3664,3.013,3665,3.013,3666,3.013,3667,3.013,3668,3.013,3669,3.013,3670,3.627]],["title/components/NameInputComponent.html",[101,0.539,376,1.344]],["body/components/NameInputComponent.html",[0,0.2,3,0.076,4,0.039,5,0.039,6,0.058,8,0.756,11,0.002,12,0.278,16,1.242,17,0.006,19,0.517,20,1.456,22,1.962,23,0.056,36,0.986,47,1.563,48,1.72,49,1.173,52,1.044,53,1.02,55,1.09,65,1.392,87,0.643,99,0.003,100,0.004,101,0.882,102,1.63,103,1.412,104,1.075,105,1.156,106,1.208,107,1.09,114,2.067,117,2.666,118,2.156,120,1.56,122,1.606,125,1.334,127,1.126,128,0.973,129,1.456,136,1.001,144,3.43,148,1.191,150,0.114,151,0.329,169,1.156,173,1.156,177,1.63,179,0.151,183,1.192,193,1.56,197,1.297,199,1.538,205,0.976,219,0.643,224,1.72,236,2.341,237,1.03,261,4.565,268,1.643,281,1.106,289,2.006,290,1.412,293,1.059,305,1.962,317,0.625,318,1.851,319,1.932,320,1.208,321,2.204,322,1.208,323,1.729,324,1.139,325,1.09,326,2.019,327,1.156,328,1.208,329,1.156,330,1.208,331,1.156,332,1.456,333,1.208,334,1.156,335,1.173,336,1.208,337,1.156,338,1.208,339,1.156,340,1.208,341,1.63,342,1.729,343,1.849,344,2.332,345,1.156,346,1.173,347,1.208,348,1.729,349,1.156,350,1.729,351,1.156,352,1.191,353,1.729,354,1.156,355,1.63,356,1.729,357,1.63,358,1.729,359,1.156,360,1.208,361,1.156,362,1.156,363,1.208,364,1.156,365,1.208,366,1.63,367,2.204,368,1.63,369,1.729,370,1.156,371,1.191,372,1.156,373,1.208,374,1.156,375,1.729,376,2.078,377,1.156,378,1.208,379,1.156,380,1.208,381,1.173,382,1.208,383,1.139,384,1.208,385,1.156,386,1.208,387,1.156,388,1.208,389,1.156,390,1.139,391,1.03,392,1.156,393,1.139,394,1.106,395,1.156,396,1.208,397,1.156,398,1.106,399,1.208,400,1.156,401,1.208,402,1.63,403,1.156,404,1.208,405,1.208,407,1.88,473,0.733,485,2.967,492,2.517,493,1.771,494,3.168,495,2.156,501,4.245,502,4.957,503,1.771,504,2.152,509,1.136,510,2.534,511,5.726,512,3.079,513,3.871,517,3.288,518,2.967,519,2.967,521,3.288,526,2.395,527,2.439,528,2.87,534,0.932,543,3.288,544,2.152,545,2.635,546,2.006,852,2.269,1396,3.595,2960,4.706,2963,3.288,3263,4.001,3619,6.347,3696,6.771,3697,5.441,3698,5.441,3699,6.081,3700,6.354,3701,7.551,3702,6.008,3703,6.008,3704,4.25,3705,3.803,3706,4.25,3707,5.441,3708,4.25,3709,5.441,3710,5.441,3711,3.803]],["title/modules/NameInputModule.html",[409,0.737,3614,3.674]],["body/modules/NameInputModule.html",[3,0.067,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,23,0.067,53,0.724,99,0.005,100,0.004,150,0.261,151,0.558,179,0.133,204,1.991,290,1.674,317,1.06,376,2.754,409,1.06,411,2.02,412,2.02,413,2.698,414,2.051,415,2.051,416,2.698,431,2.377,432,1.851,434,2.146,435,2.523,552,5.954,553,2.768,554,2.282,555,6.664,556,5.581,557,5.954,3594,7.706,3595,6.454,3614,7.324,3619,5.581,3696,5.954,3712,6.454,3713,6.454,3714,6.454]],["title/interfaces/OMEZarrInfo.html",[0,0.236,1251,3.224]],["body/interfaces/OMEZarrInfo.html",[0,0.366,2,1.339,3,0.086,4,0.072,5,0.057,6,0.043,11,0.003,12,0.399,13,0.892,16,1.461,17,0.006,18,1.539,19,0.692,23,0.086,34,4.224,47,1.48,48,1.23,95,3.176,99,0.004,100,0.003,127,1.13,150,0.163,216,2.62,219,1.407,247,1.873,721,3.368,769,3.75,772,4.591,877,3.543,879,5.206,986,2.946,1230,3.016,1245,5.298,1247,3.658,1248,3.658,1249,5.194,1250,4.816,1251,5.784,1252,5.298,1253,5.494,1351,3.439,1956,4.08,2290,4.722,2839,4.26,3269,4.47,3715,4.722,3716,5.461,3717,5.461,3718,6.951,3719,7.055,3720,5.038,3721,5.038,3722,5.038,3723,7.349,3724,5.038,3725,5.038,3726,5.038,3727,5.038,3728,5.038,3729,5.038,3730,5.461,3731,7.647,3732,5.461,3733,5.038,3734,5.461,3735,5.461,3736,5.461,3737,5.461,3738,5.461,3739,5.461,3740,5.461,3741,5.038,3742,5.461,3743,5.461,3744,5.461,3745,5.461,3746,5.461,3747,5.461,3748,5.461,3749,5.461,3750,5.461,3751,5.461,3752,5.461,3753,5.461,3754,5.461]],["title/interfaces/OldRuiData.html",[0,0.236,3755,4.488]],["body/interfaces/OldRuiData.html",[0,0.232,2,1.079,3,0.046,4,0.046,5,0.046,6,0.035,8,0.612,11,0.003,12,0.322,13,0.774,15,2.881,16,1.519,17,0.006,18,1.702,19,0.728,23,0.062,27,3.512,28,1.972,29,4.527,36,2.22,52,1.889,53,0.83,87,0.745,99,0.004,100,0.003,118,1.02,150,0.132,183,1.62,216,2.273,219,1.164,236,2.615,247,1.358,253,1.662,261,4.332,272,1.938,277,2.703,278,4.062,293,1.68,391,1.632,473,1.162,488,4.526,489,4.085,490,3.657,509,0.681,606,5.543,636,2.622,693,2.755,708,2.635,798,4.062,930,2.949,962,2.606,988,5.563,1003,5.563,1071,3.435,1073,3.435,1089,3.808,1098,5.214,1101,2.133,1109,4.403,1164,6.705,1230,3.798,1398,6.03,2717,3.808,2884,3.604,3005,5.563,3172,4.704,3263,3.797,3755,7.747,3756,4.921,3757,4.921,3758,6.738,3759,5.947,3760,8.265,3761,8.265,3762,8.265,3763,8.265,3764,8.265,3765,8.265,3766,8.265,3767,8.657,3768,8.265,3769,6.699,3770,6.738,3771,6.738,3772,6.738,3773,4.403,3774,6.738,3775,4.403,3776,6.738,3777,4.921,3778,4.921,3779,4.921,3780,4.403,3781,4.062,3782,6.03,3783,4.921,3784,8.265,3785,4.921,3786,4.921,3787,8.657,3788,6.738,3789,4.921,3790,4.921,3791,4.921,3792,4.921,3793,4.921,3794,4.921,3795,4.921,3796,4.921,3797,4.921,3798,6.738,3799,6.738,3800,6.738,3801,6.738,3802,6.738,3803,6.738,3804,3.808,3805,3.808,3806,3.808,3807,4.921,3808,3.808,3809,6.738,3810,4.921,3811,3.808,3812,4.921,3813,3.808,3814,4.921,3815,3.808,3816,4.921,3817,3.808,3818,4.921,3819,3.808,3820,3.808,3821,3.808,3822,3.808,3823,3.808,3824,4.921,3825,3.808,3826,4.921,3827,3.808,3828,4.921,3829,3.808,3830,4.921,3831,3.808,3832,4.921,3833,3.808,3834,4.921,3835,3.808,3836,4.921,3837,3.808,3838,4.921,3839,3.808,3840,4.921,3841,3.808]],["title/modules/OntologyExplorationModule.html",[409,0.737,428,3.674]],["body/modules/OntologyExplorationModule.html",[3,0.064,4,0.064,5,0.064,6,0.049,11,0.004,17,0.006,23,0.064,65,1.768,99,0.004,100,0.004,150,0.257,151,0.533,179,0.127,204,1.899,317,1.012,409,1.012,411,1.927,412,1.927,413,2.016,414,1.956,415,1.956,416,2.644,428,7.508,431,2.311,432,1.765,434,2.49,435,2.453,451,4.601,553,2.691,554,2.177,3842,6.157,3843,6.157,3844,6.157,3845,7.131,3846,7.483,3847,7.131,3848,4.803,3849,6.88,3850,4.423,3851,6.157,3852,5.68,3853,6.88,3854,5.324,3855,6.157]],["title/interfaces/OntologyNode.html",[0,0.236,2713,2.746]],["body/interfaces/OntologyNode.html",[0,0.324,2,1.509,3,0.064,4,0.064,5,0.064,6,0.049,8,0.856,11,0.004,12,0.45,13,0.961,15,3.484,16,1.561,17,0.006,19,0.701,23,0.064,27,3.989,28,2.409,65,1.768,99,0.004,100,0.004,107,1.765,119,3.704,249,4.137,544,4.238,621,4.912,640,4.421,693,3.422,1394,6.132,2710,6.157,2713,4.584,2726,6.277,2862,6.132,2891,6.554,3067,5.017,3856,6.157,3857,6.911]],["title/components/OntologySearchComponent.html",[101,0.539,377,1.364]],["body/components/OntologySearchComponent.html",[3,0.065,4,0.027,5,0.027,6,0.062,8,0.922,11,0.004,12,0.3,13,0.528,15,2.24,16,1.057,17,0.006,18,0.827,19,0.584,20,1.722,22,3.975,23,0.027,28,1.179,47,1.33,48,1.494,49,1.774,52,0.719,53,0.806,55,0.751,57,2.849,65,1.796,73,2.045,87,1.057,99,0.002,100,0.005,101,0.833,102,1.231,103,1.067,104,0.74,105,0.796,106,0.832,107,0.751,114,1.795,117,2.611,118,2.114,120,1.179,122,1.214,127,0.851,128,0.67,129,1.617,136,0.689,137,3.497,144,2.033,148,0.82,150,0.215,151,0.227,153,1.152,154,1.603,156,1.112,158,2.416,169,0.796,173,0.796,177,1.231,179,0.054,180,1.388,181,2.696,183,1.368,193,1.455,194,2.843,197,0.98,198,4.111,199,0.74,205,1.356,215,2.872,216,2.5,219,0.696,224,1.374,237,0.709,239,3.578,240,2.326,247,1.143,252,1.916,253,1.603,268,1.132,271,1.971,272,1.152,273,1.649,275,1.152,279,2.459,280,1.881,281,1.929,284,2.541,285,2.563,286,2.51,290,1.067,291,3.975,293,0.73,297,1.519,299,3.295,300,3.52,303,4.955,308,3.294,309,3.106,315,2.416,317,0.43,318,1.097,319,1.145,320,0.832,321,1.827,322,0.832,323,1.306,324,0.784,325,0.751,326,1.613,327,0.796,328,0.832,329,0.796,330,0.832,331,0.796,332,1.207,333,0.832,334,0.796,335,0.808,336,0.832,337,0.796,338,0.832,339,0.796,340,0.832,341,1.231,342,1.306,343,1.477,344,1.986,345,0.796,346,0.808,347,0.832,348,1.306,349,0.796,350,1.306,351,0.796,352,0.82,353,1.306,354,0.796,355,1.231,356,1.306,357,1.231,358,1.306,359,0.796,360,0.832,361,0.796,362,0.796,363,0.832,364,0.796,365,0.832,366,1.231,367,1.827,368,1.231,369,1.306,370,0.796,371,0.82,372,0.796,373,0.832,374,0.796,375,1.306,376,0.784,377,1.748,378,0.832,379,0.796,380,0.832,381,0.808,382,0.832,383,0.784,384,0.832,385,0.796,386,0.832,387,0.796,388,0.832,389,0.796,390,0.784,391,0.709,392,0.796,393,0.784,394,0.762,395,0.796,396,0.832,397,0.796,398,0.762,399,0.832,400,0.796,401,0.832,402,1.231,403,0.796,404,0.832,405,0.832,451,5.852,473,1.384,492,2.011,494,0.987,495,2.278,507,3.208,509,0.786,527,1.843,534,1.532,546,1.381,569,1.957,586,0.845,616,3.102,621,3.578,682,1.55,835,1.878,879,2.449,911,2.954,920,6.255,937,1.957,956,1.881,960,5.627,990,1.388,1006,2.416,1243,2.589,1351,1.649,1393,3.793,1396,3.254,1403,4.707,1422,2.904,1541,2.589,1543,2.668,1569,3.721,1573,1.56,1807,2.043,1810,2.265,1854,2.849,1941,3.793,1953,2.449,1954,2.386,2248,3.793,2282,2.416,2298,2.516,2308,4.683,2408,2.619,2453,2.265,2457,2.416,2459,2.144,2468,3.793,2473,2.416,2518,3.555,2534,4.111,2623,2.416,2713,3.519,2759,2.416,2831,3.208,2856,1.957,2862,3.366,2960,7.093,2962,2.619,2963,2.265,3276,4.111,3547,3.793,3651,2.849,3848,6.11,3850,5.706,3858,2.926,3859,4.595,3860,4.111,3861,5.076,3862,5.672,3863,4.595,3864,5.672,3865,5.672,3866,8.026,3867,7.75,3868,4.595,3869,5.75,3870,4.595,3871,4.595,3872,4.595,3873,2.926,3874,5.115,3875,4.595,3876,5.672,3877,5.765,3878,2.926,3879,3.793,3880,4.595,3881,6.536,3882,2.926,3883,4.595,3884,4.595,3885,2.926,3886,4.595,3887,4.595,3888,4.595,3889,7.411,3890,2.926,3891,4.595,3892,4.595,3893,4.595,3894,2.926,3895,6.426,3896,4.595,3897,2.926,3898,4.595,3899,2.926,3900,5.672,3901,2.926,3902,4.595,3903,4.595,3904,2.926,3905,2.416,3906,2.619,3907,2.926,3908,2.619,3909,2.619,3910,2.926,3911,2.926,3912,2.926,3913,2.926,3914,2.926,3915,2.416,3916,2.926,3917,2.926,3918,2.926,3919,2.926,3920,2.926,3921,2.926,3922,2.926,3923,2.926,3924,2.926,3925,2.926,3926,2.926,3927,2.926,3928,4.595,3929,4.595,3930,4.595,3931,4.111,3932,6.426,3933,2.265,3934,2.926,3935,2.926,3936,2.926,3937,4.595,3938,2.619]],["title/modules/OntologySearchModule.html",[409,0.737,3845,3.501]],["body/modules/OntologySearchModule.html",[3,0.065,4,0.065,5,0.065,6,0.049,11,0.004,17,0.006,22,3.231,23,0.065,65,1.372,99,0.005,100,0.004,150,0.268,151,0.542,179,0.129,204,1.932,317,1.029,377,2.784,409,1.029,411,1.961,412,1.961,413,2.664,414,1.99,415,1.99,416,2.664,431,2.335,432,1.796,434,2.082,435,2.479,436,4.283,437,3.231,451,4.68,553,2.719,554,2.215,555,6.546,556,5.417,2482,6.546,2483,5.417,3845,6.938,3848,4.887,3850,4.5,3905,5.779,3906,6.264,3939,6.264,3940,6.264,3941,6.264,3942,7,3943,8.459,3944,8.459,3945,8.459,3946,7]],["title/injectables/OntologySearchService.html",[2162,1.538,3874,3.674]],["body/injectables/OntologySearchService.html",[0,0.229,3,0.029,4,0.029,5,0.029,6,0.06,8,0.989,11,0.004,12,0.563,13,0.558,15,3.326,16,1.486,17,0.006,18,1.069,19,0.628,20,0.912,23,0.071,28,2.109,36,1.378,53,0.766,57,3.011,65,1.911,73,1.751,87,1.156,99,0.003,100,0.005,107,1.853,119,3.637,128,1.359,129,1.544,131,0.842,132,2.432,137,3.407,141,1.871,150,0.234,151,0.243,153,1.238,154,3.251,156,1.194,179,0.058,180,2.017,181,1.939,183,1.848,194,2.149,197,1.036,205,1.072,212,4.01,216,2.435,219,1.328,236,0.949,237,2.088,240,4.774,247,1.604,248,2.737,249,3.772,259,1.771,473,1.556,509,0.822,534,1.674,544,1.591,546,3.152,571,2.084,586,0.907,588,1.335,621,4.707,640,3.017,708,1.077,751,3.558,823,3.345,852,2.215,869,3.011,870,1.39,879,3.848,920,6.327,951,1.675,956,5.725,960,3.122,962,1.878,963,3.011,990,2.017,1118,1.771,1243,1.771,1408,2.302,1541,1.771,1737,1.913,1748,2.302,1832,2.02,1928,3.558,2018,2.594,2149,2.594,2162,2.049,2163,1.675,2182,2.101,2183,2.101,2184,1.825,2194,4.465,2276,1.362,2283,2.432,2289,2.432,2299,3.122,2311,2.432,2518,5.168,2713,5.276,2717,2.432,2726,5.762,2755,6.786,2854,2.194,2856,2.101,2859,2.194,2883,2.302,2891,2.194,3192,2.101,3221,2.02,3263,2.737,3435,2.432,3654,1.884,3850,5.423,3857,2.594,3874,4.892,3877,2.594,3879,2.594,3881,4.594,3915,4.01,3933,3.758,3947,6.964,3948,2.594,3949,4.346,3950,4.346,3951,4.594,3952,4.857,3953,4.857,3954,4.857,3955,5.976,3956,4.857,3957,3.143,3958,5.976,3959,5.496,3960,4.857,3961,6.46,3962,4.346,3963,3.143,3964,4.346,3965,4.346,3966,8.379,3967,3.143,3968,4.346,3969,4.346,3970,5.976,3971,4.346,3972,4.346,3973,3.143,3974,3.758,3975,4.346,3976,3.143,3977,3.143,3978,4.346,3979,4.346,3980,5.976,3981,3.143,3982,4.346,3983,4.346,3984,2.432,3985,4.346,3986,2.812,3987,2.812,3988,2.812,3989,4.346,3990,2.812,3991,2.432,3992,4.662,3993,2.812,3994,2.812,3995,5.312,3996,2.194,3997,4.01,3998,2.594,3999,2.812,4000,6.46,4001,3.758,4002,3.758,4003,2.812,4004,4.346,4005,2.812,4006,2.812,4007,2.812,4008,2.812,4009,2.812,4010,2.812,4011,2.812,4012,2.812,4013,2.812,4014,2.812,4015,2.812,4016,2.812,4017,5.976,4018,2.812,4019,2.812,4020,2.812,4021,5.312,4022,5.312,4023,4.346,4024,2.812,4025,2.812,4026,4.346,4027,2.812,4028,5.312,4029,2.812,4030,2.594,4031,2.812,4032,2.812,4033,2.812,4034,2.812,4035,2.812,4036,2.812,4037,2.812,4038,2.812,4039,2.812,4040,2.812,4041,2.812,4042,2.812,4043,2.812,4044,2.812,4045,2.812,4046,4.346,4047,2.812,4048,2.812,4049,2.812,4050,2.812,4051,2.812,4052,2.812,4053,2.812,4054,2.812,4055,2.812,4056,2.812,4057,2.812,4058,2.812,4059,4.346,4060,2.812,4061,4.346,4062,4.346,4063,4.346,4064,4.346,4065,2.812,4066,2.812,4067,2.812,4068,2.812,4069,2.812,4070,2.812,4071,4.346,4072,4.346,4073,2.812,4074,2.594,4075,2.812,4076,2.812]],["title/interfaces/OntologySelection.html",[0,0.236,157,3.881]],["body/interfaces/OntologySelection.html",[0,0.354,2,1.646,3,0.07,4,0.07,5,0.07,6,0.053,11,0.004,12,0.49,13,1.012,15,3.368,16,1.511,17,0.006,19,0.682,23,0.07,28,2.479,65,1.47,99,0.005,100,0.004,150,0.201,157,6.821,621,3.621,693,3.827,2713,5.291,3856,6.713,4077,7.501,4078,9.661]],["title/components/OntologySelectionComponent.html",[101,0.539,379,1.364]],["body/components/OntologySelectionComponent.html",[3,0.073,4,0.035,5,0.035,6,0.063,8,0.831,11,0.002,12,0.25,13,0.647,16,0.853,17,0.006,19,0.636,23,0.035,24,2.442,36,1.308,47,1.498,48,1.658,49,1.555,52,0.94,53,0.79,55,0.981,65,1.989,66,4.505,73,2.031,87,0.853,99,0.003,100,0.004,101,0.988,102,1.51,103,1.712,104,0.967,105,1.04,106,1.087,107,2.43,114,1.993,117,2.652,118,2.143,120,1.445,122,1.488,125,0.839,128,0.875,129,1.64,131,1.51,134,5.743,135,4.65,136,0.9,141,1.578,148,1.071,150,0.227,151,0.296,157,5.708,158,4.65,159,5.906,169,1.04,173,1.04,177,1.51,179,0.07,180,1.701,181,1.84,182,4.126,183,1.31,193,0.981,197,1.201,199,0.967,205,0.904,219,0.579,224,1.62,232,4.359,237,2.226,238,2.925,239,4.029,240,1.936,290,1.308,293,0.953,317,0.562,318,1.345,319,1.404,320,1.087,321,2.098,322,1.087,323,1.602,324,1.025,325,0.981,326,1.901,327,1.04,328,1.087,329,1.04,330,1.087,331,1.04,332,1.386,333,1.087,334,1.04,335,1.056,336,1.087,337,1.04,338,1.087,339,1.04,340,1.087,341,1.51,342,1.602,343,1.741,344,2.236,345,1.04,346,1.056,347,1.087,348,1.602,349,1.04,350,1.602,351,1.04,352,1.071,353,1.602,354,1.04,355,1.51,356,1.602,357,1.51,358,1.602,359,1.04,360,1.087,361,1.04,362,1.04,363,1.087,364,1.04,365,1.087,366,1.51,367,2.098,368,1.51,369,1.602,370,1.04,371,1.071,372,1.04,373,1.087,374,1.04,375,1.602,376,1.025,377,1.04,378,1.087,379,2.006,380,1.087,381,2.036,382,1.087,383,1.025,384,1.087,385,1.04,386,1.087,387,1.04,388,1.087,389,1.04,390,1.025,391,0.926,392,1.04,393,1.025,394,0.996,395,1.04,396,1.087,397,1.04,398,0.996,399,1.087,400,1.04,401,1.087,402,1.51,403,1.04,404,1.087,405,1.087,451,5.957,473,0.66,492,2.37,494,2.775,495,1.997,509,0.53,526,2.218,527,2.26,534,1.236,544,2.852,571,1.104,586,1.626,608,1.805,616,2.719,621,3.971,682,1.9,721,2.442,847,3.376,852,2.102,860,2.801,911,4.299,920,5.288,990,2.02,1243,3.174,1266,4.78,1597,5.04,1598,4.359,1599,3.085,1713,3.333,2194,3.766,2276,1.658,2713,4.505,3322,4.359,3848,6.22,3850,2.459,3852,7.355,3854,2.959,3860,5.984,3874,6.637,3908,3.422,3909,3.422,3959,2.557,3992,2.67,4074,3.157,4079,3.824,4080,5.633,4081,6.687,4082,5.633,4083,6.687,4084,6.687,4085,6.687,4086,3.824,4087,5.633,4088,3.824,4089,3.824,4090,3.824,4091,5.633,4092,5.633,4093,3.824,4094,3.824,4095,5.633,4096,3.824,4097,3.824,4098,3.422,4099,3.824,4100,3.824]],["title/modules/OntologySelectionModule.html",[409,0.737,3846,3.674]],["body/modules/OntologySelectionModule.html",[3,0.065,4,0.065,5,0.065,6,0.049,11,0.004,17,0.006,23,0.065,65,1.781,99,0.005,100,0.004,150,0.258,151,0.542,179,0.129,204,1.932,317,1.029,379,2.784,409,1.029,411,1.961,412,1.961,413,2.664,414,1.99,415,1.99,416,2.664,431,2.335,432,1.796,434,2.516,435,2.479,451,4.68,553,2.719,554,2.215,3845,6.858,3846,7.47,3847,6.858,3848,4.887,3850,4.5,3851,6.264,3852,5.779,3854,5.417,3855,6.264,4101,6.264,4102,6.264,4103,7,4104,6.264,4105,7,4106,7]],["title/injectables/OntologyState.html",[2162,1.538,3959,3.353]],["body/injectables/OntologyState.html",[0,0.287,3,0.056,4,0.056,5,0.056,6,0.063,8,0.965,11,0.003,12,0.398,13,0.891,16,1.175,17,0.006,19,0.443,20,1.457,23,0.072,27,2.587,28,1.562,36,1.413,53,0.779,65,1.97,87,0.922,99,0.004,100,0.003,107,2.435,119,4.108,125,2.082,127,1.437,129,1.604,141,2.762,150,0.254,151,0.471,154,3.334,156,2.313,179,0.112,183,1.193,197,1.654,205,1.245,240,4.944,473,1.05,496,3.161,509,1.074,534,1.336,608,2.873,621,4.34,634,2.845,823,3.431,870,3.432,911,6.102,1910,4.371,2162,2.379,2163,3.245,2211,5.488,2234,4.219,2273,3.834,2274,3.009,2275,3.009,2276,2.639,2713,4.248,3951,6.606,3959,5.187,3991,4.711,3992,6.275,4001,4.711,4002,4.711,4107,5.448,4108,7.757,4109,6.941,4110,6.088,4111,8.043,4112,6.941,4113,6.088,4114,6.941,4115,6.088,4116,5.448]],["title/interfaces/OntologyStateModel.html",[0,0.236,3992,3.501]],["body/interfaces/OntologyStateModel.html",[0,0.302,2,1.408,3,0.059,4,0.059,5,0.059,6,0.045,8,0.798,11,0.003,12,0.419,13,0.921,16,1.387,17,0.006,19,0.667,23,0.074,27,3.407,28,1.646,36,1.861,53,0.644,65,1.933,99,0.004,100,0.003,107,2.244,119,4.365,125,1.759,141,2.734,150,0.257,151,0.497,154,3.514,156,2.437,179,0.118,183,1.257,205,1.03,240,5.038,496,3.331,509,0.889,606,4.971,621,4.423,634,2.353,823,4.518,870,3.548,911,5.155,1910,3.616,2162,2.46,2211,5.155,2234,3.963,2273,3.963,2274,3.171,2275,3.171,2276,2.782,2713,4.391,3951,4.965,3959,4.29,3991,4.965,3992,6.106,4001,6.205,4002,6.205,4107,5.742,4109,5.742,4111,7.175,4112,5.742,4114,5.742,4116,5.742]],["title/modules/OntologyTreeModule.html",[409,0.737,3847,3.501]],["body/modules/OntologyTreeModule.html",[3,0.066,4,0.066,5,0.066,6,0.05,11,0.004,17,0.006,23,0.066,65,1.387,99,0.005,100,0.004,150,0.266,151,0.548,179,0.13,204,1.953,317,1.04,381,2.829,409,1.04,411,1.982,412,1.982,413,2.676,414,2.012,415,2.012,416,2.676,431,2.35,432,1.816,434,2.105,435,2.495,436,4.311,437,3.266,451,4.731,553,2.737,554,2.239,2784,7.618,2785,6.331,2788,7.618,2789,6.331,3847,6.953,3848,4.94,3854,5.475,4098,6.331,4117,6.331,4118,6.331,4119,6.331,4120,7.076,4121,8.514,4122,7.076]],["title/interfaces/OrganInfo.html",[0,0.236,4123,4.14]],["body/interfaces/OrganInfo.html",[0,0.25,2,1.162,3,0.049,4,0.049,5,0.049,6,0.037,8,0.659,11,0.003,12,0.346,13,0.813,16,1.436,17,0.006,18,0.954,19,0.516,23,0.066,24,2.297,32,3.176,33,3.544,34,3.011,46,1.068,52,2.448,53,1.028,56,2.986,82,2.108,99,0.004,100,0.003,101,0.762,117,1.818,118,1.099,120,1.36,122,1.4,144,3.135,145,2.318,150,0.142,151,0.41,179,0.098,183,1.67,193,1.818,199,2.019,205,1.137,219,0.802,238,4.144,239,4.218,240,2.683,247,1.609,252,1.511,269,2.446,293,1.321,319,1.321,383,1.42,473,0.914,492,2.511,495,2.511,499,2.986,509,0.734,512,3.587,641,2.824,682,2.692,963,3.285,1180,3.543,1186,3.7,1501,8.324,1543,4.634,1785,7.071,1910,2.986,1954,3.679,1987,3.882,2291,3.7,2348,4.393,2361,4.375,2364,4.375,2366,4.101,2368,3.882,2371,4.375,2373,4.101,2378,4.375,2384,4.375,2386,4.375,2435,4.101,3255,3.7,3450,4.101,3622,4.101,4123,7.331,4124,4.375,4125,4.742,4126,8.177,4127,4.742,4128,4.742,4129,4.742,4130,4.742,4131,6.34,4132,4.742,4133,4.742,4134,4.742,4135,4.742,4136,4.742,4137,4.742,4138,4.742,4139,4.742,4140,4.742,4141,4.742,4142,4.742,4143,4.742,4144,4.742,4145,4.742,4146,4.742,4147,4.742,4148,4.742,4149,4.742,4150,4.742,4151,4.742,4152,4.742,4153,4.742,4154,7.625,4155,4.375,4156,4.742,4157,6.34,4158,6.34,4159,4.742,4160,4.742,4161,8.177,4162,4.742,4163,4.742,4164,4.742,4165,4.742,4166,4.742,4167,4.742,4168,6.34,4169,6.34,4170,4.742,4171,4.375,4172,4.742]],["title/components/OrganSelectorComponent.html",[101,0.539,383,1.344]],["body/components/OrganSelectorComponent.html",[0,0.151,3,0.067,4,0.03,5,0.03,6,0.06,8,0.837,11,0.002,12,0.209,13,0.564,16,1.212,17,0.006,18,1.079,19,0.559,20,1.126,23,0.046,24,2.599,32,2.947,33,3.54,34,1.357,46,0.991,47,1.385,48,1.548,49,1.655,52,2.392,53,1.012,55,0.819,56,3.795,65,1.175,82,2.029,87,0.908,93,1.357,99,0.003,100,0.003,101,0.644,102,1.318,103,1.141,104,0.807,105,0.868,106,0.908,107,0.819,114,1.861,117,2.63,118,2.122,120,1.261,122,1.299,127,1.247,128,0.731,129,1.552,136,0.752,144,2.98,145,2.089,148,0.894,150,0.085,151,0.247,169,0.868,173,0.868,177,1.318,179,0.059,183,1.32,193,2.12,197,1.048,199,2.089,205,1.081,219,0.483,224,1.452,225,1.979,237,0.773,238,3.988,239,4.178,240,2.489,247,1.208,252,1.048,268,2.604,269,2.768,270,1.748,271,1.839,273,1.799,274,1.701,275,1.257,277,1.281,281,1.561,283,1.901,290,1.141,292,3.178,293,1.915,294,3.432,300,1.305,301,2.451,302,1.901,305,3.357,306,2.98,307,2.854,317,0.469,318,1.174,319,1.495,320,0.908,321,1.915,322,0.908,323,1.398,324,0.856,325,0.819,326,1.705,327,0.868,328,0.908,329,0.868,330,0.908,331,0.868,332,1.265,333,0.908,334,0.868,335,0.881,336,0.908,337,0.868,338,0.908,339,0.868,340,0.908,341,1.318,342,1.398,343,1.561,344,2.068,345,0.868,346,0.881,347,0.908,348,1.398,349,0.868,350,1.398,351,0.868,352,0.894,353,1.398,354,0.868,355,1.318,356,1.398,357,1.318,358,1.398,359,0.868,360,0.908,361,0.868,362,0.868,363,0.908,364,0.868,365,0.908,366,1.318,367,1.915,368,1.318,369,1.398,370,0.868,371,0.894,372,0.868,373,0.908,374,0.868,375,1.398,376,0.856,377,0.868,378,0.908,379,0.868,380,0.908,381,0.881,382,0.908,383,1.805,384,0.908,385,0.868,386,0.908,387,0.868,388,0.908,389,0.868,390,0.856,391,0.773,392,0.868,393,0.856,394,0.831,395,0.868,396,0.908,397,0.868,398,0.831,399,0.908,400,0.868,401,0.908,402,1.318,403,0.868,404,0.908,405,0.908,432,0.819,473,1.162,492,2.125,495,1.743,499,1.799,509,0.442,512,1.616,527,1.972,534,1.315,538,1.748,539,1.799,540,1.701,546,3.625,641,1.701,682,2.271,900,1.799,963,3.048,1180,3.287,1186,3.432,1501,8.116,1543,4.46,1569,1.701,1570,2.857,1785,6.697,1910,2.77,1954,3.496,1987,3.601,2017,2.229,2054,1.657,2095,2.135,2291,3.432,2348,1.979,2361,4.058,2364,4.058,2366,3.804,2368,3.601,2371,4.058,2373,3.804,2378,4.058,2384,4.058,2386,4.058,2435,3.804,2456,2.635,2470,2.338,2625,2.857,2770,4.399,2777,2.857,3153,2.857,3255,3.432,3450,3.804,3567,2.635,3622,6.558,4123,6.997,4124,6.997,4125,2.857,4126,8.677,4127,4.399,4128,4.399,4129,5.365,4130,5.365,4131,6.026,4132,5.365,4133,5.365,4134,5.365,4135,4.399,4136,4.399,4137,4.399,4138,4.399,4139,4.399,4140,4.399,4141,4.399,4142,4.399,4143,4.399,4144,4.399,4145,4.399,4146,4.399,4147,4.399,4148,4.399,4149,4.399,4150,5.365,4151,4.399,4152,4.399,4153,4.399,4154,6.507,4155,4.058,4156,4.399,4157,4.399,4158,4.399,4159,2.857,4160,2.857,4161,6.873,4162,2.857,4163,2.857,4164,2.857,4165,2.857,4166,2.857,4167,4.399,4168,4.399,4169,6.026,4170,2.857,4171,4.058,4172,4.399,4173,4.916,4174,4.916,4175,4.916,4176,3.192,4177,3.192,4178,3.192,4179,3.192,4180,3.192,4181,3.192,4182,3.192,4183,3.192,4184,4.916,4185,3.192,4186,3.192,4187,3.192,4188,3.192,4189,3.192,4190,3.192]],["title/modules/OrganSelectorModule.html",[409,0.737,3615,3.674]],["body/modules/OrganSelectorModule.html",[3,0.067,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,23,0.067,52,1.785,99,0.005,100,0.004,150,0.256,151,0.562,179,0.134,204,2.005,317,1.068,383,2.756,409,1.068,411,2.034,412,2.034,413,2.706,414,2.065,415,2.065,416,2.706,431,2.387,432,1.863,434,2.16,435,2.534,436,4.378,437,3.352,553,2.78,554,2.298,3615,7.334,3622,5.62,4124,5.995,4191,6.498,4192,6.498,4193,6.498,4194,7.262,4195,7.262]],["title/injectables/PageState.html",[2162,1.538,2767,3.501]],["body/injectables/PageState.html",[0,0.36,3,0.055,4,0.055,5,0.055,6,0.068,11,0.003,12,0.388,13,0.876,16,1.427,17,0.006,19,0.555,20,1.584,23,0.078,34,3.782,46,1.794,53,0.894,87,1.155,99,0.004,100,0.003,125,2.152,127,1.562,129,1.771,141,2.137,150,0.256,151,0.459,155,3.554,156,2.252,179,0.109,197,1.627,205,1.429,236,1.791,473,1.316,496,3.079,534,1.673,586,2.434,608,3.599,634,2.797,682,2,735,3.676,866,4.588,870,3.375,937,3.965,1351,3.341,1396,4.772,2128,3.247,2162,2.34,2163,3.16,2182,3.965,2183,3.965,2193,4.588,2194,3.965,2201,4.343,2234,4.551,2273,3.769,2274,2.93,2275,2.93,2276,2.571,2317,3.443,2733,4.139,2767,5.324,3026,6.176,3702,5.587,3703,5.587,4196,4.895,4197,5.638,4198,8.018,4199,7.782,4200,7.627,4201,7.627,4202,7.627,4203,6.296,4204,5.93,4205,6.296,4206,5.93,4207,6.296,4208,5.93,4209,6.296,4210,5.93,4211,6.296,4212,4.895,4213,4.895,4214,5.587,4215,4.588,4216,4.895,4217,4.895,4218,3.676,4219,4.895,4220,4.895,4221,4.895]],["title/interfaces/PageStateModel.html",[0,0.236,4215,3.881]],["body/interfaces/PageStateModel.html",[0,0.378,2,1.406,3,0.059,4,0.059,5,0.059,6,0.045,11,0.003,12,0.419,13,0.92,16,1.456,17,0.006,19,0.637,23,0.081,34,3.405,46,1.846,53,0.644,99,0.004,100,0.003,125,1.917,141,2.245,150,0.261,151,0.496,155,3.841,156,2.434,179,0.118,205,1.286,236,1.936,496,3.327,586,1.85,634,2.35,682,2.162,735,3.973,866,4.959,870,3.545,1351,3.611,1396,4.94,2128,3.51,2162,2.458,2182,4.285,2183,4.285,2193,4.959,2194,4.285,2201,4.694,2234,4.32,2273,3.96,2274,3.167,2275,3.167,2276,2.778,2317,3.721,2733,4.474,2767,4.474,3026,4.694,3702,5.869,3703,5.869,4196,5.291,4197,5.357,4198,8.143,4199,8.054,4203,5.291,4205,5.291,4207,5.291,4209,5.291,4211,5.291,4212,5.291,4213,5.291,4214,6.708,4215,6.2,4216,5.291,4217,5.291,4218,3.973,4219,5.291,4220,5.291,4221,5.291]],["title/interfaces/Person.html",[0,0.236,4214,3.674]],["body/interfaces/Person.html",[0,0.38,2,1.418,3,0.06,4,0.06,5,0.06,6,0.046,11,0.003,12,0.423,13,0.925,16,1.496,17,0.006,19,0.587,23,0.081,34,3.423,46,1.624,53,0.649,99,0.004,100,0.003,125,1.925,141,2.257,150,0.261,151,0.501,155,3.874,156,2.455,179,0.119,205,1.293,236,1.953,496,3.356,586,1.866,634,2.371,682,2.18,735,4.008,866,5.002,870,3.564,1351,3.642,1396,4.651,2128,3.54,2162,2.471,2182,4.322,2183,4.322,2193,5.002,2194,4.322,2201,4.735,2234,4.337,2273,3.981,2274,3.195,2275,3.195,2276,2.802,2317,3.753,2733,4.513,2767,4.513,3026,4.735,3702,6.923,3703,6.923,4196,5.336,4197,5.386,4198,7.803,4199,7.584,4203,5.336,4205,5.336,4207,5.336,4209,5.336,4211,5.336,4212,5.336,4213,5.336,4214,6.428,4215,5.002,4216,5.336,4217,5.336,4218,4.008,4219,5.336,4220,5.336,4221,5.336]],["title/classes/PictureInPictureViewer.html",[179,0.092,4222,3.881]],["body/classes/PictureInPictureViewer.html",[0,0.181,3,0.036,4,0.036,5,0.036,6,0.052,11,0.002,12,0.25,13,0.647,16,0.58,17,0.006,18,1.655,19,0.714,20,1.64,23,0.062,28,1.447,46,1.137,47,1.499,48,0.772,53,0.895,87,1.35,92,3.231,95,3.644,99,0.003,100,0.002,125,1.237,127,1.617,129,1.898,145,1.82,150,0.151,179,0.07,193,0.983,197,1.203,205,1.431,219,1.392,235,3.886,247,1.488,252,1.96,271,2.414,277,1.536,281,1.922,284,1.313,286,1.695,332,0.719,468,1.939,473,1.677,509,0.781,513,2.661,534,1.955,571,2.831,573,4.577,586,1.105,588,2.844,608,2.661,609,3.177,632,1.768,634,2.455,642,5.101,644,4.273,647,3.38,649,2.548,655,3.496,769,4.64,1222,2.805,1240,2.462,1241,2.041,1242,1.849,1243,2.158,1245,4.149,1246,3.77,1247,2.296,1248,2.296,1256,3.77,1257,2.296,1263,3.77,1264,3.77,1266,4.043,1267,3.625,1268,3.625,1269,5.059,1270,1.988,1278,5.154,1279,6.055,1282,3.937,1283,3.937,1285,3.77,1287,3.77,1288,3.937,1290,2.561,1292,3.937,1293,6.743,1294,3.937,1295,3.937,1296,3.177,1297,3.77,1304,4.149,1310,4.672,1312,2.674,1317,2.674,1327,2.674,1333,5.69,1334,5.69,1339,4.672,1342,4.475,1349,3.937,1357,2.674,1359,2.674,1360,3.937,1365,4.672,1371,2.561,1885,2.181,2317,2.224,2893,5.046,2894,5.046,2895,5.046,2896,5.046,2897,5.046,2915,3.427,2917,3.427,2926,3.427,4222,4.363,4223,6.094,4224,6.094,4225,6.094,4226,3.83,4227,10.044,4228,3.83,4229,3.83,4230,3.83,4231,3.83,4232,3.83,4233,3.83,4234,3.83,4235,3.83,4236,3.83,4237,3.83,4238,3.83,4239,3.83,4240,3.83,4241,3.83,4242,3.83,4243,3.83,4244,3.83,4245,3.83,4246,3.83,4247,3.83,4248,3.83,4249,3.83,4250,3.83,4251,3.83,4252,3.83,4253,3.83,4254,3.83,4255,3.83,4256,3.83,4257,3.83,4258,6.606,4259,6.606,4260,3.427,4261,4.655,4262,3.162,4263,5.764,4264,5.046,4265,3.427,4266,3.427,4267,3.427,4268,5.046,4269,3.427,4270,3.427,4271,5.046,4272,5.989,4273,5.989,4274,5.989,4275,3.427,4276,3.427,4277,3.427,4278,3.427,4279,3.427,4280,6.094,4281,3.427,4282,3.427]],["title/interfaces/PictureInPictureViewerProps.html",[0,0.236,4225,4.14]],["body/interfaces/PictureInPictureViewerProps.html",[0,0.276,2,1.285,3,0.054,4,0.054,5,0.054,6,0.041,11,0.003,12,0.383,13,0.869,16,0.887,17,0.006,18,1.651,19,0.551,23,0.078,28,1.941,46,1.181,47,1.442,48,1.181,95,3.093,99,0.004,100,0.003,145,2.28,150,0.202,179,0.108,193,1.503,219,1.505,247,1.786,252,2.12,271,2.571,277,2.349,281,2.182,284,2.008,286,2.591,332,1.1,509,1.048,513,3.571,588,2.489,634,3.074,642,4.535,644,4.878,769,3.653,1222,4.29,1240,3.765,1241,3.121,1242,2.827,1245,4.691,1246,3.916,1247,3.51,1248,3.51,1267,3.765,1268,5.389,1269,5.897,1279,4.535,1285,5.059,1290,3.916,1293,5.059,1297,3.916,1333,3.916,1334,3.916,1885,2.926,2317,3.401,4222,4.532,4223,4.835,4224,4.835,4225,6.92,4258,7.928,4259,7.928,4260,5.241,4261,7.314,4262,4.835,4263,7.096,4264,6.771,4265,5.241,4266,5.241,4267,5.241,4268,6.771,4269,5.241,4270,5.241,4271,6.771,4272,7.5,4273,7.5,4274,7.5,4275,5.241,4276,5.241,4277,5.241,4278,5.241,4279,5.241,4280,7.314,4281,5.241,4282,5.241]],["title/interfaces/PureImageViewerLayer.html",[0,0.236,2996,3.674]],["body/interfaces/PureImageViewerLayer.html",[0,0.277,2,1.289,3,0.054,4,0.054,5,0.054,6,0.041,11,0.003,12,0.549,13,0.871,15,3.278,16,1.522,17,0.006,18,1.835,19,0.728,23,0.082,28,2.413,33,2.232,36,1.364,46,1.929,48,1.185,82,1.552,99,0.004,100,0.003,145,1.598,150,0.157,179,0.108,180,1.775,199,1.486,219,1.148,224,1.837,227,5.868,228,4.102,239,4.239,247,1.529,248,3.311,252,1.253,253,1.271,272,2.986,298,4.153,300,2.402,332,1.868,588,2.497,682,2.832,719,4.304,835,2.402,843,4.851,1534,4.915,1543,3.412,1544,3.643,1555,5.07,1565,3.778,1568,3.929,1572,2.837,1583,4.851,1594,3.218,1600,4.547,1732,6.726,1745,6.726,1793,6.726,2995,4.851,2996,6.15,2997,7.106,2998,6.726,3000,5.258,3002,6.26,3004,5.258,3005,4.851,3020,5.258,3021,5.258,3025,4.851,3026,4.304,3027,5.258,3028,5.258,3029,5.258,3030,5.258,3031,5.258,3032,5.258,3033,5.258,3034,5.258,3035,5.258,3036,5.258,3037,5.258,3038,5.258,3039,5.258]],["title/components/ResultsBrowserComponent.html",[101,0.539,385,1.364]],["body/components/ResultsBrowserComponent.html",[1,3.538,3,0.071,4,0.033,5,0.033,6,0.062,8,0.671,11,0.005,12,0.236,13,0.619,15,1.881,16,0.817,17,0.006,19,0.608,20,1.013,23,0.033,24,3.327,26,3.886,36,1.782,46,1.087,47,1.462,48,1.73,49,1.979,52,0.887,53,0.72,55,0.926,65,1.266,68,2.013,82,2.127,87,0.546,89,2.604,93,2.292,99,0.003,100,0.005,101,0.897,102,1.446,103,1.252,104,0.913,105,0.981,106,1.026,107,0.926,112,3.952,114,1.951,117,2.644,118,2.138,120,1.384,122,1.425,127,0.668,128,0.826,129,1.612,131,2.3,133,4.609,136,2.135,141,1.511,148,1.011,150,0.144,151,0.279,152,1.873,169,0.981,173,0.981,177,1.446,179,0.066,183,0.707,193,0.926,197,1.15,199,1.634,205,0.866,213,4.454,219,0.817,224,1.565,237,0.874,238,2.801,239,2.49,247,0.727,249,2.666,252,0.769,259,3.04,268,3.228,269,2.983,270,1.976,271,1.982,273,2.033,274,1.923,275,2.544,277,1.447,279,2.339,281,1.682,284,2.215,285,3.24,286,3.882,289,1.703,290,1.252,292,1.703,293,0.9,299,2.546,302,1.395,305,1.666,312,2.413,313,3.229,315,2.979,317,0.53,318,1.288,319,1.611,320,1.026,321,2.039,322,1.026,323,1.534,324,0.967,325,0.926,326,1.837,327,0.981,328,1.026,329,0.981,330,1.026,331,0.981,332,1.347,333,1.026,334,0.981,335,0.996,336,1.026,337,0.981,338,1.026,339,0.981,340,1.026,341,1.446,342,1.534,343,1.682,344,2.182,345,0.981,346,0.996,347,1.026,348,1.534,349,0.981,350,1.534,351,0.981,352,1.011,353,1.534,354,0.981,355,1.446,356,1.534,357,1.446,358,1.534,359,0.981,360,1.026,361,0.981,362,0.981,363,1.026,364,0.981,365,1.026,366,1.446,367,2.039,368,1.446,369,1.534,370,0.981,371,1.011,372,0.981,373,1.026,374,0.981,375,1.534,376,0.967,377,0.981,378,1.026,379,0.981,380,1.026,381,0.996,382,1.026,383,0.967,384,1.026,385,1.95,386,1.026,387,0.981,388,1.026,389,0.981,390,0.967,391,0.874,392,0.981,393,0.967,394,0.939,395,0.981,396,1.026,397,0.981,398,0.939,399,1.026,400,0.981,401,1.026,402,1.446,403,0.981,404,1.026,405,1.026,458,7.058,473,0.622,489,1.783,492,2.29,494,3.059,495,2.541,509,0.5,526,2.124,527,2.164,534,0.792,537,4.154,538,1.976,539,2.033,545,3.345,546,1.703,616,3.888,665,1.504,682,1.82,847,3.234,849,3.607,1244,3.766,1392,4.454,1406,2.792,1422,1.63,1424,4.511,1425,3.766,1555,4.32,1556,4.827,1567,2.643,1739,5.252,1750,2.732,1797,2.237,1805,2.095,1837,4.454,1842,3.952,1853,3.468,1987,3.952,2215,5.334,2403,3.468,2513,3.607,2581,4.827,2680,5.548,3059,4.454,3139,4.827,3938,3.229,4155,4.454,4283,6.789,4284,3.608,4285,5.395,4286,7.17,4287,7.17,4288,5.395,4289,5.395,4290,6.461,4291,5.395,4292,6.461,4293,6.461,4294,5.395,4295,6.461,4296,7.675,4297,6.461,4298,3.608,4299,3.608,4300,3.608,4301,3.608,4302,5.395,4303,3.608,4304,5.395,4305,5.395,4306,6.461,4307,3.608,4308,8.934,4309,3.608,4310,5.395,4311,5.395,4312,3.608,4313,4.827,4314,5.395,4315,5.395,4316,5.395,4317,3.608,4318,5.395,4319,5.395,4320,6.461,4321,3.229,4322,3.229,4323,3.229]],["title/components/ResultsBrowserItemComponent.html",[101,0.539,387,1.364]],["body/components/ResultsBrowserItemComponent.html",[3,0.08,4,0.037,5,0.037,6,0.053,8,0.937,11,0.005,12,0.262,15,2.393,17,0.006,19,0.424,23,0.037,26,3.476,36,1.75,37,4.674,41,4.413,42,2.676,43,2.676,44,2.573,47,1.768,48,1.782,49,1.608,51,2.293,52,0.984,53,0.689,55,1.027,56,4.248,65,1.345,68,1.494,89,2.812,93,2.475,99,0.003,100,0.005,101,0.927,102,1.561,103,1.352,104,1.012,105,1.089,106,1.138,107,1.027,112,4.266,114,2.025,117,2.658,118,2.149,120,1.494,122,1.538,127,1.079,128,0.916,129,1.29,131,2.021,136,2.302,148,1.121,150,0.156,151,0.31,152,2.078,169,1.089,173,1.089,177,1.561,179,0.074,183,0.784,193,1.494,197,1.242,199,1.473,205,0.935,215,4.056,224,1.663,236,2.074,237,0.97,248,3.282,268,2.655,269,1.848,271,2.106,272,1.576,273,3.282,274,2.133,279,1.735,280,2.573,281,2.085,284,1.997,285,1.809,289,1.889,290,1.352,292,3.24,293,1.452,295,2.255,300,1.636,301,2.381,302,2.252,317,0.588,318,1.391,319,1.452,320,1.138,321,2.144,322,1.138,323,1.656,324,1.073,325,1.027,326,1.952,327,1.089,328,1.138,329,1.089,330,1.138,331,1.089,332,1.416,333,1.138,334,1.089,335,1.105,336,1.138,337,1.089,338,1.138,339,1.089,340,1.138,341,1.561,342,1.656,343,1.787,344,2.278,345,1.089,346,1.105,347,1.138,348,1.656,349,1.089,350,1.656,351,1.089,352,1.121,353,1.656,354,1.089,355,1.561,356,1.656,357,1.561,358,1.656,359,1.089,360,1.138,361,1.089,362,1.089,363,1.138,364,1.089,365,1.138,366,1.561,367,2.144,368,1.561,369,1.656,370,1.089,371,1.121,372,1.089,373,1.138,374,1.089,375,1.656,376,1.073,377,1.089,378,1.138,379,1.089,380,1.138,381,1.105,382,1.138,383,1.073,384,1.138,385,1.867,386,1.138,387,2.051,388,1.138,389,1.089,390,1.073,391,0.97,392,1.089,393,1.073,394,1.042,395,1.089,396,1.138,397,1.089,398,1.042,399,1.138,400,1.089,401,1.138,402,1.561,403,1.089,404,1.138,405,1.138,458,5.522,473,0.69,492,2.433,494,2.543,495,2.672,509,0.807,526,2.293,527,2.336,538,3.189,539,2.255,546,1.889,665,1.668,852,1.494,877,2.324,879,3.659,883,5.522,1279,3.491,1393,4.808,1409,3.382,1421,3.097,1422,2.631,1424,2.794,1571,2.192,1573,2.133,1585,3.582,1737,2.293,1739,4.266,1804,3.304,1810,5.312,1831,2.399,1842,5.029,1853,2.573,2017,2.794,2623,3.304,2732,4.808,2750,6.746,2771,3.582,2954,4.808,2961,3.582,2986,5.211,3078,3.304,4283,5.834,4321,3.582,4324,6.224,4325,4.003,4326,6.865,4327,5.824,4328,7.539,4329,6.865,4330,4.003,4331,6.746,4332,4.003,4333,5.824,4334,4.003,4335,5.824,4336,5.824,4337,5.824,4338,4.003,4339,5.824,4340,5.824,4341,5.824,4342,4.003,4343,4.003,4344,4.003,4345,4.003,4346,4.003,4347,4.003,4348,4.003,4349,4.003]],["title/modules/ResultsBrowserItemModule.html",[409,0.737,4350,3.674]],["body/modules/ResultsBrowserItemModule.html",[3,0.067,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,23,0.067,99,0.005,100,0.005,136,2.169,150,0.255,151,0.559,179,0.133,204,1.993,317,1.062,387,2.795,409,1.062,411,2.023,412,2.023,413,2.7,414,2.054,415,2.054,416,2.7,431,2.379,432,1.853,434,2.148,435,2.525,436,4.364,437,3.334,458,5.29,553,2.771,554,2.285,4283,5.589,4324,5.962,4350,7.326,4351,6.462,4352,6.462,4353,6.462,4354,7.222,4355,7.222]],["title/modules/ResultsBrowserModule.html",[409,0.737,429,3.674]],["body/modules/ResultsBrowserModule.html",[3,0.066,4,0.066,5,0.066,6,0.05,11,0.004,17,0.006,23,0.066,99,0.005,100,0.005,136,2.006,150,0.259,151,0.549,179,0.13,204,1.956,317,1.042,385,2.788,409,1.042,411,1.985,412,1.985,413,2.678,414,2.015,415,2.015,416,2.678,429,7.409,431,2.352,432,1.818,434,2.535,435,2.497,458,6.241,553,2.739,554,2.242,4283,5.483,4324,5.849,4350,7.216,4356,6.34,4357,6.34,4358,7.085,4359,6.34,4360,7.085,4361,7.085,4362,7.085,4363,8.521,4364,7.085]],["title/components/RightSidebarComponent.html",[101,0.539,389,1.364]],["body/components/RightSidebarComponent.html",[3,0.079,4,0.044,5,0.044,6,0.053,8,0.591,11,0.003,12,0.311,17,0.006,19,0.346,20,0.893,23,0.044,47,1.629,48,1.783,49,1.313,52,1.169,53,0.888,55,1.22,65,1.479,87,0.72,99,0.004,100,0.004,101,0.919,102,1.764,103,1.528,104,1.203,105,1.293,106,1.352,107,1.22,114,2.143,117,2.679,118,2.166,120,1.689,122,1.739,125,1.043,127,0.881,128,1.088,129,1.236,136,1.12,141,1.844,148,1.332,150,0.176,151,0.368,169,1.293,173,1.293,177,1.764,179,0.157,180,1.988,181,2.15,183,0.932,184,3.18,193,1.689,199,2.466,224,1.829,237,1.152,268,2.545,269,2.195,270,2.604,271,1.459,272,2.592,279,2.853,281,1.713,284,2.932,285,3.681,286,2.104,290,1.528,293,1.186,300,2.69,317,0.699,318,1.946,319,1.641,320,1.352,321,2.316,322,1.352,323,1.871,324,1.275,325,1.22,326,2.146,327,1.293,328,1.352,329,1.293,330,1.352,331,1.293,332,1.53,333,1.352,334,1.293,335,1.313,336,1.352,337,1.293,338,1.352,339,1.293,340,1.352,341,1.764,342,1.871,343,1.965,344,2.432,345,1.293,346,1.313,347,1.352,348,1.871,349,1.293,350,1.871,351,1.293,352,1.332,353,1.871,354,1.293,355,1.764,356,1.871,357,1.764,358,1.871,359,1.293,360,1.352,361,1.293,362,1.293,363,1.352,364,1.293,365,1.352,366,1.764,367,2.316,368,1.764,369,1.871,370,1.293,371,1.332,372,1.293,373,1.352,374,1.293,375,1.871,376,1.275,377,1.293,378,1.352,379,1.293,380,1.352,381,1.313,382,1.352,383,1.275,384,1.352,385,1.293,386,1.352,387,1.293,388,1.352,389,2.216,390,1.275,391,1.152,392,1.293,393,1.275,394,1.238,395,1.293,396,1.352,397,1.293,398,2.303,399,1.352,400,1.293,401,1.352,402,1.764,403,1.293,404,1.352,405,1.352,407,2.104,493,1.982,503,1.982,504,2.408,528,3.106,534,1.043,544,2.408,545,2.948,586,1.373,990,1.988,1572,2.296,1573,2.534,1588,3.106,1589,3.106,1601,2.244,2977,7.304,3263,2.68,3599,4.255,3600,6.754,3601,5.89,3604,5.89,3606,4.255,3607,4.255,3608,4.255,4365,6.754,4366,6.754,4367,4.755,4368,5.687,4369,4.755]],["title/modules/RightSidebarModule.html",[409,0.737,4370,3.881]],["body/modules/RightSidebarModule.html",[3,0.064,4,0.064,5,0.064,6,0.048,11,0.004,17,0.006,23,0.064,99,0.004,100,0.004,150,0.261,151,0.532,179,0.126,199,1.738,204,1.897,293,2.085,317,1.01,389,2.778,409,1.01,411,1.925,412,1.925,413,2.642,414,1.954,415,1.954,416,2.642,431,2.309,432,1.763,434,2.488,435,2.451,456,5.317,484,5.317,548,7.165,553,2.689,554,2.174,3616,6.149,3617,6.149,3620,7.485,4365,6.149,4366,6.149,4370,7.93,4371,6.149,4372,6.149,4373,6.149,4374,6.149,4375,7.165,4376,7.165,4377,6.871,4378,6.871,4379,5.317,4380,6.871,4381,5.317]],["title/interfaces/Rotation.html",[0,0.236,391,1.215]],["body/interfaces/Rotation.html",[0,0.28,2,1.302,3,0.055,4,0.055,5,0.055,6,0.042,8,0.738,11,0.003,12,0.388,13,0.876,16,1.156,17,0.006,18,1.781,19,0.671,20,1.825,23,0.071,53,0.596,68,2.215,99,0.004,100,0.003,101,0.99,117,1.523,118,1.582,120,1.523,122,1.568,125,1.674,127,1.099,144,2.627,146,3.68,150,0.159,151,0.46,179,0.14,183,1.496,204,1.639,205,1.225,216,2.574,219,0.899,235,3.447,236,1.793,252,1.899,318,1.418,390,1.591,391,2.439,488,5.252,489,4.739,490,4.243,492,2.705,493,2.474,494,3.004,495,2.99,503,2.474,504,3.006,505,3.515,509,1.233,712,3.816,846,4.144,847,3.558,1242,4.69,1400,4.348,1405,3.447,1560,4.901,1713,2.682,1720,6.528,1750,3.006,1751,3.449,2291,4.144,2403,3.816,2488,4.901,2490,4.901,2491,4.901,3060,4.594,3286,4.901,3322,4.594,4379,4.594,4382,4.901,4383,6.83,4384,7.549,4385,4.901,4386,4.901,4387,5.312,4388,5.312,4389,6.83,4390,8.243,4391,5.312,4392,7.549,4393,6.83,4394,5.312,4395,4.348,4396,5.312]],["title/components/RotationSliderComponent.html",[101,0.539,390,1.344]],["body/components/RotationSliderComponent.html",[0,0.171,3,0.071,4,0.034,5,0.034,6,0.057,8,0.673,11,0.002,12,0.237,16,1.221,17,0.006,18,1.452,19,0.472,20,1.68,23,0.05,29,2.74,47,1.465,48,1.626,49,1.494,52,0.89,53,0.81,55,0.93,65,1.269,68,2.02,75,2.329,87,0.549,93,2.3,99,0.003,100,0.003,101,0.944,102,1.45,103,1.256,104,0.916,105,0.985,106,1.03,107,0.93,113,2.329,114,1.954,117,2.645,118,2.14,120,1.389,122,1.429,125,1.187,127,1.2,128,0.829,129,1.444,136,0.853,144,2.394,146,3.355,148,1.015,150,0.097,151,0.281,169,0.985,173,0.985,177,1.45,179,0.141,183,1.061,193,1.662,197,1.154,199,1.369,204,1.788,205,1.153,216,2.423,219,0.549,224,1.569,225,2.246,235,3.142,236,1.635,237,0.878,252,1.64,253,1.401,268,2.505,271,2.358,272,2.131,275,1.427,276,2.423,280,2.329,281,2.002,282,3.761,283,1.401,285,2.445,286,1.603,289,3.391,290,1.256,292,1.71,293,0.903,297,2.81,299,3.391,300,2.648,301,2.648,302,2.505,303,2.423,305,2.99,306,2.866,307,2.104,314,5.56,317,0.533,318,1.716,319,1.349,320,1.03,321,2.043,322,1.03,323,1.539,324,0.971,325,1.662,326,1.842,327,0.985,328,1.03,329,0.985,330,1.03,331,0.985,332,1.35,333,1.03,334,0.985,335,1,336,1.03,337,0.985,338,1.03,339,0.985,340,1.03,341,1.45,342,1.539,343,1.686,344,2.186,345,0.985,346,1,347,1.03,348,1.539,349,0.985,350,1.539,351,0.985,352,1.015,353,1.539,354,0.985,355,1.45,356,1.539,357,1.45,358,1.539,359,0.985,360,1.03,361,0.985,362,0.985,363,1.03,364,0.985,365,1.03,366,1.45,367,2.043,368,1.45,369,1.539,370,0.985,371,1.015,372,0.985,373,1.03,374,0.985,375,1.539,376,0.971,377,0.985,378,1.03,379,0.985,380,1.03,381,1,382,1.03,383,0.971,384,1.03,385,0.985,386,1.03,387,0.985,388,1.03,389,0.985,390,1.926,391,2.408,392,0.985,393,0.971,394,0.943,395,0.985,396,1.03,397,0.985,398,0.943,399,1.03,400,0.985,401,1.03,402,1.45,403,0.985,404,1.03,405,1.03,407,1.603,473,0.933,488,4.21,489,3.8,490,3.402,492,2.296,493,1.51,494,2.721,495,2.547,503,1.51,504,1.835,505,2.255,509,1.157,526,2.131,527,2.171,528,2.554,534,0.795,536,3.964,537,2.329,538,1.984,539,2.042,540,1.931,541,2.804,546,1.71,547,2.654,712,3.479,846,3.778,847,3.244,1242,4.486,1400,3.964,1405,3.142,1560,4.468,1569,3.452,1713,2.445,1720,5.012,1750,2.74,1751,3.246,1797,2.246,1809,4.188,2017,2.529,2054,2.81,2291,3.778,2403,3.479,2459,2.654,2488,2.991,2490,5.347,2491,4.468,2622,5.796,2963,4.188,3060,4.188,3286,4.468,3322,4.188,3931,5.796,4379,6.241,4382,6.659,4383,3.242,4384,6.429,4385,4.468,4386,4.468,4387,4.842,4388,5.796,4389,5.796,4390,7.86,4391,4.842,4392,5.796,4393,4.842,4394,4.842,4395,3.964,4396,6.429,4397,5.412,4398,3.623,4399,3.623,4400,3.623,4401,3.623,4402,3.623,4403,5.412,4404,5.412,4405,5.412,4406,3.623,4407,3.623,4408,5.412,4409,3.623,4410,5.412,4411,3.623,4412,3.623]],["title/modules/RotationSliderModule.html",[409,0.737,4375,3.674]],["body/modules/RotationSliderModule.html",[3,0.067,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,23,0.067,99,0.005,100,0.004,150,0.256,151,0.562,179,0.134,204,2.005,317,1.068,390,2.756,391,1.759,409,1.068,411,2.034,412,2.034,413,2.706,414,2.065,415,2.065,416,2.706,431,2.387,432,1.863,434,2.16,435,2.534,436,4.378,437,3.352,553,2.78,554,2.298,2630,6.498,2633,6.498,4375,7.334,4379,5.62,4382,5.995,4413,6.498,4414,6.498,4415,6.498]],["title/components/SchemeDropdownComponent.html",[101,0.539,392,1.364]],["body/components/SchemeDropdownComponent.html",[3,0.072,4,0.034,5,0.034,6,0.059,8,0.456,11,0.002,12,0.505,13,0.626,15,2.693,17,0.006,18,1.301,19,0.59,20,1.225,22,3.566,23,0.034,47,1.472,48,1.633,49,1.994,52,0.9,53,0.725,55,0.94,65,1.278,69,2.794,86,3.649,87,0.555,99,0.003,100,0.003,101,0.701,102,1.463,103,1.267,104,0.927,105,0.996,106,1.042,107,0.94,114,1.962,117,2.646,118,2.138,120,1.4,122,1.441,127,1.208,128,0.839,129,1.521,136,0.863,144,3.197,148,1.026,150,0.146,151,0.284,169,0.996,173,0.996,177,1.463,179,0.067,193,1.4,197,1.164,199,1.38,205,1.16,224,2.423,237,0.888,238,3.751,239,3.739,252,1.391,268,3.244,269,1.691,270,2.006,271,2.484,275,2.568,277,1.47,279,2.366,281,2.334,283,2.521,284,1.871,286,1.621,289,1.729,290,1.267,291,4.458,293,0.913,295,3.075,296,1.621,297,1.902,299,2.575,300,3.311,301,1.498,302,1.417,306,1.621,307,3.168,308,3.786,309,3.571,311,3.025,317,0.539,318,1.303,319,1.36,320,1.042,321,2.054,322,1.042,323,1.552,324,0.982,325,0.94,326,1.854,327,0.996,328,1.042,329,0.996,330,1.042,331,0.996,332,1.521,333,1.042,334,0.996,335,1.011,336,1.042,337,0.996,338,1.042,339,0.996,340,1.042,341,1.463,342,1.552,343,1.697,344,2.196,345,0.996,346,1.011,347,1.042,348,1.552,349,0.996,350,1.552,351,0.996,352,1.026,353,1.552,354,0.996,355,1.936,356,1.552,357,1.463,358,1.552,359,0.996,360,1.042,361,0.996,362,0.996,363,1.042,364,0.996,365,1.042,366,1.463,367,2.054,368,1.463,369,1.552,370,0.996,371,1.026,372,0.996,373,1.042,374,0.996,375,1.552,376,0.982,377,0.996,378,1.042,379,0.996,380,1.042,381,1.011,382,1.042,383,0.982,384,1.042,385,0.996,386,1.042,387,0.996,388,1.042,389,0.996,390,0.982,391,0.888,392,1.965,393,0.982,394,0.954,395,0.996,396,1.042,397,0.996,398,0.954,399,1.042,400,0.996,401,1.042,402,1.463,403,0.996,404,1.042,405,1.042,432,1.4,473,0.941,492,2.311,494,2.199,495,1.934,509,0.507,510,2.274,526,2.149,527,2.189,534,0.804,540,1.953,544,1.855,545,3.383,546,1.729,569,2.45,649,2.465,752,3.025,835,2.231,852,2.696,960,4.966,1397,3.278,1403,4.776,1422,3.981,1525,1.811,1534,4.26,1564,4.042,1566,3.278,1567,2.684,1568,4.36,1571,2.988,1572,2.634,1573,2.908,1574,2.835,1604,5.383,1712,4.36,1714,4.222,1718,4.505,1729,5.383,1742,3.809,1797,2.271,1798,2.558,1799,3.997,1800,2.684,1801,2.558,1802,2.558,1804,3.025,1805,2.127,1808,3.278,1954,1.902,2428,5.964,2429,5.835,2430,4.883,2444,3.025,2453,2.835,2463,3.025,2948,5.045,3086,6.926,3861,5.835,3869,6.465,4322,4.883,4416,7.507,4417,3.664,4418,5.457,4419,6.52,4420,5.457,4421,4.505,4422,3.664,4423,3.664,4424,3.664,4425,3.664,4426,5.457,4427,3.664,4428,5.457,4429,3.664,4430,2.835,4431,3.664,4432,3.664,4433,3.664,4434,3.664,4435,3.664,4436,3.664,4437,3.664,4438,3.664,4439,3.664,4440,3.664,4441,3.664,4442,3.664,4443,8.967,4444,5.457]],["title/modules/SchemeDropdownModule.html",[409,0.737,3083,3.674]],["body/modules/SchemeDropdownModule.html",[3,0.065,4,0.065,5,0.065,6,0.049,11,0.004,17,0.006,22,3.214,23,0.065,99,0.005,100,0.004,150,0.265,151,0.539,179,0.128,204,1.922,224,1.687,317,1.024,392,2.782,409,1.024,411,1.951,412,1.951,413,2.657,414,1.98,415,1.98,416,2.657,431,2.327,432,1.787,434,2.508,435,2.471,553,2.71,554,2.203,1525,3.441,1526,5.388,1575,6.85,1821,6.23,2482,6.524,2483,5.388,2484,6.961,2485,5.748,2486,6.23,3083,7.388,3086,5.748,4416,6.23,4430,5.388,4445,6.23,4446,6.23,4447,6.963,4448,6.23,4449,6.963,4450,7.545,4451,6.23]],["title/interfaces/SearchResult.html",[0,0.236,3881,3.881]],["body/interfaces/SearchResult.html",[0,0.306,2,0.796,3,0.034,4,0.034,5,0.034,6,0.026,8,0.451,11,0.004,12,0.594,13,0.622,15,3.206,16,1.443,17,0.006,18,1.295,19,0.609,20,0.682,23,0.075,28,2.206,36,1.505,57,2.251,65,1.854,99,0.003,100,0.005,107,1.975,119,3.701,128,1.484,131,0.973,132,2.81,137,3.061,141,1.817,150,0.243,151,0.281,153,1.43,154,3.552,156,1.379,179,0.067,180,1.959,181,2.118,183,1.89,194,1.606,205,1.041,212,2.997,216,2.596,219,1.375,236,1.097,237,1.864,240,4.79,247,1.686,248,2.046,249,3.205,259,2.046,473,1.443,509,0.898,544,1.838,546,2.558,571,1.872,588,1.543,621,4.74,640,3.25,708,1.245,751,2.66,823,3.654,852,2.42,869,2.251,870,1.606,879,3.456,920,6.261,951,2.888,956,5.189,960,2.334,962,1.404,963,3.36,990,1.637,1118,2.046,1243,3.054,1408,2.66,1541,3.054,1737,1.43,1748,2.66,1832,2.334,1928,2.66,2018,2.997,2149,2.997,2162,1.989,2182,2.428,2183,2.428,2184,2.108,2194,3.624,2276,1.574,2283,2.81,2289,2.81,2299,2.334,2311,2.81,2518,4.194,2713,5.334,2717,2.81,2726,5.397,2755,6.664,2854,2.535,2856,2.428,2859,2.535,2883,2.66,2891,2.535,3192,2.428,3221,3.484,3263,2.046,3435,2.81,3654,2.176,3850,2.334,3857,2.997,3874,3.97,3877,4.474,3879,2.997,3881,5.018,3915,2.997,3933,2.81,3947,2.997,3948,2.997,3949,3.249,3950,3.249,3951,2.81,3955,3.249,3958,4.85,3959,4.809,3961,5.803,3962,3.249,3964,3.249,3965,3.249,3966,8.127,3968,3.249,3969,3.249,3970,4.85,3971,3.249,3972,3.249,3974,2.81,3975,3.249,3978,3.249,3979,3.249,3980,4.85,3982,3.249,3983,3.249,3984,2.81,3985,4.85,3986,3.249,3987,3.249,3988,3.249,3989,4.85,3990,3.249,3991,2.81,3992,5.021,3993,3.249,3994,4.85,3995,7.223,3996,2.535,3997,4.474,3998,2.997,3999,3.249,4000,6.886,4001,4.194,4002,4.194,4003,3.249,4004,4.85,4005,3.249,4006,3.249,4007,3.249,4008,3.249,4009,3.249,4010,3.249,4011,3.249,4012,3.249,4013,3.249,4014,3.249,4015,3.249,4016,3.249,4017,6.436,4018,3.249,4019,3.249,4020,3.249,4021,5.803,4022,5.803,4023,4.85,4024,3.249,4025,3.249,4026,4.85,4027,3.249,4028,5.803,4029,3.249,4030,2.997,4031,3.249,4032,3.249,4033,3.249,4034,3.249,4035,3.249,4036,3.249,4037,3.249,4038,3.249,4039,3.249,4040,3.249,4041,3.249,4042,3.249,4043,3.249,4044,3.249,4045,3.249,4046,4.85,4047,3.249,4048,3.249,4049,3.249,4050,3.249,4051,3.249,4052,3.249,4053,3.249,4054,3.249,4055,3.249,4056,3.249,4057,3.249,4058,3.249,4059,4.85,4060,3.249,4061,4.85,4062,4.85,4063,4.85,4064,4.85,4065,3.249,4066,3.249,4067,3.249,4068,3.249,4069,3.249,4070,3.249,4071,4.85,4072,4.85,4073,3.249,4074,2.997,4075,3.249,4076,3.249]],["title/interfaces/SearchableItem.html",[0,0.236,58,3.353]],["body/interfaces/SearchableItem.html",[0,0.438,1,2.862,2,1.146,3,0.048,4,0.048,5,0.048,6,0.037,7,3.648,8,0.985,9,4.075,10,5.253,11,0.005,12,0.342,13,0.806,14,3.648,15,3.172,16,1.556,17,0.006,18,1.757,19,0.705,20,1.318,21,3.648,22,2.412,23,0.084,24,3.043,25,3.24,26,3.554,27,3.867,28,2.425,29,2.646,30,3.648,31,3.648,32,3.132,33,1.985,34,3.6,35,3.648,36,1.84,37,4.351,38,3.648,39,3.648,40,3.494,41,3.359,42,3.494,43,3.494,44,3.359,45,4.602,46,1.598,47,1.51,48,1.053,49,1.442,50,3.955,51,2.058,52,1.284,53,0.525,54,3.494,55,1.801,56,3.955,57,4.351,58,4.693,59,5.299,60,5.48,61,5.447,62,5.253,63,5.764,64,6.217,65,1.553,66,4.34,67,5.48,68,2.958,69,2.021,70,2.862,71,3.034,72,2.944,73,2.857,74,3.132,75,4.512,76,3.359,77,3.359,78,4.351,79,4.207,80,3.034,81,3.494,82,1.38,83,2.582,84,3.132,85,3.359,86,3.494,87,1.45,88,3.648,89,2.523,90,3.132,91,3.494,92,2.523,93,2.982,94,3.24,95,3.24,96,3.24,97,2.22,98,3.494,99,0.004,100,0.003]],["title/interfaces/SlicesConfig.html",[0,0.236,4452,3.224]],["body/interfaces/SlicesConfig.html",[0,0.388,2,1.238,3,0.052,4,0.052,5,0.052,6,0.04,8,0.702,11,0.003,12,0.369,13,0.848,17,0.006,18,1.73,19,0.6,23,0.081,36,1.714,49,1.557,53,0.567,99,0.004,100,0.003,109,3.773,125,1.806,137,3.885,141,2.306,150,0.242,151,0.437,155,3.382,156,2.143,179,0.104,183,1.613,205,1.322,236,1.704,252,1.756,293,2.177,325,2.386,391,2.355,394,2.274,398,1.923,482,6.061,488,4.964,489,4.48,490,4.011,496,2.929,499,4.639,505,3.077,509,1.14,510,3.431,634,2.069,823,3.179,870,3.268,1101,3.569,1885,3.184,2162,2.265,2234,4.316,2273,3.65,2274,2.788,2275,2.788,2276,2.446,3131,3.09,3633,5.24,4197,4.938,4218,5.104,4368,3.939,4452,6.249,4453,4.366,4454,6.328,4455,6.615,4456,5.715,4457,6.493,4458,4.366,4459,6.64,4460,4.366,4461,4.133,4462,4.366,4463,5.155,4464,4.366,4465,4.366,4466,4.366,4467,4.366,4468,4.366,4469,4.366]],["title/interfaces/SlicesConfig-1.html",[0,0.198,253,0.908,4452,2.698]],["body/interfaces/SlicesConfig-1.html",[0,0.397,2,1.298,3,0.055,4,0.055,5,0.055,6,0.042,8,0.736,11,0.003,12,0.387,13,0.874,16,0.896,17,0.006,18,1.748,19,0.555,20,1.582,23,0.071,29,4.503,36,2.136,46,1.193,51,2.999,53,0.765,82,1.563,99,0.004,100,0.003,101,0.905,117,1.518,118,1.579,120,1.518,122,1.563,125,1.671,127,1.096,150,0.158,151,0.458,179,0.14,183,1.493,205,1.223,219,1.153,233,2.247,247,1.193,318,1.413,319,1.475,325,2.417,393,1.586,394,2.574,473,1.021,485,4.13,487,3.546,492,2.7,493,2.465,494,3.274,495,2.7,500,4.578,501,4.13,502,4.13,503,2.465,504,2.995,505,3.925,506,3.668,507,4.13,509,1.055,510,2.465,511,5.317,512,2.995,513,3.975,514,3.956,515,3.668,518,4.13,519,4.13,523,4.578,1330,3.072,1343,3.668,3052,4.884,3642,4.565,3974,4.578,4381,4.578,4452,5.717,4454,6.424,4455,6.777,4457,6.209,4463,5.88,4470,4.884,4471,7.537,4472,5.294,4473,4.578,4474,5.294,4475,5.294,4476,5.294,4477,5.294,4478,5.294,4479,7.537,4480,7.537,4481,6.815,4482,5.294]],["title/components/SlicesInputComponent.html",[101,0.539,393,1.344]],["body/components/SlicesInputComponent.html",[0,0.265,3,0.073,4,0.035,5,0.035,6,0.06,8,0.698,11,0.002,12,0.249,16,1.01,17,0.006,18,1.201,19,0.409,20,1.596,22,1.758,23,0.052,29,3.727,36,1.972,46,1.132,47,1.496,48,1.656,49,2.032,51,1.499,52,0.936,53,0.875,55,0.977,65,1.307,82,1.483,87,0.577,93,1.618,99,0.003,100,0.004,101,0.844,102,1.505,103,1.303,104,0.963,105,1.036,106,1.083,107,0.977,113,2.448,114,1.99,117,2.652,118,2.145,120,1.441,122,1.483,125,1.232,127,1.235,128,0.871,129,1.543,136,0.897,148,1.067,150,0.102,151,0.295,169,1.036,173,1.036,177,1.505,179,0.144,183,1.1,193,0.977,197,1.197,199,1.42,205,1.182,219,0.85,224,1.616,233,2.133,237,0.922,247,0.768,253,1.214,268,2.579,271,1.168,276,2.546,281,0.991,285,1.72,289,1.797,290,1.303,291,1.758,292,1.797,293,0.949,299,1.797,301,1.556,302,1.472,305,2.592,306,2.484,317,0.56,318,1.758,319,1.835,320,1.083,321,2.093,322,1.083,323,1.596,324,1.021,325,2.179,326,1.897,327,1.036,328,1.083,329,1.036,330,1.083,331,1.036,332,1.383,333,1.083,334,1.036,335,1.051,336,1.083,337,1.036,338,1.083,339,1.036,340,1.083,341,1.505,342,1.596,343,1.736,344,2.232,345,1.036,346,1.051,347,1.083,348,1.596,349,1.036,350,1.596,351,1.036,352,1.067,353,1.596,354,1.036,355,1.505,356,1.596,357,1.505,358,1.596,359,1.036,360,1.083,361,1.036,362,1.036,363,1.083,364,1.036,365,1.083,366,1.505,367,2.093,368,1.505,369,1.596,370,1.036,371,1.067,372,1.036,373,1.083,374,1.036,375,1.596,376,1.021,377,1.036,378,1.083,379,1.036,380,1.083,381,1.051,382,1.083,383,1.021,384,1.083,385,1.036,386,1.083,387,1.036,388,1.083,389,1.036,390,1.021,391,0.922,392,1.036,393,1.973,394,2.551,395,1.036,396,1.083,397,1.036,398,0.991,399,1.083,400,1.036,401,1.083,402,1.505,403,1.036,404,1.083,405,1.083,407,1.685,473,1.354,485,2.658,487,3.365,492,2.364,493,1.587,494,3.217,495,1.99,500,4.345,501,3.92,502,4.656,503,1.587,504,1.928,505,3.825,506,3.481,507,3.92,509,0.924,510,2.34,511,5.48,512,2.843,513,3.705,514,3.754,515,3.481,518,2.658,519,2.658,523,4.345,526,2.627,527,2.252,528,2.65,534,0.835,536,4.886,537,2.448,538,2.085,539,2.146,540,2.029,541,2.946,542,3.407,543,2.946,544,1.928,545,2.361,546,1.797,547,2.789,1330,1.977,1343,3.481,1538,2.915,3052,4.635,3642,2.282,3705,3.407,3933,4.345,3974,4.345,4381,6.573,4452,5.047,4454,3.92,4455,5.93,4457,5.48,4463,4.656,4470,7.012,4471,6.587,4472,5.968,4473,4.345,4474,5.024,4475,5.968,4476,3.407,4477,5.024,4478,5.024,4479,5.968,4480,5.968,4481,5.024,4482,6.587,4483,5.615,4484,3.808,4485,3.808,4486,3.808,4487,3.808,4488,3.808,4489,3.808,4490,5.615,4491,3.808,4492,3.808,4493,3.407]],["title/modules/SlicesInputModule.html",[409,0.737,4376,3.674]],["body/modules/SlicesInputModule.html",[3,0.067,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,23,0.067,99,0.005,100,0.004,150,0.261,151,0.559,179,0.133,204,1.993,317,1.062,393,2.754,394,1.88,409,1.062,411,2.023,412,2.023,413,2.7,414,2.054,415,2.054,416,2.7,431,2.379,432,1.853,434,2.148,435,2.525,436,4.364,437,3.334,552,5.962,553,2.771,554,2.285,555,6.67,556,5.589,557,5.962,4376,7.326,4381,5.589,4470,5.962,4494,6.462,4495,6.462,4496,6.462]],["title/interfaces/SpatialEntity.html",[0,0.236,930,3.006]],["body/interfaces/SpatialEntity.html",[0,0.357,2,1.05,3,0.044,4,0.07,5,0.076,6,0.034,8,0.595,11,0.003,12,0.313,13,0.759,15,3.09,16,1.566,17,0.006,18,1.85,19,0.74,23,0.07,27,3.767,28,2.275,36,1.896,53,0.944,70,2.621,83,4.037,84,5.759,87,1.514,99,0.004,100,0.003,217,4.615,236,2.589,261,4.25,332,1.534,391,2.077,487,3.962,488,4.694,489,4.236,490,3.793,514,6.634,636,3.523,759,5.251,930,5.138,1067,6.493,1071,4.615,1073,4.615,1121,3.523,1599,2.621,3172,4.615,3221,3.077,3255,4.615,3263,3.725,3759,3.703,3769,7.499,3804,6.321,3805,6.321,3806,6.321,3808,6.321,3811,6.321,3813,6.321,3815,6.321,3817,6.321,3819,3.703,3820,3.703,3821,3.703,3822,3.703,3823,3.703,3825,3.703,3827,3.703,3829,3.703,3831,3.703,3833,3.703,3835,3.703,3837,3.703,3839,3.703,3841,3.703,4395,3.506,4497,3.951,4498,3.951,4499,5.458,4500,6.252,4501,7.077,4502,3.951,4503,3.951,4504,3.951,4505,3.951,4506,6.743,4507,6.252,4508,3.951,4509,3.951,4510,6.743]],["title/interfaces/SpatialObjectReference.html",[0,0.236,1067,3.674]],["body/interfaces/SpatialObjectReference.html",[0,0.378,2,1.171,3,0.049,4,0.074,5,0.089,6,0.038,8,0.664,11,0.003,12,0.349,13,0.817,15,2.481,16,1.56,17,0.006,18,1.817,19,0.726,23,0.074,27,3.783,28,2.349,36,2.066,53,0.954,70,2.923,83,3.959,84,5.603,87,1.078,99,0.004,100,0.003,217,3.726,236,2.42,261,3.431,332,1.003,391,2.157,487,3.199,488,4.68,489,4.223,490,3.781,514,6.634,636,3.794,759,3.431,930,5.122,962,2.064,1067,6.521,1071,4.97,1073,4.97,1121,2.844,1599,2.923,3172,3.726,3221,3.431,3255,3.726,3263,3.007,3759,5.509,3769,6.888,3804,4.13,3805,4.13,3806,4.13,3808,4.13,3811,4.13,3813,4.13,3815,4.13,3817,4.13,3819,4.13,3820,4.13,3821,4.13,3822,4.13,3823,4.13,3825,4.13,3827,4.13,3829,4.13,3831,4.13,3833,4.13,3835,4.13,3837,4.13,3839,4.13,3841,4.13,4395,3.909,4497,4.406,4498,4.406,4499,4.406,4500,5.877,4501,7.054,4502,7.054,4503,5.877,4504,7.054,4505,4.406,4506,7.054,4507,6.613,4508,4.406,4509,4.406,4510,7.054]],["title/interfaces/SpatialPlacement.html",[0,0.236,1071,3.501]],["body/interfaces/SpatialPlacement.html",[0,0.351,2,1.018,3,0.043,4,0.084,5,0.075,6,0.033,8,0.577,11,0.002,12,0.303,13,0.743,15,2.256,16,1.553,17,0.006,18,1.858,19,0.744,23,0.069,27,3.603,28,2.253,36,1.73,53,0.905,70,3.544,83,3.198,84,5.667,87,1.221,99,0.003,100,0.002,217,3.24,236,2.251,261,2.984,332,0.872,391,2.29,487,2.782,488,4.934,489,4.453,490,3.987,514,6.762,636,4.679,759,2.984,930,5.508,1067,6.432,1071,5.202,1073,5.628,1121,2.474,1599,3.544,3172,3.24,3221,4.161,3255,3.24,3263,2.615,3759,3.592,3769,6.56,3804,3.592,3805,3.592,3806,3.592,3808,3.592,3811,3.592,3813,3.592,3815,3.592,3817,3.592,3819,6.238,3820,6.238,3821,6.238,3822,6.238,3823,6.238,3825,6.238,3827,6.238,3829,6.238,3831,6.238,3833,6.238,3835,6.238,3837,6.238,3839,6.238,3841,6.238,4395,4.741,4497,3.832,4498,3.832,4499,3.832,4500,6.152,4501,7.438,4502,3.832,4503,3.832,4504,3.832,4505,5.343,4506,7.587,4507,7.249,4508,5.343,4509,6.655,4510,7.587]],["title/interfaces/SpatialSceneNode.html",[0,0.236,594,2.826]],["body/interfaces/SpatialSceneNode.html",[0,0.213,2,0.991,3,0.059,4,0.042,5,0.042,6,0.032,11,0.002,12,0.295,13,0.729,16,1.531,17,0.006,18,1.781,19,0.72,23,0.059,28,2.294,36,2.076,46,1.949,53,0.454,69,2.456,83,2.233,87,1.504,95,2.596,99,0.003,100,0.002,125,0.991,128,1.034,141,1.266,145,2.283,150,0.248,179,0.083,205,0.725,216,2.142,219,1.354,236,1.365,240,2.287,247,1.692,252,1.699,253,0.977,282,2.623,332,1.577,509,1.017,513,2.132,566,3.309,570,2.904,572,4.433,594,4.73,625,2.623,628,4.939,629,2.708,634,1.657,644,4.358,649,2.041,663,3.183,664,3.578,665,2.646,678,4.652,682,2.687,693,3.256,708,2.878,714,3.309,719,3.309,720,5.682,721,1.958,722,4.042,724,4.042,725,4.042,727,4.042,731,4.042,732,5.682,733,6.571,734,3.729,735,2.801,736,4.042,737,3.496,738,5.242,739,4.042,740,3.496,741,6.062,742,3.496,743,5.682,744,3.729,745,7.18,746,4.042,747,6.571,748,5.127,749,4.042,750,4.042,751,3.309,752,3.729,753,4.042,754,4.042,755,4.042,756,4.042,757,4.042,758,4.042,759,5.121,760,6.165,761,6.919,762,6.495,763,6.495,764,6.165,765,6.165,766,6.495,767,6.165,768,4.489,769,2.181,770,5.682,771,5.242,772,2.233,773,3.729,774,3.729,775,3.729,776,6.571,777,4.042,778,4.042,779,5.682,780,4.042,781,4.042,782,4.042,783,5.682,784,5.242,785,3.496,786,4.042,787,4.042,788,6.571,789,4.042,790,4.042,791,4.042,792,4.042,793,3.496,794,5.682,795,5.682,796,4.042,797,5.682,798,6.577,799,4.042,800,5.682,801,4.042,802,3.496,803,3.021,804,4.042,805,4.042,806,4.042,807,4.042,808,5.682,809,6.571,810,6.062,811,5.242,812,5.682,813,5.242,814,4.042,815,4.042,816,4.042,817,4.042,818,4.042,819,3.729,820,4.042,821,4.042,822,4.042,823,2.545,824,4.042,825,4.042,826,3.496,827,4.042,828,4.042,829,3.496,830,4.042,831,4.042,832,4.042]],["title/interfaces/SpatialSceneNode-1.html",[0,0.198,253,0.908,594,2.365]],["body/interfaces/SpatialSceneNode-1.html",[0,0.193,2,1.296,3,0.038,4,0.038,5,0.038,6,0.029,11,0.003,12,0.267,13,0.678,16,1.502,17,0.006,18,1.711,19,0.711,23,0.055,28,2.072,45,2.371,46,1.898,61,3.799,62,3.664,66,2.236,73,3.035,74,3.542,83,2.92,87,1.485,90,2.448,99,0.003,100,0.002,118,1.225,127,1.286,128,2.035,145,2.418,150,0.225,152,2.12,179,0.075,219,1.411,237,0.989,240,2.992,247,1.75,252,2.081,253,1.821,272,1.608,332,1.812,487,2.448,499,3.33,509,0.818,540,4.056,588,1.735,594,5.306,628,4.718,629,2.448,636,2.176,644,5.152,693,3.634,745,6.249,759,5.191,760,7.01,761,7.01,762,6.249,763,6.249,764,6.249,765,6.718,766,6.249,767,6.249,793,3.16,802,4.573,826,3.16,829,6.249,877,4.032,879,4.828,883,6.636,906,3.951,907,2.991,929,2.991,930,4.84,958,3.16,963,2.532,976,2.851,985,2.991,986,1.972,1041,4.329,1062,3.16,1079,3.372,1089,3.16,1090,3.372,1095,6.666,1097,3.372,1098,3.16,1099,3.16,1100,3.372,1118,2.301,1120,3.372,1145,3.654,1152,3.654,1154,3.654,1156,3.654,1158,3.654,1161,3.654,1162,5.288,1164,2.991,1165,7.226,1166,5.288,1167,3.654,1168,3.654,1169,3.654,1170,6.81,1171,7.226,1172,5.288,1173,5.288,1174,7.768,1175,3.654,1176,5.288,1177,3.654,1178,3.654,1179,3.654,1180,2.731,1181,3.654,1182,3.654,1183,3.654,1184,3.654,1185,3.654,1186,2.851,1187,3.654,1188,3.654,1189,5.288,1190,3.654,1191,3.654,1192,7.955,1193,5.288,1194,5.288,1195,5.288,1196,5.288,1197,5.288,1198,3.654,1199,5.288,1200,3.654,1201,5.288,1202,5.288,1203,3.654,1204,3.654,1205,3.654,1206,3.654,1207,3.654,1208,3.654,1209,3.654,1210,3.654,1211,3.654,1212,3.654,1213,7.226,1214,5.288,1215,3.654,1216,3.654,1217,3.654,1218,5.288,1219,3.654,1220,3.372,1221,3.654,1222,4.329,1223,2.532,1224,3.654,1225,3.654,1226,3.654,1227,3.654,1228,3.654,1229,3.654,1230,2.018,1231,3.654,1232,3.654,1233,3.654,1234,3.654,1235,3.654,1236,3.654,1237,3.654]],["title/components/SpinnerOverlayComponent.html",[101,0.539,395,1.364]],["body/components/SpinnerOverlayComponent.html",[3,0.078,4,0.042,5,0.042,6,0.056,8,1.044,11,0.002,12,0.415,16,0.962,17,0.006,19,0.329,20,1.193,23,0.042,47,1.599,48,1.755,49,1.247,52,1.11,53,0.737,55,1.159,65,1.439,82,1.677,87,1.206,93,1.92,99,0.003,100,0.004,101,0.902,102,1.702,103,1.474,104,1.142,105,1.229,106,1.284,107,1.159,114,2.109,117,2.673,118,2.162,120,1.629,122,1.677,125,0.991,127,1.176,128,1.034,129,1.379,136,1.064,147,5.868,148,2.758,150,0.121,151,0.35,169,1.229,173,1.229,177,1.702,179,0.154,193,1.159,199,1.142,224,1.779,237,1.094,252,1.354,253,1.373,268,2.456,269,2.085,270,2.474,271,1.386,272,2.501,274,2.407,277,1.812,279,1.958,280,4.082,281,1.176,282,5.054,283,1.747,284,1.549,286,1.999,290,1.474,291,2.931,293,1.126,299,2.132,302,2.456,305,2.085,306,2.81,307,2.623,312,3.021,317,0.664,318,1.903,319,1.583,320,1.284,321,2.265,322,1.284,323,1.806,324,1.211,325,1.159,326,2.088,327,1.229,328,1.284,329,1.229,330,1.284,331,1.229,332,1.496,333,1.284,334,1.229,335,1.247,336,1.284,337,1.229,338,1.284,339,1.229,340,1.284,341,1.702,342,1.806,343,1.912,344,2.387,345,1.229,346,1.247,347,1.284,348,1.806,349,1.229,350,1.806,351,1.229,352,1.266,353,1.806,354,1.229,355,1.702,356,1.806,357,1.702,358,1.806,359,1.229,360,1.284,361,1.229,362,1.229,363,1.284,364,1.229,365,1.284,366,1.702,367,2.265,368,1.702,369,1.806,370,1.229,371,1.266,372,1.229,373,1.284,374,1.229,375,1.806,376,1.211,377,1.229,378,1.284,379,1.229,380,1.284,381,1.247,382,1.284,383,1.211,384,1.284,385,1.229,386,1.284,387,1.229,388,1.284,389,1.229,390,1.211,391,1.094,392,1.229,393,1.211,394,1.176,395,2.167,396,1.284,397,1.229,398,1.176,399,1.284,400,1.229,401,1.284,402,1.702,403,1.229,404,1.284,405,1.284,407,1.999,432,1.629,461,6.577,490,1.999,493,1.882,494,2.477,503,1.882,526,2.501,528,2.997,546,4.379,682,2.142,1223,2.801,1241,4.245,1406,4.914,1422,2.041,1541,3.578,1584,4.246,1588,2.997,1589,2.997,1601,2.132,1805,2.623,1807,3.154,1856,5.682,1958,2.801,2054,3.297,2095,4.246,2461,4.914,4511,7.129,4512,4.517,4513,6.35,4514,7.343,4515,6.35,4516,4.517,4517,6.35,4518,4.517,4519,6.35,4520,4.517,4521,4.517,4522,4.517,4523,4.517]],["title/modules/SpinnerOverlayModule.html",[409,0.737,430,3.674]],["body/modules/SpinnerOverlayModule.html",[3,0.067,4,0.067,5,0.067,6,0.051,11,0.004,17,0.006,23,0.067,99,0.005,100,0.004,148,2.425,150,0.256,151,0.563,179,0.134,204,2.007,317,1.069,395,2.797,409,1.069,411,2.037,412,2.037,413,2.707,414,2.068,415,2.068,416,2.707,430,7.336,431,2.389,432,1.866,434,2.163,435,2.536,461,6.004,553,2.782,554,2.301,4511,6.507,4524,6.507,4525,6.507,4526,6.507,4527,7.272,4528,8.655,4529,7.272,4530,7.272]],["title/components/StageNavComponent.html",[101,0.539,397,1.364]],["body/components/StageNavComponent.html",[3,0.073,4,0.036,5,0.036,6,0.062,8,0.836,11,0.002,12,0.253,17,0.006,19,0.601,20,1.264,23,0.053,46,1.592,47,1.505,48,1.664,49,1.067,52,0.95,53,0.857,55,0.991,65,1.318,87,0.859,93,1.642,99,0.003,100,0.004,101,0.96,102,1.521,103,1.317,104,0.977,105,1.051,106,1.099,107,0.991,114,2,117,2.653,118,2.147,120,1.456,122,1.499,125,0.848,127,1.246,128,0.884,129,1.603,133,3.649,136,0.91,144,3.28,145,1.544,146,4.596,148,1.082,150,0.103,151,0.299,159,5.839,169,1.051,173,1.051,177,1.521,179,0.145,183,1.112,193,2.026,197,1.21,199,2.088,205,1.19,224,1.63,228,3.962,233,2.156,237,0.936,239,2.62,268,2.601,269,1.784,284,2.708,285,2.564,286,2.511,290,1.317,293,0.963,305,1.784,306,1.71,317,0.568,318,1.771,319,1.415,320,1.099,321,2.108,322,1.099,323,1.614,324,1.036,325,0.991,326,1.913,327,1.051,328,1.099,329,1.051,330,1.099,331,1.051,332,1.393,333,1.099,334,1.051,335,1.067,336,1.099,337,1.051,338,1.099,339,1.051,340,1.099,341,1.521,342,1.614,343,1.751,344,2.246,345,1.051,346,1.067,347,1.099,348,1.614,349,1.051,350,1.614,351,1.051,352,1.082,353,1.614,354,1.051,355,1.521,356,1.614,357,1.521,358,1.614,359,1.051,360,1.099,361,1.051,362,1.051,363,1.099,364,1.051,365,1.099,366,1.521,367,2.108,368,1.521,369,1.614,370,1.051,371,1.082,372,1.051,373,1.099,374,1.051,375,1.614,376,1.036,377,1.051,378,1.099,379,1.051,380,1.099,381,1.067,382,1.099,383,1.036,384,1.099,385,1.051,386,1.099,387,1.051,388,1.099,389,1.051,390,1.036,391,0.936,392,1.051,393,1.036,394,1.006,395,1.051,396,1.099,397,2.016,398,2.425,399,1.099,400,1.051,401,1.099,402,1.521,403,1.051,404,1.099,405,1.099,407,1.71,473,0.979,492,2.799,493,1.61,494,3.013,495,3.025,503,1.61,504,1.956,505,1.61,507,5.175,509,1.027,526,2.235,527,2.277,528,2.678,534,1.245,616,3.579,682,2.501,846,5.764,847,4.444,852,3.081,961,6.048,1242,1.865,1243,4.808,1378,3.458,1396,2.874,1422,1.746,1424,2.697,1425,3.962,1713,2.564,1739,4.157,1810,4.392,2052,6.256,2077,2.874,2139,6.774,2349,3.795,2403,4.766,2680,4.392,3060,5.737,3119,5.079,4473,2.99,4531,7.227,4532,3.458,4533,5.676,4534,7.897,4535,6.727,4536,5.676,4537,5.676,4538,5.676,4539,6.727,4540,6.727,4541,6.727,4542,7.067,4543,3.864,4544,5.676,4545,3.864,4546,5.676,4547,3.864,4548,3.864,4549,3.864,4550,5.676,4551,3.864,4552,7.414,4553,5.676,4554,3.864,4555,6.019,4556,3.864,4557,3.864,4558,3.864,4559,3.864]],["title/modules/StageNavModule.html",[409,0.737,2135,3.674]],["body/modules/StageNavModule.html",[3,0.066,4,0.066,5,0.066,6,0.05,11,0.004,17,0.006,23,0.066,99,0.005,100,0.004,150,0.259,151,0.549,179,0.131,204,1.958,317,1.043,372,2.319,397,2.789,398,1.847,409,1.043,411,1.988,412,1.988,413,2.679,414,2.017,415,2.017,416,2.679,431,2.354,432,1.82,434,2.537,435,2.499,553,2.741,554,2.245,2135,7.411,2139,5.49,3561,5.49,3589,6.88,3626,6.349,3627,6.349,4450,7.631,4451,6.349,4531,5.857,4560,6.349,4561,6.349,4562,7.095,4563,6.349,4564,7.095,4565,7.095]],["title/injectables/StageState.html",[2162,1.538,4368,3.501]],["body/injectables/StageState.html",[0,0.367,3,0.047,4,0.047,5,0.047,6,0.065,8,1.039,11,0.003,12,0.33,13,0.788,17,0.006,18,1.403,19,0.609,20,1.464,23,0.077,36,1.809,49,1.894,53,0.839,87,1.18,99,0.004,100,0.003,109,4.588,125,2.086,127,1.443,129,1.693,137,4.253,141,2.183,150,0.234,151,0.391,155,3.029,156,1.92,179,0.093,183,1.527,197,1.463,205,1.447,236,1.527,252,1.662,293,2.298,325,2.407,391,2.41,394,1.786,398,1.786,473,1.344,482,6.271,488,4.785,489,4.319,490,3.866,496,2.624,499,4.39,505,3.483,509,1.248,510,3.755,534,1.709,608,3.677,634,2.517,823,2.848,870,3.036,1101,3.378,1885,3.013,2162,2.105,2163,2.693,2234,4.556,2273,3.391,2274,2.498,2275,2.498,2276,2.191,3131,2.768,3633,5.285,4197,5.21,4218,4.831,4368,4.791,4452,6.327,4453,3.911,4454,4.791,4455,5.439,4456,3.911,4457,6.548,4458,3.911,4459,6.965,4460,3.911,4461,3.702,4462,5.31,4463,4.791,4464,5.31,4465,5.31,4466,5.31,4467,5.31,4468,5.31,4469,5.31,4566,6.862,4567,6.862,4568,6.862,4569,5.054,4570,5.054,4571,5.054,4572,5.054,4573,5.054,4574,5.054]],["title/interfaces/StageStateModel.html",[0,0.236,4461,3.674]],["body/interfaces/StageStateModel.html",[0,0.386,2,1.226,3,0.052,4,0.052,5,0.052,6,0.039,8,0.695,11,0.003,12,0.365,13,0.843,17,0.006,18,1.475,19,0.634,23,0.081,36,1.902,49,1.542,53,0.561,99,0.004,100,0.003,109,3.736,125,1.797,137,3.867,141,2.438,150,0.242,151,0.433,155,3.349,156,2.122,179,0.103,183,1.606,205,1.315,236,1.688,252,1.747,293,2.253,325,2.38,391,2.419,394,1.91,398,2.133,482,6.414,488,4.949,489,4.466,490,3.999,496,2.901,499,4.617,505,3.058,509,1.135,510,3.414,634,2.049,823,4.135,870,3.247,1101,3.552,1885,3.169,2162,2.251,2234,4.3,2273,3.627,2274,2.762,2275,2.762,2276,2.422,3131,3.06,3633,5.227,4197,4.907,4218,5.08,4368,3.901,4452,6.419,4453,4.324,4454,5.123,4455,5.72,4456,4.324,4457,6.475,4458,4.324,4459,7.107,4460,5.679,4461,5.375,4462,4.324,4463,5.123,4464,4.324,4465,4.324,4466,4.324,4467,4.324,4468,4.324,4469,4.324]],["title/components/StoreDebugComponent.html",[101,0.539,400,1.364]],["body/components/StoreDebugComponent.html",[3,0.074,4,0.037,5,0.037,6,0.061,8,0.717,11,0.002,12,0.258,13,0.662,16,0.598,17,0.006,19,0.546,20,1.614,23,0.063,24,2.501,36,2.193,47,1.518,48,1.678,49,1.091,52,0.971,53,0.885,55,1.014,65,1.335,87,0.598,90,4.988,99,0.003,100,0.004,101,0.995,102,1.546,103,1.339,104,0.999,105,1.075,106,1.124,107,1.014,114,2.016,116,2.227,117,2.656,118,2.149,119,3.315,120,1.48,122,1.524,125,0.867,127,1.262,128,0.904,129,1.563,136,0.93,141,1.616,148,1.107,150,0.182,151,0.306,153,1.556,169,1.075,173,1.075,177,1.546,179,0.147,180,1.743,181,1.884,183,1.131,193,1.014,194,2.553,197,1.23,199,0.999,205,0.926,219,1.135,224,1.651,236,1.194,237,2.44,247,1.163,249,1.953,252,0.843,290,1.339,293,0.985,317,0.581,318,1.79,319,1.438,320,1.124,321,2.131,322,1.124,323,1.64,324,1.059,325,1.48,326,1.938,327,1.075,328,1.124,329,1.075,330,1.124,331,1.075,332,1.408,333,1.124,334,1.075,335,1.091,336,1.124,337,1.075,338,1.124,339,1.075,340,1.124,341,1.546,342,1.64,343,1.774,344,2.266,345,1.075,346,1.091,347,1.124,348,1.64,349,1.075,350,1.64,351,1.075,352,1.107,353,1.64,354,1.075,355,1.546,356,1.64,357,1.546,358,1.64,359,1.075,360,1.124,361,1.075,362,1.075,363,1.124,364,1.075,365,1.124,366,1.546,367,2.131,368,1.546,369,1.64,370,1.075,371,1.107,372,1.075,373,1.124,374,1.075,375,1.64,376,1.059,377,1.075,378,1.124,379,1.075,380,1.124,381,1.091,382,1.124,383,1.059,384,1.124,385,1.075,386,1.124,387,1.075,388,1.124,389,1.075,390,1.059,391,0.957,392,1.075,393,1.059,394,1.029,395,1.075,396,1.124,397,1.075,398,1.029,399,1.124,400,2.038,401,1.124,402,1.546,403,1.075,404,1.124,405,1.124,407,1.748,473,0.995,493,1.647,503,1.647,504,2.001,505,3.122,509,0.799,513,3.761,528,2.723,534,0.867,571,2.402,586,1.14,708,1.978,835,2.358,852,2.153,1101,1.713,1296,2.227,1538,2.995,1588,2.723,1589,2.723,1601,1.865,1713,2.607,1737,2.951,1879,3.216,1888,5.328,1890,3.536,1894,4.491,1895,4.491,1906,3.577,1910,3.251,1911,4.763,1914,3.458,1932,4.225,1933,3.577,1966,2.45,1974,2.45,2019,4.226,2245,4.226,2276,1.713,2854,4.028,3545,3.058,4575,7.094,4576,7.094,4577,3.536,4578,5.769,4579,6.814,4580,5.769,4581,5.769,4582,5.769,4583,3.951,4584,3.951,4585,3.951,4586,3.951,4587,3.951,4588,6.098,4589,7.131,4590,5.163,4591,3.951,4592,3.951,4593,3.951,4594,3.951,4595,5.769,4596,3.951,4597,3.951,4598,3.951,4599,3.951,4600,3.951,4601,5.769,4602,5.769,4603,5.769]],["title/modules/StoreDebugModule.html",[409,0.737,2136,3.674]],["body/modules/StoreDebugModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,150,0.248,151,0.569,179,0.135,204,2.027,237,1.779,317,1.08,400,2.8,409,1.08,411,2.057,412,2.057,413,2.719,414,2.088,415,2.088,416,2.719,431,2.403,432,1.884,434,2.185,435,2.551,553,2.798,554,2.324,2136,7.35,4575,6.063,4576,6.063,4604,6.571,4605,6.571,4606,6.571,4607,7.344,4608,7.344]],["title/modules/StoreModule.html",[409,0.737,2145,3.674]],["body/modules/StoreModule.html",[3,0.065,4,0.065,5,0.065,6,0.05,11,0.004,17,0.006,23,0.079,33,2.677,36,1.636,99,0.005,100,0.004,150,0.268,151,0.546,167,5.929,179,0.13,182,5.162,219,1.067,237,1.707,409,1.036,411,1.974,434,2.096,435,2.489,870,3.118,1296,3.971,2138,6.306,2145,6.221,2182,4.712,2183,4.712,2201,5.162,2276,3.055,2794,5.162,2802,5.679,3125,6.221,3201,5.818,3959,5.679,4385,5.818,4609,7.047,4610,7.047,4611,6.306,4612,7.047,4613,7.047,4614,7.047,4615,7.047,4616,7.047,4617,7.047,4618,7.047,4619,7.047,4620,7.047,4621,6.306,4622,7.047,4623,7.047,4624,7.047,4625,7.047,4626,7.047,4627,7.047,4628,7.047,4629,7.047,4630,7.047]],["title/modules/ThemingModule.html",[409,0.737,2146,3.674]],["body/modules/ThemingModule.html",[3,0.069,4,0.069,5,0.069,6,0.053,11,0.004,17,0.006,23,0.069,99,0.005,100,0.004,145,2.026,150,0.235,151,0.577,164,6.662,179,0.137,204,2.056,317,1.095,409,1.095,411,2.087,412,2.087,413,2.182,414,2.118,415,2.654,416,2.182,431,2.423,432,1.911,435,2.572,465,6.149,466,6.149,2146,7.299,4631,6.665,4632,6.665,4633,7.448,4634,8.778,4635,7.448,4636,7.448,4637,7.448]],["title/injectables/ThemingService.html",[164,3.353,2162,1.538]],["body/injectables/ThemingService.html",[3,0.042,4,0.042,5,0.042,6,0.067,8,1.043,11,0.002,12,0.295,13,0.728,16,1.483,17,0.006,19,0.664,20,0.847,23,0.059,53,0.842,68,2.367,70,3.473,71,3.683,82,1.675,87,1.423,99,0.003,100,0.002,101,1.039,103,1.472,119,1.995,127,1.69,129,1.766,147,4.077,150,0.17,151,0.349,164,4.241,179,0.178,180,1.916,183,1.644,185,6.925,191,4.908,197,1.353,205,1.509,219,1.353,231,7.919,238,4.737,247,1.605,259,5.141,279,3.451,414,1.803,463,3.723,473,1.501,509,1.102,534,1.84,571,2.826,586,1.302,641,2.403,721,3.181,938,6.16,990,2.534,999,2.541,1037,3.522,1241,4.862,1405,4.871,1408,6.373,1737,2.498,1748,4.646,1910,3.574,1924,4.908,1947,3.49,1948,3.49,1956,3.015,2075,3.293,2154,3.015,2162,1.946,2163,2.403,2238,4.077,2299,4.077,2544,5.236,2567,3.49,2714,6.16,2823,3.148,3207,2.541,3630,2.703,3637,2.703,4638,4.51,4639,5.675,4640,7.997,4641,5.675,4642,7.123,4643,5.675,4644,7.123,4645,5.675,4646,4.035,4647,4.51,4648,5.675,4649,4.51,4650,5.675,4651,7.506,4652,4.51,4653,5.675,4654,8.299,4655,4.51,4656,5.675,4657,5.675,4658,4.51,4659,4.51,4660,5.675,4661,4.51,4662,4.51,4663,5.675,4664,4.51,4665,4.51,4666,4.035,4667,4.035,4668,4.035,4669,4.035,4670,4.035,4671,4.035,4672,4.035,4673,7.123,4674,5.675,4675,4.035,4676,4.035,4677,6.565,4678,4.035,4679,5.675,4680,4.035,4681,4.035,4682,4.035,4683,4.035,4684,4.035,4685,4.035,4686,4.035,4687,4.035]],["title/injectables/ThemingService-1.html",[164,2.806,253,0.908,2162,1.287]],["body/injectables/ThemingService-1.html",[3,0.042,4,0.042,5,0.042,6,0.067,8,1.043,11,0.002,12,0.295,13,0.728,16,1.483,17,0.006,19,0.664,20,0.847,23,0.059,53,0.842,68,2.367,70,3.473,71,3.683,82,1.675,87,1.423,99,0.003,100,0.002,101,1.039,103,1.472,119,1.995,127,1.69,129,1.766,147,4.077,150,0.17,151,0.349,164,4.241,179,0.178,180,1.916,183,1.644,185,6.925,191,4.908,197,1.353,205,1.509,219,1.353,231,7.919,238,4.737,247,1.605,259,5.141,279,3.451,414,1.803,463,3.723,473,1.501,509,1.102,534,1.84,571,2.826,586,1.302,641,2.403,721,3.181,938,6.16,990,2.534,999,2.541,1037,3.522,1241,4.862,1405,4.871,1408,6.373,1737,2.498,1748,4.646,1910,3.574,1924,4.908,1947,3.49,1948,3.49,1956,3.015,2075,3.293,2154,3.015,2162,1.946,2163,2.403,2238,4.077,2299,4.077,2544,5.236,2567,3.49,2714,6.16,2823,3.148,3207,2.541,3630,2.703,3637,2.703,4639,5.675,4640,7.997,4641,5.675,4642,7.123,4643,5.675,4644,7.123,4645,5.675,4646,4.035,4648,5.675,4650,5.675,4651,7.506,4653,5.675,4654,8.299,4656,5.675,4657,5.675,4660,5.675,4663,5.675,4666,4.035,4667,4.035,4668,4.035,4669,4.035,4670,4.035,4671,4.035,4672,4.035,4673,7.123,4674,5.675,4675,4.035,4676,4.035,4677,6.565,4678,4.035,4679,5.675,4680,4.035,4681,4.035,4682,4.035,4683,4.035,4684,4.035,4685,4.035,4686,4.035,4687,4.035,4688,4.51,4689,4.51,4690,4.51,4691,4.51,4692,4.51,4693,4.51,4694,4.51,4695,4.51,4696,4.51,4697,4.51,4698,4.51]],["title/interfaces/TiffInfo.html",[0,0.236,1252,3.109]],["body/interfaces/TiffInfo.html",[0,0.363,2,1.319,3,0.086,4,0.071,5,0.056,6,0.042,11,0.003,12,0.393,13,0.883,16,1.489,17,0.006,18,1.665,19,0.7,23,0.086,34,4.213,47,1.466,48,1.212,87,1.165,95,3.145,99,0.004,100,0.003,127,1.113,150,0.161,216,2.595,219,1.4,247,1.864,721,3.336,769,3.715,772,4.57,877,3.49,879,5.19,986,2.902,1230,2.971,1245,5.261,1247,3.603,1248,3.603,1249,5.145,1250,4.77,1251,5.456,1252,5.547,1253,5.456,1351,3.387,1956,4.019,2290,4.652,2839,4.197,3269,4.403,3715,4.652,3716,5.379,3717,5.379,3718,6.885,3719,7.006,3720,4.963,3721,4.963,3722,4.963,3723,7.32,3724,4.963,3725,4.963,3726,4.963,3727,4.963,3728,4.963,3729,4.963,3730,5.379,3731,8.465,3732,5.379,3733,4.963,3734,5.379,3735,5.379,3736,5.379,3737,5.379,3738,5.379,3739,5.379,3740,5.379,3741,4.963,3742,5.379,3743,5.379,3744,5.379,3745,5.379,3746,5.379,3747,5.379,3748,5.379,3749,5.379,3750,5.379,3751,5.379,3752,5.379,3753,5.379,3754,5.379]],["title/components/ToggleButtonComponent.html",[101,0.539,402,1.344]],["body/components/ToggleButtonComponent.html",[3,0.069,4,0.031,5,0.031,6,0.064,8,0.763,11,0.002,12,0.216,13,0.581,16,0.766,17,0.006,19,0.5,20,1.289,23,0.031,33,3.32,46,1.384,47,1.409,48,1.571,49,1.396,52,0.814,53,0.814,55,0.85,65,1.202,82,1.813,87,0.766,99,0.003,100,0.003,101,0.921,102,1.355,103,1.174,104,0.838,105,0.901,106,0.942,107,0.85,114,2.415,117,2.631,118,2.132,120,1.297,122,1.336,125,0.726,127,1.271,128,0.758,129,1.669,131,1.355,136,0.78,141,1.416,145,1.668,148,0.928,150,0.183,151,0.256,153,1.304,169,0.901,173,0.901,177,2.089,179,0.136,180,1.527,181,1.651,183,1.345,192,2.56,193,1.574,194,2.237,197,1.078,199,1.87,205,1.251,219,0.929,224,1.486,237,0.802,247,1.384,271,1.016,277,3.436,279,2.192,281,0.862,290,2.253,291,1.529,293,0.826,296,4.117,297,1.719,300,2.067,301,1.354,302,1.281,317,0.487,318,1.639,319,1.26,320,0.942,321,1.952,322,0.942,323,1.438,324,0.888,325,0.85,326,1.744,327,0.901,328,0.942,329,0.901,330,0.942,331,0.901,332,1.289,333,0.942,334,0.901,335,0.914,336,0.942,337,0.901,338,0.942,339,0.901,340,0.942,341,1.355,342,1.438,343,1.597,344,2.102,345,0.901,346,0.914,347,0.942,348,1.438,349,0.901,350,1.438,351,0.901,352,0.928,353,1.438,354,0.901,355,1.355,356,1.438,357,1.355,358,1.438,359,0.901,360,0.942,361,0.901,362,0.901,363,0.942,364,0.901,365,0.942,366,1.355,367,1.952,368,1.355,369,1.438,370,0.901,371,0.928,372,0.901,373,0.942,374,0.901,375,1.438,376,0.888,377,0.901,378,0.942,379,0.901,380,0.942,381,0.914,382,0.942,383,0.888,384,0.942,385,0.901,386,0.942,387,0.901,388,0.942,389,0.901,390,0.888,391,0.802,392,0.901,393,0.888,394,0.862,395,0.901,396,0.942,397,0.901,398,0.862,399,0.942,400,0.901,401,0.942,402,1.982,403,0.901,404,0.942,405,0.942,407,1.465,473,1.344,493,1.38,503,1.38,509,0.7,510,2.107,528,2.386,534,1.109,540,1.765,571,2.523,586,0.956,616,3.762,663,1.436,665,1.38,682,2.069,768,1.866,835,2.806,836,3.943,841,4.413,900,1.866,962,1.955,990,1.527,1118,1.866,1422,1.496,1538,2.625,1569,2.695,1571,1.813,1588,2.386,1589,2.386,1601,1.563,1713,3.102,1737,1.991,1803,5.312,1805,1.923,1879,2.894,1882,3.353,1885,1.281,1888,5.026,1889,3.53,1890,3.239,1894,4.114,1895,4.114,1897,2.149,1898,2.556,1899,3.135,1902,3.126,1906,3.135,1907,3.381,1908,3.25,1914,3.031,1932,3.802,1933,3.135,1943,2.214,1953,3.658,1954,4.614,1958,2.053,1963,2.312,1965,2.312,1966,2.053,1971,2.426,1974,2.053,2032,2.849,2040,3.53,2042,3.53,2043,3.53,2049,4.209,2052,5.01,2071,2.312,2077,1.677,2123,2.625,2425,7.441,2470,5.028,2527,3.53,2753,2.734,2959,4.174,3163,2.562,3165,4.746,3166,3.913,3449,2.562,3454,2.562,3455,2.562,3456,4.746,3473,3.913,3499,2.562,3503,3.913,3514,6.031,3515,6.031,4699,9.013,4700,4.524,4701,2.963,4702,4.524,4703,6.974,4704,2.963,4705,2.963,4706,4.524,4707,2.963,4708,2.963,4709,2.963,4710,2.963,4711,2.963,4712,2.963,4713,2.963,4714,2.963,4715,2.963,4716,2.963,4717,2.963,4718,2.963,4719,2.963,4720,2.963,4721,2.963,4722,2.963,4723,2.963,4724,2.963,4725,4.524,4726,2.963,4727,4.524,4728,2.963]],["title/components/ToggleButtonComponent-1.html",[101,0.451,253,0.908,402,1.125]],["body/components/ToggleButtonComponent-1.html",[3,0.069,4,0.031,5,0.031,6,0.064,8,0.762,11,0.002,12,0.216,13,0.58,16,0.765,17,0.006,19,0.5,20,1.289,23,0.031,33,3.319,46,1.383,47,1.408,48,1.571,49,1.395,52,0.813,53,0.814,55,0.849,65,1.201,82,1.813,87,0.765,99,0.003,100,0.003,101,0.921,102,1.355,103,1.173,104,0.837,105,0.9,106,0.941,107,0.849,114,2.415,117,2.631,118,2.132,120,1.297,122,1.335,125,0.726,127,1.271,128,0.757,129,1.669,131,1.355,136,0.779,141,1.416,145,1.668,148,0.927,150,0.183,151,0.256,153,1.303,169,0.9,173,0.9,177,2.088,179,0.136,180,1.527,181,1.651,183,1.345,192,2.559,193,1.573,194,2.236,197,1.078,199,1.869,205,1.251,219,0.928,224,1.485,237,0.802,247,1.383,253,0.716,271,1.015,277,3.436,279,2.191,281,0.862,290,2.252,291,1.528,293,0.825,296,4.116,297,1.718,300,2.066,301,1.353,302,1.28,317,0.487,318,1.639,319,1.26,320,0.941,321,1.951,322,0.941,323,1.437,324,0.887,325,0.849,326,1.743,327,0.9,328,0.941,329,0.9,330,0.941,331,0.9,332,1.289,333,0.941,334,0.9,335,0.913,336,0.941,337,0.9,338,0.941,339,0.9,340,0.941,341,1.355,342,1.437,343,1.596,344,2.102,345,0.9,346,0.913,347,0.941,348,1.437,349,0.9,350,1.437,351,0.9,352,0.927,353,1.437,354,0.9,355,1.355,356,1.437,357,1.355,358,1.437,359,0.9,360,0.941,361,0.9,362,0.9,363,0.941,364,0.9,365,0.941,366,1.355,367,1.951,368,1.355,369,1.437,370,0.9,371,0.927,372,0.9,373,0.941,374,0.9,375,1.437,376,0.887,377,0.9,378,0.941,379,0.9,380,0.941,381,0.913,382,0.941,383,0.887,384,0.941,385,0.9,386,0.941,387,0.9,388,0.941,389,0.9,390,0.887,391,0.802,392,0.9,393,0.887,394,0.862,395,0.9,396,0.941,397,0.9,398,0.862,399,0.941,400,0.9,401,0.941,402,1.981,403,0.9,404,0.941,405,0.941,407,1.464,473,1.344,493,1.379,503,1.379,509,0.7,510,2.106,528,2.385,534,1.109,540,1.764,571,2.522,586,0.955,616,3.761,663,1.435,665,1.379,682,2.068,768,1.865,835,2.805,836,3.941,841,4.412,900,1.865,962,1.954,990,1.527,1118,1.865,1422,1.495,1538,2.624,1569,2.693,1571,1.812,1588,2.385,1589,2.385,1601,1.562,1713,3.1,1737,1.99,1803,5.31,1805,1.922,1879,2.893,1882,3.353,1885,1.28,1888,5.025,1889,3.528,1890,3.238,1894,4.113,1895,4.113,1897,2.147,1898,2.555,1899,3.133,1902,3.126,1906,3.133,1907,3.379,1908,3.249,1914,3.029,1932,3.801,1933,3.133,1943,2.213,1953,3.657,1954,4.613,1958,2.052,1963,2.31,1965,2.31,1966,2.052,1971,2.424,1974,2.052,2032,2.848,2040,3.528,2042,3.528,2043,3.528,2049,4.208,2052,5.009,2071,2.31,2077,1.676,2123,2.624,2425,7.44,2470,5.027,2527,3.528,2753,2.732,2959,4.172,3163,2.561,3165,4.744,3166,3.911,3449,2.561,3454,2.561,3455,2.561,3456,4.744,3473,3.911,3499,2.561,3503,3.911,3514,6.029,3515,6.029,4700,4.522,4701,2.961,4702,4.522,4703,6.972,4704,2.961,4705,2.961,4706,4.522,4707,2.961,4708,2.961,4709,2.961,4710,2.961,4711,2.961,4712,2.961,4713,2.961,4714,2.961,4715,2.961,4716,2.961,4717,2.961,4718,2.961,4719,2.961,4720,2.961,4721,2.961,4722,2.961,4723,2.961,4724,2.961,4725,4.522,4726,2.961,4727,4.522,4728,2.961,4729,9.012]],["title/interfaces/UserName.html",[0,0.236,3701,4.14]],["body/interfaces/UserName.html",[0,0.3,2,1.394,3,0.059,4,0.059,5,0.059,6,0.045,8,0.79,11,0.003,12,0.415,13,0.915,16,1.474,17,0.006,19,0.58,20,1.194,23,0.074,36,1.85,53,1.023,99,0.004,100,0.003,101,0.936,117,1.63,118,1.652,120,1.63,122,1.678,125,1.748,144,3.526,150,0.17,151,0.492,179,0.147,183,1.562,205,1.02,219,0.962,236,2.407,261,5.123,318,1.518,319,1.584,376,1.703,485,4.436,492,2.825,493,2.648,494,3.237,495,2.825,501,4.436,502,4.436,503,2.648,504,3.217,509,1.206,510,2.648,511,5.564,512,3.217,513,4.109,517,4.917,518,4.436,519,4.436,521,4.917,852,2.371,1396,4.409,2960,4.917,3263,4.491,3619,4.917,3696,5.246,3697,5.686,3698,5.686,3700,5.686,3701,7.922,3702,7.029,3703,7.029,3707,5.686,3709,8.17,3710,7.131,3711,5.686]],["title/interfaces/ValueObject.html",[0,0.236,2857,3.881]],["body/interfaces/ValueObject.html",[0,0.438,2,1.232,3,0.052,4,0.052,5,0.052,6,0.04,8,0.699,11,0.003,12,0.367,13,0.845,15,3.039,16,1.371,17,0.006,19,0.409,20,1.855,22,4.179,23,0.081,28,2.429,51,3.235,53,0.909,65,1.774,99,0.004,100,0.003,150,0.197,154,3.077,183,1.101,216,3.133,219,1.484,247,1.132,473,0.969,588,3.129,621,4.485,634,2.06,640,4.197,868,4.775,1409,5.853,2713,4.033,2726,3.756,2851,6.357,2852,4.638,2853,4.638,2854,7.178,2855,7.198,2856,3.756,2857,6.747,2858,4.638,2859,5.141,2860,6.079,2861,6.079,2862,6.018,2863,6.079,2864,4.638,2865,7.473,2866,7.473,2867,6.079,2868,4.638,2869,4.638,2870,6.782,2871,4.638,2872,4.638,2873,4.638,2874,4.638,2875,6.079,2876,4.638,2877,4.638,2878,4.638,2879,4.638,2880,4.638,2881,4.638,2882,4.638,2883,4.115,2884,4.115,2885,6.079,2886,4.638,2887,4.638,2888,4.638,2889,4.638,2890,4.638,2891,3.922,2892,4.638]],["title/components/ViewerComponent.html",[101,0.539,403,1.364]],["body/components/ViewerComponent.html",[3,0.073,4,0.028,5,0.028,6,0.067,11,0.003,12,0.31,13,0.545,16,1.142,17,0.006,18,1.417,19,0.66,20,1.479,23,0.028,28,0.783,34,2.017,46,0.615,47,1.659,48,1.891,52,0.75,53,0.791,55,0.783,65,1.142,68,1.771,72,1.719,87,0.995,92,3.64,95,2.687,99,0.003,100,0.003,101,0.626,102,1.272,103,1.102,104,0.772,105,0.83,106,0.868,107,0.783,114,1.827,117,2.618,118,2.117,120,1.218,122,1.254,125,0.669,127,1.079,128,0.698,129,1.784,136,0.718,145,1.585,148,0.855,150,0.176,151,0.236,169,0.83,173,0.83,177,1.272,179,0.056,193,1.218,197,1.012,199,1.2,205,1.307,216,1.601,219,1.339,224,1.411,237,0.739,247,1.685,252,1.608,253,1.027,271,2.016,272,2.589,275,2.589,277,1.904,279,1.323,281,1.517,290,1.102,293,0.761,295,1.719,305,2.191,306,1.35,317,0.449,318,1.134,319,1.88,320,0.868,321,1.869,322,0.868,323,1.35,324,0.818,325,0.783,326,1.657,327,0.83,328,0.868,329,0.83,330,0.868,331,0.83,332,1.338,333,0.868,334,0.83,335,0.842,336,0.868,337,0.83,338,0.868,339,0.83,340,0.868,341,1.272,342,1.35,343,1.517,344,2.025,345,0.83,346,0.842,347,0.868,348,1.35,349,0.83,350,1.35,351,0.83,352,0.855,353,1.35,354,0.83,355,1.272,356,1.35,357,1.272,358,1.35,359,0.83,360,0.868,361,0.83,362,0.83,363,0.868,364,0.83,365,0.868,366,1.272,367,1.869,368,1.272,369,1.35,370,0.83,371,0.855,372,0.83,373,0.868,374,0.83,375,1.35,376,0.818,377,0.83,378,0.868,379,0.83,380,0.868,381,0.842,382,0.868,383,0.818,384,0.868,385,0.83,386,0.868,387,0.83,388,0.868,389,0.83,390,0.818,391,0.739,392,0.83,393,0.818,394,0.794,395,0.83,396,0.868,397,0.83,398,0.794,399,0.868,400,0.83,401,0.868,402,1.272,403,1.788,404,0.868,405,0.868,407,1.35,431,0.842,473,1.404,490,1.35,492,2.065,494,1.965,495,1.683,509,0.807,526,1.869,527,1.904,534,1.442,546,2.24,571,2.793,586,0.881,608,1.44,632,2.191,636,1.626,638,4.52,644,3.915,649,3.678,663,2.526,664,2.675,665,1.978,682,1.601,693,1.247,768,2.675,769,3.8,772,3.249,785,2.361,835,1.94,836,3.745,841,4.226,856,5.682,858,3.673,860,2.235,900,1.719,1118,1.719,1230,1.508,1238,2.04,1241,2.53,1242,1.473,1250,1.892,1252,1.892,1266,1.671,1269,1.961,1270,3.915,1272,2.13,1279,3.492,1284,3.314,1287,4.395,1304,4.075,1321,2.13,1336,3.314,1342,4.395,1371,2.04,1538,2.464,1588,2.24,1589,2.24,1594,3.9,1601,1.44,1602,1.961,1805,1.772,1862,4.247,1879,2.749,1890,3.102,2806,3.314,2933,2.73,2941,5.229,3016,2.73,3068,2.73,3071,2.361,3093,5.213,3096,2.73,3098,2.73,3099,2.73,3100,4.247,3184,2.73,3269,5.524,3567,3.919,3741,3.919,4222,3.673,4263,2.235,4280,3.919,4313,5.213,4386,3.919,4730,3.051,4731,5.826,4732,4.747,4733,5.826,4734,5.826,4735,4.747,4736,6.573,4737,6.573,4738,3.051,4739,4.747,4740,4.747,4741,4.747,4742,3.051,4743,3.051,4744,3.051,4745,3.051,4746,4.747,4747,3.051,4748,3.051,4749,3.051,4750,3.051,4751,3.051,4752,4.747,4753,3.051,4754,3.051,4755,5.826,4756,3.051,4757,3.051,4758,3.051,4759,3.051,4760,2.73,4761,5.826,4762,3.051,4763,3.051,4764,3.051,4765,3.051,4766,4.747,4767,3.051,4768,3.051,4769,3.051,4770,5.213,4771,3.051,4772,4.747,4773,5.826,4774,4.747,4775,2.73,4776,4.747,4777,3.051,4778,3.051,4779,4.747,4780,3.051,4781,3.051,4782,3.051,4783,3.051,4784,4.747,4785,3.051,4786,4.247,4787,3.051,4788,4.747,4789,3.051,4790,3.051,4791,5.826,4792,3.051,4793,2.519,4794,3.051,4795,3.051,4796,3.051,4797,3.051,4798,3.051,4799,3.051,4800,3.051,4801,3.051,4802,3.051,4803,3.051,4804,3.051,4805,3.051,4806,3.051,4807,3.051,4808,3.051,4809,3.051,4810,3.051,4811,3.051,4812,3.051,4813,3.051,4814,3.051,4815,3.051,4816,5.213]],["title/modules/ViewerModule.html",[409,0.737,3115,3.501]],["body/modules/ViewerModule.html",[3,0.068,4,0.068,5,0.068,6,0.052,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,150,0.256,151,0.565,179,0.134,204,2.016,317,1.074,403,2.798,409,1.074,411,2.046,412,2.046,413,2.712,414,2.076,415,2.076,416,2.712,431,2.395,432,1.874,434,2.172,435,2.542,436,4.393,437,3.371,553,2.789,554,2.311,2941,3.999,3115,6.997,4817,6.535,4818,6.535,4819,6.535,4820,7.303,4821,7.303]],["title/injectables/ViewerState.html",[2162,1.538,3125,3.674]],["body/injectables/ViewerState.html",[0,0.227,3,0.045,4,0.045,5,0.045,6,0.064,11,0.003,12,0.562,13,0.762,15,1.679,16,1.378,17,0.006,18,1.639,19,0.596,20,1.247,23,0.062,28,2.279,48,1.339,53,0.863,80,2.797,87,1.24,99,0.004,100,0.003,125,1.948,127,1.23,129,1.668,141,1.86,150,0.255,151,0.373,154,2.638,156,1.83,179,0.089,197,1.416,205,1.426,219,1.479,224,1.984,233,3.374,247,0.971,252,1.621,253,1.858,272,1.897,332,1.614,473,1.413,496,2.501,509,0.92,534,1.797,571,2.193,588,2.822,608,3.586,632,3.508,634,2.787,649,3.434,682,1.625,712,3.097,870,3.624,948,3.976,1230,3.282,1343,2.986,1525,2.38,1534,4.498,1544,2.986,1564,2.986,1594,2.638,1633,3.528,1712,3.221,1728,5.942,1732,3.528,1745,3.528,1793,3.528,2162,2.037,2163,2.567,2234,4.39,2273,3.282,2274,2.38,2275,2.38,2276,2.088,2996,3.528,2997,6.338,2998,3.528,3071,5.138,3125,4.864,3221,3.097,3984,3.727,4218,4.711,4421,3.976,4430,3.727,4793,3.976,4822,4.31,4823,6.8,4824,6.8,4825,6.64,4826,6.64,4827,6.64,4828,5.942,4829,4.817,4830,5.942,4831,4.817,4832,5.942,4833,4.817,4834,4.817,4835,4.817,4836,5.942,4837,7.329,4838,5.942,4839,4.817,4840,5.942,4841,5.942,4842,5.942,4843,5.942,4844,5.942,4845,4.817,4846,5.942,4847,5.942,4848,5.942,4849,4.31,4850,4.31,4851,4.31,4852,5.942,4853,5.942,4854,4.31,4855,3.976,4856,3.976,4857,7.948,4858,7.948,4859,7.948,4860,4.31,4861,6.8,4862,4.31,4863,4.31,4864,4.31,4865,4.31,4866,4.31,4867,4.31,4868,5.942,4869,5.942,4870,4.31,4871,4.31,4872,4.31,4873,4.31,4874,4.31,4875,4.31,4876,4.31,4877,4.31,4878,4.31,4879,4.31,4880,4.31]],["title/interfaces/ViewerStateModel.html",[0,0.236,4856,4.14]],["body/interfaces/ViewerStateModel.html",[0,0.251,2,1.166,3,0.049,4,0.049,5,0.049,6,0.037,11,0.003,12,0.558,13,0.815,15,1.853,16,1.075,17,0.006,18,1.73,19,0.582,23,0.066,28,2.281,48,1.431,53,0.534,80,3.086,99,0.004,100,0.003,125,1.557,141,1.989,150,0.259,151,0.412,154,2.911,156,2.019,179,0.098,205,1.283,219,1.501,224,1.937,233,3.24,247,1.071,252,1.705,253,1.923,272,2.093,332,1.67,496,2.76,509,0.736,571,1.534,632,3.69,634,2.932,649,2.402,682,1.793,712,3.417,870,3.775,1230,3.509,1343,3.295,1525,2.627,1534,4.615,1544,3.295,1564,3.295,1594,2.911,1633,3.894,1712,3.554,1732,3.894,1745,3.894,1793,3.894,2162,2.178,2234,3.951,2273,3.509,2274,2.627,2275,2.627,2276,2.304,2996,3.894,2997,6.601,2998,3.894,3071,4.113,3125,3.894,3221,3.417,3984,4.113,4218,4.956,4421,4.388,4430,4.113,4793,4.388,4822,4.756,4823,6.353,4824,4.756,4828,4.756,4830,4.756,4832,4.756,4836,4.756,4837,6.353,4838,4.756,4840,4.756,4841,4.756,4842,4.756,4843,4.756,4844,4.756,4846,6.353,4847,7.153,4848,6.353,4849,4.756,4850,4.756,4851,4.756,4852,6.353,4853,6.353,4854,4.756,4855,4.388,4856,5.861,4857,8.597,4858,8.597,4859,8.597,4860,4.756,4861,7.153,4862,4.756,4863,4.756,4864,4.756,4865,4.756,4866,4.756,4867,4.756,4868,6.353,4869,6.353,4870,4.756,4871,4.756,4872,4.756,4873,4.756,4874,4.756,4875,4.756,4876,4.756,4877,4.756,4878,4.756,4879,4.756,4880,4.756]],["title/interfaces/XYZTriplet.html",[0,0.236,4459,3.674]],["body/interfaces/XYZTriplet.html",[0,0.386,2,1.222,3,0.052,4,0.052,5,0.052,6,0.039,8,0.693,11,0.003,12,0.364,13,0.841,17,0.006,18,1.473,19,0.657,23,0.081,36,1.7,49,1.537,53,0.559,99,0.004,100,0.003,109,3.724,125,1.795,137,3.861,141,2.292,150,0.241,151,0.431,155,3.339,156,2.116,179,0.102,183,1.603,205,1.313,236,2.212,252,1.745,293,2.167,325,2.316,391,2.349,394,1.906,398,1.906,482,6.036,488,5.36,489,4.837,490,4.33,496,2.892,499,4.61,505,3.051,509,1.133,510,3.409,634,2.043,823,3.139,870,3.24,1101,4.204,1885,3.584,2162,2.246,2234,4.295,2273,3.619,2274,2.753,2275,2.753,2276,2.415,3131,4.01,3633,5.087,4197,4.896,4218,5.072,4368,3.888,4452,6.162,4453,4.31,4454,5.112,4455,5.711,4456,4.31,4457,6.302,4458,5.667,4459,6.788,4460,4.31,4461,4.08,4462,4.31,4463,5.112,4464,4.31,4465,4.31,4466,4.31,4467,4.31,4468,4.31,4469,4.31]],["title/changelog.html",[3996,2.93,4881,3.248,4882,3.465]],["body/changelog.html",[0,0.361,10,3.022,11,0.003,17,0.004,25,4.151,29,4.709,33,1.852,36,2.19,37,4.151,47,1.698,48,1.797,49,1.848,52,2.121,55,2.112,56,2.747,59,3.26,63,3.022,65,1.499,68,1.819,73,2.757,78,3.022,79,2.922,99,0.004,100,0.004,105,1.326,107,1.251,110,4.362,118,1.956,128,2.04,129,0.916,131,1.307,136,1.576,152,2.531,199,1.233,225,3.022,238,3.476,253,1.448,264,4.362,274,2.598,290,1.132,296,2.963,298,2.67,332,1.437,346,1.346,412,1.366,509,0.675,510,3.187,515,3.022,570,5.731,647,4.013,664,3.773,712,3.134,869,3.022,911,3.134,920,6.066,940,3.134,961,5.602,992,4.025,993,5.104,994,3.26,1094,4.362,1164,3.571,1230,3.309,1243,2.747,1396,3.872,1529,3.26,1541,3.773,1564,3.022,1620,4.025,1737,2.637,1751,3.025,1797,3.022,2012,4.025,2042,3.403,2245,3.571,2292,5.602,2295,6.796,2296,4.025,2553,6.843,2559,3.772,2644,4.362,2661,4.362,2714,5.181,2831,3.403,2987,4.362,3017,3.772,3076,7.367,3078,4.025,3164,5.602,3224,5.991,3230,3.772,3231,3.772,3232,3.772,3238,4.362,3239,4.362,3244,5.991,3248,6.796,3253,3.772,3254,5.181,3259,4.362,3261,4.025,3339,4.362,3340,5.991,3344,7.538,3349,4.362,3350,4.362,3351,4.362,3571,4.362,3723,6.371,3733,4.025,3773,5.991,3775,4.362,3780,5.991,3781,5.527,3998,4.025,4030,8.348,4171,4.025,4323,4.362,4493,7.367,4775,4.362,4786,5.991,4816,5.991,4855,4.025,4881,5.918,4882,5.527,4883,5.991,4884,4.875,4885,6.695,4886,6.695,4887,6.695,4888,6.695,4889,4.875,4890,4.875,4891,4.875,4892,4.875,4893,4.875,4894,4.875,4895,4.875,4896,4.362,4897,4.875,4898,4.875,4899,4.875,4900,7.647,4901,4.875,4902,6.695,4903,9.548,4904,7.647,4905,6.695,4906,4.875,4907,8.233,4908,4.875,4909,6.695,4910,8.233,4911,4.875,4912,4.875,4913,4.875,4914,4.875,4915,6.695,4916,4.875,4917,4.875,4918,4.875,4919,4.875,4920,4.875,4921,6.695,4922,7.647,4923,6.695,4924,4.875,4925,4.875,4926,4.875,4927,4.875,4928,4.875,4929,4.875,4930,8.233,4931,4.875,4932,4.875,4933,6.695,4934,7.647,4935,4.875,4936,4.875,4937,4.875,4938,6.695,4939,4.875,4940,6.695,4941,4.875,4942,4.875,4943,6.695,4944,6.695,4945,6.695,4946,6.695,4947,4.875,4948,4.875,4949,4.875,4950,4.875,4951,4.875,4952,4.875,4953,4.875,4954,4.875,4955,4.875,4956,4.875,4957,4.362,4958,4.875,4959,4.875,4960,4.875,4961,4.875,4962,4.875,4963,4.875,4964,4.875,4965,4.875,4966,4.875,4967,4.875,4968,4.875,4969,4.875,4970,4.875,4971,4.875,4972,4.875,4973,4.875,4974,6.695,4975,8.629,4976,4.875,4977,4.875,4978,4.875,4979,4.875,4980,4.875,4981,4.875,4982,6.695,4983,4.875,4984,4.875,4985,4.875,4986,4.875,4987,4.875,4988,4.875,4989,4.875,4990,4.875,4991,4.875,4992,4.875]],["title/dependencies.html",[412,1.688,4993,4.197]],["body/dependencies.html",[11,0.004,17,0.006,72,3.735,99,0.004,100,0.004,136,1.926,151,0.513,153,2.61,319,1.652,412,1.857,439,5.47,554,2.097,606,4.109,609,3.735,625,3.848,629,3.973,630,3.848,649,3.697,734,5.472,737,5.129,740,5.129,742,5.129,744,5.472,823,3.735,870,2.933,976,4.627,1080,7.321,1082,5.931,1085,7.321,1087,5.931,1088,5.931,1140,5.472,1242,3.2,1247,3.973,1248,3.973,1442,5.931,1443,5.931,1561,5.931,1772,4.855,2056,4.855,2181,5.931,2276,2.873,2856,4.432,3781,5.472,3782,5.931,3905,5.472,4611,5.931,4621,5.931,4760,5.931,4883,5.931,4994,9.926,4995,6.628,4996,8.181,4997,6.628,4998,6.628,4999,6.628,5000,9.267,5001,6.628,5002,6.628,5003,6.628,5004,8.875,5005,6.628,5006,6.628,5007,6.628,5008,6.628,5009,8.181,5010,6.628,5011,6.628,5012,6.628,5013,6.628,5014,6.628,5015,6.628,5016,6.628,5017,6.628,5018,6.628,5019,6.628,5020,6.628,5021,6.628,5022,6.628,5023,6.628,5024,6.628,5025,6.628,5026,6.628,5027,6.628,5028,6.628,5029,6.628,5030,6.628,5031,6.628,5032,6.628,5033,6.628]],["title/miscellaneous/enumerations.html",[5034,3.248,5035,5.393]],["body/miscellaneous/enumerations.html",[6,0.062,11,0.004,12,0.485,17,0.006,20,1.923,36,1.722,47,1.413,72,4.179,99,0.005,100,0.004,141,2.078,166,6.775,721,3.796,852,2.768,1230,3.665,1250,5.429,2209,6.123,2293,7.229,2294,6.414,3715,5.739,3719,7.692,3720,6.123,3721,6.123,3722,6.123,3723,7.703,3724,6.123,3725,6.123,3726,6.123,3727,6.123,3728,6.123,3729,6.123,5034,5.739,5035,6.636,5036,7.416,5037,6.636]],["title/index.html",[12,0.274,3996,2.93,4881,3.248]],["body/index.html",[0,0.418,11,0.004,17,0.005,89,4.281,99,0.005,100,0.004,118,2.048,298,4.15,306,3.353,993,4.698,994,5.067,1396,4.49,1713,3.424,2245,5.551,2292,6.495,3230,6.862,3231,6.862,3232,6.862,3249,7.32,3253,6.862,3254,7.5,3274,6.256,3275,6.256,3283,6.256,3284,6.256,3291,6.256,3292,6.256,3347,6.781,4882,6.256,4957,6.781,5038,7.577,5039,7.577,5040,7.577,5041,7.577,5042,7.577,5043,7.577]],["title/license.html",[3996,2.93,4881,3.248,5044,3.755]],["body/license.html",[11,0.004,17,0.005,82,1.879,99,0.005,100,0.004,112,5.211,432,1.825,597,3.791,616,3.434,869,4.411,951,3.791,993,4.411,1831,5.12,1928,6.705,2012,5.873,2813,5.211,3248,5.873,3261,7.052,3309,6.366,3344,5.873,3391,6.366,4214,5.211,4331,6.366,4896,6.366,5044,6.366,5045,7.114,5046,9.154,5047,7.114,5048,8.542,5049,7.114,5050,7.114,5051,7.114,5052,7.114,5053,8.542,5054,10.121,5055,7.114,5056,7.114,5057,7.114,5058,7.114,5059,7.114,5060,7.114,5061,7.114,5062,7.114,5063,7.114,5064,7.114,5065,7.114,5066,7.114,5067,8.542,5068,7.114,5069,7.114,5070,7.114,5071,7.114,5072,7.114,5073,8.542,5074,8.542,5075,7.114,5076,7.114,5077,7.114,5078,7.114,5079,7.114,5080,7.114,5081,7.114,5082,7.114,5083,7.114,5084,7.114,5085,7.114,5086,7.114,5087,7.114,5088,7.114,5089,7.114,5090,7.114,5091,7.114,5092,7.114,5093,7.114,5094,7.114,5095,7.114,5096,7.114,5097,7.114]],["title/modules.html",[411,1.912]],["body/modules.html",[11,0.003,17,0.004,99,0.004,100,0.003,136,2.475,410,5.78,411,1.608,421,4.205,422,5.471,423,5.214,424,3.839,425,4.205,426,4.205,427,5.214,428,4.205,429,4.205,430,4.205,548,4.205,561,4.205,910,5.78,1429,4.205,1575,4.008,1605,4.205,1610,4.205,1742,5.214,1813,4.205,2130,4.442,2135,4.205,2136,4.205,2144,5.471,2145,5.471,2146,5.471,2348,6.517,2412,4.205,2477,4.205,2663,4.205,2782,5.471,2964,4.205,2969,4.008,2989,4.008,3083,4.205,3105,4.205,3114,4.205,3115,4.008,3308,9.406,3589,4.008,3609,4.442,3614,4.205,3615,4.205,3845,4.008,3846,4.205,3847,4.008,4350,4.205,4370,4.442,4375,4.205,4376,4.205,5098,10.518]],["title/overview.html",[4263,5]],["body/overview.html",[2,0.649,11,0.002,17,0.006,99,0.002,100,0.002,102,2.271,103,0.687,164,4.323,169,2.117,173,2.117,177,2.271,204,0.817,317,0.435,324,2.086,327,2.117,329,2.117,331,2.117,334,2.117,337,2.117,339,2.117,341,2.271,343,2.156,345,2.117,349,2.117,351,2.117,354,2.117,357,2.159,359,2.117,361,2.117,362,2.117,364,2.117,366,2.159,368,2.271,370,2.117,374,2.117,376,2.086,377,2.117,379,2.117,381,2.148,383,2.086,385,2.117,387,2.117,389,2.117,390,2.086,392,2.117,393,2.086,395,2.117,397,2.117,400,2.117,402,2.271,403,2.117,409,0.435,410,7.762,411,0.829,412,0.829,413,0.867,414,0.842,415,0.842,416,0.867,417,2.648,418,2.648,419,2.648,420,2.648,421,5.454,422,6.667,423,6.802,424,5.387,425,5.902,426,6.597,427,6.029,428,6.429,429,5.902,430,5.454,431,1.279,432,0.759,468,1.498,548,5.454,549,2.648,550,2.648,551,2.648,558,2.648,559,2.648,560,2.648,561,6.207,901,2.648,902,2.648,903,2.648,1429,5.454,1430,2.648,1431,2.648,1432,2.648,1575,5.434,1576,2.648,1577,2.648,1578,2.648,1605,5.902,1606,2.648,1607,2.648,1608,2.648,1609,2.648,1610,5.902,1813,6.207,1814,2.648,1815,2.648,1817,2.648,1871,2.648,1872,2.648,1874,2.648,2130,6.557,2131,2.648,2132,2.648,2133,2.648,2134,2.648,2135,5.902,2136,5.454,2141,2.648,2142,2.648,2143,2.648,2144,6.785,2145,4.736,2146,5.902,2163,1.577,2287,2.443,2412,5.454,2413,2.648,2414,2.648,2415,2.648,2418,2.648,2419,2.648,2420,2.648,2477,5.454,2478,2.648,2479,2.648,2480,2.648,2627,2.648,2628,2.648,2629,2.648,2663,6.429,2664,2.648,2665,2.648,2667,2.648,2702,2.648,2703,2.648,2705,2.648,2778,2.648,2779,2.648,2780,2.648,2781,2.648,2782,6.518,2964,5.902,2965,2.648,2966,2.648,2967,2.648,2968,2.648,2969,6.354,2989,6.212,2990,2.648,2991,2.648,2993,2.648,3079,2.648,3080,2.648,3081,2.648,3082,2.648,3083,5.902,3105,5.454,3106,2.648,3107,2.648,3108,2.648,3111,2.648,3112,2.648,3113,2.648,3114,6.836,3115,5.434,3157,2.648,3158,2.648,3160,2.648,3185,2.648,3186,2.648,3188,2.648,3397,2.648,3398,2.648,3399,2.648,3589,5.434,3590,2.648,3591,2.648,3592,2.648,3609,6.969,3610,2.648,3611,2.648,3612,2.648,3613,2.648,3614,5.454,3615,5.454,3712,2.648,3713,2.648,3714,2.648,3842,2.648,3843,2.648,3844,2.648,3845,6.029,3846,6.597,3847,6.029,3939,2.648,3940,2.648,3941,2.648,4101,2.648,4102,2.648,4104,2.648,4117,2.648,4118,2.648,4119,2.648,4191,2.648,4192,2.648,4193,2.648,4263,2.168,4350,5.454,4351,2.648,4352,2.648,4353,2.648,4356,2.648,4357,2.648,4359,2.648,4370,6.791,4371,2.648,4372,2.648,4373,2.648,4374,2.648,4375,5.454,4376,5.454,4413,2.648,4414,2.648,4415,2.648,4445,2.648,4446,2.648,4448,2.648,4494,2.648,4495,2.648,4496,2.648,4524,2.648,4525,2.648,4526,2.648,4560,2.648,4561,2.648,4563,2.648,4604,2.648,4605,2.648,4606,2.648,4631,2.648,4632,2.648,4770,2.648,4817,2.648,4818,2.648,4819,2.648,5099,2.96,5100,2.96,5101,2.96]],["title/miscellaneous/typealiases.html",[5034,3.248,5102,6.027]],["body/miscellaneous/typealiases.html",[6,0.07,11,0.003,12,0.35,16,0.811,17,0.006,19,0.714,20,1.341,28,1.375,47,1.529,48,1.618,97,3.895,99,0.004,100,0.003,103,1.657,114,2.221,116,4.022,141,2.663,192,3.614,193,1.375,199,1.355,215,4.813,216,2.408,240,2.713,249,2.648,275,2.811,505,2.233,513,3.369,544,2.713,590,4.426,606,3.322,621,2.587,640,2.421,719,5.879,900,4.022,986,4.132,990,2.156,1101,3.095,1239,3.741,1240,6.249,1253,4.589,1256,4.773,1261,5.603,1263,4.773,1264,4.773,1266,3.909,1267,4.589,1534,2.648,1882,3.433,1885,2.76,1898,3.567,1902,3.677,1917,3.71,2052,5.16,2108,4.145,2109,3.925,2110,4.23,2111,4.426,2112,4.426,2113,4.426,2115,4.145,2117,4.804,2118,5.683,2121,4.145,2122,4.145,2123,3.706,2126,5.683,2127,4.145,2129,3.925,2139,4.147,2995,4.424,3002,5.893,3025,5.893,3128,6.623,3192,4.773,3403,4.795,3420,5.893,3421,7.066,3422,7.066,3423,5.893,3424,7.066,3425,5.893,3426,7.066,3427,5.893,3428,5.893,3429,5.893,3545,4.147,3553,4.795,3715,4.147,3850,3.445,3947,4.424,3948,5.893,3996,3.741,3997,5.893,4223,4.424,4224,5.893,4261,5.893,4262,4.424,4473,4.147,4531,4.424,4532,6.387,4542,4.795,4555,4.795,4575,4.424,4576,4.424,4577,7.182,4588,4.795,4589,6.387,4590,7.182,5034,4.147,5037,4.795,5103,5.359,5104,9.868,5105,9.623,5106,9.167,5107,5.359,5108,7.138,5109,5.359,5110,7.138,5111,7.138,5112,5.359,5113,5.359,5114,5.359]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["0.095rem",{"_index":2624,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0.1.0",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":5033,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":4266,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["0.15.1",{"_index":5013,"title":{},"body":{"dependencies.html":{}}}],["0.15rem",{"_index":1811,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["0.17.1",{"_index":5016,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1812,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{}}}],["0.2",{"_index":713,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["0.2.0",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["0.25rem",{"_index":4727,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["0.25s",{"_index":4188,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["0.2rem",{"_index":2656,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.2s",{"_index":4408,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["0.3s",{"_index":2461,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["0.4.2",{"_index":5003,"title":{},"body":{"dependencies.html":{}}}],["0.4em",{"_index":2657,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.4rem",{"_index":1799,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.4s",{"_index":4523,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.5",{"_index":673,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["0.5*255",{"_index":829,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["0.5.0",{"_index":3781,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{},"dependencies.html":{}}}],["0.5em",{"_index":1423,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["0.5rem",{"_index":1809,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/RotationSliderComponent.html":{}}}],["0.6.0",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["0.6s",{"_index":4522,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.7",{"_index":4407,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["0.75rem",{"_index":545,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{}}}],["0.8",{"_index":805,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["0.875rem",{"_index":3312,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["0.8rem",{"_index":1800,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.9*255",{"_index":802,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["000000",{"_index":1802,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["020202",{"_index":1702,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["03",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["0c1687",{"_index":1711,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["0em",{"_index":2695,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["0px",{"_index":2470,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["0rem",{"_index":1801,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0s",{"_index":2699,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["0xff",{"_index":4773,"title":{},"body":{"components/ViewerComponent.html":{}}}],["1",{"_index":253,"title":{"components/AppComponent-1.html":{},"classes/AppPage-1.html":{},"interfaces/ColorScheme-1.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled-1.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState-1.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["1*255",{"_index":1189,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["1.0",{"_index":714,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["1.0.0",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":5012,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":4725,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["1.1.0",{"_index":4883,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.1.1",{"_index":5022,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":5011,"title":{},"body":{"dependencies.html":{}}}],["1.125rem",{"_index":1806,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["1.2",{"_index":4187,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["1.2.3",{"_index":5015,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":5021,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":4321,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["1.3.4",{"_index":5017,"title":{},"body":{"dependencies.html":{}}}],["1.3.6",{"_index":5026,"title":{},"body":{"dependencies.html":{}}}],["1.55rem",{"_index":2467,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1.5em",{"_index":1426,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["1.5px",{"_index":3607,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["1.5rem",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["1.6.1",{"_index":5020,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":499,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/CCFSpatialScene.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["10.0",{"_index":646,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["10.0.7",{"_index":4994,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":4996,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["1000",{"_index":1099,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["10000",{"_index":4795,"title":{},"body":{"components/ViewerComponent.html":{}}}],["104",{"_index":4438,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["10px",{"_index":1570,"title":{},"body":{"components/ColorBarComponent.html":{},"components/OrganSelectorComponent.html":{}}}],["10rem",{"_index":1804,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["10x",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["11.5",{"_index":690,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["110",{"_index":2286,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["12",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["1234",{"_index":3790,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["12rem",{"_index":4440,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["13",{"_index":2287,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"overview.html":{}}}],["136",{"_index":792,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["14px",{"_index":2454,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{}}}],["15",{"_index":671,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["1500",{"_index":1275,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["152px",{"_index":2469,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1565c0",{"_index":1628,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["15px",{"_index":2622,"title":{},"body":{"components/DualSliderComponent.html":{},"components/RotationSliderComponent.html":{}}}],["15rem",{"_index":2623,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["15x",{"_index":4412,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["16",{"_index":4770,"title":{},"body":{"components/ViewerComponent.html":{},"overview.html":{}}}],["16.13.1",{"_index":5028,"title":{},"body":{"dependencies.html":{}}}],["16.5rem",{"_index":2696,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["166",{"_index":1631,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["16px",{"_index":2456,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OrganSelectorComponent.html":{}}}],["16px/20px",{"_index":2761,"title":{},"body":{"components/HeaderComponent.html":{}}}],["17.5rem",{"_index":4189,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["18rem",{"_index":3936,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["1].rotation",{"_index":782,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["1a9850",{"_index":1653,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["1e88e5",{"_index":3155,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["1em",{"_index":2452,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["1px",{"_index":1571,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["1rem",{"_index":1422,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["1s",{"_index":2758,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}}}],["2",{"_index":1230,"title":{"components/ContentComponent-2.html":{}},"body":{"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":5031,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":4724,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["2.2.8",{"_index":5004,"title":{},"body":{"dependencies.html":{}}}],["2.25rem",{"_index":2411,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["2.2rem",{"_index":3156,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["2.5rem",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["2.75rem",{"_index":4190,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["20",{"_index":3004,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["20000",{"_index":1276,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["2019",{"_index":3344,"title":{},"body":{"components/InfoDialogComponent-1.html":{},"changelog.html":{},"license.html":{}}}],["2020",{"_index":3244,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["20em",{"_index":2617,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["2166ac",{"_index":1645,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["21908a",{"_index":1690,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["22",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["22.5rem",{"_index":2697,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["225",{"_index":3038,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["229",{"_index":793,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["24",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["24rem",{"_index":2698,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["25",{"_index":4265,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["25.5rem",{"_index":408,"title":{},"body":{"components/AppComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["25000",{"_index":4794,"title":{},"body":{"components/ViewerComponent.html":{}}}],["255",{"_index":644,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["25rem",{"_index":2962,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{}}}],["27",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["275s",{"_index":2462,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["28.5rem",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["28px",{"_index":2626,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["2d6379",{"_index":1691,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["2em",{"_index":2654,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["2px",{"_index":2459,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["2rem",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/OrganSelectorComponent.html":{}}}],["3",{"_index":712,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["3.0.6",{"_index":5007,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":5018,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":5006,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":3153,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"components/OrganSelectorComponent.html":{}}}],["3.6.2",{"_index":5009,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":791,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["31",{"_index":4855,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["32px",{"_index":2625,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OrganSelectorComponent.html":{}}}],["33",{"_index":2662,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["33.33",{"_index":542,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["333",{"_index":1632,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["35rem",{"_index":2700,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["380px",{"_index":3937,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["393768",{"_index":1692,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3d",{"_index":961,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/InfoDialogComponent-1.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["3d121f",{"_index":1701,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3px",{"_index":4185,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["3rem",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["3s",{"_index":2464,"title":{},"body":{"components/DropdownComponent.html":{}}}],["4",{"_index":4853,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["4.17.19",{"_index":5019,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":5014,"title":{},"body":{"dependencies.html":{}}}],["4.5rem",{"_index":2777,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/OrganSelectorComponent.html":{}}}],["400",{"_index":2760,"title":{},"body":{"components/HeaderComponent.html":{}}}],["404",{"_index":3753,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["40px",{"_index":3934,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["450b57",{"_index":1693,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["4a2484",{"_index":1710,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["4em",{"_index":2694,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["4px",{"_index":1803,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["4rem",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["5",{"_index":1633,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["5.5rem",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["50",{"_index":2963,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["500",{"_index":1033,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["500px",{"_index":3932,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["51",{"_index":5100,"title":{},"body":{"overview.html":{}}}],["54",{"_index":5099,"title":{},"body":{"overview.html":{}}}],["542788",{"_index":1662,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["5678",{"_index":3791,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["5em",{"_index":2476,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{}}}],["5px",{"_index":4406,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["5rem",{"_index":1810,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/StageNavComponent.html":{}}}],["5s",{"_index":2093,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["6",{"_index":4793,"title":{},"body":{"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["6.5.5",{"_index":5029,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3005,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/OldRuiData.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["60em",{"_index":3178,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}}}],["62",{"_index":5101,"title":{},"body":{"overview.html":{}}}],["625rem",{"_index":4348,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["64b5f6",{"_index":1641,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["666",{"_index":1634,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["66bb6a",{"_index":1624,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["67a9cf",{"_index":1646,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["69f0ae",{"_index":2659,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["6bab65",{"_index":1689,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["6e016b",{"_index":1678,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["6rem",{"_index":2753,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["7",{"_index":4768,"title":{},"body":{"components/ViewerComponent.html":{}}}],["7.5rem",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["70px",{"_index":2619,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["75rem",{"_index":2620,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["78223c",{"_index":1700,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["7rem",{"_index":1567,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["8",{"_index":4775,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["8.2.0",{"_index":5005,"title":{},"body":{"dependencies.html":{}}}],["8.2.4",{"_index":5000,"title":{},"body":{"dependencies.html":{}}}],["8.25rem",{"_index":2757,"title":{},"body":{"components/HeaderComponent.html":{}}}],["8.9",{"_index":711,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["80cbc4",{"_index":1639,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["83",{"_index":2288,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["833",{"_index":1635,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["85",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["883381",{"_index":1709,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["88419d",{"_index":1679,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8c6bb1",{"_index":1680,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8c96c6",{"_index":1681,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8em",{"_index":1427,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["8rem",{"_index":3152,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["9.5",{"_index":676,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["9.85rem",{"_index":2450,"title":{},"body":{"components/DropdownComponent.html":{}}}],["90",{"_index":2661,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["91cf60",{"_index":1654,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["95",{"_index":4323,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"changelog.html":{}}}],["990000",{"_index":1670,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["998ec3",{"_index":1663,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["9e9e9e",{"_index":3154,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["9ebcda",{"_index":1682,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["9rem",{"_index":4322,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["_afterconnected",{"_index":2166,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["_aggregatedataquerystatus",{"_index":2212,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_blank",{"_index":4342,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["_channelconfigs",{"_index":1292,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_error",{"_index":2830,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["_expanded",{"_index":3468,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_height",{"_index":1283,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_layers",{"_index":3093,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["_lighting",{"_index":762,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["_listdataquerystatus",{"_index":2213,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_loaders",{"_index":1288,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_measuredmargin",{"_index":3496,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_measuredwidth",{"_index":3490,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_msg",{"_index":1905,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["_onclick",{"_index":581,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onclick(e",{"_index":605,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["_onhover",{"_index":582,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onhover(e",{"_index":612,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["_onviewstatechange",{"_index":583,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onviewstatechange(event",{"_index":614,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["_opened",{"_index":3464,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_placement",{"_index":3818,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["_position",{"_index":3460,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_self",{"_index":4343,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["_sources",{"_index":1287,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["_termoccurencesdataquerystatus",{"_index":2214,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_width",{"_index":1282,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["a.highlighted",{"_index":1049,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["aabb",{"_index":1440,"title":{},"body":{"interfaces/Collision.html":{}}}],["ability",{"_index":3041,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["about.wrapper",{"_index":3311,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["above",{"_index":2012,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{},"license.html":{}}}],["absolute",{"_index":1805,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["abstract",{"_index":1278,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["acc",{"_index":4028,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["acc[current.id",{"_index":4032,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["accelerate",{"_index":3222,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["accent",{"_index":1418,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["accepting",{"_index":3546,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["accessible",{"_index":2200,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["accessors",{"_index":1538,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/SlicesInputComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["accordingly",{"_index":2681,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["accordion",{"_index":2944,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion'},{'name",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["accordion.component",{"_index":2973,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["accordion.component.html",{"_index":2946,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.scss",{"_index":2945,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts",{"_index":2943,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:20",{"_index":2952,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:25",{"_index":2951,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:30",{"_index":2949,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:35",{"_index":2953,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:38",{"_index":2955,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.module",{"_index":2994,"title":{},"body":{"modules/ImageViewerContentModule.html":{}}}],["accordion.module.ts",{"_index":2970,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["accordion/image",{"_index":2942,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["accumulated",{"_index":4029,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["accumulator",{"_index":4027,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["acknowledge",{"_index":3385,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["acknowledgements",{"_index":3272,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["action",{"_index":4331,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["activate",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":1241,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ViewerComponent.html":{}}}],["active/showing",{"_index":4517,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["activelayers",{"_index":4824,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["actual_component",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["add",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["addclass",{"_index":4684,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["added",{"_index":4030,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["addhubmapdatatostore",{"_index":973,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["additional",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["addjsonldtostore",{"_index":968,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["addn3tostore",{"_index":969,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["addrdfxmltostore",{"_index":970,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["adds",{"_index":1748,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["addspatialentity",{"_index":1055,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialentity(entity",{"_index":1064,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialobjectreference",{"_index":1056,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialobjectreference(ref",{"_index":1066,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialplacement",{"_index":1057,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialplacement(placement",{"_index":1070,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addsubtree",{"_index":4031,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsubtree(model.nodes",{"_index":4025,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsubtree(nodes",{"_index":4034,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsvgicon",{"_index":2834,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["aed581",{"_index":1643,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["afterviewinit",{"_index":836,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["against",{"_index":3535,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["age",{"_index":63,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["agerange",{"_index":76,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["aggregate",{"_index":9,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["aggregatedata",{"_index":2215,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["aggregatedata(filter",{"_index":2226,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["aggregatedataquerystatus",{"_index":2216,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["aggregateresult",{"_index":1,"title":{"interfaces/AggregateResult.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{}}}],["aims",{"_index":3233,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["aliases",{"_index":5103,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["alignment_datetime",{"_index":3760,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_id",{"_index":3761,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_operator_first_name",{"_index":3762,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_operator_last_name",{"_index":3763,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["allcompleted(states",{"_index":2264,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["allergy",{"_index":3300,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["allow",{"_index":1029,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["allowing",{"_index":4302,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["allows",{"_index":846,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["along",{"_index":1598,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["alongside",{"_index":4519,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["alpha",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":1924,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["always",{"_index":1950,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["ambientlight",{"_index":622,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["analysis",{"_index":3216,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["and/or",{"_index":5065,"title":{},"body":{"license.html":{}}}],["andreas",{"_index":3362,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["angle",{"_index":4533,"title":{},"body":{"components/StageNavComponent.html":{}}}],["angular",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["angular's",{"_index":2533,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["angular/animations",{"_index":2056,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":4995,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":3419,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["angular/cdk/overlay",{"_index":2567,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["angular/cdk/portal",{"_index":2568,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["angular/cdk/scrolling",{"_index":4364,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["angular/common",{"_index":554,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/ViewerModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":2149,"title":{},"body":{"modules/CoreModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["angular/compiler",{"_index":4997,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":3905,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4998,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":3906,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/button",{"_index":2785,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/checkbox",{"_index":1412,"title":{},"body":{"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["angular/material/dialog",{"_index":3175,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":2972,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["angular/material/form",{"_index":2483,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["angular/material/icon",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"modules/ImageViewerContentModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/input",{"_index":556,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/OntologySearchModule.html":{},"modules/SlicesInputModule.html":{}}}],["angular/material/progress",{"_index":4529,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["angular/material/radio",{"_index":4451,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/select",{"_index":2485,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["angular/material/slide",{"_index":3595,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/NameInputModule.html":{}}}],["angular/material/theming",{"_index":4344,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["angular/material/toolbar",{"_index":2787,"title":{},"body":{"modules/HeaderModule.html":{}}}],["angular/material/tooltip",{"_index":2789,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/tree",{"_index":4122,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["angular/platform",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4999,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":2053,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animate('.5s",{"_index":3445,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animate('1s",{"_index":2061,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["animate(0",{"_index":3444,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animation",{"_index":2460,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animations",{"_index":2023,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animationsenabled",{"_index":2063,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["annotate",{"_index":3235,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["anterior",{"_index":4542,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":992,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"changelog.html":{}}}],["app",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/OntologySelectionComponent.html":{},"modules/StoreModule.html":{}}}],["app.component",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}}}],["app.component.scss",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}}}],["app/core/services/theming/theming.service",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["app:bladder",{"_index":4135,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:brain",{"_index":4136,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:colon",{"_index":4137,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:heart",{"_index":4138,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:kidney",{"_index":4139,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:liver",{"_index":4140,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:lung",{"_index":4141,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:lymph_nodes",{"_index":4142,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:ovaries",{"_index":4144,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:small_intestine",{"_index":4145,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:spleen",{"_index":4147,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:stomach",{"_index":4148,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app:thymus",{"_index":4149,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["app_bootstrap_listener",{"_index":4634,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":102,"title":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["appearance",{"_index":3931,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["applied",{"_index":70,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["apply",{"_index":2646,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applybuttonclick",{"_index":2637,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applyfilter",{"_index":840,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["applyfilter(filter",{"_index":853,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["applyfilters",{"_index":2638,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["applyfilters(filters",{"_index":2684,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["applypropdefaults(props",{"_index":1273,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["applyspatialplacement(tx",{"_index":1093,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["applythemeclass",{"_index":4641,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["applythemeclass(cls",{"_index":4648,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["appmodule",{"_index":410,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":467,"title":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["appropriate",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":4345,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["args",{"_index":1257,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["args.filter(value",{"_index":2841,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["argsgenerator",{"_index":1350,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["argument",{"_index":2839,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["arguments",{"_index":1836,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["arising",{"_index":5095,"title":{},"body":{"license.html":{}}}],["array",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["array.from(searchresults.values",{"_index":4067,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["arraytostring",{"_index":2398,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(details",{"_index":2410,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(inputarray",{"_index":2401,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arrow",{"_index":2474,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["arxiv",{"_index":3252,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["asking",{"_index":1390,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["assets",{"_index":997,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["assets/icons/app/hubmap",{"_index":2355,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["assets/icons/filter.svg",{"_index":2357,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["assets/icons/hubmap",{"_index":2360,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["assets/icons/icons",{"_index":2362,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["associated",{"_index":951,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["async",{"_index":769,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["at(model.nodes",{"_index":4020,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["at(nodes",{"_index":4075,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["atlas",{"_index":3212,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["atscrollbottom",{"_index":4292,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["attach",{"_index":4706,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["authentication",{"_index":2756,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authors",{"_index":5088,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1807,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["autocolorindex",{"_index":4858,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["autocomplete",{"_index":3900,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autocompleteopen",{"_index":3864,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autohighlight",{"_index":789,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["automatically",{"_index":3342,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["available",{"_index":1742,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/SchemeDropdownComponent.html":{},"modules.html":{}}}],["await",{"_index":772,"title":{},"body":{"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["awaited",{"_index":3404,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["award",{"_index":3291,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"index.html":{}}}],["axis",{"_index":4390,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["b",{"_index":1048,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["b.highlighted",{"_index":1050,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["b2182b",{"_index":1651,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b35806",{"_index":1667,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b39ddb",{"_index":1625,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b4335a",{"_index":1699,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b5c740",{"_index":1688,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["back",{"_index":2015,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent-1.html":{}}}],["backbutton",{"_index":2773,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["backdrop",{"_index":3183,"title":{},"body":{"components/InfoButtonComponent-1.html":{}}}],["backdropclass",{"_index":3181,"title":{},"body":{"components/InfoButtonComponent-1.html":{}}}],["backend",{"_index":91,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["background",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":2816,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["bar",{"_index":1528,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{}}}],["bar'},{'name",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["bar.component",{"_index":1580,"title":{},"body":{"modules/ColorBarModule.html":{}}}],["bar.component.html",{"_index":1531,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.scss",{"_index":1530,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts",{"_index":1527,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:18",{"_index":1540,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:23",{"_index":1545,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:28",{"_index":1546,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:33",{"_index":1542,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:38",{"_index":1548,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:43",{"_index":1559,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:55",{"_index":1554,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:64",{"_index":1551,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.module",{"_index":1821,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["bar.module.ts",{"_index":1579,"title":{},"body":{"modules/ColorBarModule.html":{}}}],["bar/color",{"_index":1526,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["bars",{"_index":1563,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["base",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{}}}],["bbox",{"_index":1478,"title":{},"body":{"interfaces/Collision.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["bbox.left",{"_index":3487,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["bbox.right",{"_index":3486,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["bcbb",{"_index":3307,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["became",{"_index":3242,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["becomes",{"_index":3268,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["before",{"_index":1749,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["beginning",{"_index":4131,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["being",{"_index":3201,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/StoreModule.html":{}}}],["between",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["bf",{"_index":3726,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["bfd3e6",{"_index":1683,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["bftiff",{"_index":3725,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["bind",{"_index":609,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"dependencies.html":{}}}],["biomolecular",{"_index":3211,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bioportal",{"_index":3247,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bitwise",{"_index":4766,"title":{},"body":{"components/ViewerComponent.html":{}}}],["black",{"_index":2458,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{}}}],["bladder",{"_index":2361,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["block",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["blocks",{"_index":3321,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["blocksize",{"_index":482,"title":{"interfaces/BlockSize.html":{}},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["blocksizechange",{"_index":508,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocksizeinputcomponent",{"_index":324,"title":{"components/BlockSizeInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["blocksizeinputmodule",{"_index":548,"title":{"modules/BlockSizeInputModule.html":{}},"body":{"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["bloomington",{"_index":3364,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["blue",{"_index":4776,"title":{},"body":{"components/ViewerComponent.html":{}}}],["bluered",{"_index":1644,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["bmi",{"_index":64,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["bmirange",{"_index":77,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["board",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["body.id",{"_index":4022,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["bodycanvas",{"_index":839,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["bodyid",{"_index":1165,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["bodymodule",{"_index":421,"title":{"modules/BodyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyui",{"_index":565,"title":{"classes/BodyUI.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{}}}],["bodyuicomponent",{"_index":327,"title":{"components/BodyUiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["bodyuilayer",{"_index":572,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["bodyuimodule",{"_index":561,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyuiprops",{"_index":637,"title":{"interfaces/BodyUIProps.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["bodyuiviewstateprops",{"_index":633,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["bold",{"_index":539,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["booleaninput",{"_index":3417,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["boolean}).zoomopacity",{"_index":680,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["bootstrap",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["border",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["boston",{"_index":3370,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["both",{"_index":74,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["bottom",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["bound",{"_index":2550,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["bounding",{"_index":1201,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["box",{"_index":1797,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"changelog.html":{}}}],["boxes",{"_index":1202,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["brain",{"_index":2364,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["branch",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":883,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["brightness",{"_index":1745,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["brightness/transparency",{"_index":1719,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightness[0",{"_index":4780,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightness[1",{"_index":4781,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightness_2",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["brightness_5",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["brightnesschanged",{"_index":1726,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesshigh",{"_index":1731,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesshigh(value",{"_index":1778,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesslow",{"_index":1730,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesslow(value",{"_index":1774,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnessslideroptions",{"_index":1724,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesstoslider(brightness",{"_index":4777,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightnesstoslider(layer.brightness",{"_index":4811,"title":{},"body":{"components/ViewerComponent.html":{}}}],["browne",{"_index":3394,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["browse",{"_index":5098,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["browser.component",{"_index":4362,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser.component.html",{"_index":4291,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.scss",{"_index":4290,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts",{"_index":4284,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:20",{"_index":4299,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:25",{"_index":4298,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:30",{"_index":4301,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:35",{"_index":4300,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:41",{"_index":4303,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:47",{"_index":4309,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:52",{"_index":4312,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:59",{"_index":4307,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.get(browser.baseurl",{"_index":476,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["browser.module",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["browser.module.ts",{"_index":4360,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser/animations",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browser/results",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["browseranimationsmodule",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsermodule",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3239,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["bruce",{"_index":3355,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["bueckle",{"_index":3363,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["bug",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["button.component",{"_index":2426,"title":{},"body":{"modules/DrawerModule.html":{},"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":3166,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.scss",{"_index":3165,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts",{"_index":3163,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:15",{"_index":3170,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}}}],["button.component.ts:19",{"_index":4704,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:22",{"_index":4705,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:25",{"_index":4714,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:26",{"_index":3173,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}}}],["button.component.ts:34",{"_index":4712,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:36",{"_index":4711,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:38",{"_index":4702,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:59",{"_index":4708,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:69",{"_index":4709,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:79",{"_index":4707,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:91",{"_index":4710,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.module",{"_index":2791,"title":{},"body":{"modules/HeaderModule.html":{}}}],["button.module.ts",{"_index":3189,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button/info",{"_index":2790,"title":{},"body":{"modules/HeaderModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{}}}],["button/toggle",{"_index":2425,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button:active",{"_index":2658,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["börner",{"_index":3353,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["c",{"_index":5047,"title":{},"body":{"license.html":{}}}],["c6427e",{"_index":1708,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ca7670",{"_index":1698,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["cached",{"_index":3488,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["calc",{"_index":4726,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["calc(100",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["calc(50",{"_index":3449,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["calculated",{"_index":3481,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["calculates",{"_index":1847,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"classes/ImageViewerLayer.html":{}}}],["call",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["callback",{"_index":3891,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["called",{"_index":2299,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["calling",{"_index":4552,"title":{},"body":{"components/StageNavComponent.html":{}}}],["calls",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["candidate",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":1442,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["canvas",{"_index":638,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":863,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["captures",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["carousel",{"_index":4126,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["case",{"_index":879,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{}}}],["catch",{"_index":2829,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["ccf",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"index.html":{}}}],["ccf.spatial.body.id",{"_index":1175,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.bothsexes.id",{"_index":1169,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.female.id",{"_index":1168,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.femaleorgans.id",{"_index":1173,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.male.id",{"_index":1167,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.maleorgans.id",{"_index":1172,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatialentity",{"_index":1128,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.spatialobjectreference",{"_index":1126,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.spatialplacement",{"_index":1131,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.x('vhkidney').id",{"_index":3792,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ccf.x('vhleftkidney').id",{"_index":1196,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhrightkidney').id",{"_index":1193,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleen').id",{"_index":1198,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc1').id",{"_index":1204,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc2').id",{"_index":1205,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc3').id",{"_index":1206,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf_annotations",{"_index":3810,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ccfcontexturl",{"_index":989,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfdatabase",{"_index":906,"title":{"classes/CCFDatabase.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccfdatabaseoptions",{"_index":922,"title":{"interfaces/CCFDatabaseOptions.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["ccfdrawer",{"_index":3437,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ccfdrawercontainer",{"_index":1881,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["ccfowlurl",{"_index":987,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfowlurl.endswith('.n3",{"_index":1016,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfspatialgraph",{"_index":925,"title":{"classes/CCFSpatialGraph.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{}}}],["ccfspatialgraph(this",{"_index":1009,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfspatialscene",{"_index":929,"title":{"classes/CCFSpatialScene.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccfspatialscene(this",{"_index":1011,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["cdk",{"_index":2471,"title":{},"body":{"components/DropdownComponent.html":{}}}],["cdkportal",{"_index":2560,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cdr",{"_index":1894,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["cdr.markforcheck",{"_index":1966,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["ceil",{"_index":1784,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["cell",{"_index":3224,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["center",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["centers",{"_index":3281,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["centimeter",{"_index":1097,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["cff",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["change",{"_index":1713,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySelectionComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"index.html":{}}}],["changed",{"_index":1751,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":1588,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy",{"_index":1601,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1589,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["changedetectorref",{"_index":1895,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["changelog",{"_index":4882,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changerotation",{"_index":4397,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["changerotation(newrotation",{"_index":4391,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["changes",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.color",{"_index":4866,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.customizedcolor",{"_index":4870,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.push",{"_index":4876,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.selected",{"_index":4871,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.selection",{"_index":2580,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changes.valuerange",{"_index":2578,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changing",{"_index":4544,"title":{},"body":{"components/StageNavComponent.html":{}}}],["channel",{"_index":1885,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["channelconfig",{"_index":1238,"title":{"interfaces/ChannelConfig.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["channelconfigs",{"_index":1290,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelison",{"_index":4272,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelison.push(active",{"_index":4277,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelnames",{"_index":1271,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["channelnames.length",{"_index":1367,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["channels",{"_index":3131,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["channelschange",{"_index":4737,"title":{},"body":{"components/ViewerComponent.html":{}}}],["channelschange.emit(!isrgb",{"_index":4806,"title":{},"body":{"components/ViewerComponent.html":{}}}],["charge",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["checkbox",{"_index":1381,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["checkbox'},{'name",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["checkbox.component",{"_index":1435,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["checkbox.component.html",{"_index":1383,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1382,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.mat",{"_index":1417,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":329,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["checkboxes",{"_index":1379,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxmodule",{"_index":1429,"title":{"modules/CheckboxModule.html":{}},"body":{"modules/CheckboxModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["checkboxonchange",{"_index":3046,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["checkboxonchange(layer",{"_index":3057,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["checked",{"_index":1397,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["checkmark",{"_index":1419,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checks",{"_index":2046,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["chevron_left",{"_index":2770,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/OrganSelectorComponent.html":{}}}],["chevron_right",{"_index":4184,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["child",{"_index":544,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"miscellaneous/typealiases.html":{}}}],["children",{"_index":2726,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["choices",{"_index":2437,"title":{},"body":{"components/DropdownComponent.html":{}}}],["choose",{"_index":1834,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["circle",{"_index":1604,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["claim",{"_index":5091,"title":{},"body":{"license.html":{}}}],["class",{"_index":179,"title":{"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"classes/PictureInPictureViewer.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["class.ccf",{"_index":4700,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["class.cff",{"_index":2027,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["classend",{"_index":3455,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["classes",{"_index":468,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"classes/PictureInPictureViewer.html":{},"overview.html":{}}}],["classname",{"_index":1958,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["clean",{"_index":3666,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["cleans",{"_index":1914,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["clear",{"_index":1304,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["click",{"_index":1842,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["clicked",{"_index":1853,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["clickpos",{"_index":1866,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["clicks",{"_index":1844,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["clientheight",{"_index":4313,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{}}}],["clientwidth",{"_index":4791,"title":{},"body":{"components/ViewerComponent.html":{}}}],["clipboard",{"_index":3333,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["close",{"_index":1854,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{}}}],["close(target",{"_index":1861,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["closed",{"_index":3128,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["closeexpanded",{"_index":3512,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["closeopendone",{"_index":3520,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["closes",{"_index":1843,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["closesliderpopover(target",{"_index":2595,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["closeviewer",{"_index":2978,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["cloud_download",{"_index":2750,"title":{},"body":{"components/HeaderComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["cls",{"_index":4651,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["clsname",{"_index":504,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"interfaces/UserName.html":{}}}],["cluster_appmodule",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule",{"_index":549,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_declarations",{"_index":550,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_exports",{"_index":551,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_bodymodule",{"_index":558,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_exports",{"_index":560,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_imports",{"_index":559,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":901,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":902,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":903,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule",{"_index":1430,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_declarations",{"_index":1431,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_exports",{"_index":1432,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule",{"_index":1576,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule_declarations",{"_index":1577,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule_exports",{"_index":1578,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule",{"_index":1606,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_declarations",{"_index":1607,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_exports",{"_index":1609,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_imports",{"_index":1608,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule",{"_index":1814,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_declarations",{"_index":1815,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_exports",{"_index":1817,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_imports",{"_index":1816,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["cluster_colorschemepopupmodule",{"_index":1871,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_declarations",{"_index":1872,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_exports",{"_index":1874,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_imports",{"_index":1873,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["cluster_contentmodule",{"_index":2131,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_declarations",{"_index":2132,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_exports",{"_index":2134,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_imports",{"_index":2133,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":2141,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":2143,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":2142,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule",{"_index":2413,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule_declarations",{"_index":2414,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule_exports",{"_index":2415,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":2418,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":2419,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":2420,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule",{"_index":2478,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":2479,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":2480,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule",{"_index":2627,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_declarations",{"_index":2628,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_exports",{"_index":2629,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule",{"_index":2664,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_declarations",{"_index":2665,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_exports",{"_index":2667,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_imports",{"_index":2666,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["cluster_filterspopovermodule",{"_index":2702,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_declarations",{"_index":2703,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_exports",{"_index":2705,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_imports",{"_index":2704,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["cluster_headermodule",{"_index":2778,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":2779,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":2781,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_imports",{"_index":2780,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule",{"_index":2965,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_declarations",{"_index":2966,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_exports",{"_index":2968,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_imports",{"_index":2967,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule",{"_index":2990,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_declarations",{"_index":2991,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_exports",{"_index":2993,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_imports",{"_index":2992,"title":{},"body":{"modules/ImageViewerContentModule.html":{}}}],["cluster_imageviewerlayersmodule",{"_index":3079,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_declarations",{"_index":3080,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_exports",{"_index":3082,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_imports",{"_index":3081,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule",{"_index":3106,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule_declarations",{"_index":3107,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule_exports",{"_index":3108,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule",{"_index":3111,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule_exports",{"_index":3113,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule_imports",{"_index":3112,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule",{"_index":3157,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_declarations",{"_index":3158,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_exports",{"_index":3160,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_imports",{"_index":3159,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{}}}],["cluster_infobuttonmodule",{"_index":3185,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":3186,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":3188,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":3187,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["cluster_infodialogmodule",{"_index":3397,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":3398,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":3399,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule",{"_index":3590,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule_declarations",{"_index":3591,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule_exports",{"_index":3592,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule",{"_index":3610,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_declarations",{"_index":3611,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_exports",{"_index":3613,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_imports",{"_index":3612,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule",{"_index":3712,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule_declarations",{"_index":3713,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule_exports",{"_index":3714,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule",{"_index":3842,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_exports",{"_index":3844,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_imports",{"_index":3843,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule",{"_index":3939,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_declarations",{"_index":3940,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_exports",{"_index":3941,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule",{"_index":4101,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_declarations",{"_index":4102,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_exports",{"_index":4104,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_imports",{"_index":4103,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["cluster_ontologytreemodule",{"_index":4117,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_declarations",{"_index":4118,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_exports",{"_index":4119,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_organselectormodule",{"_index":4191,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_declarations",{"_index":4192,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_exports",{"_index":4193,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule",{"_index":4351,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule_declarations",{"_index":4352,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule_exports",{"_index":4353,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule",{"_index":4356,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_declarations",{"_index":4357,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_exports",{"_index":4359,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_imports",{"_index":4358,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["cluster_rightsidebarmodule",{"_index":4371,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_declarations",{"_index":4372,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_exports",{"_index":4374,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_imports",{"_index":4373,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule",{"_index":4413,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_declarations",{"_index":4414,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_exports",{"_index":4415,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule",{"_index":4445,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_declarations",{"_index":4446,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_exports",{"_index":4448,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_imports",{"_index":4447,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["cluster_slicesinputmodule",{"_index":4494,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_declarations",{"_index":4495,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_exports",{"_index":4496,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule",{"_index":4524,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_declarations",{"_index":4525,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_exports",{"_index":4526,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule",{"_index":4560,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_declarations",{"_index":4561,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_exports",{"_index":4563,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_imports",{"_index":4562,"title":{},"body":{"modules/StageNavModule.html":{}}}],["cluster_storedebugmodule",{"_index":4604,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_declarations",{"_index":4605,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_exports",{"_index":4606,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":4631,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":4632,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_viewermodule",{"_index":4817,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_declarations",{"_index":4818,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_exports",{"_index":4819,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["code",{"_index":3017,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"changelog.html":{}}}],["codex",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":3418,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["collapse",{"_index":3515,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["collapsed",{"_index":3427,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":3511,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["collider",{"_index":749,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["collider.ts",{"_index":1438,"title":{},"body":{"interfaces/Collision.html":{}}}],["collision",{"_index":1436,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{}}}],["collisioning",{"_index":1467,"title":{},"body":{"interfaces/Collision.html":{}}}],["colon",{"_index":2366,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["color",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["colorbarcomponent",{"_index":331,"title":{"components/ColorBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorbarmodule",{"_index":1575,"title":{"modules/ColorBarModule.html":{}},"body":{"modules/ColorBarModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["colorchange",{"_index":1537,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["colorchanged",{"_index":1532,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{}}}],["colorchanged(color",{"_index":1550,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{}}}],["coloridx",{"_index":1715,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["coloring",{"_index":4499,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["colorizing",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["colorpickerlaunchercomponent",{"_index":334,"title":{"components/ColorPickerLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorpickerlaunchermodule",{"_index":1605,"title":{"modules/ColorPickerLauncherModule.html":{}},"body":{"modules/ColorPickerLauncherModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules.html":{},"overview.html":{}}}],["colors",{"_index":1544,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["colors.foreach((color",{"_index":3036,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["colors[order[index",{"_index":4879,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["colorscheme",{"_index":1534,"title":{"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{}},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["colorscheme.colors",{"_index":1547,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["colorschemecontentscomponent",{"_index":337,"title":{"components/ColorSchemeContentsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorschemecontentsmodule",{"_index":1813,"title":{"modules/ColorSchemeContentsModule.html":{}},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["colorschemepopupcomponent",{"_index":339,"title":{"components/ColorSchemePopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorschemepopupmodule",{"_index":1610,"title":{"modules/ColorSchemePopupModule.html":{}},"body":{"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["colorschemeselection",{"_index":1714,"title":{"interfaces/ColorSchemeSelection.html":{}},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/SchemeDropdownComponent.html":{}}}],["colorvalues",{"_index":4273,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["colorvalues.push(color",{"_index":4278,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["column",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["combined",{"_index":2127,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":2258,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["combines",{"_index":2304,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["come",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":2181,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["comma",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsLabelComponent.html":{}}}],["commas",{"_index":2395,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["common",{"_index":3230,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"changelog.html":{},"index.html":{}}}],["common_options",{"_index":1782,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["commonmodule",{"_index":553,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/ViewerModule.html":{}}}],["compare",{"_index":2327,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["compatibility",{"_index":4628,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":2294,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/enumerations.html":{}}}],["completion",{"_index":3518,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["componenet",{"_index":3859,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["component",{"_index":101,"title":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{}}}],["component's",{"_index":2512,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["component.injector.get(overlaycontainer",{"_index":4682,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component.injector.get(renderer2",{"_index":4680,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component.injector.get(themingservice",{"_index":4669,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component.location.nativeelement",{"_index":4681,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component_template",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["componentref",{"_index":4654,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["components",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["composes",{"_index":3983,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["compositelayer",{"_index":720,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["computational",{"_index":3217,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["computations",{"_index":3950,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computes",{"_index":2565,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["concept",{"_index":3265,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["condition",{"_index":4059,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["conditions",{"_index":5072,"title":{},"body":{"license.html":{}}}],["config",{"_index":1330,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["config.isolated",{"_index":3660,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["configs",{"_index":1371,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["configuration",{"_index":3633,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["connect",{"_index":912,"title":{},"body":{"classes/CCFDatabase.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}}}],["connect(options",{"_index":934,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["connect(source",{"_index":3668,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["connected",{"_index":1919,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["connectedposition",{"_index":2566,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["connecting",{"_index":2195,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connection",{"_index":5096,"title":{},"body":{"license.html":{}}}],["connects",{"_index":936,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["consider",{"_index":4627,"title":{},"body":{"modules/StoreModule.html":{}}}],["console.log",{"_index":1510,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('starting",{"_index":1466,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":1523,"title":{},"body":{"interfaces/Collision.html":{}}}],["consortium",{"_index":3391,"title":{},"body":{"components/InfoDialogComponent-1.html":{},"license.html":{}}}],["const",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StoreDebugComponent.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["construction",{"_index":3223,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor",{"_index":586,"title":{},"body":{"classes/BodyUI.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"components/RightSidebarComponent.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["constructor(@inject(message_service_config",{"_index":3659,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["constructor(@optional",{"_index":2154,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["constructor(config",{"_index":3687,"title":{},"body":{"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}}}],["constructor(container",{"_index":4738,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor(data",{"_index":843,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["constructor(db",{"_index":1060,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{}}}],["constructor(deckprops",{"_index":587,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["constructor(defaulttheme",{"_index":4646,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["constructor(dialog",{"_index":3168,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}}}],["constructor(dialogref",{"_index":3197,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["constructor(drawer",{"_index":4701,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["constructor(http",{"_index":3957,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["constructor(messageservice",{"_index":1893,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["constructor(ontologysearchservice",{"_index":4086,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["constructor(ontologyservice",{"_index":3873,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(options",{"_index":921,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["constructor(original",{"_index":2712,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(overlay",{"_index":2509,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["constructor(page",{"_index":2766,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/LeftSidebarComponent.html":{}}}],["constructor(private",{"_index":1118,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["constructor(props",{"_index":1297,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["constructor(public",{"_index":1006,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/OntologySearchComponent.html":{}}}],["constructor(readonly",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["constructor(registry",{"_index":2843,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["constructor(source",{"_index":2224,"title":{},"body":{"injectables/DataState.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["constructor(stage",{"_index":4367,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["constructor(state",{"_index":3124,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["constructor(store",{"_index":4581,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["constructorparameters[0",{"_index":1259,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["contain",{"_index":2116,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerLayersComponent.html":{}}}],["contained",{"_index":4460,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["container",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["container.component.html",{"_index":1884,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["container.component.scss",{"_index":1883,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["container/container.component",{"_index":2424,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":341,"title":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["containerpayload",{"_index":2118,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":1970,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["containing",{"_index":51,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/ValueObject.html":{}}}],["contains",{"_index":512,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/NameInputComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["content",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["content'},{'name",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["content.component",{"_index":2671,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["content.component.html",{"_index":2004,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.scss",{"_index":2003,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts",{"_index":2636,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:16",{"_index":2641,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:21",{"_index":2640,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:26",{"_index":2643,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:31",{"_index":2642,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:36",{"_index":2979,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:38",{"_index":2648,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:41",{"_index":2980,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:44",{"_index":2981,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:46",{"_index":2645,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:49",{"_index":2982,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.module",{"_index":2707,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["content.module.ts",{"_index":2668,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["content/content.component",{"_index":1942,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{}}}],["content/filters",{"_index":2635,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{}}}],["content/image",{"_index":2976,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["content1",{"_index":1886,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["content2",{"_index":1887,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["content?.contains(target",{"_index":1863,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["contentchildren",{"_index":1939,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["contentchildren(contentcomponent",{"_index":1921,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["contentchildren(drawercomponent",{"_index":1930,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["contentcomponent",{"_index":343,"title":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":2108,"title":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["contentelement",{"_index":1825,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["contentmodule",{"_index":2130,"title":{"modules/ContentModule.html":{}},"body":{"modules/ContentModule.html":{},"modules.html":{},"overview.html":{}}}],["contents",{"_index":1721,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["contents'},{'name",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["contents.component",{"_index":1820,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["contents.component.html",{"_index":1723,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.scss",{"_index":1722,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts",{"_index":1717,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:106",{"_index":1746,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:118",{"_index":1754,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:21",{"_index":1735,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:26",{"_index":1741,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:31",{"_index":1738,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:36",{"_index":1743,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:41",{"_index":1756,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:46",{"_index":1757,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:51",{"_index":1759,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:52",{"_index":1762,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:59",{"_index":1764,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:60",{"_index":1767,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:67",{"_index":1769,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:68",{"_index":1771,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:70",{"_index":1733,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:91",{"_index":1744,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:98",{"_index":1752,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.module",{"_index":1877,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["contents.module.ts",{"_index":1818,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["contents/color",{"_index":1716,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{}}}],["contentsvisible",{"_index":2492,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["context",{"_index":988,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/OldRuiData.html":{}}}],["context.jsonld",{"_index":1003,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/OldRuiData.html":{}}}],["continues",{"_index":3266,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contract",{"_index":3309,"title":{},"body":{"components/InfoDialogComponent.html":{},"license.html":{}}}],["control",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{}}}],["controller",{"_index":648,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["controls",{"_index":1849,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{}}}],["convenience",{"_index":568,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["converting",{"_index":2404,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["convertoldruitojsonld(data",{"_index":3786,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["converts",{"_index":2884,"title":{},"body":{"interfaces/IdObject.html":{},"classes/ImageViewerLayer.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OldRuiData.html":{},"interfaces/ValueObject.html":{}}}],["coordinate",{"_index":3231,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"changelog.html":{},"index.html":{}}}],["coordinate_system",{"_index":731,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordinate_system.cartesian",{"_index":795,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordinatesystem",{"_index":794,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordination/office",{"_index":3289,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["copied",{"_index":3732,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["copies",{"_index":5067,"title":{},"body":{"license.html":{}}}],["copy",{"_index":5053,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":5046,"title":{},"body":{"license.html":{}}}],["core",{"_index":2155,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/color",{"_index":2983,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["core/models/image",{"_index":1602,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["core/models/ontology",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/data",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{}}}],["core/services/ontology",{"_index":3908,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/theming/theming.service",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/data/data.state",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{}}}],["core/store/ontology/ontology.state",{"_index":4097,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["core/store/page/page.state",{"_index":2769,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/LeftSidebarComponent.html":{}}}],["core/store/stage/stage.state",{"_index":4369,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["core/store/viewer/viewer.state",{"_index":3143,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["coremodule",{"_index":422,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2776,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["correctly",{"_index":3329,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["corresponds",{"_index":1587,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["count",{"_index":14,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["counter",{"_index":3640,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["counts",{"_index":957,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["cover",{"_index":4347,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["coverage",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["covid",{"_index":3728,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["covidtiff",{"_index":3727,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["create",{"_index":2511,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["create(original",{"_index":2718,"title":{},"body":{"classes/FlatNode.html":{}}}],["created",{"_index":2551,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["createentitycollections",{"_index":4848,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["creategraph",{"_index":1058,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["createlayerconfigs",{"_index":1334,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["createlayers",{"_index":4825,"title":{},"body":{"injectables/ViewerState.html":{}}}],["createlayers(ids",{"_index":4828,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["createloader",{"_index":1249,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createloader(source.type",{"_index":1320,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["createmodel(nodemap",{"_index":4011,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["createometiffloader",{"_index":3718,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["creates",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewerLayer.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/RightSidebarComponent.html":{},"interfaces/SearchResult.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["createselectionlabel(ontolgyselection",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["createvivviews",{"_index":1333,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["createzarrloader",{"_index":3716,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createzarrloader(info",{"_index":3736,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["creating",{"_index":1945,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["creation",{"_index":3172,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creation_date",{"_index":3808,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator",{"_index":3769,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_first_name",{"_index":3804,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_last_name",{"_index":3805,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_orcid",{"_index":3806,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["credits",{"_index":5040,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":2515,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cross",{"_index":3359,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["crosshairs",{"_index":2009,"title":{},"body":{"components/ContentComponent.html":{}}}],["css",{"_index":4760,"title":{},"body":{"components/ViewerComponent.html":{},"dependencies.html":{}}}],["csvreport",{"_index":1514,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":1516,"title":{},"body":{"interfaces/Collision.html":{}}}],["ctrlclick",{"_index":702,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{}}}],["ctrlkey",{"_index":700,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["cubegeometry",{"_index":743,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["cubes",{"_index":808,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["cuboid",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":852,"title":{},"body":{"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"interfaces/UserName.html":{},"miscellaneous/enumerations.html":{}}}],["currently",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"injectables/DataSourceService.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"changelog.html":{}}}],["currentstate",{"_index":707,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["currentstate.data",{"_index":716,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["currentstate.zoomopacity",{"_index":715,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["currentstates",{"_index":1352,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["currentstates[view.id",{"_index":1354,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["currentviewstate",{"_index":1376,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["cursor",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["custom",{"_index":3336,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["customizable",{"_index":3077,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["customizedcolor",{"_index":1793,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["cyberinfrastructure",{"_index":5041,"title":{},"body":{"index.html":{}}}],["d",{"_index":798,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.scenegraph",{"_index":810,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.wireframe",{"_index":811,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.x",{"_index":3812,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d.y",{"_index":3814,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d.z",{"_index":3816,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d1e5f0",{"_index":1647,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d47d60",{"_index":1707,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d7301f",{"_index":1671,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d73027",{"_index":1659,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d8daeb",{"_index":1664,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d9ef8b",{"_index":1655,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["damages",{"_index":5092,"title":{},"body":{"license.html":{}}}],["dark",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"classes/ImageViewerLayer.html":{},"components/InfoButtonComponent-1.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data",{"_index":36,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["data.aggregatedata$.subscribe",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["data.alignment_datetime",{"_index":3809,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_id",{"_index":3801,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_first_name",{"_index":3802,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_last_name",{"_index":3803,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_orcid",{"_index":3807,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.colorscheme.colors[0",{"_index":3029,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data.filter$.pipe(pluck('ontologyterms",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["data.id",{"_index":3028,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data.label",{"_index":2986,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["data.length",{"_index":787,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["data.listdata$.subscribe",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["data.organname",{"_index":2985,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["data.reference_organ_id",{"_index":3788,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.storage.googleapis.com/test",{"_index":4763,"title":{},"body":{"components/ViewerComponent.html":{}}}],["data.termoccurencesdata$.subscribe",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["data.tissue_object_rotation",{"_index":3796,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_object_size",{"_index":3795,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point",{"_index":3797,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.x",{"_index":3777,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.y",{"_index":3778,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.z",{"_index":3779,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.ts",{"_index":5110,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["data/data.state",{"_index":4613,"title":{},"body":{"modules/StoreModule.html":{}}}],["data/hubmap/pyramid_0.0.2/spraggins.ome.tif",{"_index":4764,"title":{},"body":{"components/ViewerComponent.html":{}}}],["data?.length",{"_index":677,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["dataaction",{"_index":2234,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["database",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["database.ts",{"_index":908,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["database.ts:106",{"_index":947,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:116",{"_index":942,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:126",{"_index":967,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:136",{"_index":965,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:147",{"_index":952,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:161",{"_index":945,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:171",{"_index":954,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:181",{"_index":950,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:190",{"_index":959,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:47",{"_index":932,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:49",{"_index":926,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:51",{"_index":923,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:58",{"_index":928,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:70",{"_index":935,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database/src/lib/ccf",{"_index":907,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["database/src/lib/hubmap/hubmap",{"_index":5114,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["database/src/lib/hubmap/old",{"_index":3756,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["database/src/lib/interfaces.ts",{"_index":7,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["database/src/lib/interfaces.ts:90",{"_index":2161,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/interfaces.ts:92",{"_index":2159,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/interfaces.ts:94",{"_index":2160,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/spatial",{"_index":4497,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["datafactory",{"_index":971,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["dataloading",{"_index":4295,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["dataquerystate",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["dataquerystate.completed",{"_index":2265,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["dataquerystate.running",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datasets",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":92,"title":{"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/ListResult.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchableItem.html":{},"components/ViewerComponent.html":{}}}],["datasourceservice",{"_index":160,"title":{"injectables/DataSourceService.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datastate",{"_index":167,"title":{"injectables/DataState.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"modules/StoreModule.html":{}}}],["datastatemodel",{"_index":2316,"title":{"interfaces/DataStateModel.html":{}},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datatype",{"_index":3574,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["date",{"_index":4500,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["db",{"_index":1062,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["db.getaggregateresults(filter",{"_index":2206,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getimageviewerdata(iri",{"_index":2208,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getlistresults(filter",{"_index":2205,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytermoccurences(filter",{"_index":2207,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["dbmi/viv",{"_index":1248,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{},"dependencies.html":{}}}],["dboptions",{"_index":2167,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["deal",{"_index":5056,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":5097,"title":{},"body":{"license.html":{}}}],["debug",{"_index":90,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StoreDebugComponent.html":{}}}],["debug'},{'name",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["debug.component",{"_index":4608,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug.component.html",{"_index":4580,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.scss",{"_index":4579,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts",{"_index":4577,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["debug.component.ts:21",{"_index":4583,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:26",{"_index":4587,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:36",{"_index":4585,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:39",{"_index":4582,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:60",{"_index":4584,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.module.ts",{"_index":4607,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug/store",{"_index":4576,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":88,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["decided",{"_index":4335,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["decides",{"_index":1407,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["decisions",{"_index":3053,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["deck",{"_index":573,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["deck(props",{"_index":667,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["deck.gl/core",{"_index":625,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":627,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["deck.gl/geo",{"_index":5001,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":5002,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":734,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["deckcallbackargs",{"_index":1261,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["deckprops",{"_index":590,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["declarations",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["decompress",{"_index":774,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["decoration",{"_index":2759,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/OntologySearchComponent.html":{}}}],["decorator",{"_index":630,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"dependencies.html":{}}}],["decorators",{"_index":608,"title":{},"body":{"classes/BodyUI.html":{},"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"components/DualSliderComponent.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"injectables/StageState.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["deep",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["default",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["default_block_size",{"_index":498,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["default_ccf_db_options",{"_index":927,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["default_color_schemes",{"_index":1712,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["default_color_schemes[0",{"_index":4421,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["default_filter",{"_index":2285,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["default_icons",{"_index":2353,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["default_rotation",{"_index":4384,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["default_slices_config",{"_index":4471,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["default_theme",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["defaultchannelconfig",{"_index":1272,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["defaulticondefinition",{"_index":2336,"title":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["defaultorder",{"_index":2997,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaults",{"_index":496,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["defaultscheme",{"_index":4857,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaulttheme",{"_index":4640,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["deferred",{"_index":3405,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["deficient",{"_index":757,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["defined",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"changelog.html":{}}}],["definition",{"_index":2340,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["definition.html",{"_index":2821,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["definition.url",{"_index":2820,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["degree",{"_index":3834,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["delay",{"_index":1028,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["delete",{"_index":4015,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["demo",{"_index":3269,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["demo_source",{"_index":4761,"title":{},"body":{"components/ViewerComponent.html":{}}}],["department",{"_index":3304,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dependencies",{"_index":412,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":491,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["descendants",{"_index":1922,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["describes",{"_index":1387,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["describing",{"_index":4505,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"interfaces/XYZTriplet.html":{}}}],["desired",{"_index":1224,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["detail",{"_index":4269,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["detailed",{"_index":3118,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["detailheight",{"_index":4797,"title":{},"body":{"components/ViewerComponent.html":{}}}],["details",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["detailslabelcomponent",{"_index":345,"title":{"components/DetailsLabelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["detailslabelmodule",{"_index":2412,"title":{"modules/DetailsLabelModule.html":{}},"body":{"modules/DetailsLabelModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["detailslabels",{"_index":3602,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["detailview",{"_index":4258,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["detailwidth",{"_index":4796,"title":{},"body":{"components/ViewerComponent.html":{}}}],["detect",{"_index":2581,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["detected",{"_index":2531,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detection",{"_index":1906,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["detector",{"_index":1899,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["determine",{"_index":4311,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["determines",{"_index":1543,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/LabeledSlideToggleComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["dev",{"_index":2020,"title":{},"body":{"components/ContentComponent.html":{}}}],["develop",{"_index":3213,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["developed",{"_index":3347,"title":{},"body":{"components/InfoDialogComponent-1.html":{},"index.html":{}}}],["development",{"_index":2197,"title":{},"body":{"injectables/DataSourceService.html":{},"components/InfoDialogComponent.html":{}}}],["developmentmode",{"_index":4626,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":4957,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":3171,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["dialog's",{"_index":3200,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["dialog'},{'name",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["dialog.component",{"_index":3176,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":3195,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["dialog.component.scss",{"_index":3194,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["dialog.component.ts",{"_index":3190,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["dialog.component.ts:13",{"_index":3199,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["dialog.component.ts:20",{"_index":3206,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["dialog.component.ts:21",{"_index":3205,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["dialog.component.ts:27",{"_index":3203,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["dialog.module",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":3400,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{}}}],["dialogref",{"_index":3196,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["dialogue",{"_index":3174,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}}}],["didzoom",{"_index":681,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["diff",{"_index":4316,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["different",{"_index":3547,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{}}}],["dim",{"_index":1229,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["dimension",{"_index":514,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["dimension_units",{"_index":3817,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["dimensional",{"_index":3320,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["dimensions",{"_index":487,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/CCFSpatialScene.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["dir",{"_index":4154,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["direct",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["directedgraph",{"_index":1063,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["direction",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["directive",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["directives",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["directly",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["director",{"_index":3290,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["disable",{"_index":752,"title":{},"body":{"classes/BodyUILayer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["disabled",{"_index":3567,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ViewerComponent.html":{}}}],["discrete",{"_index":1568,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{}}}],["diseases",{"_index":3302,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["display",{"_index":49,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DetailsLabelComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displayed",{"_index":1541,"title":{},"body":{"components/ColorBarComponent.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["displayformatter",{"_index":3868,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displayformatter(option",{"_index":3880,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displaying",{"_index":2019,"title":{},"body":{"components/ContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/StoreDebugComponent.html":{}}}],["displaylabel",{"_index":3995,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["displays",{"_index":1584,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/SpinnerOverlayComponent.html":{}}}],["distinct",{"_index":2266,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["distribute",{"_index":5063,"title":{},"body":{"license.html":{}}}],["div",{"_index":1585,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["doc",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":747,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["docollisions(scene",{"_index":1465,"title":{},"body":{"interfaces/Collision.html":{}}}],["docollisions(state.data",{"_index":815,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["document",{"_index":1841,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["document.getelementsbyclassname('carousel",{"_index":4159,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["document:click",{"_index":1829,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["document:click(target",{"_index":1838,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["documentation",{"_index":3248,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"license.html":{}}}],["dom",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["domsanitizer",{"_index":2800,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["don't",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["down",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["download",{"_index":37,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["downloadclicked",{"_index":2737,"title":{},"body":{"components/HeaderComponent.html":{}}}],["downloadtooltip",{"_index":39,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["downloadurl",{"_index":38,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["dracoloader",{"_index":738,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["dracoworkerloader",{"_index":739,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["draggable",{"_index":4387,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["drawer",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["drawer.close",{"_index":4722,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawer.closeexpanded",{"_index":4721,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawer.component.html",{"_index":3438,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["drawer.component.scss",{"_index":3439,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["drawer.open",{"_index":4723,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawer.position",{"_index":1979,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["drawer/drawer.component",{"_index":1943,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawercomponent",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":2079,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["drawercontainerschanged",{"_index":2115,"title":{"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawerexpanded",{"_index":2678,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["drawerinitialized",{"_index":2121,"title":{"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":423,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":2126,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":1978,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["drawertoggled",{"_index":2122,"title":{"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":2428,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown'},{'name",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["dropdown.component",{"_index":2486,"title":{},"body":{"modules/DropdownModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["dropdown.component.html",{"_index":2430,"title":{},"body":{"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2429,"title":{},"body":{"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":4417,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:18",{"_index":4423,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:23",{"_index":4422,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:28",{"_index":4424,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:33",{"_index":4429,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:38",{"_index":4425,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:46",{"_index":4427,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.module",{"_index":3087,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["dropdown.module.ts",{"_index":4449,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["dropdown/scheme",{"_index":3086,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{}}}],["dropdowncomponent",{"_index":349,"title":{"components/DropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["dropdownmodule",{"_index":2477,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["dual",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["dualslidercomponent",{"_index":351,"title":{"components/DualSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["dualslidermodule",{"_index":424,"title":{"modules/DualSliderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["due",{"_index":756,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["duration",{"_index":2092,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["during",{"_index":71,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["dynamic",{"_index":1561,"title":{},"body":{"components/ColorBarComponent.html":{},"dependencies.html":{}}}],["dynamically",{"_index":1583,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["e",{"_index":611,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.info",{"_index":832,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["e.isdragging",{"_index":660,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.object",{"_index":694,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.object['@id",{"_index":695,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.picked",{"_index":692,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e1b986",{"_index":1697,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e3b842",{"_index":1706,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e65100",{"_index":1630,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e91e63",{"_index":1629,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["each",{"_index":3642,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["ease",{"_index":2095,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OrganSelectorComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["easily",{"_index":4394,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["easy",{"_index":3334,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["edf8fb",{"_index":1684,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef6548",{"_index":1672,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef8a62",{"_index":1650,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef9a9a",{"_index":1640,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["effect",{"_index":2444,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["effects",{"_index":643,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["efficient",{"_index":3237,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["effort",{"_index":3278,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["element",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["element(by.css('ccf",{"_index":477,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["element.getboundingclientrect",{"_index":3485,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["element.nativeelement.contains(target",{"_index":2596,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["element.style.left",{"_index":4163,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["elementref",{"_index":856,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ViewerComponent.html":{}}}],["ellen",{"_index":3360,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["ellipsis",{"_index":2961,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["embedded",{"_index":4198,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["emit",{"_index":1400,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["emits",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{}}}],["emitted",{"_index":506,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["emitter",{"_index":507,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["emitters",{"_index":4288,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["emitting",{"_index":1750,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/DataSourceService.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["empty",{"_index":3974,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["empty_data",{"_index":3136,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["empty_result",{"_index":3140,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["enable",{"_index":3884,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["enabled",{"_index":2037,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["enables",{"_index":1560,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["enableselection",{"_index":1535,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["encapsulates",{"_index":4080,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["encoded",{"_index":2885,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["end",{"_index":1954,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["end?.expanded",{"_index":2090,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["end?.opened",{"_index":2089,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["enddrawers",{"_index":1980,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["enddrawers.length",{"_index":1983,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["enddrawers[0",{"_index":1986,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["endexpanded",{"_index":2088,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["enough",{"_index":3020,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["ensures",{"_index":3994,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enter",{"_index":2539,"title":{},"body":{"components/DualSliderComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["entered",{"_index":4474,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entering",{"_index":500,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entire",{"_index":4617,"title":{},"body":{"modules/StoreModule.html":{}}}],["entities",{"_index":80,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["entity",{"_index":84,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["entityid",{"_index":759,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["entityupdate",{"_index":4846,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["entry",{"_index":2960,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/UserName.html":{}}}],["entry.displaylabel.join().includes",{"_index":3923,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.label",{"_index":2956,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["entry.node.label.tolowercase",{"_index":3924,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.value",{"_index":2957,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["enum",{"_index":2290,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["enumerations",{"_index":5035,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":2182,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["environment.dboptions",{"_index":2192,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["environment.disabledbworker",{"_index":2186,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["environment.organnodes",{"_index":4051,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["environment.production",{"_index":2201,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"modules/StoreModule.html":{}}}],["environments/environment",{"_index":2183,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":1948,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["error('the",{"_index":2156,"title":{},"body":{"modules/CoreModule.html":{}}}],["error('theming",{"_index":4678,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["error(`multiple",{"_index":1957,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["error(`pyramid",{"_index":3747,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["errors",{"_index":1946,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["es",{"_index":1443,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["etc",{"_index":2125,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["eui",{"_index":3254,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"changelog.html":{},"index.html":{}}}],["eui/e2e/src/app.po.ts",{"_index":469,"title":{},"body":{"classes/AppPage.html":{}}}],["eui/e2e/src/app.po.ts:4",{"_index":474,"title":{},"body":{"classes/AppPage.html":{}}}],["eui/e2e/src/app.po.ts:8",{"_index":472,"title":{},"body":{"classes/AppPage.html":{}}}],["eui/src/app/app.component.ts",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.component.ts:28",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.component.ts:31",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.component.ts:35",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.module.ts",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/core/core.module.ts",{"_index":2147,"title":{},"body":{"modules/CoreModule.html":{}}}],["eui/src/app/core/header/header.component.ts",{"_index":2730,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:18",{"_index":2740,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:23",{"_index":2741,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:28",{"_index":2739,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:33",{"_index":2744,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:38",{"_index":2743,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.module.ts",{"_index":2783,"title":{},"body":{"modules/HeaderModule.html":{}}}],["eui/src/app/core/models/color",{"_index":1615,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["eui/src/app/core/models/flat",{"_index":2709,"title":{},"body":{"classes/FlatNode.html":{}}}],["eui/src/app/core/models/image",{"_index":2995,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/core/models/json",{"_index":2852,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["eui/src/app/core/models/ontology",{"_index":3856,"title":{},"body":{"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{}}}],["eui/src/app/core/services/data",{"_index":2164,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["eui/src/app/core/services/ontology",{"_index":3947,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/core/services/theming/theming.module.ts",{"_index":4633,"title":{},"body":{"modules/ThemingModule.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts",{"_index":4638,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:13",{"_index":4662,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:15",{"_index":4664,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:17",{"_index":4665,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:20",{"_index":4655,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:23",{"_index":4647,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:37",{"_index":4652,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:46",{"_index":4661,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:56",{"_index":4659,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:67",{"_index":4658,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:82",{"_index":4649,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/store/data/data.state.ts",{"_index":2209,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["eui/src/app/core/store/data/data.state.ts:101",{"_index":2250,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:103",{"_index":2253,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:107",{"_index":2244,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:111",{"_index":2270,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:116",{"_index":2255,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:118",{"_index":2247,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:120",{"_index":2272,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:123",{"_index":2267,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:130",{"_index":2225,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:155",{"_index":2235,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:169",{"_index":2230,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:181",{"_index":2227,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:193",{"_index":2232,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:92",{"_index":2239,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:94",{"_index":2237,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:96",{"_index":2240,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:98",{"_index":2256,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/icon",{"_index":2337,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts",{"_index":4107,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts:39",{"_index":4113,"title":{},"body":{"injectables/OntologyState.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts:42",{"_index":4115,"title":{},"body":{"injectables/OntologyState.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts:50",{"_index":4110,"title":{},"body":{"injectables/OntologyState.html":{}}}],["eui/src/app/core/store/store.module.ts",{"_index":4609,"title":{},"body":{"modules/StoreModule.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts",{"_index":4822,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:116",{"_index":4831,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:40",{"_index":4845,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:44",{"_index":4839,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:49",{"_index":4829,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:71",{"_index":4835,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:96",{"_index":4833,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/modules/body/body",{"_index":833,"title":{},"body":{"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{}}}],["eui/src/app/modules/body/body.module.ts",{"_index":562,"title":{},"body":{"modules/BodyModule.html":{}}}],["eui/src/app/modules/color",{"_index":1524,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["eui/src/app/modules/filters/filters",{"_index":2634,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{}}}],["eui/src/app/modules/image",{"_index":2941,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{}}}],["eui/src/app/modules/info/info",{"_index":3162,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["eui/src/app/modules/ontology",{"_index":3848,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["eui/src/app/modules/results",{"_index":4283,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["eui/src/app/modules/scheme",{"_index":4416,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts",{"_index":1377,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:16",{"_index":1386,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:21",{"_index":1391,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:26",{"_index":1395,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:31",{"_index":1399,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:38",{"_index":1404,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.module.ts",{"_index":1433,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts",{"_index":1878,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:101",{"_index":1913,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:111",{"_index":1903,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:120",{"_index":1915,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":1900,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":1931,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":1923,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":1927,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":1935,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":1938,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:58",{"_index":1918,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":1896,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:79",{"_index":1909,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts",{"_index":2021,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:100",{"_index":2050,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:113",{"_index":2045,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":2035,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":2036,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":2038,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":2039,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":2033,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":2051,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":2031,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:58",{"_index":2044,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:68",{"_index":2041,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/drawer.module.ts",{"_index":2421,"title":{},"body":{"modules/DrawerModule.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":3403,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:33",{"_index":3412,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":3411,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":3413,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:42",{"_index":3414,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:52",{"_index":3416,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:59",{"_index":3415,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/messages.ts",{"_index":2109,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/shared/components/drawer/toggle",{"_index":4699,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts",{"_index":2427,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:16",{"_index":2434,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:21",{"_index":2436,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:26",{"_index":2438,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:31",{"_index":2439,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:36",{"_index":2445,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:41",{"_index":2442,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:49",{"_index":2441,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.module.ts",{"_index":2481,"title":{},"body":{"modules/DropdownModule.html":{}}}],["eui/src/app/shared/components/dual",{"_index":2487,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["eui/src/app/shared/components/spinner",{"_index":4511,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{}}}],["eui/src/app/shared/services/message/message.service.ts",{"_index":3628,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:101",{"_index":3678,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:110",{"_index":3679,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:126",{"_index":3691,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:128",{"_index":3688,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:151",{"_index":3690,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:161",{"_index":3689,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:48",{"_index":3675,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:68",{"_index":3680,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:81",{"_index":3676,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:91",{"_index":3677,"title":{},"body":{"classes/MessageChannel.html":{}}}],["euler",{"_index":1087,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["event",{"_index":616,"title":{},"body":{"classes/BodyUI.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"license.html":{}}}],["event.checked",{"_index":1413,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["event.interactionstate?.iszooming",{"_index":706,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["event.key",{"_index":2608,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["event.pagey",{"_index":1867,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["event.target",{"_index":1837,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["event.viewstate",{"_index":718,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["event.viewstate.zoom",{"_index":710,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["eventemitter",{"_index":492,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{}}}],["eventemitter(true",{"_index":3470,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["events",{"_index":1406,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["everything",{"_index":2318,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["evolve",{"_index":3267,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["evt",{"_index":864,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["evt.preventdefault",{"_index":865,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["example",{"_index":3671,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}}}],["except",{"_index":3647,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["executionstrategy",{"_index":4629,"title":{},"body":{"modules/StoreModule.html":{}}}],["expand",{"_index":3514,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["expand/collapse",{"_index":3522,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expand_collapse_params_default",{"_index":3430,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expandable",{"_index":2711,"title":{},"body":{"classes/FlatNode.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["expandcollapsedone",{"_index":3524,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expanded",{"_index":2123,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":3466,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expanded/collapsed",{"_index":3423,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":3471,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expandedstate",{"_index":3424,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":3426,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":3476,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expands",{"_index":3508,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expansion",{"_index":2958,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["expert",{"_index":3279,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["exploration",{"_index":3253,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"changelog.html":{},"index.html":{}}}],["exploration.module",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["exploration.module.ts",{"_index":3849,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["exploration/ontology",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["exportas",{"_index":1880,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["exports",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["express",{"_index":5080,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":4507,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["extdeckprops",{"_index":1260,"title":{"interfaces/ExtDeckProps.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["extended",{"_index":3429,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":634,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SpatialSceneNode.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["external_link",{"_index":42,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["externalid",{"_index":3783,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["extracting",{"_index":2865,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["extraction",{"_index":3331,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["f",{"_index":872,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["f1a340",{"_index":1666,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f2f424",{"_index":1705,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f7f7f7",{"_index":1648,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f8fc9d",{"_index":1696,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["factor",{"_index":1095,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["factory",{"_index":3638,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["fade",{"_index":2443,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["faded",{"_index":2047,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["fadein",{"_index":2451,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["fadeinout",{"_index":2026,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["fafafa",{"_index":1428,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["fake",{"_index":4004,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["false",{"_index":682,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["false=right",{"_index":3579,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["fc8d59",{"_index":1658,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fdbb84",{"_index":1673,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fdd49e",{"_index":1674,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fddbc7",{"_index":1649,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["features",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["fee08b",{"_index":1657,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fee0b6",{"_index":1665,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fef0d9",{"_index":1675,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["female",{"_index":62,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["fetch",{"_index":2351,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["fetch(url",{"_index":3751,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["fetches",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["few",{"_index":754,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ffb74d",{"_index":1642,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffcc80",{"_index":1626,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffe31c",{"_index":1687,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffff8d",{"_index":1627,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffffbf",{"_index":1656,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["field",{"_index":22,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/Filter.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"interfaces/ValueObject.html":{}}}],["fields",{"_index":2866,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["file_format",{"_index":4502,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["file_subpath",{"_index":4504,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["files",{"_index":5055,"title":{},"body":{"license.html":{}}}],["fill",{"_index":2465,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["filler",{"_index":547,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["filter",{"_index":73,"title":{"interfaces/Filter.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["filter's",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(d",{"_index":1469,"title":{},"body":{"interfaces/Collision.html":{}}}],["filter(l",{"_index":830,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["filter(s",{"_index":1212,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter(value",{"_index":3915,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["filter?.debug",{"_index":1200,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter?.ontologyterms",{"_index":1177,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter?.sex",{"_index":1166,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filterbox",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["filterbox.removebox",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["filterchange",{"_index":842,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["filtered",{"_index":3651,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{}}}],["filteredresults",{"_index":3865,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filtering",{"_index":3240,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["filteronchange",{"_index":1384,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filteronchange(event",{"_index":1401,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filters",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["filters?.agerange[0",{"_index":2746,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.agerange[1",{"_index":2747,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.bmirange[0",{"_index":2748,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.bmirange[1",{"_index":2749,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.sex",{"_index":2745,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filterschange",{"_index":2639,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["filterscontentcomponent",{"_index":354,"title":{"components/FiltersContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["filterscontentmodule",{"_index":2663,"title":{"modules/FiltersContentModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filterspopovercomponent",{"_index":169,"title":{"components/FiltersPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["filterspopovermodule",{"_index":425,"title":{"modules/FiltersPopoverModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filtersvisible",{"_index":2675,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["finalize",{"_index":1310,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["find",{"_index":3985,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["find(nodemap[''].children",{"_index":4012,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["findids",{"_index":977,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["findids(this.store",{"_index":1035,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["finished",{"_index":2119,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["fired",{"_index":1858,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["first",{"_index":3263,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/RightSidebarComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/UserName.html":{}}}],["firstname",{"_index":3702,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/UserName.html":{}}}],["fit",{"_index":4346,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["fitness",{"_index":5084,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{}}}],["fixes",{"_index":3773,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["fixes/performance",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["fixoldruikidneydata(data",{"_index":3776,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["flat",{"_index":2716,"title":{},"body":{"classes/FlatNode.html":{}}}],["flatmap",{"_index":1254,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatmap(loaders",{"_index":1368,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatmap(vivviews",{"_index":1345,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatnode",{"_index":2708,"title":{"classes/FlatNode.html":{}},"body":{"classes/FlatNode.html":{}}}],["flatnode(original",{"_index":2729,"title":{},"body":{"classes/FlatNode.html":{}}}],["flex",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["float",{"_index":3314,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["floor",{"_index":1783,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["flow",{"_index":2855,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["fly",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":4491,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["following",{"_index":5071,"title":{},"body":{"license.html":{}}}],["font",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["footer",{"_index":3316,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["foreach",{"_index":3986,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(current.children",{"_index":4033,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(nodemap",{"_index":4009,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(organnodes",{"_index":4023,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["form",{"_index":960,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{}}}],["format",{"_index":3759,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["formatlabel",{"_index":3952,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["formatlabel(label",{"_index":3965,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formats",{"_index":3968,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formatted",{"_index":2406,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["formatter",{"_index":3883,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formcontrol",{"_index":3866,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["former",{"_index":3372,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["formsmodule",{"_index":3943,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["forwards",{"_index":2466,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["found",{"_index":3969,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foundational",{"_index":3219,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["framework",{"_index":3232,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"changelog.html":{},"index.html":{}}}],["free",{"_index":5051,"title":{},"body":{"license.html":{}}}],["friedman",{"_index":3381,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["from(this.getdb().then((db",{"_index":2204,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["fromeuler",{"_index":1084,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["front",{"_index":3605,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["full",{"_index":3192,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["fullscreen_exit",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["fully",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2308,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["fund",{"_index":3285,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["funded",{"_index":3283,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"index.html":{}}}],["furnished",{"_index":5070,"title":{},"body":{"license.html":{}}}],["further",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["gender",{"_index":59,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["generate",{"_index":1392,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["generation",{"_index":3214,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["generic",{"_index":3563,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["genericmessage",{"_index":2111,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":2112,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":2113,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["get(event",{"_index":3925,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["get(id",{"_index":941,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getaggregateresults",{"_index":913,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":96,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getaggregateresults(this.getids(filter",{"_index":1051,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getarguments",{"_index":2840,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getarguments(undefined",{"_index":2845,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getautocolor",{"_index":4826,"title":{},"body":{"injectables/ViewerState.html":{}}}],["getautocolor(index",{"_index":4830,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["getbackground",{"_index":3023,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["getbrightness",{"_index":2999,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["getbrightnesshigh",{"_index":1763,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getbrightnesslow",{"_index":1758,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getchannelconfigs",{"_index":2939,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getchannelnames",{"_index":2937,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getchildren",{"_index":3953,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getchildren(node",{"_index":3972,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getchildrenfunc",{"_index":3997,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["getcolor",{"_index":800,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getcontent",{"_index":1934,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["getcursor",{"_index":657,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["getdata",{"_index":4586,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["getdb",{"_index":2168,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getentityscenenodes",{"_index":1146,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getentityscenenodes(filter",{"_index":1152,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getexpandable",{"_index":2723,"title":{},"body":{"classes/FlatNode.html":{}}}],["getgradientstyle",{"_index":1558,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["gethasthicknessvalue",{"_index":4489,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["gethaswrappedcontent",{"_index":1937,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["getheight",{"_index":2931,"title":{},"body":{"classes/ImageViewer.html":{}}}],["geticon",{"_index":4713,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["getids",{"_index":914,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["getids(filter",{"_index":946,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getimageviewerdata",{"_index":915,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getimageviewerdata(id",{"_index":949,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getimageviewerdata(iri",{"_index":98,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getindexofmatch",{"_index":3954,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getindexofmatch(label",{"_index":3975,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getlabel",{"_index":2720,"title":{},"body":{"classes/FlatNode.html":{}}}],["getlayers",{"_index":3096,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["getleft",{"_index":3580,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["getlistresult",{"_index":980,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getlistresult(this.store",{"_index":1043,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getlistresults",{"_index":916,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getlistresults(filter",{"_index":94,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getloaders",{"_index":2935,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getmessages",{"_index":3649,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["getmessagesfromsource",{"_index":3672,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["getmessagesfromsource(source",{"_index":3652,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["getmessagesfromsources",{"_index":3673,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["getmessagesfromsources(sources",{"_index":3655,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["getmethodname",{"_index":2832,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getmethodname(undefined",{"_index":2847,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getontologytermoccurences",{"_index":917,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":953,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(this.getids(filter",{"_index":1052,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getpickinginfo",{"_index":723,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":727,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getrangelabel",{"_index":2563,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["getreferencebody",{"_index":1147,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferencebody(filter",{"_index":1154,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getreferenceorgans",{"_index":1148,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferenceorgans(filter",{"_index":1156,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getreferencescenenodes",{"_index":1149,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferencescenenodes(filter",{"_index":1158,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gets",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorPickerLauncherComponent.html":{},"injectables/DataSourceService.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["getscene",{"_index":918,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{}}}],["getscene(filter",{"_index":958,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getscenenode",{"_index":1150,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getscenenode(source",{"_index":1161,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getsources",{"_index":2933,"title":{},"body":{"classes/ImageViewer.html":{},"components/ViewerComponent.html":{}}}],["getspatialentities",{"_index":919,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["getspatialentities(filter",{"_index":964,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialentity",{"_index":1090,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getspatialentity(this.db.store",{"_index":1170,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getspatialentityforentity",{"_index":984,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialentityforentity(this.store",{"_index":1040,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialobjectreference",{"_index":1091,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["getspatialplacement",{"_index":1092,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["getter/setter",{"_index":3459,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["gettheme",{"_index":4642,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["getting",{"_index":3996,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["gettitletext",{"_index":470,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["gettransformationmatrix",{"_index":1059,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["gettransformationmatrix(sourceiri",{"_index":1075,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["gettransformmatrix",{"_index":797,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gettransparency",{"_index":1768,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getvivid",{"_index":1255,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["getwidth",{"_index":2929,"title":{},"body":{"classes/ImageViewer.html":{}}}],["github",{"_index":3246,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["give",{"_index":3641,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["given",{"_index":2405,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent-1.html":{}}}],["gizmo",{"_index":2013,"title":{},"body":{"components/ContentComponent.html":{}}}],["global",{"_index":2194,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SearchResult.html":{}}}],["globally",{"_index":2199,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis",{"_index":2193,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["globalthis.dboptions",{"_index":2196,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":3493,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["globalthis.setembedded",{"_index":4216,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["gloptions",{"_index":1363,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["gltf",{"_index":771,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.nodes?.find((n",{"_index":777,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene",{"_index":783,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene.nodes[gltf.scene.nodes.length",{"_index":781,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene?.nodes?.length",{"_index":780,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scenes",{"_index":784,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltfloader",{"_index":741,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltfscene",{"_index":1487,"title":{},"body":{"interfaces/Collision.html":{}}}],["goes",{"_index":2014,"title":{},"body":{"components/ContentComponent.html":{}}}],["grab",{"_index":662,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["grabbing",{"_index":661,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["gradient",{"_index":1555,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{}}}],["gradient(to",{"_index":3035,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["gradienthighlight",{"_index":1533,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["gradientstyle",{"_index":1539,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["grant",{"_index":3296,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["granted",{"_index":5050,"title":{},"body":{"license.html":{}}}],["graph",{"_index":910,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"modules.html":{}}}],["graph.ts",{"_index":1054,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:38",{"_index":1061,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:44",{"_index":1074,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:63",{"_index":1065,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:66",{"_index":1068,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:69",{"_index":1072,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:73",{"_index":1077,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graphology",{"_index":1080,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["greeenorange",{"_index":1622,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["green",{"_index":4774,"title":{},"body":{"components/ViewerComponent.html":{}}}],["greenred",{"_index":1652,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["griffin",{"_index":3365,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["group",{"_index":1378,"title":{},"body":{"components/CheckboxComponent.html":{},"components/StageNavComponent.html":{}}}],["grow",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["h",{"_index":1519,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":1522,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":1521,"title":{},"body":{"interfaces/Collision.html":{}}}],["half",{"_index":3428,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":2346,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["handlemessage",{"_index":1889,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["handlemessage(_msg",{"_index":1901,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["handlemessage(msg",{"_index":2040,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["handler",{"_index":2546,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["handles",{"_index":2403,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/FiltersContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["handling",{"_index":2513,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["happen",{"_index":2644,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["happy",{"_index":4622,"title":{},"body":{"modules/StoreModule.html":{}}}],["harvard",{"_index":3367,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["has3dobject",{"_index":1213,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hash",{"_index":4001,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["hasspatialentity",{"_index":85,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["hasterm",{"_index":1178,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.kidney",{"_index":1194,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.left_kidney",{"_index":1197,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.right_kidney",{"_index":1195,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.spleen",{"_index":1199,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasthicknessvalue",{"_index":4475,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["haswrappedcontent",{"_index":1892,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["header",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["header'},{'name",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["header.component",{"_index":2792,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":2735,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["header.component.scss",{"_index":2734,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["header/header.module",{"_index":2151,"title":{},"body":{"modules/CoreModule.html":{}}}],["headercomponent",{"_index":357,"title":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["headermodule",{"_index":2144,"title":{"modules/HeaderModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["heading",{"_index":3313,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["health",{"_index":3305,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["heart",{"_index":2368,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"components/InfoDialogComponent-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["height",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["heiland",{"_index":3377,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["helper",{"_index":1944,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["here",{"_index":2358,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/InfoDialogComponent-1.html":{}}}],["hereby",{"_index":5049,"title":{},"body":{"license.html":{}}}],["herr",{"_index":3356,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["hex",{"_index":3016,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ViewerComponent.html":{}}}],["hex.length",{"_index":4767,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hextorgbtriple(hex",{"_index":4765,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hextorgbtriple(layer.color",{"_index":4810,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hhsn316201300006w/hhsn27200002",{"_index":3310,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["hidden",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["hide",{"_index":2701,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["hidelimitlabels",{"_index":1786,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["hidepointerlabels",{"_index":1787,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["hides",{"_index":2686,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["hiding",{"_index":3191,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["high",{"_index":1765,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["highlightcolor",{"_index":790,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["highlighted",{"_index":45,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/ColorBarComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["highlighted.has(entity.entityid",{"_index":1211,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["highlighted.has(s['@id",{"_index":1046,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["highlightedentities",{"_index":81,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BodyUiComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["highlightedentities.concat([node.entityid",{"_index":896,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlightedentities.length",{"_index":893,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlightedentities[0",{"_index":894,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlighting",{"_index":1556,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["highvalue",{"_index":2493,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hit",{"_index":1515,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":1520,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":1518,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":1517,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":1439,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":1505,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":1503,"title":{},"body":{"interfaces/Collision.html":{}}}],["hive",{"_index":3277,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["hms",{"_index":1247,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{},"dependencies.html":{}}}],["holders",{"_index":5089,"title":{},"body":{"license.html":{}}}],["home",{"_index":2772,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["homeurl",{"_index":4199,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["hook",{"_index":2534,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["hooked",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":407,"title":{},"body":{"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["hostbinding",{"_index":493,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{}}}],["hostbinding('@expandcollapse",{"_index":3475,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostbinding('@fadeinout",{"_index":2067,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["hostbinding('@openclose",{"_index":3474,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostbinding('class",{"_index":503,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{}}}],["hostbinding('class.active",{"_index":4521,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["hostbinding('class.ccf",{"_index":3454,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["hostbinding('class.cff",{"_index":2062,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["hostbinding('style.margin",{"_index":2064,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["hostbindings",{"_index":528,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["hostlistener",{"_index":1857,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":3523,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostlistener('@openclose.done",{"_index":3519,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostlistener('document:click",{"_index":1859,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["hostlistener('document:mousemove",{"_index":2593,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlistener('document:touchstart",{"_index":2594,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlisteners",{"_index":1828,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["hover",{"_index":1574,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["hr",{"_index":3606,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["html",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":639,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["htmlelement",{"_index":641,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["htmlinputelement",{"_index":519,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["htmlinputelement).value",{"_index":2607,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["http",{"_index":3961,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":890,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":885,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":882,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0013702",{"_index":2289,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["http://purl.org/ccf/0.5",{"_index":3800,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhleftkidney",{"_index":884,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhrightkidney",{"_index":880,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleen",{"_index":886,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc1",{"_index":887,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc2",{"_index":888,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc3",{"_index":889,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://www.geneontology.org/formats/oboinowl#hasexactsynonym",{"_index":2863,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["http://www.w3.org/2000/01/rdf",{"_index":2860,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["httpclient",{"_index":3958,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["httpclientmodule",{"_index":2148,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://assets.hubmapconsortium.org",{"_index":1005,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":5038,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":3798,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["https://hubmapconsortium.org",{"_index":3229,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["https://portal.hubmapconsortium.org",{"_index":1004,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://purl.org/ccf/latest/ccf",{"_index":1002,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://purl.org/ccf/latest/ccf.owl",{"_index":1001,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["https://vitessce",{"_index":4762,"title":{},"body":{"components/ViewerComponent.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":4630,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":993,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmap/hubmap",{"_index":974,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapassetsurl",{"_index":998,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapdataservice",{"_index":991,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapdataurl",{"_index":996,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapportalurl",{"_index":995,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{}}}],["hubmaptoken",{"_index":1000,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["human",{"_index":3210,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["icon",{"_index":33,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/ListResult.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchableItem.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["icon.name",{"_index":4169,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["icondefinition",{"_index":2793,"title":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{}},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["iconregistry",{"_index":2801,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["iconregistrystate",{"_index":2802,"title":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"modules/StoreModule.html":{}}}],["icons",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["icons.ts",{"_index":2339,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["id",{"_index":28,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":27,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["identifiers",{"_index":3857,"title":{},"body":{"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["identity",{"_index":1136,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["idextractor",{"_index":2867,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idextractor(json",{"_index":2888,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idobject",{"_index":2851,"title":{"interfaces/IdObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idproperty",{"_index":2864,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["ids",{"_index":948,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/ViewerState.html":{}}}],["ids.length",{"_index":4862,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["idx",{"_index":4428,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["iec",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["if(data.reference_organ_id",{"_index":3793,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["if(this.handlemessage(msg",{"_index":2070,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["ii",{"_index":3357,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["image",{"_index":47,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/NameInputComponent.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["image_viewer",{"_index":44,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["image_viewer_layer_defaults",{"_index":4854,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["images",{"_index":3076,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["imageviewer",{"_index":1279,"title":{"classes/ImageViewer.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserItemComponent.html":{},"components/ViewerComponent.html":{}}}],["imageviewer:110",{"_index":4245,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:114",{"_index":4250,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:133",{"_index":4251,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:148",{"_index":4253,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:168",{"_index":4244,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:169",{"_index":4243,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:171",{"_index":4252,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:181",{"_index":4257,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:185",{"_index":4255,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:195",{"_index":4256,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:208",{"_index":4254,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:212",{"_index":4246,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:231",{"_index":4249,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:244",{"_index":4247,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:250",{"_index":4248,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:64",{"_index":4236,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:68",{"_index":4232,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:69",{"_index":4229,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:73",{"_index":4231,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:74",{"_index":4230,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:78",{"_index":4228,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:80",{"_index":4239,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:81",{"_index":4238,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:82",{"_index":4235,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:83",{"_index":4234,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:84",{"_index":4237,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:86",{"_index":4233,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:99",{"_index":4242,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imagevieweraccordioncomponent",{"_index":359,"title":{"components/ImageViewerAccordionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imagevieweraccordionmodule",{"_index":2964,"title":{"modules/ImageViewerAccordionModule.html":{}},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewercontentcomponent",{"_index":361,"title":{"components/ImageViewerContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewercontentmodule",{"_index":2989,"title":{"modules/ImageViewerContentModule.html":{}},"body":{"modules/ImageViewerContentModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerdata",{"_index":50,"title":{"interfaces/ImageViewerData.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["imageviewerlayer",{"_index":1594,"title":{"classes/ImageViewerLayer.html":{}},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageviewerlayer(layer",{"_index":4844,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageviewerlayerargs",{"_index":3002,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["imageviewerlayerrequiredargnames",{"_index":3025,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["imageviewerlayerscomponent",{"_index":362,"title":{"components/ImageViewerLayersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerlayersmodule",{"_index":2969,"title":{"modules/ImageViewerLayersModule.html":{}},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerlegendcomponent",{"_index":364,"title":{"components/ImageViewerLegendComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerlegendmodule",{"_index":3105,"title":{"modules/ImageViewerLegendModule.html":{}},"body":{"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewermodule",{"_index":426,"title":{"modules/ImageViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImageViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerpopovercomponent",{"_index":173,"title":{"components/ImageViewerPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerpopovermodule",{"_index":3114,"title":{"modules/ImageViewerPopoverModule.html":{}},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerprops",{"_index":1268,"title":{"interfaces/ImageViewerProps.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["immutable",{"_index":3980,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["implementation",{"_index":2238,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["implemented",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":835,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["implied",{"_index":5081,"title":{},"body":{"license.html":{}}}],["implies",{"_index":2124,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["import",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["imported",{"_index":2157,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["imports",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ViewerModule.html":{}}}],["improved",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["inc",{"_index":3384,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["include",{"_index":86,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{}}}],["included",{"_index":5075,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3351,"title":{},"body":{"components/InfoDialogComponent-1.html":{},"changelog.html":{}}}],["including",{"_index":3261,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"license.html":{}}}],["increased",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indiana",{"_index":3274,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"index.html":{}}}],["indicates",{"_index":2725,"title":{},"body":{"classes/FlatNode.html":{}}}],["indicator",{"_index":2176,"title":{},"body":{"injectables/DataSourceService.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["individual",{"_index":1393,"title":{},"body":{"components/CheckboxComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["infectious",{"_index":3301,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["infix",{"_index":2453,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["info_outline",{"_index":3179,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}}}],["infobuttoncomponent",{"_index":366,"title":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":2782,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infodialogcomponent",{"_index":368,"title":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["infodialogmodule",{"_index":427,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":89,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"index.html":{}}}],["infrastructure",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":3341,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["inherit",{"_index":2693,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["inherited",{"_index":4227,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["init",{"_index":3886,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["initial",{"_index":4493,"title":{},"body":{"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["initialization",{"_index":924,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["initializationstate",{"_index":3402,"title":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["initialize",{"_index":938,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initialize(component",{"_index":4653,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initialized",{"_index":2075,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializedeck",{"_index":2893,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["initializedeck(props",{"_index":1359,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["initializeimpl",{"_index":4643,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializeimpl(component",{"_index":4657,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializer",{"_index":4656,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializes",{"_index":2527,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["initializesliderpopover",{"_index":2500,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["initializestate",{"_index":724,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["initializing",{"_index":2120,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["initialviewstate",{"_index":1269,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["initiates",{"_index":1734,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["inject",{"_index":3207,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["inject(default_theme",{"_index":4671,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["inject(mat_dialog_data",{"_index":3204,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["injectable",{"_index":2162,"title":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/PageState.html":{},"injectables/StageState.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"injectables/ViewerState.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["injectables",{"_index":2163,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/PageState.html":{},"injectables/StageState.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"injectables/ViewerState.html":{},"overview.html":{}}}],["injected",{"_index":3202,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["injectiontoken",{"_index":3630,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["injectiontoken('default",{"_index":4668,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["inner",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["input",{"_index":494,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{}}}],["input'},{'name",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["input.component",{"_index":557,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.component.html",{"_index":501,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.scss",{"_index":502,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.ts",{"_index":485,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.ts:29",{"_index":4486,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:31",{"_index":3706,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:33",{"_index":531,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:34",{"_index":4484,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:36",{"_index":3704,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:38",{"_index":529,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:39",{"_index":4485,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:43",{"_index":530,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:44",{"_index":3705,"title":{},"body":{"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["input.component.ts:50",{"_index":533,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:51",{"_index":3708,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:53",{"_index":4488,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:59",{"_index":532,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:62",{"_index":4487,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.module",{"_index":3620,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["input.module.ts",{"_index":552,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.target",{"_index":518,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input/block",{"_index":484,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{}}}],["input/name",{"_index":3619,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/UserName.html":{}}}],["input/slices",{"_index":4381,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{}}}],["inputarray",{"_index":2407,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputarray.join",{"_index":2409,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputevent",{"_index":511,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputeventsinterval",{"_index":1789,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["inputs",{"_index":526,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["inputtarget",{"_index":517,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputtarget.value",{"_index":521,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputting",{"_index":3697,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inserted",{"_index":4013,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["inside",{"_index":2614,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["instance",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/SearchResult.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["instances",{"_index":3066,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["instant",{"_index":3422,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":2621,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["institute",{"_index":3299,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["integrated",{"_index":3340,"title":{},"body":{"components/InfoDialogComponent-1.html":{},"changelog.html":{}}}],["integration",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":645,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["intent",{"_index":4333,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["inter",{"_index":2762,"title":{},"body":{"components/HeaderComponent.html":{}}}],["interactions",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":704,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["interest",{"_index":4171,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"changelog.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AggregateResult.html":{},"interfaces/BlockSize.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/StageStateModel.html":{},"interfaces/TiffInfo.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}},"body":{"interfaces/AggregateResult.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/TiffInfo.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/BlockSize.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/StageStateModel.html":{},"interfaces/TiffInfo.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"overview.html":{}}}],["intestine",{"_index":4146,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["intestine.svg",{"_index":2382,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["invisible",{"_index":2034,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["involved",{"_index":3325,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["iri",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["isdark",{"_index":3000,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["isdemo",{"_index":4733,"title":{},"body":{"components/ViewerComponent.html":{}}}],["isdragging",{"_index":658,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["islight",{"_index":3001,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["isloading",{"_index":2947,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["isnan(this.slicesconfig.thickness",{"_index":4476,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["isolated",{"_index":3636,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["isrgb",{"_index":4280,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["isselected",{"_index":4173,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["isselected(icon",{"_index":4172,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["issliderinitialized",{"_index":2494,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isslideropen",{"_index":2495,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["issues",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":705,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["it's",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":56,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["item'},{'name",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["item.component",{"_index":4355,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{}}}],["item.component.html",{"_index":4327,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.scss",{"_index":4326,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts",{"_index":4325,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:19",{"_index":4330,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:24",{"_index":4332,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:30",{"_index":4334,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.module",{"_index":4361,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["item.module.ts",{"_index":4354,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{}}}],["item/results",{"_index":4324,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["items",{"_index":93,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataSource.html":{},"components/DetailsLabelComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["iu",{"_index":3350,"title":{},"body":{"components/InfoDialogComponent-1.html":{},"changelog.html":{}}}],["jain",{"_index":3389,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["jeffrey",{"_index":3386,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["jim",{"_index":3378,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["join",{"_index":2408,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/OntologySearchComponent.html":{}}}],["json",{"_index":2854,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/StoreDebugComponent.html":{},"interfaces/ValueObject.html":{}}}],["jsondict",{"_index":5108,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["jsonld",{"_index":3782,"title":{},"body":{"interfaces/OldRuiData.html":{},"dependencies.html":{}}}],["jsonontology",{"_index":4040,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsonontology.pipe",{"_index":4043,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsonontologynode",{"_index":2859,"title":{"interfaces/JsonOntologyNode.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["jsontoontologynode",{"_index":3989,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsontoontologynode(json",{"_index":2887,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["july",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3243,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["justify",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["katy",{"_index":3352,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["keep",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/InfoDialogComponent-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keeping",{"_index":2257,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["keeps",{"_index":2680,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/StageNavComponent.html":{}}}],["key",{"_index":513,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/NameInputComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/StoreDebugComponent.html":{},"interfaces/UserName.html":{},"miscellaneous/typealiases.html":{}}}],["key/value",{"_index":2649,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["keyboard",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["keyboard_arrow_left",{"_index":4716,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["keyboard_arrow_right",{"_index":4715,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["keyboardevent",{"_index":2536,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["keyby",{"_index":3987,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keyby(nodes",{"_index":4047,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keyframes",{"_index":2448,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["keys",{"_index":1366,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["keys.reduce((configs",{"_index":1370,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["kidney",{"_index":1180,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["kind",{"_index":5079,"title":{},"body":{"license.html":{}}}],["kindly",{"_index":3392,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["knowledge",{"_index":3383,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["known",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["kristen",{"_index":3393,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["kv[0",{"_index":4602,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kv[1",{"_index":4603,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kvlist",{"_index":4589,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kvpair",{"_index":4590,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["l",{"_index":831,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["label",{"_index":15,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["label'},{'name",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["label.component",{"_index":2417,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label.component.html",{"_index":2397,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.scss",{"_index":2396,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts",{"_index":2390,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:14",{"_index":2400,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:19",{"_index":2399,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:27",{"_index":2402,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.length",{"_index":4073,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.module",{"_index":3625,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["label.module.ts",{"_index":2416,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label.substr(0",{"_index":4070,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(index",{"_index":4071,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().includes(searchvalue",{"_index":4066,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().indexof(searchvalue",{"_index":4068,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label/details",{"_index":2389,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/LeftSidebarModule.html":{}}}],["labeled",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["labeledslidetogglecomponent",{"_index":370,"title":{"components/LabeledSlideToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["labeledslidetogglemodule",{"_index":3589,"title":{"modules/LabeledSlideToggleModule.html":{}},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["labelextractor",{"_index":2877,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelextractor(json",{"_index":2890,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelproperty",{"_index":2876,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labels",{"_index":1394,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/OntologyNode.html":{}}}],["labels[0",{"_index":3587,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[0]}}{{labels[1",{"_index":3588,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[1",{"_index":3582,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labs/data",{"_index":4611,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/data/decorators",{"_index":2274,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["labs/data/repositories",{"_index":2275,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["labs/data/typings",{"_index":3984,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/utils",{"_index":4849,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["last",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/UserName.html":{}}}],["lasthovered",{"_index":574,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["lastname",{"_index":3703,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/UserName.html":{}}}],["later",{"_index":4008,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["latest",{"_index":2245,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{},"index.html":{}}}],["launch",{"_index":1603,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher",{"_index":1590,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["launcher.component",{"_index":1612,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["launcher.component.html",{"_index":1592,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":1591,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":1582,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts:20",{"_index":1595,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts:25",{"_index":1596,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.module",{"_index":3088,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["launcher.module.ts",{"_index":1611,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["launcher/color",{"_index":1581,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["launchinfodialog",{"_index":3167,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}}}],["layer",{"_index":632,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer's",{"_index":1600,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["layer.color",{"_index":4867,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.colorscheme.colors.indexof(layer.color",{"_index":4875,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.customizedcolor",{"_index":4869,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.defaultorder",{"_index":4868,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.id",{"_index":3068,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ViewerComponent.html":{}}}],["layer.id.includes(getvivid(viewportid",{"_index":1373,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layer.label",{"_index":3075,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{}}}],["layer.selected",{"_index":3071,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.ts",{"_index":719,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["layer.ts:102",{"_index":3019,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:116",{"_index":728,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:24",{"_index":3010,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:25",{"_index":3011,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:27",{"_index":3008,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:28",{"_index":3007,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:29",{"_index":3006,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:30",{"_index":3014,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:32",{"_index":3012,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:33",{"_index":3009,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:34",{"_index":3013,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:35",{"_index":3003,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:47",{"_index":3024,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:70",{"_index":3015,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:75",{"_index":726,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:77",{"_index":729,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:85",{"_index":730,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:95",{"_index":3022,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layerchange",{"_index":1593,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["layerchange.emit(layer",{"_index":1796,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["layerchanged",{"_index":3047,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layerchanged(layer",{"_index":3061,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layerconfig",{"_index":1267,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["layerconfigs",{"_index":1295,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerconfigs.length",{"_index":1344,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layerconfigs[index",{"_index":1348,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layerfilter",{"_index":1360,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerfilter(undefined",{"_index":2915,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerfilterargs",{"_index":1263,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["layername",{"_index":722,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["layers",{"_index":649,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["layers'},{'name",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["layers(layers",{"_index":3099,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["layers.component",{"_index":3085,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["layers.component.html",{"_index":3045,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.scss",{"_index":3044,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts",{"_index":3040,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:21",{"_index":3050,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:26",{"_index":3049,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:31",{"_index":3054,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:36",{"_index":3056,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:44",{"_index":3064,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:54",{"_index":3058,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:67",{"_index":3062,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.filter(layer",{"_index":4838,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layers.length",{"_index":4808,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers.map(layer",{"_index":4843,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layers.module",{"_index":2975,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerModule.html":{}}}],["layers.module.ts",{"_index":3084,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["layers.reduce((result",{"_index":4809,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers/image",{"_index":2974,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerModule.html":{}}}],["layers].sort((v1",{"_index":3101,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["left",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["left.closeexpanded",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["left.open",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["left.px",{"_index":2029,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["left_kidney",{"_index":1184,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["leftmargin",{"_index":2065,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["leftsidebarcomponent",{"_index":374,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["leftsidebarmodule",{"_index":3609,"title":{"modules/LeftSidebarModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["legend'},{'name",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["legend.component",{"_index":3110,"title":{},"body":{"modules/ImageViewerLegendModule.html":{}}}],["legend.component.html",{"_index":3092,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.scss",{"_index":3091,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts",{"_index":3090,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:18",{"_index":3094,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:21",{"_index":3097,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:22",{"_index":3095,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.module",{"_index":3161,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{}}}],["legend.module.ts",{"_index":3109,"title":{},"body":{"modules/ImageViewerLegendModule.html":{}}}],["legend/image",{"_index":3089,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["length",{"_index":1343,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["leonard",{"_index":3358,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["level",{"_index":2714,"title":{},"body":{"classes/FlatNode.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"changelog.html":{}}}],["levels",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["lexically",{"_index":3898,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["liability",{"_index":5093,"title":{},"body":{"license.html":{}}}],["liable",{"_index":5090,"title":{},"body":{"license.html":{}}}],["library",{"_index":3396,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["license",{"_index":5044,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":3887,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["light",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ImageViewerLayer.html":{}}}],["lighter",{"_index":2771,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["lightingeffect",{"_index":623,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["limitation",{"_index":5058,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4896,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":4477,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["line",{"_index":665,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["line:no",{"_index":1860,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["linear",{"_index":3034,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["link",{"_index":2732,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["linkage",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["linkchildren",{"_index":4014,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["linkchildren(nodemap",{"_index":4003,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["links",{"_index":3998,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["lisel",{"_index":3354,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["list",{"_index":24,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"components/StoreDebugComponent.html":{}}}],["list')[0",{"_index":4160,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["listdata",{"_index":2217,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listdata(filter",{"_index":2229,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listdataquerystatus",{"_index":2218,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listen",{"_index":3635,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["listener",{"_index":2309,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["listeners",{"_index":1911,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/StoreDebugComponent.html":{}}}],["listens",{"_index":1840,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["listresult",{"_index":26,"title":{"interfaces/ListResult.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["literal",{"_index":606,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyStateModel.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["liver",{"_index":2371,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["load",{"_index":735,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Collision.html":{},"components/ImageViewerPopoverComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SpatialSceneNode.html":{}}}],["load(model.scenegraph",{"_index":773,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["loaded",{"_index":940,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["loader",{"_index":1245,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{}}}],["loader.channelnames",{"_index":1369,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["loader.isrgb",{"_index":4805,"title":{},"body":{"components/ViewerComponent.html":{}}}],["loaderpromises",{"_index":1318,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["loaders",{"_index":1285,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders.gl/core",{"_index":737,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":740,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":742,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.length",{"_index":4268,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders[0",{"_index":4270,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders[0].isrgb",{"_index":4281,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaderselection",{"_index":4271,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaderselection.push",{"_index":4276,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loadertype",{"_index":1250,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loadertype.bftiff",{"_index":3743,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.covidtiff",{"_index":3744,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.omezarr",{"_index":3737,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.statictiff",{"_index":3745,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.staticzarr",{"_index":3735,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.tiff",{"_index":3741,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["loadertype.tiff2",{"_index":3742,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.zarr",{"_index":3734,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadgltf(model",{"_index":770,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["loading",{"_index":3139,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["loadoffsets(offsets",{"_index":3746,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadoffsets(url",{"_index":3749,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadontology",{"_index":3955,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["loads",{"_index":3978,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["local_link",{"_index":43,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["located",{"_index":3453,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["location",{"_index":4078,"title":{},"body":{"interfaces/OntologySelection.html":{}}}],["lodash",{"_index":2856,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"dependencies.html":{}}}],["log",{"_index":5039,"title":{},"body":{"index.html":{}}}],["logged",{"_index":2742,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loggedin",{"_index":2736,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logic",{"_index":3435,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["login",{"_index":2751,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logo",{"_index":2354,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{}}}],["logo.svg",{"_index":2356,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["logout",{"_index":2752,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lomap",{"_index":3988,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lomap(ontology",{"_index":4045,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["look",{"_index":2775,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["looks",{"_index":3982,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup",{"_index":3956,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["lookup(nodes",{"_index":3979,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["low",{"_index":1760,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["low/high",{"_index":2582,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lower",{"_index":2518,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lowerbound",{"_index":1472,"title":{},"body":{"interfaces/Collision.html":{}}}],["lowerbound[i",{"_index":1484,"title":{},"body":{"interfaces/Collision.html":{}}}],["lowvalue",{"_index":2496,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["luma.gl/core",{"_index":744,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["luma.gl/experimental",{"_index":746,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["lung",{"_index":2373,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["lymph",{"_index":4143,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["lymph_nodes",{"_index":2375,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["m",{"_index":4490,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["ma",{"_index":3371,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["macklin",{"_index":3375,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["made",{"_index":1599,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["magma",{"_index":1695,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["main",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["make",{"_index":2198,"title":{},"body":{"injectables/DataSourceService.html":{},"components/ImageViewerLayersComponent.html":{}}}],["male",{"_index":61,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["managed",{"_index":1933,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["manages",{"_index":4639,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["many",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map((s",{"_index":1044,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["map(createmodel",{"_index":4049,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(entities",{"_index":4841,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map(layers",{"_index":4837,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map(model",{"_index":1470,"title":{},"body":{"interfaces/Collision.html":{}}}],["map(nodes",{"_index":4046,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(ontology",{"_index":4044,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(partial(prunemodel",{"_index":4050,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(searchresults",{"_index":3918,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["map(state",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["map(states",{"_index":2263,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["mapping",{"_index":1619,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/InfoDialogComponent.html":{}}}],["maps",{"_index":3220,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["margin",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["margin2",{"_index":3432,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["mass",{"_index":3771,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["mat",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["mat.transformaspoint",{"_index":1473,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":1475,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat_dialog_data",{"_index":3208,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["matautocompletemodule",{"_index":3945,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matautocompleteselectedevent",{"_index":3889,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["matbuttonmodule",{"_index":2784,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["match",{"_index":2755,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["matcheckboxchange",{"_index":1402,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["matcheckboxmodule",{"_index":1434,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["matching",{"_index":99,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["matdialog",{"_index":3169,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}}}],["matdialogmodule",{"_index":3401,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":3198,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["material",{"_index":2774,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["matexpansionmodule",{"_index":2971,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["matformfieldmodule",{"_index":2482,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["math.gl/core",{"_index":629,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":1512,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(...this.selection",{"_index":2586,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.max(n",{"_index":1483,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.min(...this.selection",{"_index":2584,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(math.max(1",{"_index":709,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["math.min(n",{"_index":1480,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.trunc(slider_max",{"_index":4779,"title":{},"body":{"components/ViewerComponent.html":{}}}],["maticonmodule",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/ViewerModule.html":{}}}],["maticonregistry",{"_index":2799,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["matinputmodule",{"_index":555,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/OntologySearchModule.html":{},"modules/SlicesInputModule.html":{}}}],["matprogressspinnermodule",{"_index":4528,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["matradiomodule",{"_index":4450,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"modules/StageNavModule.html":{}}}],["matrix",{"_index":686,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{}}}],["matrix.copy(scene.matrix",{"_index":1450,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.gettranslation",{"_index":689,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["matrix.identity",{"_index":1451,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.multiplyright(rotationmatrix",{"_index":1457,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.scale(scene.scale",{"_index":1459,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.translate(scene.translation",{"_index":1453,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4",{"_index":628,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["matrix4().fromquaternion(scene.rotation",{"_index":1456,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4().identity",{"_index":1448,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4().rotatex(toradians(90)).multiplyleft(transform",{"_index":1221,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["matrix4(model.transformmatrix",{"_index":1471,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(node.transformmatrix",{"_index":687,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["matrix4(worldmatrix).multiplyright(matrix",{"_index":1460,"title":{},"body":{"interfaces/Collision.html":{}}}],["matselectmodule",{"_index":2484,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["matslidetogglemodule",{"_index":3594,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/NameInputModule.html":{}}}],["mattoolbarmodule",{"_index":2786,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodule",{"_index":2788,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["mattreemodule",{"_index":4121,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["max",{"_index":2468,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["maxhits",{"_index":1511,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxrotationx",{"_index":672,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["maxselected",{"_index":4860,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["mc",{"_index":3349,"title":{},"body":{"components/InfoDialogComponent-1.html":{},"changelog.html":{}}}],["measured",{"_index":3489,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["measuredmargin",{"_index":3491,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["measuredwidth",{"_index":3482,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["medical",{"_index":3368,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["medicine",{"_index":3295,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["member",{"_index":3549,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["members",{"_index":3373,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["menu",{"_index":1718,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["merchantability",{"_index":5083,"title":{},"body":{"license.html":{}}}],["merge",{"_index":5061,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":3631,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["mesh",{"_index":796,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer('cubes",{"_index":816,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer('wireframes",{"_index":817,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer(id",{"_index":786,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["message",{"_index":1902,"title":{"interfaces/Message.html":{},"interfaces/Message-1.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["message_service_config",{"_index":2422,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["message_service_default_config",{"_index":2423,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messagechannel",{"_index":1917,"title":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":3669,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messagechannel.counter",{"_index":3658,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messages",{"_index":1898,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":1882,"title":{"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice.connect(this",{"_index":1963,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["messageservice.connect(this).getmessages",{"_index":2068,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["messageserviceconfig",{"_index":3634,"title":{"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messagess",{"_index":2300,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["metadata",{"_index":55,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["meter",{"_index":1100,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["method",{"_index":1405,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["method.apply(registry",{"_index":2828,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["methodname",{"_index":2823,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["methods",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["millimeter",{"_index":1098,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["min",{"_index":2473,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["minor",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":670,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["mirrors",{"_index":3330,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["miscellaneous",{"_index":5034,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":5045,"title":{},"body":{"license.html":{}}}],["mm",{"_index":535,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["mock",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":3182,"title":{},"body":{"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["mode",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/StageNavComponent.html":{}}}],["model",{"_index":823,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SpatialSceneNode.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["model._lighting",{"_index":825,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.color",{"_index":828,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.entityid",{"_index":1477,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.scenegraph",{"_index":824,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.scenegraphnode",{"_index":776,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.subscribe(ontology",{"_index":4052,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["model.tooltip",{"_index":1476,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":827,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.unpickable",{"_index":822,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.zoombasedopacity",{"_index":820,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model['@id",{"_index":819,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["modelmatrix",{"_index":1447,"title":{},"body":{"interfaces/Collision.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":1496,"title":{},"body":{"interfaces/Collision.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":1495,"title":{},"body":{"interfaces/Collision.html":{}}}],["models",{"_index":813,"title":{},"body":{"classes/BodyUILayer.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/SpatialSceneNode.html":{}}}],["models.map((model",{"_index":818,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["models/color",{"_index":4850,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["models/image",{"_index":4851,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["models/json",{"_index":3990,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["models/ontology",{"_index":3991,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["modify",{"_index":5060,"title":{},"body":{"license.html":{}}}],["module",{"_index":409,"title":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["modules",{"_index":411,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/body/body.module",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/color",{"_index":4430,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["modules/filters/filters",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modules/image",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modules/info/info",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{}}}],["modules/ontology",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/results",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["molecular",{"_index":3215,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["more",{"_index":2292,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":2522,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mouseevent",{"_index":607,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorSchemePopupComponent.html":{}}}],["mouseevent?.srcevent?.ctrlkey",{"_index":703,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["moved",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["movement",{"_index":2523,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["moz",{"_index":4411,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["msg",{"_index":2043,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["msg.payload",{"_index":2080,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["msg.payload.drawers",{"_index":2073,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["msg.payload.opened",{"_index":4719,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["msg.payload.type",{"_index":2071,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["msg.source",{"_index":2078,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["multi",{"_index":4637,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":3256,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["n.name",{"_index":778,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["n3",{"_index":976,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["name",{"_index":53,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["namechange",{"_index":3700,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["nameinputcomponent",{"_index":376,"title":{"components/NameInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["nameinputmodule",{"_index":3614,"title":{"modules/NameInputModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules.html":{},"overview.html":{}}}],["namespace",{"_index":2347,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["nan",{"_index":4463,"title":{},"body":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["national",{"_index":3298,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["nativeelement",{"_index":1862,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ViewerComponent.html":{}}}],["nav",{"_index":4534,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav'},{'name",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["nav.component",{"_index":4565,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav.component.html",{"_index":4536,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.scss",{"_index":4535,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts",{"_index":4532,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["nav.component.ts:20",{"_index":4549,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:25",{"_index":4543,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:30",{"_index":4545,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:35",{"_index":4547,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:40",{"_index":4548,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:46",{"_index":4551,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:56",{"_index":4554,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.module",{"_index":2140,"title":{},"body":{"modules/ContentModule.html":{}}}],["nav.module.ts",{"_index":4564,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav/stage",{"_index":2139,"title":{},"body":{"modules/ContentModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"miscellaneous/typealiases.html":{}}}],["navigateto",{"_index":471,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["navigation",{"_index":3259,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["necessary",{"_index":2544,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["need",{"_index":1832,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/FiltersPopoverComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["needed",{"_index":3052,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["needs",{"_index":1907,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerLayersComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["nested",{"_index":2613,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["network",{"_index":5042,"title":{},"body":{"index.html":{}}}],["never",{"_index":1955,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["new",{"_index":509,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["newconfigs",{"_index":1328,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["newfilter",{"_index":897,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["newly",{"_index":1549,"title":{},"body":{"components/ColorBarComponent.html":{},"classes/FlatNode.html":{}}}],["newrotation",{"_index":4389,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["newvalue",{"_index":2605,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["next",{"_index":664,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["nextmessageid",{"_index":3657,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["ng",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ng5",{"_index":1772,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"dependencies.html":{}}}],["ng5slidermodule",{"_index":1819,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/DualSliderModule.html":{}}}],["ngacceptinputtype_expanded",{"_index":3552,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ngacceptinputtype_opened",{"_index":3551,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ngacceptinputtype_position",{"_index":3548,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ngafterviewinit",{"_index":841,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["ngfor",{"_index":3065,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["ngmodule",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{}}}],["ngonchanges",{"_index":2501,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ngonchanges(changes",{"_index":2528,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ngondestroy",{"_index":1890,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["ngoninit",{"_index":3869,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ngxs",{"_index":870,"title":{},"body":{"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":5008,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":2276,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs/store/operators",{"_index":4213,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["ngxsdataentitycollectionsrepository",{"_index":4823,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ngxsdatapluginmodule",{"_index":4610,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":4624,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":2211,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["ngxsentitycollections",{"_index":4847,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ngxsimmutabledatarepository",{"_index":4197,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsmodule",{"_index":4612,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":4625,"title":{},"body":{"modules/StoreModule.html":{}}}],["niaid",{"_index":3303,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["niddk",{"_index":3293,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["nih",{"_index":3284,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"index.html":{}}}],["node",{"_index":621,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/Collision.html":{},"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"miscellaneous/typealiases.html":{}}}],["node's",{"_index":2722,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.children",{"_index":4076,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.entityid",{"_index":891,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["node.label.tolowercase().includes(searchvalue",{"_index":4060,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.mesh",{"_index":1489,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.mesh.primitives",{"_index":1490,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.mesh.primitives.length",{"_index":1491,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.name",{"_index":1498,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.parent",{"_index":4024,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.synonymlabels.find((label",{"_index":4065,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.ts",{"_index":2710,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OntologyNode.html":{}}}],["node.ts:11",{"_index":2721,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:16",{"_index":2724,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:27",{"_index":2719,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:29",{"_index":2715,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.zoomtoonload",{"_index":683,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["node['@id",{"_index":878,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["nodeattrs",{"_index":1162,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodeclick",{"_index":575,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodeclicksubject",{"_index":576,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstart",{"_index":577,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstartsubject",{"_index":578,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstop",{"_index":579,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstopsubject",{"_index":580,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodemap",{"_index":4000,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodemap[parent].children.push(id",{"_index":4010,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"miscellaneous/typealiases.html":{}}}],["nodes.concat",{"_index":1203,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodes.filter(s",{"_index":1207,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodes.foreach((node",{"_index":4058,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes.svg",{"_index":2377,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["nodes[id",{"_index":4035,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes[node.parent",{"_index":4100,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["none",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["noninfringement",{"_index":5087,"title":{},"body":{"license.html":{}}}],["normally",{"_index":850,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["not(:last",{"_index":543,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["not(hr",{"_index":3608,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["note",{"_index":751,"title":{},"body":{"classes/BodyUILayer.html":{},"components/DualSliderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{}}}],["notice",{"_index":5073,"title":{},"body":{"license.html":{}}}],["now",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":4349,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["null",{"_index":1037,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["null)?.getcontainerelement",{"_index":4683,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["num_layers_selected_on_creation",{"_index":4852,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["number((event.target",{"_index":2606,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(this.options.floor",{"_index":2609,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(value.slice(0",{"_index":3495,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["number.isnan(value",{"_index":4771,"title":{},"body":{"components/ViewerComponent.html":{}}}],["number.parseint(hex.slice(1",{"_index":4769,"title":{},"body":{"components/ViewerComponent.html":{}}}],["number[][]}).transformmatrix",{"_index":799,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["number]}).color",{"_index":801,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["numslices",{"_index":4454,"title":{},"body":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["o",{"_index":2311,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["object",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{}}}],["object.assign",{"_index":2328,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["object.assign(s",{"_index":1045,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["object.assign(this",{"_index":3027,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["object.entries(channelconfigs",{"_index":4275,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["object.entries(configs).reduce((result",{"_index":1329,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["object.entries(entities",{"_index":4874,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["object.entries(this.root",{"_index":4591,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.entries(values",{"_index":4594,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.keys(this.channelconfigs",{"_index":1289,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["object.values(entities",{"_index":4842,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["object.values(state.nodes",{"_index":4112,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["objects",{"_index":486,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["observable",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["observableinput",{"_index":2228,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["observedvalueof",{"_index":2277,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["obtaining",{"_index":5052,"title":{},"body":{"license.html":{}}}],["occurencedata",{"_index":4083,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["occurences",{"_index":983,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["occurrences",{"_index":955,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["occurs",{"_index":2525,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["office",{"_index":3287,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["official",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":2082,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["offsets",{"_index":3731,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["old",{"_index":3774,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["oldruidata",{"_index":3755,"title":{"interfaces/OldRuiData.html":{}},"body":{"interfaces/OldRuiData.html":{}}}],["oldviewstate",{"_index":1374,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["ome",{"_index":3721,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["omezarr",{"_index":3720,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["omezarrinfo",{"_index":1251,"title":{"interfaces/OMEZarrInfo.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omezarrreader",{"_index":3717,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omezarrreader.fromurl(url",{"_index":3739,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omit",{"_index":4262,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":2158,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":2489,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onchannelschange",{"_index":3122,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["onchannelschange(channels",{"_index":3129,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["onclick",{"_index":653,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["ondestroy",{"_index":1879,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["one",{"_index":2291,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["ones",{"_index":3042,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["onhover",{"_index":651,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["oninit",{"_index":3861,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["onkeyhigh",{"_index":2502,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeyhigh(event",{"_index":2535,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow",{"_index":2503,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow(event",{"_index":2541,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onleft",{"_index":4132,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["online",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["onright",{"_index":4133,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["onscroll",{"_index":4294,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onscroll(event",{"_index":4305,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onselect",{"_index":3870,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onselect(event",{"_index":3888,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontolgyselection.foreach((selection",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["ontolgyselection.length",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["ontolgyselection[0].label",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["ontological",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":65,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/NameInputComponent.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["ontology.ts",{"_index":2853,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["ontology/ccf",{"_index":3799,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ontology/ontology.state",{"_index":4615,"title":{},"body":{"modules/StoreModule.html":{}}}],["ontologyexplorationmodule",{"_index":428,"title":{"modules/OntologyExplorationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyfilter",{"_index":4084,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologynode",{"_index":2713,"title":{"interfaces/OntologyNode.html":{}},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["ontologysearchcomponent",{"_index":377,"title":{"components/OntologySearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologysearchmodule",{"_index":3845,"title":{"modules/OntologySearchModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologysearchservice",{"_index":3874,"title":{"injectables/OntologySearchService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["ontologyselected(ontologyselection",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselection",{"_index":157,"title":{"interfaces/OntologySelection.html":{}},"body":{"components/AppComponent.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{}}}],["ontologyselection.map(selection",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselectioncomponent",{"_index":379,"title":{"components/OntologySelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologyselectionlabel",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselectionmodule",{"_index":3846,"title":{"modules/OntologySelectionModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyselections",{"_index":4091,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologyservice",{"_index":3867,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologystate",{"_index":3959,"title":{"injectables/OntologyState.html":{}},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["ontologystatemodel",{"_index":3992,"title":{"interfaces/OntologyStateModel.html":{}},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["ontologyterms",{"_index":67,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["ontologytermsdata",{"_index":2322,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ontologytermsfulldata",{"_index":2219,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ontologytreecomponent",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologytreemodule",{"_index":3847,"title":{"modules/OntologyTreeModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules.html":{},"overview.html":{}}}],["onviewstatechange",{"_index":655,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["onviewstatechange(undefined",{"_index":2917,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["onviewstatechangeargs",{"_index":1264,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["opacity",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{}}}],["open",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open(data",{"_index":3132,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["open(event",{"_index":1845,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["open/close",{"_index":3473,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["openapi",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["opened",{"_index":2049,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["opened(value",{"_index":3462,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["opened/closed",{"_index":3420,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":3469,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openedstate",{"_index":3421,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":3509,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openimageviewer",{"_index":4329,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["opening",{"_index":4304,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["opening/closing/expanding",{"_index":3436,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openresult",{"_index":4328,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["opens",{"_index":1736,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openviewer(viewer",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["operator",{"_index":2303,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["operatorfunction",{"_index":2278,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["opposite",{"_index":3425,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["ops",{"_index":1014,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addhubmapdatatostore",{"_index":1022,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addjsonldtostore(this.options.hubmapdataurl",{"_index":1021,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addn3tostore(this.options.ccfowlurl",{"_index":1017,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addrdfxmltostore(this.options.ccfowlurl",{"_index":1018,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["optimizations",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1403,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["option.displaylabel[0",{"_index":3928,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[1",{"_index":3929,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[2",{"_index":3930,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option:first",{"_index":4441,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["option:last",{"_index":4442,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["option?.displaylabel",{"_index":3922,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["optional",{"_index":87,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["options",{"_index":69,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{}}}],["options.ceil",{"_index":2611,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["options.floor",{"_index":2610,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionschanged",{"_index":2504,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionsvisible",{"_index":2431,"title":{},"body":{"components/DropdownComponent.html":{}}}],["opto",{"_index":3382,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["orbitaxis",{"_index":635,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["orbitview",{"_index":624,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["order",{"_index":3221,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["order.length",{"_index":4880,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ordering",{"_index":3550,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["organ",{"_index":52,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["organchanged",{"_index":4130,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["organids",{"_index":4017,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organinfo",{"_index":4123,"title":{"interfaces/OrganInfo.html":{}},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["organization",{"_index":3228,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["organlist",{"_index":4134,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["organname",{"_index":54,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["organnodes",{"_index":4019,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organs",{"_index":963,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/InfoDialogComponent-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["organs_bladder.svg",{"_index":2363,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_brain.svg",{"_index":2365,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_colon.svg",{"_index":2367,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_heart.svg",{"_index":2369,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_kidney.svg",{"_index":2370,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_liver.svg",{"_index":2372,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_lung.svg",{"_index":2374,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_lymph",{"_index":2376,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_ovaries.svg",{"_index":2379,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_small",{"_index":2381,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_spleen.svg",{"_index":2383,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_stomach.svg",{"_index":2385,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organs_thymus.svg",{"_index":2387,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["organselectorcomponent",{"_index":383,"title":{"components/OrganSelectorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["organselectormodule",{"_index":3615,"title":{"modules/OrganSelectorModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/OrganSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["organsid",{"_index":1171,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["original",{"_index":2717,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["originx",{"_index":2569,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["originy",{"_index":2570,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ot",{"_index":2344,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["ot2od026671",{"_index":3292,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"index.html":{}}}],["other.expanded",{"_index":3537,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.expandedstate2",{"_index":3538,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.margin2",{"_index":3543,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.measuredmargin",{"_index":3541,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.measuredwidth",{"_index":3540,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.opened",{"_index":3539,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.width",{"_index":3542,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["others",{"_index":3324,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["otherwise",{"_index":2813,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"license.html":{}}}],["out",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":4444,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["outline",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["output",{"_index":495,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{}}}],["outputs",{"_index":527,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["outside",{"_index":847,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["ovaries",{"_index":2378,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["overall",{"_index":1388,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["overflow",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["overlay",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["overlay'},{'name",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["overlay.component",{"_index":4530,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.component.html",{"_index":4515,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":4514,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":4512,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:16",{"_index":4520,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:19",{"_index":4516,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:22",{"_index":4518,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.create",{"_index":2576,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.module",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.module.ts",{"_index":4527,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.position().flexibleconnectedto(element).withpositions([position",{"_index":2574,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay/spinner",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{}}}],["overlaycontainer",{"_index":4666,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["overlaymodule",{"_index":2631,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["overlayref",{"_index":2497,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.attach(popoverportal",{"_index":2603,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.updateposition",{"_index":2604,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlays",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["overlayx",{"_index":2571,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayy",{"_index":2572,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overview",{"_index":4263,"title":{"overview.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["overview_defaults",{"_index":4264,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["overviewargs",{"_index":4261,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["overviewview",{"_index":4259,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["overviewviewnewargs",{"_index":4260,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["owl",{"_index":3245,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["owner",{"_index":1826,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["owner?.contains(target",{"_index":1864,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["owning",{"_index":4703,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["p",{"_index":1094,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"changelog.html":{}}}],["p.translation_units",{"_index":1096,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_rotation",{"_index":1106,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_scaling",{"_index":1114,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_translation",{"_index":1102,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_rotation",{"_index":1107,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_scaling",{"_index":1115,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_translation",{"_index":1103,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_rotation].map(toradians",{"_index":1108,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_scaling",{"_index":1116,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_translation].map(t",{"_index":1104,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["package",{"_index":4993,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/NameInputComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{}}}],["page",{"_index":2733,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["pagestate",{"_index":2767,"title":{"injectables/PageState.html":{}},"body":{"components/HeaderComponent-1.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["pagestatemodel",{"_index":4215,"title":{"interfaces/PageStateModel.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["pair",{"_index":3545,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pairs",{"_index":4588,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pane",{"_index":2472,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["panel",{"_index":2463,"title":{},"body":{"components/DropdownComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["panelclass",{"_index":2577,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["param",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"interfaces/XYZTriplet.html":{}}}],["parameters",{"_index":534,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["parameters>[0",{"_index":1262,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["parameters[0",{"_index":3730,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["params",{"_index":3431,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["parent",{"_index":640,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/CheckboxComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"miscellaneous/typealiases.html":{}}}],["parent.messages.pipe(takewhile",{"_index":3663,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["parentextractor",{"_index":2873,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentextractor(json",{"_index":2889,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentproperty",{"_index":2872,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parents",{"_index":3999,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["parseint(element.style.left",{"_index":4162,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["parser",{"_index":5025,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":3276,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{}}}],["partial",{"_index":588,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{}}}],["partial.placeholder",{"_index":2883,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["partial[0",{"_index":1794,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["particular",{"_index":5085,"title":{},"body":{"license.html":{}}}],["partonomy",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":2833,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.join",{"_index":2838,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.push('innamespace",{"_index":2837,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.push('literal",{"_index":2836,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.push('set",{"_index":2835,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["pass",{"_index":2954,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["passed",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["passes",{"_index":1597,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["past",{"_index":4153,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["pasting",{"_index":3335,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["patch",{"_index":4212,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["patch(name",{"_index":4221,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["path",{"_index":1140,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"dependencies.html":{}}}],["path.length",{"_index":1142,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["path.reverse",{"_index":1143,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["path/unweighted",{"_index":1083,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["patient",{"_index":2660,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["paul",{"_index":3374,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["payload",{"_index":2117,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"miscellaneous/typealiases.html":{}}}],["pbr",{"_index":826,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["per",{"_index":4456,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["permission",{"_index":5048,"title":{},"body":{"license.html":{}}}],["permit",{"_index":5068,"title":{},"body":{"license.html":{}}}],["person",{"_index":4214,"title":{"interfaces/Person.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"license.html":{}}}],["persons",{"_index":5069,"title":{},"body":{"license.html":{}}}],["physiologic",{"_index":3262,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["pick",{"_index":3026,"title":{},"body":{"classes/ImageViewerLayer.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["pickable",{"_index":788,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["picked",{"_index":691,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["picker",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["picture",{"_index":4224,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["pictureinpictureviewer",{"_index":4222,"title":{"classes/PictureInPictureViewer.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["pictureinpictureviewerprops",{"_index":4225,"title":{"interfaces/PictureInPictureViewerProps.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["pipe",{"_index":2262,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["pipe(mergeall",{"_index":3665,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["placed",{"_index":4623,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":3078,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"changelog.html":{}}}],["placement",{"_index":1073,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["placement.target['@id",{"_index":1135,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["placement_date",{"_index":3819,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["placements",{"_index":1129,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["placementtarget",{"_index":3787,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["placementtarget?.endswith('kidney",{"_index":3794,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["places",{"_index":755,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["plasma",{"_index":1704,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["pluck",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["plugin",{"_index":4621,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["point",{"_index":3770,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["pointer",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["popover",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover's",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["popover'},{'name",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["popover.component",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"modules/FiltersPopoverModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popover.component.html",{"_index":2674,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.scss",{"_index":2673,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts",{"_index":2672,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:15",{"_index":2682,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:21",{"_index":2679,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:26",{"_index":2683,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:31",{"_index":2689,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:36",{"_index":2688,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:37",{"_index":3137,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:42",{"_index":3141,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:43",{"_index":2687,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:47",{"_index":3142,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:51",{"_index":2685,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:52",{"_index":3138,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:57",{"_index":3126,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:70",{"_index":3127,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:79",{"_index":3133,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:88",{"_index":3130,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:99",{"_index":3135,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.module",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageViewerModule.html":{}}}],["popover.module.ts",{"_index":2706,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popover/filters",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{}}}],["popover/image",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popoverelement",{"_index":2498,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverelement.nativeelement.contains(target",{"_index":2597,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverportal",{"_index":2499,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popup",{"_index":1529,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"changelog.html":{}}}],["popup'},{'name",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["popup.component",{"_index":1876,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["popup.component.html",{"_index":1824,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.scss",{"_index":1823,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts",{"_index":1822,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:20",{"_index":1833,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:25",{"_index":1830,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:30",{"_index":1835,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:32",{"_index":1851,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:37",{"_index":1855,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:40",{"_index":1852,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:45",{"_index":1848,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:53",{"_index":1839,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:64",{"_index":1846,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.module",{"_index":1614,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["popup.module.ts",{"_index":1875,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["popup/color",{"_index":1613,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{}}}],["popupvisible",{"_index":1827,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["portal",{"_index":994,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["portalmodule",{"_index":2632,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["portions",{"_index":5077,"title":{},"body":{"license.html":{}}}],["position",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OldRuiData.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["position(value",{"_index":3458,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["positions",{"_index":1565,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["positions[index",{"_index":3037,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["positionstrategy",{"_index":2573,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["posterior",{"_index":4555,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postprocess",{"_index":775,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["precision",{"_index":3294,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["prefix",{"_index":3971,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["preparation",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["preprint",{"_index":3250,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["presented",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":2540,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["prevents",{"_index":4152,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["primitive",{"_index":1492,"title":{},"body":{"interfaces/Collision.html":{}}}],["primitive.attributes.position",{"_index":1493,"title":{},"body":{"interfaces/Collision.html":{}}}],["primitive.attributes.position.min",{"_index":1494,"title":{},"body":{"interfaces/Collision.html":{}}}],["private",{"_index":571,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchResult.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["process",{"_index":2042,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/InfoDialogComponent-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["processed",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":1904,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["procurement",{"_index":3326,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["programmers",{"_index":750,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["progress",{"_index":4513,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["project",{"_index":3164,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"changelog.html":{}}}],["projected",{"_index":1912,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["projects/.../data.state.ts",{"_index":5036,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../drawer.component.ts",{"_index":5106,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../hubmap",{"_index":5109,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../image",{"_index":5105,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../loader.ts",{"_index":5037,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../messages.ts",{"_index":5104,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../ontology",{"_index":5107,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../picture",{"_index":5112,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../stage",{"_index":5113,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../store",{"_index":5111,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["promise",{"_index":95,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["promise(r",{"_index":1031,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["promise(resolve",{"_index":3409,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["promise.all(loaderpromises",{"_index":1322,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["promise.all(ops",{"_index":1027,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["proof",{"_index":3264,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["prop",{"_index":2822,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["property",{"_index":1409,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/ValueObject.html":{}}}],["property(0",{"_index":2875,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(idproperty",{"_index":2868,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(labelproperty",{"_index":2878,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(parentproperty",{"_index":2874,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(synonymsproperty",{"_index":2881,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(valueproperty",{"_index":2871,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["props",{"_index":642,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["props.defaultchannelconfig",{"_index":1277,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["props.overview",{"_index":4267,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["protected",{"_index":1293,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["prototype",{"_index":3317,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["protractor",{"_index":475,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["provide",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":869,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":2184,"title":{},"body":{"injectables/DataSourceService.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["provider",{"_index":909,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["providers",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["provides",{"_index":3877,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["providing",{"_index":2022,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["prunednodes",{"_index":4021,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["prunemodel(model",{"_index":4018,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["public",{"_index":911,"title":{},"body":{"classes/CCFDatabase.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"changelog.html":{}}}],["publication",{"_index":3251,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["publish",{"_index":5062,"title":{},"body":{"license.html":{}}}],["publishreplay",{"_index":2280,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["publishreplay(1",{"_index":2315,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["pull",{"_index":1740,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{}}}],["pureimageviewerlayer",{"_index":2996,"title":{"interfaces/PureImageViewerLayer.html":{}},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["purplebrown",{"_index":1661,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["purplelightblue",{"_index":1677,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["purpose",{"_index":5086,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1557,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["px",{"_index":3450,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["quad",{"_index":944,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["qualitative",{"_index":1620,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"changelog.html":{}}}],["qualitative1",{"_index":1623,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["qualitative2",{"_index":1638,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["quardokus",{"_index":3361,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["quaternion",{"_index":1085,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["queried",{"_index":21,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["queries",{"_index":72,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"components/ViewerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["queries/aggregate",{"_index":975,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/find",{"_index":978,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/image",{"_index":979,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/list",{"_index":981,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/ontology",{"_index":982,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/spatial",{"_index":985,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["query",{"_index":10,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["querydata",{"_index":2310,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["querying",{"_index":2305,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["querylist",{"_index":1920,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["querystatus",{"_index":2220,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["question",{"_index":1389,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["r",{"_index":1109,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{}}}],["r.hits.length",{"_index":1513,"title":{},"body":{"interfaces/Collision.html":{}}}],["r.x",{"_index":3826,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r.y",{"_index":3828,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r.z",{"_index":3830,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r_rad",{"_index":1105,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["r_rad[0",{"_index":1111,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["r_rad[2",{"_index":1112,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["radio",{"_index":4443,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["radius",{"_index":1569,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["randy",{"_index":3376,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["range",{"_index":75,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{}}}],["rangelabel",{"_index":2508,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ratio",{"_index":3824,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["rc.1",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1088,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["rdf.type",{"_index":1125,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["rdfjs/data",{"_index":5010,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":5023,"title":{},"body":{"dependencies.html":{}}}],["react",{"_index":5027,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":3944,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["read",{"_index":858,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ViewerComponent.html":{}}}],["reader",{"_index":3738,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["reader.loadomezarr",{"_index":3740,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["readonly",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["ready",{"_index":2172,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["real",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":4620,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":2032,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["receiving",{"_index":3639,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["record",{"_index":1266,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent-1.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["red",{"_index":4772,"title":{},"body":{"components/ViewerComponent.html":{}}}],["redcap",{"_index":3338,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["redtan",{"_index":1669,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ref",{"_index":1069,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["refcount",{"_index":2281,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["reference",{"_index":962,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialObjectReference.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["reference_organ_id",{"_index":3764,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["referencelayer",{"_index":3072,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["references",{"_index":1121,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["referencing",{"_index":3073,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["reforganid",{"_index":3784,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["refresh",{"_index":536,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["refreshblocksize",{"_index":524,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["refreshclicked",{"_index":2738,"title":{},"body":{"components/HeaderComponent.html":{}}}],["refreshes",{"_index":523,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["refreshslices",{"_index":4482,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["region",{"_index":2988,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["regions",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2349,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/StageNavComponent.html":{}}}],["registered",{"_index":2352,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["registericon",{"_index":2817,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registericon(definition",{"_index":2814,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registericonimpl",{"_index":2842,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registericonimpl(definition",{"_index":2818,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registering",{"_index":2796,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registerloaders",{"_index":736,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["registerloaders([dracoworkerloader",{"_index":806,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["registers",{"_index":2811,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registration",{"_index":2008,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent-1.html":{}}}],["registry",{"_index":2803,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state",{"_index":4614,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":2795,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:106",{"_index":2848,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:120",{"_index":2846,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:43",{"_index":2844,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:72",{"_index":2849,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:82",{"_index":2850,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry/default",{"_index":2338,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["registry/icon",{"_index":2794,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"modules/StoreModule.html":{}}}],["registry[methodname",{"_index":2825,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["relationship",{"_index":3227,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["relative",{"_index":900,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OrganSelectorComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relavant",{"_index":1552,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["release",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["remote",{"_index":2177,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["remove",{"_index":1408,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["removebox",{"_index":2676,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["removeclass",{"_index":4685,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["removes",{"_index":4650,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["render",{"_index":849,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["renderer",{"_index":4679,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["renderer2",{"_index":4667,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["renderer[methodname](overlay",{"_index":4687,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["renderer[methodname](root",{"_index":4686,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["rendering",{"_index":1739,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/StageNavComponent.html":{}}}],["renderlayers",{"_index":725,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["renders",{"_index":2393,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["replace",{"_index":867,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["replay",{"_index":2307,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject",{"_index":2279,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject(1",{"_index":2236,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject>(1",{"_index":2323,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["report",{"_index":1499,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":1506,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":2210,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["represents",{"_index":3255,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["reqprops",{"_index":1298,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.height",{"_index":1301,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.sources.length",{"_index":1302,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.width",{"_index":1300,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["requested",{"_index":943,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["requests",{"_index":3962,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["require",{"_index":3021,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["required",{"_index":1274,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["res",{"_index":3750,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["res.json",{"_index":3754,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["res.status",{"_index":3752,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["research",{"_index":3282,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["researcher's",{"_index":3698,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["reset",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContentComponent.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["resetchannelconfigs",{"_index":1365,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["resetrotation",{"_index":4396,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["resets",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["resetstage",{"_index":2005,"title":{},"body":{"components/ContentComponent.html":{}}}],["resettheme",{"_index":4644,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["resizesensor",{"_index":4755,"title":{},"body":{"components/ViewerComponent.html":{}}}],["resizesensor(container",{"_index":4799,"title":{},"body":{"components/ViewerComponent.html":{}}}],["resizing",{"_index":4439,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["resolution",{"_index":3225,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["resolve",{"_index":3406,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["resolves",{"_index":1936,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataSourceService.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["resolving",{"_index":939,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["respond",{"_index":4979,"title":{},"body":{"changelog.html":{}}}],["responsetype",{"_index":4042,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["responsible",{"_index":3949,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["restriction",{"_index":5057,"title":{},"body":{"license.html":{}}}],["result",{"_index":11,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result's",{"_index":4337,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["result[key",{"_index":1331,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["resultclicked",{"_index":4297,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resulting",{"_index":2886,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["resultlabel",{"_index":4296,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["results",{"_index":100,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resultsbrowser",{"_index":4285,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsercomponent",{"_index":385,"title":{"components/ResultsBrowserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["resultsbrowseritemcomponent",{"_index":387,"title":{"components/ResultsBrowserItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["resultsbrowseritemmodule",{"_index":4350,"title":{"modules/ResultsBrowserItemModule.html":{}},"body":{"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["resultsbrowseritems",{"_index":4289,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsermodule",{"_index":429,"title":{"modules/ResultsBrowserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["resulttype",{"_index":41,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["resulturl",{"_index":40,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["return",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["returns",{"_index":473,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["reusable",{"_index":2391,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["reverse",{"_index":2655,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["rgb",{"_index":3018,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{}}}],["right",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["right.closeexpanded",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["right.expanded",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["right.open",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["right.px",{"_index":2030,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["right_kidney",{"_index":1182,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["rightmargin",{"_index":2066,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["rights",{"_index":5059,"title":{},"body":{"license.html":{}}}],["rightsidebarcomponent",{"_index":389,"title":{"components/RightSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["rightsidebarmodule",{"_index":4370,"title":{"modules/RightSidebarModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["root",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["root'},{'name",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["root_states",{"_index":4618,"title":{},"body":{"modules/StoreModule.html":{}}}],["rootnode",{"_index":3951,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["rotate",{"_index":3328,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["rotation",{"_index":391,"title":{"interfaces/Rotation.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["rotation.x",{"_index":4403,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.y",{"_index":4404,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.z",{"_index":4405,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation_order",{"_index":3831,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotation_units",{"_index":3833,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotationchange",{"_index":4388,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotationmatrix",{"_index":1455,"title":{},"body":{"interfaces/Collision.html":{}}}],["rotationorbit",{"_index":675,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["rotations",{"_index":4395,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotationslidercomponent",{"_index":390,"title":{"components/RotationSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["rotationslidermodule",{"_index":4375,"title":{"modules/RotationSliderModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules.html":{},"overview.html":{}}}],["rotationx",{"_index":674,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["row",{"_index":1424,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/StageNavComponent.html":{}}}],["rui",{"_index":1164,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["rui/e2e/src/app.po.ts",{"_index":479,"title":{},"body":{"classes/AppPage-1.html":{}}}],["rui/e2e/src/app.po.ts:4",{"_index":481,"title":{},"body":{"classes/AppPage-1.html":{}}}],["rui/e2e/src/app.po.ts:8",{"_index":480,"title":{},"body":{"classes/AppPage-1.html":{}}}],["rui/src/app/app.component.ts",{"_index":406,"title":{},"body":{"components/AppComponent-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts",{"_index":4688,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:13",{"_index":4696,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:15",{"_index":4697,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:17",{"_index":4698,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:20",{"_index":4692,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:23",{"_index":4689,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:37",{"_index":4691,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:46",{"_index":4695,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:56",{"_index":4694,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:67",{"_index":4693,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:82",{"_index":4690,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/store/icon",{"_index":2359,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState-1.html":{}}}],["rui/src/app/core/store/page/page.state.ts",{"_index":4196,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["rui/src/app/core/store/page/page.state.ts:37",{"_index":4208,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:38",{"_index":4210,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:39",{"_index":4202,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:52",{"_index":4204,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:60",{"_index":4206,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/stage/stage.state.ts",{"_index":4453,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["rui/src/app/core/store/stage/stage.state.ts:52",{"_index":4572,"title":{},"body":{"injectables/StageState.html":{}}}],["rui/src/app/core/store/stage/stage.state.ts:54",{"_index":4573,"title":{},"body":{"injectables/StageState.html":{}}}],["rui/src/app/core/store/stage/stage.state.ts:56",{"_index":4574,"title":{},"body":{"injectables/StageState.html":{}}}],["rui/src/app/core/store/stage/stage.state.ts:64",{"_index":4569,"title":{},"body":{"injectables/StageState.html":{}}}],["rui/src/app/core/store/stage/stage.state.ts:74",{"_index":4570,"title":{},"body":{"injectables/StageState.html":{}}}],["rui/src/app/core/store/stage/stage.state.ts:84",{"_index":4571,"title":{},"body":{"injectables/StageState.html":{}}}],["rui/src/app/modules/content/content.component.ts",{"_index":2002,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:12",{"_index":2006,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:17",{"_index":2007,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.module.ts",{"_index":2137,"title":{},"body":{"modules/ContentModule.html":{}}}],["rui/src/app/modules/content/stage",{"_index":4531,"title":{},"body":{"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/modules/header/header.component.ts",{"_index":2765,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["rui/src/app/modules/header/header.component.ts:17",{"_index":2768,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["rui/src/app/modules/info/info",{"_index":3180,"title":{},"body":{"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent-1.html":{}}}],["rui/src/app/modules/left",{"_index":3597,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{}}}],["rui/src/app/modules/right",{"_index":4365,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{}}}],["rui/src/app/shared/components/block",{"_index":483,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{}}}],["rui/src/app/shared/components/details",{"_index":2388,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts",{"_index":1989,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:101",{"_index":1994,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:111",{"_index":1992,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:120",{"_index":1995,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":1991,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":1999,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":1997,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":1998,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":2000,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":2001,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:58",{"_index":1996,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":1990,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:79",{"_index":1993,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts",{"_index":2096,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:100",{"_index":2106,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:113",{"_index":2105,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":2099,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":2100,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":2101,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":2102,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":2098,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":2107,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":2097,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:58",{"_index":2104,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:68",{"_index":2103,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":3553,"title":{},"body":{"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:33",{"_index":3555,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":3554,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":3556,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:42",{"_index":3557,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:52",{"_index":3559,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:59",{"_index":3558,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/messages.ts",{"_index":2129,"title":{},"body":{"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/shared/components/drawer/toggle",{"_index":4729,"title":{},"body":{"components/ToggleButtonComponent-1.html":{}}}],["rui/src/app/shared/components/labeled",{"_index":3560,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{}}}],["rui/src/app/shared/components/name",{"_index":3696,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/UserName.html":{}}}],["rui/src/app/shared/components/organ",{"_index":4124,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{}}}],["rui/src/app/shared/components/rotation",{"_index":4382,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{}}}],["rui/src/app/shared/components/slices",{"_index":4470,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{}}}],["rui/src/app/shared/services/message/message.service.ts",{"_index":3670,"title":{},"body":{"interfaces/Message-1.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:101",{"_index":3684,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:110",{"_index":3685,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:126",{"_index":3695,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:128",{"_index":3692,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:151",{"_index":3694,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:161",{"_index":3693,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:48",{"_index":3681,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:68",{"_index":3686,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:81",{"_index":3682,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:91",{"_index":3683,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["run",{"_index":1908,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["running",{"_index":2293,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["runtime",{"_index":2343,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["rxjs",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["s",{"_index":1041,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sad",{"_index":1500,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":1509,"title":{},"body":{"interfaces/Collision.html":{}}}],["safedef",{"_index":2807,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["safehtml",{"_index":2797,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["saferesourceurl",{"_index":2798,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["same",{"_index":4458,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["sample",{"_index":2987,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"changelog.html":{}}}],["samples",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["samuel",{"_index":3380,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["sanitize",{"_index":2805,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sanitized",{"_index":2345,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["sanitizer",{"_index":2804,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sanitizer.bypasssecuritytrusthtml(html",{"_index":2809,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl(url",{"_index":2808,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sanjay",{"_index":3388,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["sans",{"_index":2763,"title":{},"body":{"components/HeaderComponent.html":{}}}],["save",{"_index":3332,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["saved",{"_index":2650,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["scaffolding",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1222,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/HeaderComponent-1.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scale(1",{"_index":4186,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["scale(1,2",{"_index":4728,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["scales",{"_index":3257,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["scalex",{"_index":541,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["scaling",{"_index":4506,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["scaling_units",{"_index":3823,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["scene",{"_index":748,"title":{},"body":{"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scene.children",{"_index":1463,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.filter(d",{"_index":1486,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.matrix",{"_index":1449,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":1462,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.rotation",{"_index":1454,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.scale",{"_index":1458,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.translation",{"_index":1452,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.ts",{"_index":1145,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scene.ts:105",{"_index":1153,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:115",{"_index":1163,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:154",{"_index":1160,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:26",{"_index":1151,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:30",{"_index":1155,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:47",{"_index":1157,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:64",{"_index":1159,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scenegraph",{"_index":763,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphlayer",{"_index":732,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphnode",{"_index":745,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphnode.rotation",{"_index":779,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenes",{"_index":931,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["schema",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["schema#label",{"_index":2861,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["scheme",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme.colors[index",{"_index":4877,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme.ts",{"_index":1616,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["scheme.type",{"_index":4433,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["scheme/color",{"_index":1525,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme1",{"_index":1621,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme2",{"_index":1636,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme3",{"_index":1660,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme4",{"_index":1668,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme5",{"_index":1676,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme6",{"_index":1685,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme7",{"_index":1694,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme8",{"_index":1703,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["schemechange",{"_index":2948,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["schemechanged",{"_index":4420,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemechanged(idx",{"_index":4426,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemedropdowncomponent",{"_index":392,"title":{"components/SchemeDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["schemedropdownmodule",{"_index":3083,"title":{"modules/SchemeDropdownModule.html":{}},"body":{"modules/ImageViewerLayersModule.html":{},"modules/SchemeDropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["schemeidx",{"_index":4419,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemeoptions",{"_index":1729,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["schemes",{"_index":1564,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["schemes.ts",{"_index":1617,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["school",{"_index":3369,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["science",{"_index":5043,"title":{},"body":{"index.html":{}}}],["screen",{"_index":3193,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["scroll",{"_index":4308,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollbar",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrolled",{"_index":4155,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollheight",{"_index":4314,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrolling",{"_index":1987,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollingmodule",{"_index":4363,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["scrolls",{"_index":4151,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["scrolltop",{"_index":4315,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["search",{"_index":920,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["search'},{'name",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["search(filter",{"_index":966,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["search.component",{"_index":3946,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.component.html",{"_index":3863,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.scss",{"_index":3862,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts",{"_index":3858,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:25",{"_index":3878,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:30",{"_index":3901,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:36",{"_index":3899,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:41",{"_index":3875,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:47",{"_index":3904,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:54",{"_index":3885,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:72",{"_index":3882,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:81",{"_index":3894,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:90",{"_index":3897,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:98",{"_index":3890,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.detached",{"_index":3935,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.module",{"_index":3851,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["search.module.ts",{"_index":3942,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.service",{"_index":3909,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["search.service.ts",{"_index":3948,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["search.service.ts:107",{"_index":3960,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:124",{"_index":3977,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:142",{"_index":3963,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:154",{"_index":3981,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:190",{"_index":3976,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:200",{"_index":3967,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:216",{"_index":3973,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search/ontology",{"_index":3850,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["searchableitem",{"_index":58,"title":{"interfaces/SearchableItem.html":{}},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["searched",{"_index":57,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{}}}],["searches",{"_index":3964,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searching",{"_index":3860,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["searchresult",{"_index":3881,"title":{"interfaces/SearchResult.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults",{"_index":4057,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.get(node.id",{"_index":4061,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.set(node.id",{"_index":4062,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchservice",{"_index":3876,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["searchvalue",{"_index":3966,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchvalue.length",{"_index":4072,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["section",{"_index":4418,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["see",{"_index":3249,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"index.html":{}}}],["select",{"_index":2455,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["selected",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["selected(ontologynode",{"_index":4092,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selectedcolor",{"_index":1536,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["selectedorgan",{"_index":4150,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["selectedresult",{"_index":4293,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["selecting",{"_index":2435,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["selection",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/OntologySelectionComponent.html":{},"components/StageNavComponent.html":{}}}],["selection'},{'name",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["selection.component",{"_index":4106,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.component.html",{"_index":4082,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.scss",{"_index":4081,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts",{"_index":4079,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":4096,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":4088,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":4090,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:40",{"_index":4089,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":4087,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:53",{"_index":4094,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:61",{"_index":4093,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.id",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["selection.label",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["selection.module",{"_index":3853,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["selection.module.ts",{"_index":4105,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.ts",{"_index":4077,"title":{},"body":{"interfaces/OntologySelection.html":{}}}],["selection/ontology",{"_index":3852,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{}}}],["selectionchange",{"_index":1385,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selectionchanged",{"_index":2432,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionchanged(value",{"_index":2440,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectioncounter",{"_index":4859,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["selectionorder",{"_index":2998,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["selections",{"_index":1380,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["selectionstring",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{}}}],["selector'},{'name",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["selector.component",{"_index":4195,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector.component.html",{"_index":4128,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["selector.component.scss",{"_index":4129,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["selector.component.ts",{"_index":4125,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:29",{"_index":4176,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:34",{"_index":4180,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:39",{"_index":4181,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:44",{"_index":4182,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:63",{"_index":4183,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:71",{"_index":4179,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:89",{"_index":4178,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.component.ts:99",{"_index":4177,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selector.module",{"_index":3623,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["selector.module.ts",{"_index":4194,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector/organ",{"_index":3622,"title":{},"body":{"modules/LeftSidebarModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{}}}],["selectorgan",{"_index":4174,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["selectorgan(icon",{"_index":4167,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["selects",{"_index":2831,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["sell",{"_index":5066,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3238,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["semantically",{"_index":3234,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["send",{"_index":1897,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["sendcompletedto(subject",{"_index":2301,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._aggregatedataquerystatus",{"_index":2243,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._listdataquerystatus",{"_index":2252,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._termoccurencesdataquerystatus",{"_index":2269,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sender",{"_index":3629,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sending",{"_index":3527,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sending/receiving",{"_index":3497,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["sendmessage",{"_index":3674,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["sendmessage(payload",{"_index":3643,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sends",{"_index":2298,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{}}}],["sendtoggle",{"_index":3528,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["sensor",{"_index":4734,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sent",{"_index":2110,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"miscellaneous/typealiases.html":{}}}],["separated",{"_index":2394,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["september",{"_index":3343,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["serif",{"_index":2764,"title":{},"body":{"components/HeaderComponent.html":{}}}],["server",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":990,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["service.initializeimpl(component",{"_index":4670,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["services",{"_index":3306,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["services/data",{"_index":2284,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["services/message/message.service",{"_index":2114,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["services/theming/theming.module",{"_index":2152,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":68,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["set(filter.highlightedentities",{"_index":1042,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["set(filter?.highlightedentities",{"_index":1208,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["setbrightnesshigh(value",{"_index":1766,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setbrightnesslow(value",{"_index":1761,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setdefaultscheme",{"_index":4827,"title":{},"body":{"injectables/ViewerState.html":{}}}],["setdefaultscheme(scheme",{"_index":4832,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["setembedded",{"_index":4200,"title":{},"body":{"injectables/PageState.html":{}}}],["setembedded(embedded",{"_index":4203,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setlayers(layers",{"_index":3098,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["setontology",{"_index":4108,"title":{},"body":{"injectables/OntologyState.html":{}}}],["setontology(ontology",{"_index":4109,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["sets",{"_index":1910,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["setscene",{"_index":584,"title":{},"body":{"classes/BodyUI.html":{}}}],["setscene(data",{"_index":617,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["setsize",{"_index":2894,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsize(width",{"_index":1312,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources",{"_index":2895,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources(sources",{"_index":1317,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources(urls",{"_index":4758,"title":{},"body":{"components/ViewerComponent.html":{}}}],["setsourceurls",{"_index":3123,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["setsourceurls(result",{"_index":3134,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["settheme",{"_index":4645,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["settheme(theme",{"_index":4660,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["settimeout",{"_index":3499,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["settimeout(r",{"_index":1032,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["setting",{"_index":4385,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/StoreModule.html":{}}}],["settings",{"_index":1755,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{}}}],["settle",{"_index":1030,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["settransparency(value",{"_index":1770,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setup",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["setusername",{"_index":4201,"title":{},"body":{"injectables/PageState.html":{}}}],["setusername(name",{"_index":4205,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["sex",{"_index":60,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shadow",{"_index":1798,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["shall",{"_index":5074,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1586,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["share",{"_index":631,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["shared",{"_index":2138,"title":{},"body":{"modules/ContentModule.html":{},"modules/StoreModule.html":{}}}],["shared/components/block",{"_index":4377,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/checkbox/checkbox.module",{"_index":2669,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/details",{"_index":3624,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["shared/components/drawer/drawer/drawer.component",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/components/dropdown/dropdown.module",{"_index":2670,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/dual",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/FiltersContentModule.html":{}}}],["shared/components/labeled",{"_index":3626,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["shared/components/name",{"_index":3618,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/organ",{"_index":3621,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/rotation",{"_index":4378,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/slices",{"_index":4380,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/spinner",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/src/lib/components/store",{"_index":4575,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"miscellaneous/typealiases.html":{}}}],["sharing",{"_index":2306,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["shift",{"_index":4175,"title":{},"body":{"components/OrganSelectorComponent.html":{}}}],["shift(dir",{"_index":4156,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["short",{"_index":30,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shortest",{"_index":1082,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["shortestpath",{"_index":1081,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["shortestpath(this.graph",{"_index":1141,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["shortinfo",{"_index":31,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["show",{"_index":1870,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["showing",{"_index":4786,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["showm",{"_index":3043,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["shown",{"_index":2553,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["shows",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["showselectionbar",{"_index":1791,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["side",{"_index":2052,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["sidebar",{"_index":2977,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["sidebar.component",{"_index":3617,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar.component.html",{"_index":3601,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":3600,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":3599,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:14",{"_index":3604,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:16",{"_index":3603,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.module.ts",{"_index":3616,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar/left",{"_index":3598,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{}}}],["sidebar/right",{"_index":4366,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{}}}],["sidechange",{"_index":4540,"title":{},"body":{"components/StageNavComponent.html":{}}}],["simple",{"_index":4578,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["simplechanges",{"_index":2529,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["simplemeshlayer",{"_index":733,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["simplify",{"_index":4005,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["single",{"_index":868,"title":{},"body":{"components/BodyUiComponent.html":{},"interfaces/IdObject.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/ValueObject.html":{}}}],["site",{"_index":2731,"title":{},"body":{"components/HeaderComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["size",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sizes",{"_index":497,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["skipself",{"_index":2150,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["slice",{"_index":4457,"title":{},"body":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["slices",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["slicesconfig",{"_index":4452,"title":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["slicesconfigchange",{"_index":4472,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slicesinputcomponent",{"_index":393,"title":{"components/SlicesInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["slicesinputmodule",{"_index":4376,"title":{"modules/SlicesInputModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/SlicesInputModule.html":{},"modules.html":{},"overview.html":{}}}],["slide",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["slideinhorizontaldropdown",{"_index":2449,"title":{},"body":{"components/DropdownComponent.html":{}}}],["slideinhorizontalslider",{"_index":2616,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider",{"_index":1242,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/LabeledSlideToggleComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["slider's",{"_index":2538,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider'},{'name",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["slider.component",{"_index":2633,"title":{},"body":{"modules/DualSliderModule.html":{},"modules/RotationSliderModule.html":{}}}],["slider.component.html",{"_index":2491,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.scss",{"_index":2490,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts",{"_index":2488,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts:102",{"_index":2510,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:125",{"_index":2530,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:139",{"_index":2543,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:155",{"_index":2532,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:168",{"_index":2521,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:187",{"_index":2547,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:204",{"_index":2545,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:214",{"_index":2526,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:227",{"_index":2542,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:243",{"_index":2537,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":2562,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:32",{"_index":4400,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:36",{"_index":2558,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:37",{"_index":4398,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:41",{"_index":2514,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:42",{"_index":4399,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:46",{"_index":2517,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:49",{"_index":4401,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:51",{"_index":2516,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:56",{"_index":2520,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:57",{"_index":4402,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:61",{"_index":2552,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:66",{"_index":2555,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:71",{"_index":2554,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:76",{"_index":2549,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:81",{"_index":2548,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:86",{"_index":2564,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:97",{"_index":2556,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.detached",{"_index":2618,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.module",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/FiltersContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["slider.module.ts",{"_index":2630,"title":{},"body":{"modules/DualSliderModule.html":{},"modules/RotationSliderModule.html":{}}}],["slider.wrapper",{"_index":2612,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider/dual",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider/rotation",{"_index":4379,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{}}}],["slider:hover",{"_index":4409,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider_max",{"_index":4778,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sliders",{"_index":1720,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slidervaluechanged",{"_index":2505,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slidervalues",{"_index":4274,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["slidervalues.push(slider",{"_index":4279,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["sluka",{"_index":3379,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["small",{"_index":32,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SearchableItem.html":{}}}],["small_intestine",{"_index":2380,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["software",{"_index":5054,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1573,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["soon",{"_index":3327,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["sort((a",{"_index":1047,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["sortby",{"_index":3907,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortby(searchresults",{"_index":3919,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult",{"_index":3871,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult(this",{"_index":3893,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorted",{"_index":3055,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["sortlexically",{"_index":3872,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically(this",{"_index":3896,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorts",{"_index":3895,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules/OrganSelectorModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["source.dimension_units",{"_index":1225,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.entityid",{"_index":1232,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.getontologytermoccurences().subscribe(ontologytermsdata",{"_index":2324,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.info",{"_index":1321,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["source.label",{"_index":1235,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object",{"_index":1214,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object.file_format?.startswith('model/gltf",{"_index":1215,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object?.file",{"_index":1233,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object?.file_subpath",{"_index":1234,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object['@id",{"_index":1217,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.pipe",{"_index":2312,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.service",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.service.ts",{"_index":2165,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":2178,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:19",{"_index":2180,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":2169,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:53",{"_index":2171,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:67",{"_index":2174,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:77",{"_index":2170,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:87",{"_index":2175,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:97",{"_index":2173,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.subscribe(data",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["source.worker",{"_index":2188,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.x_dimension",{"_index":1226,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.y_dimension",{"_index":1227,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.z_dimension].map(dim",{"_index":1228,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source/data",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source['@id",{"_index":1218,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sourceboxes",{"_index":1468,"title":{},"body":{"interfaces/Collision.html":{}}}],["sourceid",{"_index":1216,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sourceiri",{"_index":1078,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["sources",{"_index":1270,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["sources(urls",{"_index":4782,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sources.includes(msg.source",{"_index":3656,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sources.map(source",{"_index":1319,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["sourcesfromurls",{"_index":4735,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sourcesfromurls(urls",{"_index":4746,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sourceurls",{"_index":3120,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["space",{"_index":2017,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{}}}],["span')).gettext",{"_index":478,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["spatial",{"_index":83,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spatialentity",{"_index":930,"title":{"interfaces/SpatialEntity.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spatially",{"_index":3236,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["spatialobjectreference",{"_index":1067,"title":{"interfaces/SpatialObjectReference.html":{}},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["spatialplacement",{"_index":1071,"title":{"interfaces/SpatialPlacement.html":{}},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["spatialscenenode",{"_index":594,"title":{"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spec",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":4007,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["specific",{"_index":97,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SearchableItem.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":3345,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["specified",{"_index":3654,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["specifying",{"_index":3637,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["spinner",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["spinneractive",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["spinneroverlaycomponent",{"_index":395,"title":{"components/SpinnerOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["spinneroverlaymodule",{"_index":430,"title":{"modules/SpinnerOverlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["spinning",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1186,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spraggins",{"_index":3387,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["sprint",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1501,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":1502,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":1507,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":1508,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":699,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["stage",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["stage/3d",{"_index":4462,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["stagenavcomponent",{"_index":397,"title":{"components/StageNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["stagenavmodule",{"_index":2135,"title":{"modules/StageNavModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["stagestate",{"_index":4368,"title":{"injectables/StageState.html":{}},"body":{"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["stagestatemodel",{"_index":4461,"title":{"interfaces/StageStateModel.html":{}},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["standards",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1953,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["start?.expanded",{"_index":2087,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["start?.opened",{"_index":2086,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["startdrawers",{"_index":1977,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["startdrawers.length",{"_index":1981,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["startdrawers[0",{"_index":1985,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["started",{"_index":4881,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["startexpanded",{"_index":2085,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["starting",{"_index":2011,"title":{},"body":{"components/ContentComponent.html":{}}}],["starts",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":2341,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["startwith",{"_index":1941,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/OntologySearchComponent.html":{}}}],["stat",{"_index":4320,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.count",{"_index":4318,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.label",{"_index":4319,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["state",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SpatialSceneNode.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state('closed",{"_index":3442,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('collapsed",{"_index":3447,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('extended",{"_index":3451,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('false",{"_index":2058,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["state('full",{"_index":3452,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('half",{"_index":3448,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('true",{"_index":2059,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["state(`open",{"_index":3441,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state.data.filter(d",{"_index":809,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["state.docollisions",{"_index":814,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["state.nodes[state.root",{"_index":4114,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["state.zoomopacity",{"_index":821,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["state[0",{"_index":4601,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statechange",{"_index":3472,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["staterepository",{"_index":2273,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["states",{"_index":1296,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/StoreDebugComponent.html":{},"modules/StoreModule.html":{}}}],["states.every(state",{"_index":2297,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["states.map(([key",{"_index":4593,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["states[view.id",{"_index":1355,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["stateswithdata",{"_index":4595,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues",{"_index":4592,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues.filter(([_key",{"_index":4596,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["static",{"_index":721,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SpatialSceneNode.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["statictiff",{"_index":3729,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["staticzarr",{"_index":3722,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["stats",{"_index":4286,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["status",{"_index":2248,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["stay",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1785,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["step*(5",{"_index":4165,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["still",{"_index":848,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["stomach",{"_index":2384,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["store",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["store.forsubjects((subject",{"_index":1122,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["store.subscribe(root",{"_index":4598,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["store/ontology/ontology.state",{"_index":3993,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["store/store.module",{"_index":2153,"title":{},"body":{"modules/CoreModule.html":{}}}],["stored",{"_index":4383,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["storedebugcomponent",{"_index":400,"title":{"components/StoreDebugComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["storedebugmodule",{"_index":2136,"title":{"modules/StoreDebugModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/StoreDebugModule.html":{},"modules.html":{},"overview.html":{}}}],["storemodule",{"_index":2145,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":4619,"title":{},"body":{"modules/StoreModule.html":{}}}],["strategic",{"_index":3288,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["streaming",{"_index":5024,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/NameInputComponent.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["string[]>(map",{"_index":2882,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["strings",{"_index":2392,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["stroke",{"_index":1420,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["structure",{"_index":2858,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["strvalue",{"_index":4479,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["styilng",{"_index":3051,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["style",{"_index":1572,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["style.margin",{"_index":2028,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["styled",{"_index":2754,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":3494,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["styleurls",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{}}}],["styling",{"_index":1562,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{}}}],["sub",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/InfoButtonComponent-1.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":597,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"license.html":{}}}],["subject.id",{"_index":1124,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["subject.next(dataquerystate.completed",{"_index":2302,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sublicense",{"_index":5064,"title":{},"body":{"license.html":{}}}],["subpath",{"_index":4503,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["subscription",{"_index":1932,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["subscriptions",{"_index":1888,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["substantial",{"_index":5076,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":3315,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["subtree",{"_index":4026,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["subtrees",{"_index":4016,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["successful",{"_index":2812,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["such",{"_index":2524,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["suffix",{"_index":3933,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{}}}],["suffix.show",{"_index":4492,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["super",{"_index":2317,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["support",{"_index":3308,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules.html":{}}}],["supported",{"_index":3748,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["supporting",{"_index":3258,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["supports",{"_index":3318,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["surgeons",{"_index":3323,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["svg",{"_index":2348,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"modules.html":{}}}],["swatch",{"_index":1808,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["switch",{"_index":877,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{}}}],["switchmap",{"_index":2282,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["switchmap(query",{"_index":2313,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["switchmap(value",{"_index":3916,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["syncexpanded(other",{"_index":3536,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["syncs",{"_index":3533,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["synonym",{"_index":3970,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["synonymlabels",{"_index":2891,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["synonyms",{"_index":2862,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"interfaces/ValueObject.html":{}}}],["synonymsextractor",{"_index":2880,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsextractor(json",{"_index":2892,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsproperty",{"_index":2879,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["systems",{"_index":3260,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["t",{"_index":1101,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["t.x",{"_index":3836,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["t.y",{"_index":3838,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["t.z",{"_index":3840,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tab",{"_index":4340,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["table",{"_index":4002,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["take",{"_index":4336,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["takes",{"_index":1747,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DetailsLabelComponent.html":{}}}],["takewhile",{"_index":3632,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["tap",{"_index":2283,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["tap(linkchildren",{"_index":4048,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["tap(next",{"_index":2314,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["target",{"_index":636,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["target.name",{"_index":1504,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":1220,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["targetboxes",{"_index":1485,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":1497,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetiri",{"_index":1076,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["tealgreen",{"_index":1637,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["team",{"_index":3280,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["teams",{"_index":3390,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["technologies",{"_index":79,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["technology",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":1410,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["template",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["templates",{"_index":3337,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["templateurl",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{}}}],["temporary",{"_index":2018,"title":{},"body":{"components/ContentComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["term",{"_index":956,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["termdata",{"_index":4085,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["termoccurencesdata",{"_index":2221,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["termoccurencesdata(filter",{"_index":2231,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["termoccurencesdataquerystatus",{"_index":2222,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["terms",{"_index":66,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.body.id",{"_index":1179,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.kidney.id",{"_index":1181,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.left_kidney.id",{"_index":1185,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.right_kidney.id",{"_index":1183,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.spleen.id",{"_index":1187,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["test",{"_index":2296,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["testing",{"_index":2295,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["text",{"_index":546,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["theme",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["themes",{"_index":4663,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["theming",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["theming.gettheme",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["theming.service",{"_index":4635,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":2146,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":164,"title":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}},"body":{"components/AppComponent.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":4636,"title":{},"body":{"modules/ThemingModule.html":{}}}],["thickness",{"_index":4455,"title":{},"body":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["thin",{"_index":3938,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["this._afterconnected",{"_index":2202,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.completed",{"_index":2320,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.running",{"_index":2332,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.pipe(distinct",{"_index":2246,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._channelconfigs",{"_index":1291,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._expanded",{"_index":3465,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._height",{"_index":1281,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._layers",{"_index":3100,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["this._listdataquerystatus$.next(dataquerystate.completed",{"_index":2319,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._listdataquerystatus$.next(dataquerystate.running",{"_index":2330,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._listdataquerystatus$.pipe(distinct",{"_index":2254,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._loaders",{"_index":1286,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._measuredmargin",{"_index":3492,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._measuredwidth",{"_index":3483,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._onclick",{"_index":654,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this._onhover",{"_index":652,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this._onviewstatechange",{"_index":656,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this._opened",{"_index":3461,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._position",{"_index":3457,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._sources",{"_index":1284,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["this._sources.length",{"_index":4785,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this._sources.map(source",{"_index":4789,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this._termoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":2321,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._termoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":2334,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._termoccurencesdataquerystatus$.pipe(distinct",{"_index":2271,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._width",{"_index":1280,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.addentitiesmany(ids.map((id",{"_index":4864,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.addspatialentity(getspatialentity(store",{"_index":1127,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.addspatialobjectreference(getspatialobjectreference(store",{"_index":1123,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.addspatialplacement(getspatialplacement(store",{"_index":1130,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.aggregatedata",{"_index":2242,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.aggregatedataquerystatus",{"_index":2260,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.animationsenabled",{"_index":2076,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.applyfilter({highlightedentities",{"_index":895,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.applyfilter({ontologyterms",{"_index":881,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.applyfilters.emit(this.filters",{"_index":2653,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.applythemeclass(theme",{"_index":4675,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.applythemeclass(this.theme",{"_index":4674,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.atscrollbottom",{"_index":4317,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.blocksize",{"_index":520,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksizechange.emit(this.blocksize",{"_index":522,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.bodycanvas.nativeelement",{"_index":861,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui",{"_index":862,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui.nodeclick$.subscribe(async",{"_index":876,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui.setscene(scene",{"_index":875,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyuilayer",{"_index":650,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.bodyuilayer.setstate({data",{"_index":685,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.bodyuilayer.state",{"_index":679,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.bottom",{"_index":1868,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["this.brightnesshigh",{"_index":1776,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.brightnesslow",{"_index":1779,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.brightnessslideroptions",{"_index":1788,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.cdr.markforcheck",{"_index":1971,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.channel",{"_index":1962,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.asobservable",{"_index":3662,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.closed",{"_index":3664,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.complete",{"_index":3667,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.next",{"_index":3644,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.sendmessage",{"_index":1969,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.channelconfigs",{"_index":1332,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.clear",{"_index":4787,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.closeviewer.emit",{"_index":2984,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["this.color",{"_index":3031,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme",{"_index":1566,"title":{},"body":{"components/ColorBarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["this.colorscheme.colors",{"_index":3032,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme.positions",{"_index":3033,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme.type",{"_index":3030,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.component",{"_index":4677,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.content",{"_index":1973,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":1972,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content1.first",{"_index":1959,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content1.length",{"_index":1961,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content2.first",{"_index":1960,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.contentsvisible",{"_index":2601,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.creategraph",{"_index":1119,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.createlayerconfigs",{"_index":1324,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.createselectionlabel(ontologyselection",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createvivviews",{"_index":1313,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.ctx.getstate().homeurl",{"_index":4219,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.ctx.patchstate",{"_index":4218,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ctx.setstate(ontology",{"_index":4116,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["this.ctx.setstate(patch",{"_index":4220,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.cursor",{"_index":659,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.data",{"_index":3145,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.data.filter$.subscribe(async",{"_index":871,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.data.querystatus$.pipe",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.data.resulttype",{"_index":4338,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["this.data.updatefilter",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["this.datasource",{"_index":2189,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource.connect(this.dboptions",{"_index":2203,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasourceservice.datasource.connect",{"_index":873,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.datasourceservice.datasource.getscene(f",{"_index":874,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.datasourceservice.getimageviewerdata(result['@id",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["this.db.getspatialentities(filter).map((entity",{"_index":1209,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.db.graph.gettransformationmatrix(sourceid",{"_index":1219,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.db.store",{"_index":1120,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.dboptions",{"_index":2191,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.deck",{"_index":666,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.finalize",{"_index":1311,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.props.viewstate",{"_index":688,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.deck.redraw(true",{"_index":1316,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.setprops",{"_index":668,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.deck.setprops(props",{"_index":1358,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.setprops({viewstate",{"_index":717,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.defaulttheme",{"_index":4672,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.deferred",{"_index":3434,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":3177,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{}}}],["this.dialogref.close",{"_index":3209,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["this.drawer",{"_index":4720,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.drawer.position",{"_index":4718,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.drawers",{"_index":2072,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":1967,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.drawers.toarray",{"_index":1976,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.element.nativeelement",{"_index":3484,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.entities$.pipe",{"_index":4840,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.entities[id",{"_index":4865,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.expanded",{"_index":3517,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":3525,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.expandedstate",{"_index":3505,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.expandedstate2",{"_index":3477,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.faded",{"_index":2091,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.filter",{"_index":898,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filter$.pipe(querydata",{"_index":2241,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.filter?.highlightedentities",{"_index":892,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filterchange.emit(newfilter",{"_index":899,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filteredresults",{"_index":3913,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.filters",{"_index":2651,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(filters",{"_index":2691,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(this.filters",{"_index":2652,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.filtersvisible",{"_index":2690,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.formatlabel(node.label",{"_index":4064,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.formcontrol.reset",{"_index":3927,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.formcontrol.valuechanges",{"_index":3912,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.get(s",{"_index":1039,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.getarguments(definition",{"_index":2826,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.getautocolor(autocolorindex",{"_index":4872,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.getbrightness",{"_index":3039,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.getchildren",{"_index":4038,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getchildren.bind(this",{"_index":4039,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getentityscenenodes(filter",{"_index":1237,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getids(filter)].map((s",{"_index":1038,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.getindexofmatch(label",{"_index":4069,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getindexofmatch(node.label",{"_index":4063,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":3653,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.getmethodname(definition",{"_index":2824,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.getreferencebody(filter",{"_index":1176,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getreferenceorgans(filter).map((organ",{"_index":1190,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getreferencescenenodes(filter",{"_index":1236,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(body",{"_index":1188,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(entity",{"_index":1210,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(getspatialentity(store",{"_index":1192,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(organ",{"_index":1191,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getstate().filter",{"_index":2329,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.graph",{"_index":1008,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{}}}],["this.graph.creategraph",{"_index":1034,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.graph.getedgeattribute(source",{"_index":1144,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.hasnode(sourceiri",{"_index":1137,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.hasnode(targetiri",{"_index":1138,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergedirectededge(placement.source['@id",{"_index":1134,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergenode(entity['@id",{"_index":1132,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergenode(ref['@id",{"_index":1133,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.handlemessage(msg",{"_index":1965,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.highvalue",{"_index":2585,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.http.get(environment.ontologyurl",{"_index":4041,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.initialized",{"_index":3433,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initialized.set",{"_index":3498,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initialized.valueof",{"_index":3506,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initialized.wait",{"_index":3529,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initializedeck(reqprops",{"_index":1299,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.initializesliderpopover",{"_index":2602,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isdemo",{"_index":4784,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.isloading",{"_index":3147,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.issliderinitialized",{"_index":2599,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isslideropen",{"_index":2600,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.labels[0",{"_index":3584,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.labels[1",{"_index":3585,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.lasthovered",{"_index":697,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.layer",{"_index":1795,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.brightness[0",{"_index":1773,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.brightness[1",{"_index":1777,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.transparency",{"_index":1780,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layerchange.emit(layer",{"_index":3074,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["this.layerchange.emit(new",{"_index":3070,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["this.layerchange.emit(this.layer",{"_index":1792,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layerconfigs",{"_index":1307,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layerfilter",{"_index":1361,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layers",{"_index":1306,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layers$.pipe",{"_index":4836,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.leftmargin",{"_index":2083,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.listdata",{"_index":2251,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.listdataquerystatus",{"_index":2259,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.loaders[0",{"_index":4282,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["this.lookup(nodes",{"_index":4055,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.lowvalue",{"_index":2583,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.margin2",{"_index":3480,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.measuredmargin",{"_index":3479,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.measuredwidth",{"_index":3530,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.messages",{"_index":3661,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.messages.pipe(filter(msg",{"_index":3650,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.name",{"_index":3710,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namechange.emit(this.name",{"_index":3711,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.nextmessageid",{"_index":3645,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.nodeclicksubject.next({node",{"_index":701,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":595,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":698,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":599,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":696,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":602,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.onleft",{"_index":4157,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["this.onright",{"_index":4158,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["this.ontologyselectionlabel",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ontologyservice.filter(value",{"_index":3917,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologyservice.loadontology",{"_index":3910,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologystate.nodes$.pipe",{"_index":4054,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologystate.rootnode",{"_index":4037,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologystate.setontology(ontology",{"_index":4053,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologyterms",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ontologytermsfulldata",{"_index":2325,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.onviewstatechange",{"_index":1362,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.opened",{"_index":3503,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.openedchange.emit(this.opened",{"_index":3521,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.openedstate",{"_index":3504,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.openimageviewer.emit",{"_index":4339,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["this.options",{"_index":1012,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DualSliderComponent.html":{}}}],["this.options.ccfowlurl",{"_index":1015,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.ceil",{"_index":2591,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.floor",{"_index":2590,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.hubmapassetsurl",{"_index":1025,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataservice",{"_index":1023,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataurl",{"_index":1019,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataurl.endswith('.jsonld",{"_index":1020,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapportalurl",{"_index":1026,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmaptoken",{"_index":1024,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.optionschanged",{"_index":2579,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionsvisible",{"_index":2446,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.organchanged.emit(icon.name",{"_index":4170,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["this.organlist.length",{"_index":4166,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["this.original.children.length",{"_index":2728,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.original.label",{"_index":2727,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.overlayref",{"_index":2575,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.detach",{"_index":2598,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.dispose",{"_index":2592,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.patchstate",{"_index":2326,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.popupvisible",{"_index":1865,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["this.position",{"_index":3456,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.props",{"_index":803,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.registericonimpl(definition",{"_index":2815,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.registericonimpl(safedef",{"_index":2810,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.registry",{"_index":2819,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.removebox",{"_index":2692,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.removeentitiesmany(this.ids",{"_index":4863,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.resetchannelconfigs",{"_index":1323,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.resolve",{"_index":3410,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.result",{"_index":3146,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.rightmargin",{"_index":2084,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.root",{"_index":4599,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.rootnode",{"_index":4036,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.rotation",{"_index":4392,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.rotationchange.emit(this.rotation",{"_index":4393,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.scene",{"_index":1010,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.scene.getscene(filter",{"_index":1053,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.schemechange.emit(this.colorscheme",{"_index":4437,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemechanged(0",{"_index":4434,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeidx",{"_index":4436,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions",{"_index":4431,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions.filter(scheme",{"_index":4432,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions[idx",{"_index":4435,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.selected.emit(node",{"_index":3926,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.selectedorgan",{"_index":4168,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["this.selection",{"_index":1414,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selection.filter(selection",{"_index":1415,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.selectionchange.emit(this.selection",{"_index":1416,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selectionchange.emit(value",{"_index":2447,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.sendtoggle",{"_index":3507,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.sensor",{"_index":4798,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.sensor.detach",{"_index":4801,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.setembedded.bind(this",{"_index":4217,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.setsources(reqprops.sources",{"_index":1303,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.setsourceurls(result",{"_index":3148,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.setstate({data",{"_index":804,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.settheme(this.defaulttheme",{"_index":4676,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.side",{"_index":4556,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.sidechange.emit(this.side",{"_index":4557,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.slicesconfig",{"_index":4480,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfigchange.emit(this.slicesconfig",{"_index":4481,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.snapshot",{"_index":4861,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.sortbysynonymresult",{"_index":3920,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.sortlexically",{"_index":3921,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.source",{"_index":3646,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.source.getaggregateresults(filter",{"_index":2333,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.source.getlistresults(filter",{"_index":2331,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.source.getontologytermoccurences(filter",{"_index":2335,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.sourcesfromurls(urls",{"_index":4783,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.sourceurls",{"_index":3150,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.state",{"_index":807,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.state$.pipe(map(state",{"_index":4111,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["this.state$.pipe(pluck('blocksize",{"_index":4464,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('embedded",{"_index":4207,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluck('filter",{"_index":2249,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.state$.pipe(pluck('homeurl",{"_index":4209,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluck('rotation",{"_index":4465,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('slicesconfig",{"_index":4466,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('user",{"_index":4211,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state.createlayers(channels",{"_index":3149,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.statechange.emit",{"_index":3531,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.states",{"_index":1308,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.store",{"_index":1007,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.store.getquads(datafactory.namednode(id",{"_index":1036,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.store.selectsnapshot(ontologystate",{"_index":4074,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.store.size",{"_index":1013,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":4717,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":2069,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.subscriptions.add(sub",{"_index":4600,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":1964,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.subscriptions.unsubscribe",{"_index":1974,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.syncexpanded(other",{"_index":3532,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.termoccurencesdata",{"_index":2268,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.termoccurencesdataquerystatus",{"_index":2261,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.theme",{"_index":4673,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.theming.settheme(this.theming.gettheme",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":3463,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggle(false",{"_index":3501,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggle(true",{"_index":3500,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":3467,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggleexpanded(false",{"_index":3513,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggleexpanded(true",{"_index":3510,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.transparencyslideroptions",{"_index":1790,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.tree.expandandselect(ontologynode",{"_index":4099,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.update",{"_index":1309,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatedeckprops",{"_index":1337,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updateentitiesmany",{"_index":4873,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.updateentitiesmany(changes",{"_index":4878,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.updatefaded",{"_index":2074,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.updatelayer",{"_index":1775,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.updatelayers",{"_index":1336,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["this.updatemargin(position",{"_index":2081,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.updatesources",{"_index":4788,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.updatestate((_view",{"_index":1375,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatestate((view",{"_index":1314,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatestate(view",{"_index":1325,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updateviews",{"_index":1335,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.validatedrawers",{"_index":1968,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.value",{"_index":3583,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.valuechange.emit(this.value",{"_index":3586,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.valuerange",{"_index":2587,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[0",{"_index":2588,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[1",{"_index":2589,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.view3d",{"_index":4558,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.view3dchange.emit(this.view3d",{"_index":4559,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.viewer",{"_index":4792,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.finalize",{"_index":4802,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.setsize(width",{"_index":4800,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer?.clear",{"_index":4813,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewervisible",{"_index":3144,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.views",{"_index":1338,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews",{"_index":1305,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews.map(viv",{"_index":1340,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews.reduce((states",{"_index":1353,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.width",{"_index":3478,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.zoomto(node",{"_index":684,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["those",{"_index":3648,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["three",{"_index":3319,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["through",{"_index":3286,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["throw",{"_index":1956,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"modules/CoreModule.html":{},"interfaces/OMEZarrInfo.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{}}}],["throwduplicatedrawerserror('end",{"_index":1984,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["throwduplicatedrawerserror('start",{"_index":1982,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["throwduplicatedrawerserror(position",{"_index":1952,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["thrown",{"_index":1951,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["throws",{"_index":1947,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["thumb",{"_index":4410,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["thumbnails",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["thumbnailurl",{"_index":35,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["thymus",{"_index":2386,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["tiff",{"_index":3723,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["tiff2",{"_index":3724,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["tiffinfo",{"_index":1252,"title":{"interfaces/TiffInfo.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["tiffinfo).url",{"_index":4790,"title":{},"body":{"components/ViewerComponent.html":{}}}],["time",{"_index":1398,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/OldRuiData.html":{}}}],["timing",{"_index":2094,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["tissue",{"_index":29,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["tissue_object_rotation",{"_index":3765,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_object_size",{"_index":3766,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_position_mass_point",{"_index":3767,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_position_vertices",{"_index":3768,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissues",{"_index":25,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["title",{"_index":537,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["tmc",{"_index":78,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["todo",{"_index":866,"title":{},"body":{"components/BodyUiComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["toeuler",{"_index":1086,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["toeuler(fromeuler(r_rad[1",{"_index":1110,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["toggle",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["toggle(opened",{"_index":3502,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["toggle.component",{"_index":3596,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{}}}],["toggle.component.html",{"_index":3565,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.scss",{"_index":3564,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts",{"_index":3562,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:17",{"_index":3575,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:22",{"_index":3570,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:27",{"_index":3572,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:32",{"_index":3569,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:37",{"_index":3573,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:42",{"_index":3581,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:51",{"_index":3577,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.module",{"_index":3627,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["toggle.module.ts",{"_index":3593,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{}}}],["toggle/labeled",{"_index":3561,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["togglebuttoncomponent",{"_index":402,"title":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["toggled",{"_index":2077,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["toggleexpanded(expanded",{"_index":3516,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["togglefiltervisible",{"_index":2677,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["toggleoptions",{"_index":2433,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggles",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["togglescheme",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["togglesliderpopover",{"_index":2506,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["toggling",{"_index":4546,"title":{},"body":{"components/StageNavComponent.html":{}}}],["token",{"_index":999,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["tool",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["tools",{"_index":3218,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["tooltip",{"_index":767,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["top",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["toradians",{"_index":1079,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["tort",{"_index":5094,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1988,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/DualSliderComponent.html":{}}}],["track",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/ResultsBrowserComponent.html":{},"components/StageNavComponent.html":{}}}],["trackbyid",{"_index":3048,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["trackbyid(layer",{"_index":3063,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["tracks",{"_index":3902,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["transform",{"_index":540,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["transform.scale(scale",{"_index":1231,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["transformmatrix",{"_index":766,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["transition",{"_index":2054,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OrganSelectorComponent.html":{},"components/RotationSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["transition('closed",{"_index":3443,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["transition('false",{"_index":2060,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["translated",{"_index":3785,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["translatey",{"_index":2475,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["translation",{"_index":4510,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["translation_units",{"_index":3841,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["transparency",{"_index":1732,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["transparency(value",{"_index":1781,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["transparencychanged",{"_index":1727,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["transparencyslideroptions",{"_index":1725,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["traversescene(child",{"_index":1464,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(gltfscene",{"_index":1488,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":1444,"title":{},"body":{"interfaces/Collision.html":{}}}],["tree",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tree'},{'name",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["tree.component",{"_index":4098,"title":{},"body":{"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{}}}],["tree.module",{"_index":3855,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["tree.module.ts",{"_index":4120,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["tree/ontology",{"_index":3854,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["trigger",{"_index":2055,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["trigger('expandcollapse",{"_index":3446,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["trigger('fadeinout",{"_index":2057,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["trigger('openclose",{"_index":3440,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["triggered",{"_index":3892,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["triple",{"_index":933,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["true",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["true=left",{"_index":3578,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["try",{"_index":2827,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["tslib",{"_index":5030,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":753,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tslint:disable",{"_index":663,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/Collision.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["tslint:enable",{"_index":785,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{}}}],["ttps://hubmapconsortium.github.io/ccf",{"_index":3348,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["tuned",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":1975,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["two",{"_index":3571,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["tx",{"_index":1139,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["tx.translate(t).rotatexyz(r).scale(s",{"_index":1117,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":5102,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1351,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/TiffInfo.html":{}}}],["types",{"_index":986,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/typealiases.html":{}}}],["types.ts",{"_index":4498,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["typing",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":758,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["u",{"_index":1258,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["u.s",{"_index":3395,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["u2cdk114886",{"_index":3297,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ui",{"_index":570,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["ui'},{'name",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["ui.component",{"_index":905,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":838,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.scss",{"_index":837,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts",{"_index":834,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:18",{"_index":845,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:23",{"_index":851,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:25",{"_index":859,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:27",{"_index":844,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:31",{"_index":855,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:71",{"_index":854,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.module",{"_index":564,"title":{},"body":{"modules/BodyModule.html":{}}}],["ui.module.ts",{"_index":904,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.ts",{"_index":567,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["ui.ts:103",{"_index":613,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:121",{"_index":610,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:128",{"_index":615,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:27",{"_index":593,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:28",{"_index":591,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:30",{"_index":598,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:31",{"_index":601,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:32",{"_index":604,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:34",{"_index":596,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:35",{"_index":600,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:36",{"_index":603,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:38",{"_index":592,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:39",{"_index":589,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:75",{"_index":618,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:89",{"_index":620,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui/body",{"_index":563,"title":{},"body":{"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{}}}],["ui/src/lib/body",{"_index":566,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ui/src/lib/spatial",{"_index":1437,"title":{},"body":{"interfaces/Collision.html":{}}}],["uievent",{"_index":4306,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["unchecked",{"_index":1411,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["undefined",{"_index":693,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["under",{"_index":2350,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent.html":{}}}],["underline",{"_index":2457,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["underlying",{"_index":2179,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["understanding",{"_index":3226,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["unique",{"_index":3067,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OntologyNode.html":{}}}],["units",{"_index":4501,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["university",{"_index":3275,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"index.html":{}}}],["unknown",{"_index":708,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"components/StoreDebugComponent.html":{}}}],["unlike",{"_index":2342,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["unpickable",{"_index":760,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["unsafe",{"_index":768,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/Collision.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["unselected",{"_index":3069,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["unset",{"_index":2959,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["until",{"_index":2559,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"changelog.html":{}}}],["up",{"_index":1737,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["update",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["updateblocksize",{"_index":4566,"title":{},"body":{"injectables/StageState.html":{}}}],["updateblocksize(blocksize",{"_index":4467,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["updateblocksizes",{"_index":525,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["updateblocksizes(input",{"_index":516,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["updatechannelconfigs",{"_index":2896,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatechannelconfigs(configs",{"_index":1327,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updated",{"_index":515,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["updatedeckprops",{"_index":2897,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatedeckprops(props",{"_index":1357,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatefaded",{"_index":2024,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["updatefilter",{"_index":2223,"title":{},"body":{"injectables/DataState.html":{},"components/FiltersContentComponent.html":{}}}],["updatefilter(filter",{"_index":2233,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["updatefilter(value",{"_index":2647,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatelayer",{"_index":1728,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/ViewerState.html":{}}}],["updatelayer(id",{"_index":4834,"title":{},"body":{"injectables/ViewerState.html":{}}}],["updatelayer(updates",{"_index":1753,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["updatelayers",{"_index":1342,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["updatemargin",{"_index":2025,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["updatemargin(position",{"_index":2048,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["updatename",{"_index":3699,"title":{},"body":{"components/NameInputComponent.html":{}}}],["updatename(input",{"_index":3707,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["updaterotation",{"_index":4567,"title":{},"body":{"injectables/StageState.html":{}}}],["updaterotation(rotation",{"_index":4468,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["updates",{"_index":510,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["updateside",{"_index":4537,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateside(selection",{"_index":4550,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateslicesconfig",{"_index":4568,"title":{},"body":{"injectables/StageState.html":{}}}],["updateslicesconfig(slicesconfig",{"_index":4469,"title":{},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["updateslicesdata",{"_index":4483,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["updateslicesdata(input",{"_index":4478,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["updatesources",{"_index":4736,"title":{},"body":{"components/ViewerComponent.html":{}}}],["updatestate",{"_index":1349,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatestate(args",{"_index":2926,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatetoggle",{"_index":3566,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updatetoggle(selection",{"_index":3576,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updateview",{"_index":4538,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateview(selection",{"_index":4553,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateviews",{"_index":1339,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updating",{"_index":3060,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["upgraded",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":2519,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["upperbound",{"_index":1474,"title":{},"body":{"interfaces/Collision.html":{}}}],["upperbound[i",{"_index":1481,"title":{},"body":{"interfaces/Collision.html":{}}}],["url",{"_index":34,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SearchableItem.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["url).map(url",{"_index":4815,"title":{},"body":{"components/ViewerComponent.html":{}}}],["urls",{"_index":2806,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ViewerComponent.html":{}}}],["urls.filter(url",{"_index":4814,"title":{},"body":{"components/ViewerComponent.html":{}}}],["use",{"_index":1831,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"injectables/DataSourceService.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent-1.html":{},"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["used",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["useful",{"_index":1949,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["user",{"_index":1396,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"changelog.html":{},"index.html":{}}}],["user's",{"_index":3709,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["username",{"_index":3701,"title":{"interfaces/UserName.html":{}},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["users",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":3339,"title":{},"body":{"components/InfoDialogComponent-1.html":{},"changelog.html":{}}}],["util/prefixes",{"_index":1089,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["utils",{"_index":972,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["utils.ts",{"_index":3757,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["uuid",{"_index":3789,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["v0.5.0",{"_index":3758,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["v1.0.0",{"_index":3241,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["v1.selectionorder",{"_index":3103,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["v2",{"_index":3102,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["v2.selectionorder",{"_index":3104,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["val",{"_index":4161,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["val+'px",{"_index":4164,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["valid",{"_index":4473,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["validatedrawers",{"_index":1891,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["validates",{"_index":1916,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["validation",{"_index":3903,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["value",{"_index":20,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["value.tolowercase",{"_index":4056,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["valuechange",{"_index":3568,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["valuechanges",{"_index":3911,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valuechanges.pipe",{"_index":3914,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valueextractor",{"_index":2870,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valueobject",{"_index":2857,"title":{"interfaces/ValueObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valueof",{"_index":3407,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["valueorgenerator",{"_index":1256,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["valueproperty",{"_index":2869,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valuerange",{"_index":2507,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["values",{"_index":505,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["values.length",{"_index":4597,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["var",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["variable",{"_index":2128,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["variables",{"_index":1553,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["vec3",{"_index":1441,"title":{},"body":{"interfaces/Collision.html":{}}}],["vec3(...lowerbound.map((n",{"_index":1479,"title":{},"body":{"interfaces/Collision.html":{}}}],["vec3(...upperbound.map((n",{"_index":1482,"title":{},"body":{"interfaces/Collision.html":{}}}],["version",{"_index":3780,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["versions",{"_index":3346,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["vertical",{"_index":3184,"title":{},"body":{"components/InfoButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["vertices",{"_index":3772,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["via",{"_index":4386,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/ViewerComponent.html":{}}}],["video",{"_index":3270,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["view",{"_index":1243,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchResult.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["view.filterviewstate(argsgenerator(view",{"_index":1356,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.getlayers",{"_index":1346,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.id",{"_index":1315,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.initialviewstate",{"_index":1326,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view3d",{"_index":4539,"title":{},"body":{"components/StageNavComponent.html":{}}}],["view3dchange",{"_index":4541,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild",{"_index":860,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["viewchild('bodycanvas",{"_index":857,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["viewchild('canvas",{"_index":4752,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewchild('content",{"_index":1850,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["viewchild('popover",{"_index":2557,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(cdkportal",{"_index":2561,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(ontologytreecomponent",{"_index":4095,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["viewchildren",{"_index":1940,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["viewchildren(contentcomponent",{"_index":1926,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["viewed",{"_index":4127,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{}}}],["viewer",{"_index":48,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/NameInputComponent.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["viewer.channelnames",{"_index":4807,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.close",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer.component",{"_index":4821,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewer.component.html",{"_index":4732,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.component.scss",{"_index":4731,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.loaders.some((loader",{"_index":4804,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.module",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.module.ts",{"_index":3116,"title":{},"body":{"modules/ImageViewerModule.html":{}}}],["viewer.open(data",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer.setsources(sources",{"_index":4803,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.ts",{"_index":1240,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer.ts:110",{"_index":2913,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:114",{"_index":2920,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:133",{"_index":2921,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:148",{"_index":2923,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:16",{"_index":4226,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:168",{"_index":2912,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:169",{"_index":2911,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:171",{"_index":2922,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:181",{"_index":2928,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:185",{"_index":2925,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:195",{"_index":2927,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:208",{"_index":2924,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:212",{"_index":2914,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:231",{"_index":2919,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:24",{"_index":4241,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:244",{"_index":2916,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:250",{"_index":2918,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:51",{"_index":4240,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:64",{"_index":2906,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:66",{"_index":2930,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:67",{"_index":2932,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:68",{"_index":2903,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:69",{"_index":2900,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:71",{"_index":2934,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:72",{"_index":2936,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:73",{"_index":2902,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:74",{"_index":2901,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:76",{"_index":2938,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:77",{"_index":2940,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:78",{"_index":2899,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:80",{"_index":2909,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:81",{"_index":2908,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:82",{"_index":2905,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:83",{"_index":2904,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:84",{"_index":2907,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:86",{"_index":2898,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:99",{"_index":2910,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.updatechannelconfigs(configs",{"_index":4812,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/image",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["viewer/src/lib/image",{"_index":1239,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/src/lib/loader.ts",{"_index":3715,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/src/lib/picture",{"_index":4223,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/viewer.module",{"_index":3117,"title":{},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["viewer/viewer.state",{"_index":4616,"title":{},"body":{"modules/StoreModule.html":{}}}],["viewer/viewer/viewer.component.ts",{"_index":4730,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:121",{"_index":4745,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:126",{"_index":4749,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:138",{"_index":4748,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:156",{"_index":4743,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:160",{"_index":4747,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:52",{"_index":4741,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:63",{"_index":4757,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:66",{"_index":4751,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:69",{"_index":4740,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:73",{"_index":4759,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:74",{"_index":4750,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:76",{"_index":4742,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:78",{"_index":4753,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:80",{"_index":4754,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:81",{"_index":4756,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:82",{"_index":4739,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:86",{"_index":4744,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.module.ts",{"_index":4820,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewercomponent",{"_index":403,"title":{"components/ViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DetailsLabelComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/StoreDebugComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["viewermodule",{"_index":3115,"title":{"modules/ViewerModule.html":{}},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["viewerstate",{"_index":3125,"title":{"injectables/ViewerState.html":{}},"body":{"components/ImageViewerPopoverComponent.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["viewerstatemodel",{"_index":4856,"title":{"interfaces/ViewerStateModel.html":{}},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["viewervisible",{"_index":3121,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["viewid",{"_index":1265,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewing",{"_index":3119,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"components/StageNavComponent.html":{}}}],["viewport",{"_index":1244,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ResultsBrowserComponent.html":{}}}],["viewportid",{"_index":1372,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["views",{"_index":647,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"changelog.html":{}}}],["viewstate",{"_index":669,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewstateprops",{"_index":626,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["viewstates",{"_index":1347,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viridis",{"_index":1686,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["virtual",{"_index":4287,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["visibility",{"_index":1856,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visible",{"_index":1223,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent-1.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visitor",{"_index":1446,"title":{},"body":{"interfaces/Collision.html":{}}}],["visitor(scene",{"_index":1461,"title":{},"body":{"interfaces/Collision.html":{}}}],["visual",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["visualizing",{"_index":1618,"title":{},"body":{"interfaces/ColorScheme-1.html":{}}}],["vitessce",{"_index":3733,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"changelog.html":{}}}],["viv.getdeckglview",{"_index":1341,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["vivview",{"_index":1246,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["vivviews",{"_index":1294,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["void",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/StageNavComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/StoreDebugComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/UserName.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["vu",{"_index":3775,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["w",{"_index":4508,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["w_rotation",{"_index":4509,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["wait",{"_index":3408,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["waiting",{"_index":2950,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["waits",{"_index":3526,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["warning",{"_index":4816,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["warranties",{"_index":5082,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":5078,"title":{},"body":{"license.html":{}}}],["way",{"_index":4310,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["weber",{"_index":3366,"title":{},"body":{"components/InfoDialogComponent-1.html":{}}}],["webgl2",{"_index":1364,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["webkit",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/RotationSliderComponent.html":{}}}],["week",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":538,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/OrganSelectorComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["well",{"_index":3059,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent-1.html":{},"components/ResultsBrowserComponent.html":{}}}],["whenever",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["whether",{"_index":82,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OrganInfo.html":{},"components/OrganSelectorComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"license.html":{}}}],["white",{"_index":1421,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["whole",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["wholebody",{"_index":1174,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["whose",{"_index":3879,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["width",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoButtonComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/OntologySearchComponent.html":{},"components/OrganSelectorComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["widths",{"_index":3534,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["window",{"_index":3151,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["window.innerheight",{"_index":1869,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["window.open(this.data.resulturl",{"_index":4341,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["wireframe",{"_index":761,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["wireframes",{"_index":812,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["within",{"_index":3322,"title":{},"body":{"components/InfoDialogComponent-1.html":{},"components/OntologySelectionComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["without",{"_index":1928,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["won't",{"_index":4006,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["work",{"_index":3273,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["workaround",{"_index":3544,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["worker",{"_index":2185,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["worker('./data",{"_index":2187,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["worldmatrix",{"_index":1445,"title":{},"body":{"interfaces/Collision.html":{}}}],["wrap",{"_index":1425,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/DataSourceService.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/StageNavComponent.html":{}}}],["wrap(worker",{"_index":2190,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["wrapped",{"_index":1925,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["wrapper",{"_index":569,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["wrapper/container",{"_index":2615,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["wrapping",{"_index":1929,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["x",{"_index":488,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["x,y,z",{"_index":2010,"title":{},"body":{"components/ContentComponent.html":{}}}],["x_dimension",{"_index":3811,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_rotation",{"_index":3825,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_scaling",{"_index":3820,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_translation",{"_index":3835,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["xyz",{"_index":3832,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["xyz').tovector",{"_index":1113,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["xyztriplet",{"_index":4459,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/SlicesConfig.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["y",{"_index":489,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ContentComponent.html":{},"interfaces/OldRuiData.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["y_dimension",{"_index":3813,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_rotation",{"_index":3827,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_scaling",{"_index":3821,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_translation",{"_index":3837,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["yes",{"_index":937,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/OntologySearchComponent.html":{},"injectables/PageState.html":{}}}],["youtube",{"_index":3271,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/InfoDialogComponent-1.html":{}}}],["z",{"_index":490,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/StageState.html":{},"interfaces/StageStateModel.html":{},"components/ViewerComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["z_dimension",{"_index":3815,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_rotation",{"_index":3829,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_scaling",{"_index":3822,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_translation",{"_index":3839,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["zarr",{"_index":3719,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["zarrinfo",{"_index":1253,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/typealiases.html":{}}}],["zero",{"_index":2016,"title":{},"body":{"components/ContentComponent.html":{}}}],["zone.js",{"_index":5032,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/OrganSelectorModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreDebugModule.html":{},"modules/ThemingModule.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["zoombasedopacity",{"_index":764,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["zoomopacity",{"_index":678,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomto",{"_index":585,"title":{},"body":{"classes/BodyUI.html":{}}}],["zoomto(node",{"_index":619,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["zoomtoonload",{"_index":765,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AggregateResult.html":{"url":"interfaces/AggregateResult.html","title":"interface - AggregateResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AggregateResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Aggregate query result. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Aggregate value. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Queried field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main angular component that all the other components branch off from.\nIt is in charge of the header and drawer components who have many sub-components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelectionLabel\n                            \n                            \n                                    Readonly\n                                ontologyTerms$\n                            \n                            \n                                    Readonly\n                                spinnerActive$\n                            \n                            \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ontologySelectionLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'body'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                        Used to keep track of the ontology label to be passed down to the\nresults-browser component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ontologyTerms$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            spinnerActive$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        Emits true whenever the overlay spinner should activate. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            string\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ListResult } from 'ccf-database';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\n\nimport { OntologySelection } from './core/models/ontology-selection';\nimport { DataSourceService } from './core/services/data-source/data-source.service';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { DataQueryState, DataState } from './core/store/data/data.state';\nimport { FiltersPopoverComponent } from './modules/filters/filters-popover/filters-popover.component';\nimport { ImageViewerPopoverComponent } from './modules/image-viewer/image-viewer-popover/image-viewer-popover.component';\nimport { DrawerComponent } from './shared/components/drawer/drawer/drawer.component';\n\n/**\n * This is the main angular component that all the other components branch off from.\n * It is in charge of the header and drawer components who have many sub-components.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Used to keep track of the ontology label to be passed down to the\n   * results-browser component.\n   */\n  ontologySelectionLabel = 'body';\n\n  /** Emits true whenever the overlay spinner should activate. */\n  readonly spinnerActive$ = this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  );\n\n  readonly ontologyTerms$: Observable;\n\n  /**\n   * Creates an instance of app component.\n   *\n   * @param data The data state.\n   */\n  constructor(readonly data: DataState, readonly dataSourceService: DataSourceService, readonly theming: ThemingService) {\n    data.listData$.subscribe();\n    data.aggregateData$.subscribe();\n    data.termOccurencesData$.subscribe();\n    this.ontologyTerms$ = data.filter$.pipe(pluck('ontologyTerms'));\n  }\n\n  /**\n   * Resets the drawers and filter components to their default state.\n   * @param left The left drawer component gets passed in so we can call it's methods to control it's state\n   * @param right The right drawer component gets passed in so we can call it's methods to control it's state\n   * @param filterbox The filter's popover component gets passed in so we can control it's popover's state\n   */\n  reset(\n    left: DrawerComponent,\n    right: DrawerComponent,\n    filterbox: FiltersPopoverComponent,\n    viewer: ImageViewerPopoverComponent\n  ): void {\n    viewer.close();\n    left.open();\n    left.closeExpanded();\n    right.open();\n    right.closeExpanded();\n    filterbox.removeBox();\n  }\n\n  /**\n   * Fetches relevant data from the database and calls the open function on the image viewer with the data\n   * @param viewer The image viewer component\n   * @param iri URL containing the image data\n   */\n  openViewer(viewer: ImageViewerPopoverComponent, result: ListResult): void {\n    const source = this.dataSourceService.getImageViewerData(result['@id']);\n    source.subscribe(data => viewer.open(data, result));\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.theming.setTheme(this.theming.getTheme() === 'light-theme' ? 'dark-theme' : 'light-theme');\n  }\n\n  /**\n   * Captures changes in the ontologySelection and uses them to update the results-browser label\n   * and the filter object in the data store.\n   * @param ontologySelection the list of currently selected organ nodes\n   */\n  ontologySelected(ontologySelection: OntologySelection[]): void {\n    if (!!ontologySelection) {\n      this.data.updateFilter({ ontologyTerms: ontologySelection.map(selection => selection.id)});\n      this.ontologySelectionLabel = this.createSelectionLabel(ontologySelection);\n      return;\n    }\n\n    this.data.updateFilter({ ontologyTerms: [] });\n    this.ontologySelectionLabel = '';\n  }\n\n  /**\n   * Creates selection label for the results-browser to display based on an\n   * array of selected ontology nodes.\n   */\n  createSelectionLabel(ontolgySelection: OntologySelection[]): string{\n    if (ontolgySelection.length === 0){\n      return '';\n    }\n\n    if (ontolgySelection.length === 1){\n      return ontolgySelection[0].label;\n    }\n\n    let selectionString = '';\n    ontolgySelection.forEach((selection, index) => {\n      selectionString += selection.label;\n\n      // Don't add a comma if it's the last item in the array.\n      if (index  0;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n  \n    \n      \n      \n    \n    \n      \n        \n        \n          {{ right.expanded ? 'fullscreen_exit' : 'fullscreen' }}\n        \n        \n          {{ theming.getTheme() === 'light-theme' ? 'brightness_2' : 'brightness_5' }}\n        \n      \n      \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .ccf-app {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n\n  ccf-drawer-container {\n    flex-grow: 1;\n    position: fixed;\n    top: 4rem;\n    height: 100%;\n    width: 100%;\n    opacity: 1;\n\n    ccf-drawer-content {\n      overflow: hidden;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    ccf-drawer {\n      width: 28.5rem;\n\n      .drawer-icons {\n        display: flex;\n        padding-left: 1.5rem;\n\n        .scheme-toggle {\n          mat-icon {\n            font-size: 2rem !important;\n          }\n        }\n\n        .button {\n          width: 3rem;\n          height: 3rem;\n          padding: 0;\n          background: none;\n          border: none;\n          cursor: pointer;\n          outline: none;\n\n          mat-icon {\n            width: 100%;\n            height: 100%;\n            font-size: 2.5rem;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n        }\n      }\n    }\n\n    .left-drawer {\n      ::ng-deep .cff-drawer-inner-container {\n        height: calc(100% - 5.5rem);\n      }\n    }\n  }\n}\n\n::-webkit-scrollbar {\n  width: 7.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ right.expanded ? \\'fullscreen_exit\\' : \\'fullscreen\\' }}                          {{ theming.getTheme() === \\'light-theme\\' ? \\'brightness_2\\' : \\'brightness_5\\' }}                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent-1.html":{"url":"components/AppComponent-1.html","title":"component - AppComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n\n  \n    \n    \n  \n  \n    \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n\n  ccf-drawer-container {\n    height: 100%;\n\n    ccf-drawer {\n      width: 25.5rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBodyModule\n\nBodyModule\n\nAppModule -->\n\nBodyModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nAppModule -->\n\nImageViewerModule->AppModule\n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nAppModule -->\n\nInfoDialogModule->AppModule\n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BodyModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            FiltersPopoverModule\n                        \n                        \n                            ImageViewerModule\n                        \n                        \n                            InfoDialogModule\n                        \n                        \n                            OntologyExplorationModule\n                        \n                        \n                            ResultsBrowserModule\n                        \n                        \n                            SpinnerOverlayModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { BodyModule } from './modules/body/body.module';\nimport { FiltersPopoverModule } from './modules/filters/filters-popover/filters-popover.module';\nimport { ImageViewerModule } from './modules/image-viewer/image-viewer.module';\nimport { InfoDialogModule } from './modules/info/info-dialog/info-dialog.module';\nimport { OntologyExplorationModule } from './modules/ontology-exploration/ontology-exploration.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\nimport { DualSliderModule } from './shared/components/dual-slider/dual-slider.module';\nimport { ResultsBrowserModule } from './modules/results-browser/results-browser/results-browser.module';\nimport { SpinnerOverlayModule } from './shared/components/spinner-overlay/spinner-overlay.module';\n\nimport { DEFAULT_THEME } from '../app/core/services/theming/theming.service';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    DrawerModule,\n    FiltersPopoverModule,\n    OntologyExplorationModule,\n    InfoDialogModule,\n    MatIconModule,\n    DualSliderModule,\n    ResultsBrowserModule,\n    SpinnerOverlayModule,\n    ImageViewerModule,\n    BodyModule\n  ],\n  declarations: [AppComponent],\n  providers: [{provide: DEFAULT_THEME, useValue: 'light-theme'}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('ccf-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage-1.html":{"url":"classes/AppPage-1.html","title":"class - AppPage-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('ccf-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockSize.html":{"url":"interfaces/BlockSize.html","title":"interface - BlockSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlockSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for objects containing tissue block dimensions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                                \n                                        z\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of block \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Height of block \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Depth of block \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss']\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockSizeInputComponent.html":{"url":"components/BlockSizeInputComponent.html","title":"component - BlockSizeInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlockSizeInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n\n\n    \n        Description\n    \n    \n        Component for entering dimensions of the tissue block\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-block-size-input\n            \n\n            \n                styleUrls\n                ./block-size-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./block-size-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshBlockSize\n                            \n                            \n                                updateBlockSizes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSizeChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blockSize\n                    \n                \n                \n                    \n                        Default value : DEFAULT_BLOCK_SIZE\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:38\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blockSizeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:43\n                            \n                        \n                \n                    \n                        Emitter for values\n\n                    \n                \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-block-size-input'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:33\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshBlockSize\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshBlockSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:59\n                \n            \n\n\n            \n                \n                    Refreshes all block size values to 10\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBlockSizes\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBlockSizes(input: InputEvent, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:50\n                \n            \n\n\n            \n                \n                    Updates values when an input changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        InputEvent from the input element which contains the new value\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the dimension to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss']\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Size (mm)\n  \n  refresh\n\n\n\n  \n    Width (X)\n    \n  \n\n  \n    Height (Y)\n    \n  \n\n  \n    Depth (Z)\n    \n  \n\n\n    \n\n    \n                \n                    ./block-size-input.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    height: 1.5rem;\n    align-items: center;\n\n    .title {\n      font-weight: bold;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n    }\n  }\n\n  .size-inputs {\n    display: flex;\n\n    .field {\n      width: 33.33%;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Size (mm)    refresh      Width (X)            Height (Y)            Depth (Z)      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockSizeInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockSizeInputModule.html":{"url":"modules/BlockSizeInputModule.html","title":"module - BlockSizeInputModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockSizeInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { BlockSizeInputComponent } from './block-size-input.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatInputModule, MatIconModule],\n  declarations: [BlockSizeInputComponent],\n  exports: [BlockSizeInputComponent]\n})\nexport class BlockSizeInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyModule.html":{"url":"modules/BodyModule.html","title":"module - BodyModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_exports\n\n\n\n\nBodyUiModule\n\nBodyUiModule\n\n\n\nBodyModule\n\nBodyModule\n\nBodyModule -->\n\nBodyUiModule->BodyModule\n\n\n\n\n\nBodyUiModule \n\nBodyUiModule \n\nBodyUiModule  -->\n\nBodyModule->BodyUiModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/body/body.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BodyUiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BodyUiModule } from './body-ui/body-ui.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BodyUiModule\n  ],\n  exports: [\n    BodyUiModule\n  ]\n})\nexport class BodyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyUI.html":{"url":"classes/BodyUI.html","title":"class - BodyUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n            \n                Description\n            \n            \n                A convenience wrapper class for the CCF Body UI\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bodyUILayer\n                            \n                            \n                                    Private\n                                    Optional\n                                cursor\n                            \n                            \n                                deck\n                            \n                            \n                                    Private\n                                    Optional\n                                lastHovered\n                            \n                            \n                                    Readonly\n                                nodeClick$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeClickSubject\n                            \n                            \n                                    Readonly\n                                nodeHoverStart$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeHoverStartSubject\n                            \n                            \n                                    Readonly\n                                nodeHoverStop$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeHoverStopSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _onClick\n                            \n                            \n                                    Private\n                                _onHover\n                            \n                            \n                                    Private\n                                _onViewStateChange\n                            \n                            \n                                setScene\n                            \n                            \n                                zoomTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deckProps: Partial)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui/src/lib/body-ui.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deckProps\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bodyUILayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BodyUILayer({})\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            cursor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            lastHovered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpatialSceneNode\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeClick$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeClickSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeClickSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeHoverStart$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeHoverStartSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeHoverStartSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeHoverStop$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeHoverStopSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeHoverStopSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onClick(e: literal type, mouseEvent: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mouseEvent\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onHover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onHover(e: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onViewStateChange(event: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \nsetScene(data: SpatialSceneNode[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            zoomTo\n                        \n                        \n                    \n                \n            \n            \n                \nzoomTo(node: SpatialSceneNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n}\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: -15,\n        maxRotationX: 15,\n        target: [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 9.5\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            layerName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'BodyUILayer'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:75\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPickingInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeState\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderLayers\n                        \n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { load, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { CubeGeometry } from '@luma.gl/core';\nimport { ScenegraphNode } from '@luma.gl/experimental';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { doCollisions } from './spatial-scene-collider';\n\n\n// Programmers Note: had to disable tslint in a few places due to deficient typings.\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\n// tslint:disable: no-unsafe-any\nasync function loadGLTF(model: SpatialSceneNode): Promise {\n  const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n\n  const scenegraphNode = model.scenegraphNode ? gltf.nodes?.find((n) => n.name === model.scenegraphNode) : undefined;\n  if (scenegraphNode) {\n    if (!scenegraphNode.rotation && gltf.scene?.nodes?.length > 0) {\n      scenegraphNode.rotation = gltf.scene.nodes[gltf.scene.nodes.length-1].rotation;\n    }\n    gltf.scene = {\n      id: 'scene-1',\n      name: 'Scene',\n      nodes: [scenegraphNode]\n    };\n    gltf.scenes = [gltf.scene, ...gltf.scenes];\n  }\n  return gltf;\n}\n// tslint:enable: no-unsafe-any\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: {[key: string]: unknown}): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // tslint:disable-next-line: no-unsafe-any\n        mesh: new CubeGeometry(),\n        wireframe: false,\n        getTransformMatrix: (d) => (d as {transformMatrix: number[][]}).transformMatrix,\n        getColor: (d) => (d as {color: [number, number, number, number]}).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({data: data || [], zoomOpacity: 0.8, doCollisions: false});\n\n    // tslint:disable-next-line: no-unsafe-any\n    registerLoaders([DracoWorkerLoader, GLTFLoader]);\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as {data: SpatialSceneNode[], zoomOpacity: number, doCollisions: boolean};\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return [\n      meshLayer('cubes', cubes, {wireframe: false}),\n      meshLayer('wireframes', wireframes, {wireframe: true, pickable: false}),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          id: 'models-' + model['@id'],\n          opacity: model.zoomBasedOpacity ? state.zoomOpacity : 1.0,\n          pickable: !model.unpickable,\n          coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n          data: [model],\n          scenegraph: model.scenegraphNode ?\n            loadGLTF(model) as Promise :\n            model.scenegraph as unknown as ScenegraphNode,\n          _lighting: model._lighting,  // 'pbr' | undefined\n          getTransformMatrix: model.transformMatrix as unknown as number[][],\n          getColor: model.color || [0, 255, 0, 0.5*255],\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(e: {info: object}): unknown {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canvas\n                                \n                                \n                                        id\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n}\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: -15,\n        maxRotationX: 15,\n        target: [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 9.5\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        orbitAxis\n                                \n                                \n                                            Optional\n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n}\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: -15,\n        maxRotationX: 15,\n        target: [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 9.5\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BodyUiComponent.html":{"url":"components/BodyUiComponent.html","title":"component - BodyUiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BodyUiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-body-ui\n            \n\n            \n                styleUrls\n                ./body-ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./body-ui.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bodyCanvas\n                            \n                            \n                                bodyUI\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyFilter\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DataState, dataSourceService: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DataState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSourceService\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:18\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:23\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilter(filter: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyCanvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('bodyCanvas', {read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyUI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BodyUI\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { BodyUI } from 'ccf-body-ui';\nimport { Filter } from 'ccf-database';\n\nimport { DataSourceService } from './../../../core/services/data-source/data-source.service';\nimport { DataState } from './../../../core/store/data/data.state';\n\n\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss']\n})\nexport class BodyUiComponent implements AfterViewInit {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filter: Filter;\n\n  /**\n   * Emits the current filters\n   */\n  @Output() filterChange = new EventEmitter();\n\n  bodyUI: BodyUI;\n\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  constructor(readonly data: DataState, readonly dataSourceService: DataSourceService) { }\n\n  ngAfterViewInit(): void {\n    const canvas = this.bodyCanvas.nativeElement;\n    this.bodyUI = new BodyUI({ id: 'body-ui', canvas });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n\n    // TODO: Replace with a single @Input with scene provided by ngxs\n    this.data.filter$.subscribe(async (f: Filter) => {\n      await this.dataSourceService.dataSource.connect();\n      const scene = await this.dataSourceService.dataSource.getScene(f);\n      this.bodyUI.setScene(scene);\n    });\n\n    this.bodyUI.nodeClick$.subscribe(async ({node, ctrlClick}) => {\n      switch (node['@id']) {\n        case 'http://purl.org/ccf/latest/ccf.owl#VHRightKidney':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0004539']});\n          break;\n        case 'http://purl.org/ccf/latest/ccf.owl#VHLeftKidney':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0004538']});\n          break;\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleen':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC1':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC2':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC3':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0002106']});\n          break;\n        default:\n          if (node.entityId) {\n            const highlightedEntities = ctrlClick ? this.filter?.highlightedEntities ?? [] : [];\n            if (highlightedEntities.length === 1 && highlightedEntities[0] === node.entityId) {\n              this.applyFilter({highlightedEntities: []});\n            } else {\n              this.applyFilter({highlightedEntities: highlightedEntities.concat([node.entityId])});\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  private applyFilter(filter: Partial): void {\n    const newFilter = { ...this.filter, ...filter } as Filter;\n    this.filter = newFilter;\n    this.filterChange.emit(newFilter);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./body-ui.component.scss\n                \n                .body-ui {\n  position: relative !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BodyUiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/body/body-ui/body-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFDatabase.html":{"url":"classes/CCFDatabase.html","title":"class - CCFDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-database.ts\n        \n\n            \n                Description\n            \n            \n                Database provider. \n\n            \n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                scene\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connect\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                getAggregateResults\n                            \n                            \n                                getIds\n                            \n                            \n                                    Async\n                                getImageViewerData\n                            \n                            \n                                    Async\n                                getListResults\n                            \n                            \n                                    Async\n                                getOntologyTermOccurences\n                            \n                            \n                                    Async\n                                getScene\n                            \n                            \n                                getSpatialEntities\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: CCFDatabaseOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-database.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of ccfdatabase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        CCFDatabaseOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initialization options.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFSpatialGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:49\n                            \n                        \n\n                \n                    \n                        The spatial graph \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFDatabaseOptions\n\n                        \n                    \n                    \n                        \n                            Default value : DEFAULT_CCF_DB_OPTIONS\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:58\n                            \n                        \n\n                \n                    \n                        Initialization options.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFSpatialScene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:51\n                            \n                        \n\n                \n                    \n                        Creates SpatialEntity Scenes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:47\n                            \n                        \n\n                \n                    \n                        The triple store. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    connect(options?: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:70\n                \n            \n\n\n            \n                \n                    Connects the database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CCFDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options used to initialize.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise resolving to true if data has been loaded into the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:116\n                \n            \n\n\n            \n                \n                    Gets the data for an object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the requested object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Quad[]\n\n                    \n                    \n                        The object data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:161\n                \n            \n\n\n            \n                \n                    Gets all aggregate results for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A list of aggregate data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIds\n                        \n                        \n                    \n                \n            \n            \n                \ngetIds(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:106\n                \n            \n\n\n            \n                \n                    Gets all ids matching the filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {} as Filter\n                                    \n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Set\n\n                    \n                    \n                        A set of all matching ids.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageViewerData(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:181\n                \n            \n\n\n            \n                \n                    Gets image data for the associated id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The identifier.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The image data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:147\n                \n            \n\n\n            \n                \n                    Gets all list results for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A list of results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOntologyTermOccurences\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:171\n                \n            \n\n\n            \n                \n                    Get number of occurrences of ontology terms for a set of ids.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        Ontology term counts.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:190\n                \n            \n\n\n            \n                \n                    Get all nodes to form the 3D scene of reference body, organs, and tissues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A list of Spatial Scene Nodes for the 3D Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpatialEntities\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpatialEntities(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:136\n                \n            \n\n\n            \n                \n                    Gets all spatial entities for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity[]\n\n                    \n                    \n                        A list of spatial entities.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:126\n                \n            \n\n\n            \n                \n                    Gets the data for objects matching a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {} as Filter\n                                    \n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        An array of data.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, Quad, Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { addHubmapDataToStore } from './hubmap/hubmap-data';\nimport { AggregateResult, DataSource, Filter, ImageViewerData, ListResult } from './interfaces';\nimport { getAggregateResults } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getImageViewerData } from './queries/image-viewer-data-n3';\nimport { getListResult } from './queries/list-result-n3';\nimport { getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** An url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase implements DataSource {\n  /** The triple store. */\n  store: Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store();\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions): Promise {\n    if (options) {\n      this.options = options;\n    }\n    if (this.store.size === 0) {\n      const ops: Promise[] = [];\n      const ccfOwlUrl = this.options.ccfOwlUrl;\n      if (ccfOwlUrl.endsWith('.n3')) {\n        ops.push(addN3ToStore(this.options.ccfOwlUrl, this.store));\n      } else {\n        ops.push(addRdfXmlToStore(this.options.ccfOwlUrl, this.store));\n      }\n      if (this.options.hubmapDataUrl) {\n        if (this.options.hubmapDataUrl.endsWith('.jsonld')) {\n          ops.push(addJsonLdToStore(this.options.hubmapDataUrl, this.store));\n        } else {\n          ops.push(addHubmapDataToStore(\n            this.store, this.options.hubmapDataUrl, this.options.hubmapDataService, this.options.hubmapToken,\n            this.options.hubmapAssetsUrl, this.options.hubmapPortalUrl\n          ));\n        }\n      }\n      await Promise.all(ops);\n      // Add a small delay to allow the triple store to settle\n      await new Promise(r => setTimeout(r, 500));\n      this.graph.createGraph();\n    }\n    return this.store.size > 0;\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set {\n    return findIds(this.store, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  /**\n   * Gets all list results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getListResults(filter?: Filter): Promise {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    const highlighted = new Set(filter.highlightedEntities);\n    return [...this.getIds(filter)].map((s) => getListResult(this.store, s))\n      .map((s) => Object.assign(s, {highlighted: highlighted.has(s['@id'])}))\n      .sort((a, b) => (a.highlighted ? 0 : 1) - (b.highlighted ? 0 : 1));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Gets image data for the associated id.\n   *\n   * @param id The identifier.\n   * @returns The image data.\n   */\n  async getImageViewerData(id: string): Promise {\n    return getImageViewerData(id, this.store);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseOptions.html":{"url":"interfaces/CCFDatabaseOptions.html","title":"interface - CCFDatabaseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CCFDatabaseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-database.ts\n        \n\n            \n                Description\n            \n            \n                Database initialization options. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ccfContextUrl\n                                \n                                \n                                        ccfOwlUrl\n                                \n                                \n                                        hubmapAssetsUrl\n                                \n                                \n                                        hubmapDataService\n                                \n                                \n                                        hubmapDataUrl\n                                \n                                \n                                        hubmapPortalUrl\n                                \n                                \n                                            Optional\n                                        hubmapToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ccfContextUrl\n                                    \n                                \n                                \n                                    \n                                        ccfContextUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Context. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccfOwlUrl\n                                    \n                                \n                                \n                                    \n                                        ccfOwlUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An url to load data from. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapAssetsUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapAssetsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap assets api url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapDataService\n                                    \n                                \n                                \n                                    \n                                        hubmapDataService:     \"static\" | \"search-api\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"static\" | \"search-api\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data service type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapDataUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapDataUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap data url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapPortalUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapPortalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap Portal url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    HuBMAP Service Token. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, Quad, Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { addHubmapDataToStore } from './hubmap/hubmap-data';\nimport { AggregateResult, DataSource, Filter, ImageViewerData, ListResult } from './interfaces';\nimport { getAggregateResults } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getImageViewerData } from './queries/image-viewer-data-n3';\nimport { getListResult } from './queries/list-result-n3';\nimport { getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** An url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase implements DataSource {\n  /** The triple store. */\n  store: Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store();\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions): Promise {\n    if (options) {\n      this.options = options;\n    }\n    if (this.store.size === 0) {\n      const ops: Promise[] = [];\n      const ccfOwlUrl = this.options.ccfOwlUrl;\n      if (ccfOwlUrl.endsWith('.n3')) {\n        ops.push(addN3ToStore(this.options.ccfOwlUrl, this.store));\n      } else {\n        ops.push(addRdfXmlToStore(this.options.ccfOwlUrl, this.store));\n      }\n      if (this.options.hubmapDataUrl) {\n        if (this.options.hubmapDataUrl.endsWith('.jsonld')) {\n          ops.push(addJsonLdToStore(this.options.hubmapDataUrl, this.store));\n        } else {\n          ops.push(addHubmapDataToStore(\n            this.store, this.options.hubmapDataUrl, this.options.hubmapDataService, this.options.hubmapToken,\n            this.options.hubmapAssetsUrl, this.options.hubmapPortalUrl\n          ));\n        }\n      }\n      await Promise.all(ops);\n      // Add a small delay to allow the triple store to settle\n      await new Promise(r => setTimeout(r, 500));\n      this.graph.createGraph();\n    }\n    return this.store.size > 0;\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set {\n    return findIds(this.store, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  /**\n   * Gets all list results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getListResults(filter?: Filter): Promise {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    const highlighted = new Set(filter.highlightedEntities);\n    return [...this.getIds(filter)].map((s) => getListResult(this.store, s))\n      .map((s) => Object.assign(s, {highlighted: highlighted.has(s['@id'])}))\n      .sort((a, b) => (a.highlighted ? 0 : 1) - (b.highlighted ? 0 : 1));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Gets image data for the associated id.\n   *\n   * @param id The identifier.\n   * @returns The image data.\n   */\n  async getImageViewerData(id: string): Promise {\n    return getImageViewerData(id, this.store);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFSpatialGraph.html":{"url":"classes/CCFSpatialGraph.html","title":"class - CCFSpatialGraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFSpatialGraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-graph.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSpatialEntity\n                            \n                            \n                                addSpatialObjectReference\n                            \n                            \n                                addSpatialPlacement\n                            \n                            \n                                createGraph\n                            \n                            \n                                getTransformationMatrix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: CCFDatabase)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DirectedGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:38\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialEntity\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialEntity(entity: SpatialEntity)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialObjectReference\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialObjectReference(ref: SpatialObjectReference)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                SpatialObjectReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialPlacement\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialPlacement(placement: SpatialPlacement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    placement\n                                    \n                                                SpatialPlacement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGraph\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransformationMatrix\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransformationMatrix(sourceIRI: string, targetIRI: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIRI\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetIRI\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Matrix4 | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CCFDatabase } from './ccf-database';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { DirectedGraph } from 'graphology';\nimport shortestPath from 'graphology-shortest-path/unweighted';\nimport { fromEuler } from 'quaternion';\nimport toEuler from 'quaternion-to-euler';\n\nimport { SpatialEntity, SpatialObjectReference, SpatialPlacement } from './spatial-types';\nimport { rdf, ccf } from './util/prefixes';\nimport { getSpatialEntity, getSpatialObjectReference, getSpatialPlacement } from './queries/spatial-result-n3';\n\n\nexport function applySpatialPlacement(tx: Matrix4, placement: SpatialPlacement): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R_RAD = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians);\n  // tslint:disable-next-line: no-unsafe-any\n  const R = toEuler(fromEuler(R_RAD[1], R_RAD[0], R_RAD[2], 'XYZ').toVector()) as number[];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport class CCFSpatialGraph {\n  graph: DirectedGraph;\n\n  constructor(private db: CCFDatabase) {\n    this.createGraph();\n  }\n\n  createGraph(): void {\n    this.graph = new DirectedGraph();\n    const store = this.db.store;\n    // Add all Spatial Object References\n    store.forSubjects((subject) => {\n      this.addSpatialObjectReference(getSpatialObjectReference(store, subject.id));\n    }, rdf.type, ccf.SpatialObjectReference, null);\n\n    // Add all Spatial Entities\n    store.forSubjects((subject) => {\n      this.addSpatialEntity(getSpatialEntity(store, subject.id));\n    }, rdf.type, ccf.SpatialEntity, null);\n\n    // Add all Spatial Placements\n    store.forSubjects((subject) => {\n      this.addSpatialPlacement(getSpatialPlacement(store, subject.id));\n    }, rdf.type, ccf.SpatialPlacement, null);\n  }\n\n  addSpatialEntity(entity: SpatialEntity): void {\n    this.graph.mergeNode(entity['@id'], {type: 'SpatialEntity', object: entity});\n  }\n  addSpatialObjectReference(ref: SpatialObjectReference): void {\n    this.graph.mergeNode(ref['@id'], {type: 'SpatialObjectReference', object: ref});\n  }\n  addSpatialPlacement(placement: SpatialPlacement): void {\n    this.graph.mergeDirectedEdge(placement.source['@id'], placement.target['@id'], {type: 'SpatialPlacement', placement});\n  }\n\n  getTransformationMatrix(sourceIRI: string, targetIRI: string): Matrix4 | undefined {\n    if (sourceIRI === targetIRI) {\n      return new Matrix4(); // identity\n    }\n    if (!this.graph.hasNode(sourceIRI) || !this.graph.hasNode(targetIRI)) {\n      return undefined;\n    }\n\n    const tx = new Matrix4();\n    const path = shortestPath(this.graph, sourceIRI, targetIRI);\n    if (path && path.length > 0) {\n      path.reverse();\n      let target: string | number = '';\n      for (const source of path) {\n        if (target) {\n          const p = this.graph.getEdgeAttribute(source, target, 'placement') as SpatialPlacement;\n          applySpatialPlacement(tx, p);\n        }\n        target = source;\n      }\n      return tx;\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFSpatialScene.html":{"url":"classes/CCFSpatialScene.html","title":"class - CCFSpatialScene","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFSpatialScene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-scene.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEntitySceneNodes\n                            \n                            \n                                getReferenceBody\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceSceneNodes\n                            \n                            \n                                getScene\n                            \n                            \n                                getSceneNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: CCFDatabase)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEntitySceneNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetEntitySceneNodes(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceBody\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceBody(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceOrgans\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceSceneNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceSceneNodes(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSceneNode\n                        \n                        \n                    \n                \n            \n            \n                \ngetSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    nodeAttrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport { getSpatialEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { ccf, rui } from './util/prefixes';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': 'SpatialSceneNode';\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return getSpatialEntity(this.db.store, bodyId);\n  }\n\n  getReferenceOrgans(filter?: Filter): SpatialEntity[] {\n    let organsId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        organsId = ccf.spatial.MaleOrgans.id;\n        break;\n      case 'Female':\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n      case 'Both':\n      default:\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n    }\n    return [getSpatialEntity(this.db.store, organsId)];\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const wholeBody = getSpatialEntity(this.db.store, ccf.spatial.Body.id);\n    const body = this.getReferenceBody(filter);\n    const organs = getSpatialEntity(this.db.store, ccf.spatial.MaleOrgans.id);\n    const store = this.db.store;\n    const terms = filter?.ontologyTerms || [];\n    const hasTerm = {\n      body: terms.indexOf(rui.body.id) === 0,\n      kidney: terms.indexOf(rui.kidney.id) === 0,\n      right_kidney: terms.indexOf(rui.right_kidney.id) === 0,\n      left_kidney: terms.indexOf(rui.left_kidney.id) === 0,\n      spleen: terms.indexOf(rui.spleen.id) === 0,\n    };\n\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      this.getSceneNode(body, wholeBody, {unpickable: true, color: [255, 255, 255, 1*255]}),\n      ...this.getReferenceOrgans(filter).map((organ) =>\n        this.getSceneNode(organ, body, {unpickable: true, _lighting: 'pbr', zoomBasedOpacity: true,  color: [255, 0, 0, 1*255]})\n      ),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.right_kidney, zoomToOnLoad: hasTerm.right_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.left_kidney, zoomToOnLoad: hasTerm.left_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleen').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.spleen, zoomToOnLoad: hasTerm.spleen})\n    ];\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), wholeBody, {color: [0, 0, 255, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), wholeBody, {color: [255, 0, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC1').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC2').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC3').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true})\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const highlighted = new Set(filter?.highlightedEntities);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, {\n        color: highlighted.has(entity.entityId as string) ? [10, 10, 229, 0.9*255] : [255, 255, 255, 0.9*255]\n      })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial = {}): SpatialSceneNode | undefined {\n    const has3dObject = source.object && source.object.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4().rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId || undefined,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      } as SpatialSceneNode;\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChannelConfig.html":{"url":"interfaces/ChannelConfig.html","title":"interface - ChannelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChannelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        color\n                                \n                                \n                                        slider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slider\n                                    \n                                \n                                \n                                    \n                                        slider:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hms-dbmi/viv';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterOnChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:16\n                            \n                        \n                \n                    \n                        The label that describes the overall question the checkbox is asking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:21\n                            \n                        \n                \n                    \n                        Used to generate the individual checkboxes and their individual labels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:26\n                            \n                        \n                \n                    \n                        A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:31\n                            \n                        \n                \n                    \n                        Any time a checkbox changes we emit that value so the parent component has that information\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nfilterOnChange(event: MatCheckboxChange, option: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                \n            \n\n\n            \n                \n                    This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event object from the checkbox that contains the boolean property 'checked'\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tells us which option was checked or unchecked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\n\n/**\n * Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n */\n@Component({\n  selector: 'ccf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\n  /**\n   * The label that describes the overall question the checkbox is asking\n   */\n  @Input() label: string;\n\n  /**\n   * Used to generate the individual checkboxes and their individual labels\n   */\n  @Input() options: string[];\n\n  /**\n   * A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n   */\n  @Input() selection: string[] = [];\n\n  /**\n   * Any time a checkbox changes we emit that value so the parent component has that information\n   */\n  @Output() selectionChange = new EventEmitter();\n\n  /**\n   * This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n   * @param event Event object from the checkbox that contains the boolean property 'checked'\n   * @param option Tells us which option was checked or unchecked\n   */\n  filterOnChange(event: MatCheckboxChange, option: string): void {\n    const checked = event.checked;\n\n    if (checked) {\n      this.selection = [...this.selection, option];\n    } else {\n      this.selection = this.selection.filter(selection => selection !== option);\n    }\n\n    this.selectionChange.emit(this.selection);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n  \n    \n      \n        {{ option }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                ::ng-deep  .mat-checkbox.mat-accent {\n  .mat-checkbox-checkmark-path {\n    stroke: white !important;\n  }\n\n  .mat-checkbox-inner-container {\n    margin-right: 1rem;\n  }\n}\n\n.filter-label {\n  margin-bottom: 0.5em;\n  font-weight: bold;\n}\n\n.options-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.option {\n  margin-right: 1.5em;\n  width: 8em;\n  color: #fafafa;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ option }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckboxModule.html":{"url":"modules/CheckboxModule.html","title":"module - CheckboxModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/checkbox/checkbox.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CheckboxComponent } from './checkbox.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent]\n})\nexport class CheckboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/spatial-scene-collider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        hits\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from './body-ui-layer';\n\n\n// tslint:disable: no-unsafe-any\nfunction traverseScene(scene, worldMatrix = new Matrix4(), visitor: (child, modelMatrix: Matrix4) => void): void {\n  const matrix = new Matrix4().identity();\n  if (scene.matrix) {\n    matrix.copy(scene.matrix);\n  } else {\n    matrix.identity();\n\n    if (scene.translation) {\n      matrix.translate(scene.translation);\n    }\n\n    if (scene.rotation) {\n      const rotationMatrix = new Matrix4().fromQuaternion(scene.rotation);\n      matrix.multiplyRight(rotationMatrix);\n    }\n\n    if (scene.scale) {\n      matrix.scale(scene.scale);\n    }\n  }\n  const modelMatrix = new Matrix4(worldMatrix).multiplyRight(matrix);\n  visitor(scene, modelMatrix);\n\n  for (const child of (scene.nodes || scene.children || [])) {\n    traverseScene(child, modelMatrix, visitor);\n  }\n}\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: {'@id': string, name: string}[];\n}\n\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && !d.wireframe)\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n// tslint:enable: no-unsafe-any\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorBarComponent.html":{"url":"components/ColorBarComponent.html","title":"component - ColorBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Color bar component for the color scheme popup and color scheme selector\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-bar\n            \n\n            \n                styleUrls\n                ./color-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                colorChanged\n                            \n                            \n                                gradientHighlight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                enableSelection\n                            \n                            \n                                selected\n                            \n                            \n                                selectedColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gradientStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colorScheme\n                    \n                \n                \n                    \n                        Type :         ColorScheme\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Color scheme to be displayed in the color bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSelection\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:33\n                            \n                        \n                \n                    \n                        Determines if colors are able to be selected on the color bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:23\n                            \n                        \n                \n                    \n                        Whether or not the scheme is currently selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedColor\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:28\n                            \n                        \n                \n                    \n                        Currently selected color in colorScheme.colors\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        colorChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:38\n                            \n                        \n                \n                    \n                        Emits the newly selected color index\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncolorChanged(color: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:64\n                \n            \n\n\n            \n                \n                    When a color is selected, this updates relavant variables and emits the\nselected color\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the color the user selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gradientHighlight\n                        \n                        \n                    \n                \n            \n            \n                \ngradientHighlight()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:55\n                \n            \n\n\n            \n                \n                    Returns whether or not the scheme is a selected gradient (for highlighting purposes)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gradientStyle\n                    \n                \n\n                \n                    \n                        getgradientStyle()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:43\n                                \n                            \n                    \n                        \n                                Enables dynamic styling for gradient bars\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ColorScheme } from '../color-schemes';\n\n\n/**\n * Color bar component for the color scheme popup and color scheme selector\n */\n@Component({\n  selector: 'ccf-color-bar',\n  templateUrl: './color-bar.component.html',\n  styleUrls: ['./color-bar.component.scss']\n})\nexport class ColorBarComponent {\n  /**\n   * Color scheme to be displayed in the color bar\n   */\n  @Input() colorScheme: ColorScheme;\n\n  /**\n   * Whether or not the scheme is currently selected\n   */\n  @Input() selected = false;\n\n  /**\n   * Currently selected color in colorScheme.colors\n   */\n  @Input() selectedColor = '';\n\n  /**\n   * Determines if colors are able to be selected on the color bar\n   */\n  @Input() enableSelection = false;\n\n  /**\n   * Emits the newly selected color index\n   */\n  @Output() colorChange = new EventEmitter();\n\n  /**\n   * Enables dynamic styling for gradient bars\n   */\n  get gradientStyle(): string {\n    const { colors, positions } = this.colorScheme;\n    const result: string[] = [];\n    for (let i = 0; i \n    \n\n    \n        \n  \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./color-bar.component.scss\n                \n                .scheme-container {\n  width: 7rem;\n  height: 1rem;\n  display: flex;\n  .discrete {\n    width: 1rem;\n  }\n  .gradient {\n    width: 7rem;\n  }\n\n  &.selected-scheme {\n    .discrete {\n      &.selected-color {\n        border-radius: 10px;\n      }\n    }\n  }\n\n  &.highlighted {\n    outline-width: 1px;\n    outline-style: solid;\n  }\n\n  :hover {\n    cursor: pointer;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorBarModule.html":{"url":"modules/ColorBarModule.html","title":"module - ColorBarModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorBarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorBarModule\n\n\n\ncluster_ColorBarModule_declarations\n\n\n\ncluster_ColorBarModule_exports\n\n\n\n\nColorBarComponent\n\nColorBarComponent\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorBarModule -->\n\nColorBarComponent->ColorBarModule\n\n\n\n\n\nColorBarComponent \n\nColorBarComponent \n\nColorBarComponent  -->\n\nColorBarModule->ColorBarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorBarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorBarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ColorBarComponent } from './color-bar.component';\n\n\n@NgModule({\n  declarations: [ColorBarComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ColorBarComponent]\n})\nexport class ColorBarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorPickerLauncherComponent.html":{"url":"components/ColorPickerLauncherComponent.html","title":"component - ColorPickerLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorPickerLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts\n\n\n    \n        Description\n    \n    \n        Component dynamically displays a div with a shape and background that corresponds to the color scheme\nor color of the layer that it gets passed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-picker-launcher\n            \n\n            \n                styleUrls\n                ./color-picker-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-picker-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts:20\n                            \n                        \n                \n                    \n                        An image-viewer layer which contains the styling information required to render this component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts:25\n                            \n                        \n                \n                    \n                        Output that passes along changes made to the layer's properties from the color picker\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\n/**\n * Component dynamically displays a div with a shape and background that corresponds to the color scheme\n * or color of the layer that it gets passed.\n */\n@Component({\n  selector: 'ccf-color-picker-launcher',\n  templateUrl: './color-picker-launcher.component.html',\n  styleUrls: ['./color-picker-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPickerLauncherComponent {\n  /**\n   * An image-viewer layer which contains the styling information required to render this component.\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Output that passes along changes made to the layer's properties from the color picker\n   */\n  @Output() layerChange = new EventEmitter();\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./color-picker-launcher.component.scss\n                \n                .launch-button {\n  width: 1rem;\n  height: 1rem;\n  cursor: pointer;\n}\n\n.circle {\n  border-radius: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorPickerLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorPickerLauncherModule.html":{"url":"modules/ColorPickerLauncherModule.html","title":"module - ColorPickerLauncherModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorPickerLauncherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorPickerLauncherModule\n\n\n\ncluster_ColorPickerLauncherModule_declarations\n\n\n\ncluster_ColorPickerLauncherModule_imports\n\n\n\ncluster_ColorPickerLauncherModule_exports\n\n\n\n\nColorPickerLauncherComponent\n\nColorPickerLauncherComponent\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule -->\n\nColorPickerLauncherComponent->ColorPickerLauncherModule\n\n\n\n\n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent  -->\n\nColorPickerLauncherModule->ColorPickerLauncherComponent \n\n\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorPickerLauncherModule -->\n\nColorSchemePopupModule->ColorPickerLauncherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorPickerLauncherComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorSchemePopupModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorPickerLauncherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorPickerLauncherComponent } from './color-picker-launcher.component';\nimport { ColorSchemePopupModule } from '../color-scheme-popup/color-scheme-popup.module';\n\n\n@NgModule({\n  declarations: [ColorPickerLauncherComponent],\n  imports: [CommonModule, ColorSchemePopupModule],\n  exports: [ColorPickerLauncherComponent]\n})\nexport class ColorPickerLauncherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme.html":{"url":"interfaces/ColorScheme.html","title":"interface - ColorScheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/color-scheme.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colors\n                                \n                                \n                                        name\n                                \n                                \n                                        positions\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"discrete\" | \"gradient\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"discrete\" | \"gradient\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n    type: 'discrete' | 'gradient';\n    name: string;\n    colors: string[];\n    positions: number[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme-1.html":{"url":"interfaces/ColorScheme-1.html","title":"interface - ColorScheme-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-schemes.ts\n        \n\n            \n                Description\n            \n            \n                Color scheme to be used in visualizing layers of the image\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colors\n                                \n                                \n                                        name\n                                \n                                \n                                        positions\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Colors used in the scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions for mapping the data to colors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"discrete\" | \"gradient\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"discrete\" | \"gradient\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the scheme is discrete or gradient\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n\n  /**\n   * Whether the scheme is discrete or gradient\n   */\n  type: 'discrete' | 'gradient';\n\n  /**\n   * Name of scheme\n   */\n  name: string;\n\n  /**\n   * Colors used in the scheme\n   */\n  colors: string[];\n\n  /**\n   * Positions for mapping the data to colors\n   */\n  positions: number[];\n}\n\n/**\n * Default Qualitative Scheme1 (discrete)\n */\nexport const GREEENORANGE: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative1',\n  colors: ['#66BB6A', '#B39DDB', '#FFCC80', '#FFFF8D', '#1565C0', '#E91E63', '#E65100'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Qualitative Scheme2 (discrete)\n */\nexport const TEALGREEN: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative2',\n  colors: ['#80CBC4', '#FFFF8D', '#B39DDB', '#EF9A9A', '#64B5F6', '#FFB74D', '#AED581'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme1 (discrete)\n */\nexport const BLUERED: ColorScheme = {\n  type: 'discrete',\n  name: 'bluered',\n  colors: ['#2166AC', '#67A9CF', '#D1E5F0', '#F7F7F7', '#FDDBC7', '#EF8A62', '#B2182B'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme2 (discrete)\n */\nexport const GREENRED: ColorScheme = {\n  type: 'discrete',\n  name: 'greenred',\n  colors: ['#1A9850', '#91CF60', '#D9EF8B', '#FFFFBF', '#FEE08B', '#FC8D59', '#D73027'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme3 (discrete)\n */\nexport const PURPLEBROWN: ColorScheme = {\n  type: 'discrete',\n  name: 'purplebrown',\n  colors: ['#542788', '#998EC3', '#D8DAEB', '#F7F7F7', '#FEE0B6', '#F1A340', '#B35806'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme4 (discrete)\n */\nexport const REDTAN: ColorScheme = {\n  type: 'discrete',\n  name: 'redtan',\n  colors: ['#990000', '#D7301F', '#EF6548', '#FC8D59', '#FDBB84', '#FDD49E', '#FEF0D9'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme5 (discrete)\n */\nexport const PURPLELIGHTBLUE: ColorScheme = {\n  type: 'discrete',\n  name: 'purplelightblue',\n  colors: ['#6E016B', '#88419D', '#8C6BB1', '#8C96C6', '#9EBCDA', '#BFD3E6', '#EDF8FB'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme6 (gradient)\n */\nexport const VIRIDIS: ColorScheme = {\n  type: 'gradient',\n  name: 'viridis',\n  colors: ['#FFE31C', '#B5C740', '#6BAB65', '#21908A', '#2D6379', '#393768', '#450B57'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme7 (gradient)\n */\nexport const MAGMA: ColorScheme = {\n  type: 'gradient',\n  name: 'magma',\n  colors: ['#F8FC9D', '#E1B986', '#CA7670', '#B4335A', '#78223C', '#3D121F', '#020202'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme8 (gradient)\n */\nexport const PLASMA: ColorScheme = {\n  type: 'gradient',\n  name: 'plasma',\n  colors: ['#F2F424', '#E3B842', '#D47D60', '#C6427E', '#883381', '#4A2484', '#0C1687'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default scheme options\n */\nexport const DEFAULT_COLOR_SCHEMES = [\n  GREEENORANGE,\n  TEALGREEN,\n  BLUERED,\n  GREENRED,\n  PURPLEBROWN,\n  // REDTAN,\n  // PURPLELIGHTBLUE,\n  // VIRIDIS,\n  // MAGMA,\n  // PLASMA\n];\n\n/**\n * Object containing scheme and color index info to be emitted when a change is made\n */\nexport interface ColorSchemeSelection {\n\n  /**\n   * Current scheme selected\n   */\n  scheme: ColorScheme;\n\n  /**\n   * Index of the selected color in scheme\n   */\n  coloridx: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSchemeContentsComponent.html":{"url":"components/ColorSchemeContentsComponent.html","title":"component - ColorSchemeContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSchemeContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts\n\n\n    \n        Description\n    \n    \n        Contains the color menu and brightness/transparency sliders\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-scheme-contents\n            \n\n            \n                styleUrls\n                ./color-scheme-contents.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-scheme-contents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightnessSliderOptions\n                            \n                            \n                                transparencySliderOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                brightnessChanged\n                            \n                            \n                                colorChanged\n                            \n                            \n                                transparencyChanged\n                            \n                            \n                                    Private\n                                updateLayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                layer\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    brightnessLow\n                                \n                                \n                                    brightnessHigh\n                                \n                                \n                                    transparency\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:70\n                            \n                        \n\n                \n                    \n                            Initiates slider options\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:21\n                            \n                        \n                \n                    \n                        Determines if the popup opens up or down from the icon position\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:31\n                            \n                        \n                \n                    \n                        Layer that the component is currently rendering, used to pull relevant properties from.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:26\n                            \n                        \n                \n                    \n                        List of available schemes\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:36\n                            \n                        \n                \n                    \n                        Used to emit any changes made to the layer or its properties\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            brightnessChanged\n                        \n                        \n                    \n                \n            \n            \n                \nbrightnessChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:91\n                \n            \n\n\n            \n                \n                    Emits new brightness selection\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncolorChanged(color: string, scheme: ColorScheme)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:106\n                \n            \n\n\n            \n                \n                    Takes in the selected color and scheme and adds them to the Layer\nbefore emitting the changed layer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scheme\n                                    \n                                                ColorScheme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transparencyChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntransparencyChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:98\n                \n            \n\n\n            \n                \n                    Emits new transparency value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateLayer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayer(updates: Partial<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:118\n                \n            \n\n\n            \n                \n                    Updates layer with new layer settings\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    updates\n                                    \n                                            Partial<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains updated layer settings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brightnessSliderOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:41\n                            \n                        \n\n                \n                    \n                        Options for the brightness slider\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transparencySliderOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:46\n                            \n                        \n\n                \n                    \n                        Options for the transparency slider\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        brightnessLow\n                    \n                \n\n                \n                    \n                        getbrightnessLow()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:51\n                                \n                            \n                    \n                        \n                                Updates current low brightness value with new low brightness value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbrightnessLow(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        brightnessHigh\n                    \n                \n\n                \n                    \n                        getbrightnessHigh()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:59\n                                \n                            \n                    \n                        \n                                Updates current high brightness value with new high brightness value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbrightnessHigh(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        transparency\n                    \n                \n\n                \n                    \n                        gettransparency()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:67\n                                \n                            \n                    \n                        \n                                Updates current transparency value with new transparency value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settransparency(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:68\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Options } from 'ng5-slider';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../color-schemes';\n\n\n/**\n * Contains the color menu and brightness/transparency sliders\n */\n@Component({\n  selector: 'ccf-color-scheme-contents',\n  templateUrl: './color-scheme-contents.component.html',\n  styleUrls: ['./color-scheme-contents.component.scss']\n})\nexport class ColorSchemeContentsComponent {\n\n  /**\n   * Determines if the popup opens up or down from the icon position\n   */\n  @Input() bottom = false;\n\n  /**\n   * List of available schemes\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * Layer that the component is currently rendering, used to pull relevant properties from.\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Used to emit any changes made to the layer or its properties\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /**\n   * Options for the brightness slider\n   */\n  brightnessSliderOptions: Options;\n\n  /**\n   * Options for the transparency slider\n   */\n  transparencySliderOptions: Options;\n\n  /**\n   * Updates current low brightness value with new low brightness value\n   */\n  get brightnessLow(): number { return this.layer.brightness[0]; }\n  set brightnessLow(value: number) {\n    this.updateLayer({ brightness: [value, this.brightnessHigh] });\n  }\n\n  /**\n   * Updates current high brightness value with new high brightness value\n   */\n  get brightnessHigh(): number { return this.layer.brightness[1]; }\n  set brightnessHigh(value: number) {\n    this.updateLayer({ brightness: [this.brightnessLow, value] });\n  }\n\n  /**\n   * Updates current transparency value with new transparency value\n   */\n  get transparency(): number { return this.layer.transparency; }\n  set transparency(value: number) {\n    this.updateLayer({ transparency: value });\n  }\n\n  /**\n   * Initiates slider options\n   */\n  constructor() {\n    const COMMON_OPTIONS = {\n      floor: 0,\n      ceil: 100,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n\n    this.brightnessSliderOptions = { ...COMMON_OPTIONS, inputEventsInterval: 1000 };\n    this.transparencySliderOptions = { ...COMMON_OPTIONS, showSelectionBar: true };\n  }\n\n  /**\n   * Emits new brightness selection\n   */\n  brightnessChanged(): void {\n    this.layerChange.emit(this.layer);\n  }\n\n  /**\n   * Emits new transparency value\n   */\n  transparencyChanged(): void {\n    this.layerChange.emit(this.layer);\n  }\n\n  /**\n   * Takes in the selected color and scheme and adds them to the Layer\n   * before emitting the changed layer\n   */\n  colorChanged(color: string, scheme: ColorScheme): void {\n    this.updateLayer({\n      colorScheme: scheme,\n      color,\n      customizedColor: true\n    });\n  }\n\n  /**\n   * Updates layer with new layer settings\n   * @param updates Contains updated layer settings\n   */\n  private updateLayer(\n    updates: Partial[0]>\n  ): void {\n    const { layer: current, layerChange } = this;\n    const layer = new ImageViewerLayer({\n      ...current,\n      ...updates\n    });\n\n    this.layer = layer;\n    layerChange.emit(layer);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    Brightness\n    \n    \n\n    Transparency\n    \n     -->\n  \n\n\n    \n\n    \n                \n                    ./color-scheme-contents.component.scss\n                \n                .color-scheme-contents-container {\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 4px;\n  width: 10rem;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 1;\n  right: -1.125rem;\n  top: -1.125rem;\n\n  &.bottom {\n    top: auto;\n    bottom: 0rem;\n  }\n\n  .scheme-contents {\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .swatch {\n      display: flex;\n      width: 7rem;\n      height: 1rem;\n      margin-bottom: 0.5rem;\n\n      :hover {\n        cursor: pointer;\n      }\n    }\n\n    .brightness-slider-label {\n      margin-top: .5rem;\n    }\n  }\n\n  ::ng-deep .slider {\n    margin-top: 0.75rem;\n    margin-bottom: 1rem;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: 0.15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: -0.5rem;\n      border-width: 0.1rem;\n      border-style: solid;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Brightness            Transparency         -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSchemeContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorSchemeContentsModule.html":{"url":"modules/ColorSchemeContentsModule.html","title":"module - ColorSchemeContentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorSchemeContentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorSchemeContentsModule\n\n\n\ncluster_ColorSchemeContentsModule_declarations\n\n\n\ncluster_ColorSchemeContentsModule_imports\n\n\n\ncluster_ColorSchemeContentsModule_exports\n\n\n\n\nColorSchemeContentsComponent\n\nColorSchemeContentsComponent\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule -->\n\nColorSchemeContentsComponent->ColorSchemeContentsModule\n\n\n\n\n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent  -->\n\nColorSchemeContentsModule->ColorSchemeContentsComponent \n\n\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorSchemeContentsModule -->\n\nColorBarModule->ColorSchemeContentsModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nColorSchemeContentsModule -->\n\nDualSliderModule->ColorSchemeContentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorSchemeContentsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorBarModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorSchemeContentsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { ColorSchemeContentsComponent } from './color-scheme-contents.component';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { ColorBarModule } from '../color-bar/color-bar.module';\n\n\n@NgModule({\n  imports: [CommonModule, DualSliderModule, Ng5SliderModule, ColorBarModule],\n  declarations: [ColorSchemeContentsComponent],\n  exports: [ColorSchemeContentsComponent]\n})\n\nexport class ColorSchemeContentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSchemePopupComponent.html":{"url":"components/ColorSchemePopupComponent.html","title":"component - ColorSchemePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSchemePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the scheme selector popup\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-scheme-popup\n            \n\n            \n                styleUrls\n                ./color-scheme-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-scheme-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                contentElement\n                            \n                            \n                                    Private\n                                    Optional\n                                owner\n                            \n                            \n                                popupVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:25\n                            \n                        \n                \n                    \n                        The Layer which we use to pull the properties we need from\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:20\n                            \n                        \n                \n                    \n                        Schemes available to choose from\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:30\n                            \n                        \n                \n                    \n                        Output we use to emit any changes to the layer or its properties\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:53\n                \n            \n\n\n            \n                \n                    Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(event: MouseEvent, owner?: Element)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:64\n                \n            \n\n\n            \n                \n                    Opens popup and calculates which direction the popup opens based on click position\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    owner\n                                    \n                                            Element\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:45\n                            \n                        \n\n                \n                    \n                        Controls direction the popup opens\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content', {static: true, read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:40\n                            \n                        \n\n                \n                    \n                        Owner button element which when clicked will not close on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:37\n                            \n                        \n\n                \n                    \n                        Controls visibility of the popup\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostListener, Input, Output, ViewChild, ElementRef } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../color-schemes';\n\n\n/**\n * Component for the scheme selector popup\n */\n@Component({\n  selector: 'ccf-color-scheme-popup',\n  templateUrl: './color-scheme-popup.component.html',\n  styleUrls: ['./color-scheme-popup.component.scss']\n})\nexport class ColorSchemePopupComponent {\n\n  /**\n   * Schemes available to choose from\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * The Layer which we use to pull the properties we need from\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Output we use to emit any changes to the layer or its properties\n   */\n  @Output() layerChange = new EventEmitter();\n\n  @ViewChild('content', { static: true, read: ElementRef }) contentElement: ElementRef;\n\n  /**\n   * Controls visibility of the popup\n   */\n  popupVisible = false;\n\n  /** Owner button element which when clicked will not close on. */\n  private owner?: Element;\n\n  /**\n   * Controls direction the popup opens\n   */\n  bottom = false;\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  close(target: HTMLElement): void {\n    const { popupVisible, contentElement: { nativeElement: content } = { nativeElement: undefined }, owner } = this;\n    if (!popupVisible || content?.contains(target) || owner?.contains(target)) {\n      return;\n    }\n    this.popupVisible = !popupVisible;\n  }\n\n  /**\n   * Opens popup and calculates which direction the popup opens based on click position\n   */\n  open(event: MouseEvent, owner?: Element): void {\n    const clickPos = event.pageY;\n    this.bottom = window.innerHeight - clickPos \n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./color-scheme-popup.component.scss\n                \n                .hidden {\n  display: none;\n}\n\n.show {\n  display: block;\n  position: absolute;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSchemePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorSchemePopupModule.html":{"url":"modules/ColorSchemePopupModule.html","title":"module - ColorSchemePopupModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorSchemePopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorSchemePopupModule\n\n\n\ncluster_ColorSchemePopupModule_declarations\n\n\n\ncluster_ColorSchemePopupModule_imports\n\n\n\ncluster_ColorSchemePopupModule_exports\n\n\n\n\nColorSchemePopupComponent\n\nColorSchemePopupComponent\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorSchemePopupModule -->\n\nColorSchemePopupComponent->ColorSchemePopupModule\n\n\n\n\n\nColorSchemePopupComponent \n\nColorSchemePopupComponent \n\nColorSchemePopupComponent  -->\n\nColorSchemePopupModule->ColorSchemePopupComponent \n\n\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemePopupModule -->\n\nColorSchemeContentsModule->ColorSchemePopupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorSchemePopupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorSchemeContentsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorSchemePopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ColorSchemePopupComponent } from './color-scheme-popup.component';\nimport { ColorSchemeContentsModule } from '../color-scheme-contents/color-scheme-contents.module';\n\n\n@NgModule({\n  imports: [CommonModule, ColorSchemeContentsModule],\n  declarations: [ColorSchemePopupComponent],\n  exports: [ColorSchemePopupComponent]\n})\n\nexport class ColorSchemePopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorSchemeSelection.html":{"url":"interfaces/ColorSchemeSelection.html","title":"interface - ColorSchemeSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorSchemeSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-schemes.ts\n        \n\n            \n                Description\n            \n            \n                Object containing scheme and color index info to be emitted when a change is made\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coloridx\n                                \n                                \n                                        scheme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coloridx\n                                    \n                                \n                                \n                                    \n                                        coloridx:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Index of the selected color in scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheme\n                                    \n                                \n                                \n                                    \n                                        scheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current scheme selected\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n\n  /**\n   * Whether the scheme is discrete or gradient\n   */\n  type: 'discrete' | 'gradient';\n\n  /**\n   * Name of scheme\n   */\n  name: string;\n\n  /**\n   * Colors used in the scheme\n   */\n  colors: string[];\n\n  /**\n   * Positions for mapping the data to colors\n   */\n  positions: number[];\n}\n\n/**\n * Default Qualitative Scheme1 (discrete)\n */\nexport const GREEENORANGE: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative1',\n  colors: ['#66BB6A', '#B39DDB', '#FFCC80', '#FFFF8D', '#1565C0', '#E91E63', '#E65100'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Qualitative Scheme2 (discrete)\n */\nexport const TEALGREEN: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative2',\n  colors: ['#80CBC4', '#FFFF8D', '#B39DDB', '#EF9A9A', '#64B5F6', '#FFB74D', '#AED581'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme1 (discrete)\n */\nexport const BLUERED: ColorScheme = {\n  type: 'discrete',\n  name: 'bluered',\n  colors: ['#2166AC', '#67A9CF', '#D1E5F0', '#F7F7F7', '#FDDBC7', '#EF8A62', '#B2182B'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme2 (discrete)\n */\nexport const GREENRED: ColorScheme = {\n  type: 'discrete',\n  name: 'greenred',\n  colors: ['#1A9850', '#91CF60', '#D9EF8B', '#FFFFBF', '#FEE08B', '#FC8D59', '#D73027'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme3 (discrete)\n */\nexport const PURPLEBROWN: ColorScheme = {\n  type: 'discrete',\n  name: 'purplebrown',\n  colors: ['#542788', '#998EC3', '#D8DAEB', '#F7F7F7', '#FEE0B6', '#F1A340', '#B35806'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme4 (discrete)\n */\nexport const REDTAN: ColorScheme = {\n  type: 'discrete',\n  name: 'redtan',\n  colors: ['#990000', '#D7301F', '#EF6548', '#FC8D59', '#FDBB84', '#FDD49E', '#FEF0D9'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme5 (discrete)\n */\nexport const PURPLELIGHTBLUE: ColorScheme = {\n  type: 'discrete',\n  name: 'purplelightblue',\n  colors: ['#6E016B', '#88419D', '#8C6BB1', '#8C96C6', '#9EBCDA', '#BFD3E6', '#EDF8FB'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme6 (gradient)\n */\nexport const VIRIDIS: ColorScheme = {\n  type: 'gradient',\n  name: 'viridis',\n  colors: ['#FFE31C', '#B5C740', '#6BAB65', '#21908A', '#2D6379', '#393768', '#450B57'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme7 (gradient)\n */\nexport const MAGMA: ColorScheme = {\n  type: 'gradient',\n  name: 'magma',\n  colors: ['#F8FC9D', '#E1B986', '#CA7670', '#B4335A', '#78223C', '#3D121F', '#020202'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme8 (gradient)\n */\nexport const PLASMA: ColorScheme = {\n  type: 'gradient',\n  name: 'plasma',\n  colors: ['#F2F424', '#E3B842', '#D47D60', '#C6427E', '#883381', '#4A2484', '#0C1687'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default scheme options\n */\nexport const DEFAULT_COLOR_SCHEMES = [\n  GREEENORANGE,\n  TEALGREEN,\n  BLUERED,\n  GREENRED,\n  PURPLEBROWN,\n  // REDTAN,\n  // PURPLELIGHTBLUE,\n  // VIRIDIS,\n  // MAGMA,\n  // PLASMA\n];\n\n/**\n * Object containing scheme and color index info to be emitted when a change is made\n */\nexport interface ColorSchemeSelection {\n\n  /**\n   * Current scheme selected\n   */\n  scheme: ColorScheme;\n\n  /**\n   * Index of the selected color in scheme\n   */\n  coloridx: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-container'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:111\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:79\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:101\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateDrawers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:120\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessageChannel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:58\n                            \n                        \n\n                \n                    \n                        The connected message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(ContentComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:45\n                            \n                        \n\n                \n                    \n                        Content component if provided already wrapped. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(ContentComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:48\n                            \n                        \n\n                \n                    \n                        Content component if provided without wrapping. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DrawerComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:41\n                            \n                        \n\n                \n                    \n                        Drawer components in this container. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                        All subscriptions managed by the container. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component. \n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped. \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean { return this.content1.length !== 0; }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) { throwDuplicateDrawersError('start'); }\n    if (endDrawers.length > 1) { throwDuplicateDrawersError('end'); }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent-1.html":{"url":"components/ContainerComponent-1.html","title":"component - ContainerComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-container'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:111\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:79\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:101\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateDrawers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:120\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessageChannel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:58\n                            \n                        \n\n                \n                    \n                        The connected message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(ContentComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:45\n                            \n                        \n\n                \n                    \n                        Content component if provided already wrapped. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(ContentComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:48\n                            \n                        \n\n                \n                    \n                        Content component if provided without wrapping. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DrawerComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:41\n                            \n                        \n\n                \n                    \n                        Drawer components in this container. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                        All subscriptions managed by the container. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component. \n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped. \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean { return this.content1.length !== 0; }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) { throwDuplicateDrawersError('start'); }\n    if (endDrawers.length > 1) { throwDuplicateDrawersError('end'); }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/content.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetStage\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:12\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetStage\n                        \n                        \n                    \n                \n            \n            \n                \nresetStage()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:17\n                \n            \n\n\n            \n                \n                    Method to reset registration block, crosshairs, and x,y,z information.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\n\n@Component({\n  selector: 'ccf-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-content';\n\n  /**\n   * Method to reset registration block, crosshairs, and x,y,z information.\n   */\n  resetStage(): void {\n    // Registration block return to starting position\n    // The crosshairs return to start position\n    // the x, y, z info above the gizmo goes back to zero\n  }\n}\n\n    \n\n    \n        \n    \n    refresh\n\n\n\n    \n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n  height: 100%;\n  padding: 1.5rem;\n\n  .top-bar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-right: 2rem;\n\n    .reset {\n      transform: scaleX(-1);\n      cursor: pointer;\n    }\n  }\n\n  // Temporary for displaying dev information\n  .ccf-store-debug {\n    margin-top: 2rem;\n    color: white;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        refresh'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-1.html":{"url":"components/ContentComponent-1.html","title":"component - ContentComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @fadeInOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the content is invisible. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.cff-drawer-content-animations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                            \n                        \n\n                \n                    \n                        Whether animations are enabled. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-left.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                            \n                        \n\n                \n                    \n                        Left margin size. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-right.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                            \n                        \n\n                \n                    \n                        Right margin size. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:68\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateFaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:113\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateMargin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:100\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DrawerComponent[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:39\n                            \n                        \n\n                \n                    \n                        References to the side drawers. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if(this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled':\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = startExpanded || endExpanded;\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 7rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: .5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-2.html":{"url":"components/ContentComponent-2.html","title":"component - ContentComponent-2","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @fadeInOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the content is invisible. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.cff-drawer-content-animations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                            \n                        \n\n                \n                    \n                        Whether animations are enabled. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-left.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                            \n                        \n\n                \n                    \n                        Left margin size. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-right.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                            \n                        \n\n                \n                    \n                        Right margin size. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:68\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateFaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:113\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateMargin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:100\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DrawerComponent[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:39\n                            \n                        \n\n                \n                    \n                        References to the side drawers. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if(this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled':\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = !!(startExpanded || endExpanded);\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: .5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-2'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when the content component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged-1.html":{"url":"interfaces/ContentContainerChanged-1.html","title":"interface - ContentContainerChanged-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when the content component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentModule.html":{"url":"modules/ContentModule.html","title":"module - ContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\n\nContentComponent\n\nContentComponent\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nContentModule -->\n\nStoreDebugModule->ContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StageNavModule\n                        \n                        \n                            StoreDebugModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { StoreDebugModule } from 'ccf-shared';\n\nimport { ContentComponent } from '../content/content.component';\nimport { StageNavModule } from './stage-nav/stage-nav.module';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n@NgModule({\n  imports: [CommonModule, StageNavModule, MatIconModule, StoreDebugModule],\n  declarations: [ContentComponent],\n  exports: [ContentComponent]\n})\nexport class ContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHeaderModule\n\nHeaderModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { HeaderModule } from './header/header.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [HttpClientModule, HeaderModule, StoreModule, ThemingModule],\n  exports: [HeaderModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Backend query interface. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAggregateResults\n                                \n                                \n                                    getImageViewerData\n                                \n                                \n                                    getListResults\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:92\n                \n            \n\n\n            \n                \n                    Query aggregate items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageViewerData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:94\n                \n            \n\n\n            \n                \n                    Query a specific image. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:90\n                \n            \n\n\n            \n                \n                    Query list items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource-1.html":{"url":"interfaces/DataSource-1.html","title":"interface - DataSource-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         ZarrInfo | OMEZarrInfo | TiffInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZarrInfo | OMEZarrInfo | TiffInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         LoaderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoaderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hms-dbmi/viv';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n            \n                Description\n            \n            \n                Backend data queries.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _afterConnected\n                            \n                            \n                                dataSource\n                            \n                            \n                                dbOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAggregateResults\n                            \n                            \n                                    Private\n                                    Async\n                                getDB\n                            \n                            \n                                getImageViewerData\n                            \n                            \n                                getListResults\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of data source service.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:77\n                \n            \n\n\n            \n                \n                    Queries for aggregate values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getDB\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDB()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:53\n                \n            \n\n\n            \n                \n                    Gets a reference to the database.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise that resolves to the database when ready.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageViewerData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:97\n                \n            \n\n\n            \n                \n                    Queries data for a specific image.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The image identifier ('\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the result.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:67\n                \n            \n\n\n            \n                \n                    Queries for list values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOntologyTermOccurences\n                        \n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:87\n                \n            \n\n\n            \n                \n                    Queries for ontology term counts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _afterConnected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:21\n                            \n                        \n\n                \n                    \n                        Indicator of when the database is ready. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Remote | CCFDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:17\n                            \n                        \n\n                \n                    \n                        The underlying database. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFDatabaseOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:19\n                            \n                        \n\n                \n                    \n                        Database initialization options. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AggregateResult, CCFDatabase, CCFDatabaseOptions, Filter, ImageViewerData, ListResult } from 'ccf-database';\nimport { Remote, wrap } from 'comlink';\nimport { from, Observable } from 'rxjs';\n\nimport { environment } from './../../../../environments/environment';\n\n\n/**\n * Backend data queries.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceService {\n  /** The underlying database. */\n  dataSource: Remote | CCFDatabase;\n  /** Database initialization options. */\n  dbOptions: CCFDatabaseOptions;\n  /** Indicator of when the database is ready. */\n  private _afterConnected: Promise;\n\n  /**\n   * Creates an instance of data source service.\n   */\n  constructor() {\n    if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      const worker = new Worker('./data-source.worker', { type: 'module' });\n      this.dataSource = wrap(worker);\n    } else {\n      this.dataSource = new CCFDatabase();\n    }\n    this.dbOptions = environment.dbOptions as CCFDatabaseOptions;\n\n    if (typeof globalThis === 'object') {\n      // If a global dbOptions object is set, use this for connecting to the db\n      if (globalThis.dbOptions) {\n        this.dbOptions = { ...this.dbOptions, ...globalThis.dbOptions } as CCFDatabaseOptions;\n      }\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        ((globalThis as unknown) as { db: Remote | CCFDatabase }).db = this.dataSource;\n      }\n    }\n  }\n\n  /**\n   * Gets a reference to the database.\n   *\n   * @returns A promise that resolves to the database when ready.\n   */\n  private async getDB(): Promise | CCFDatabase> {\n    if (!this._afterConnected) {\n      this._afterConnected = this.dataSource.connect(this.dbOptions);\n    }\n    await this._afterConnected;\n    return this.dataSource;\n  }\n\n  /**\n   * Queries for list values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getListResults(filter?: Filter): Observable {\n    return from(this.getDB().then((db) => db.getListResults(filter)));\n  }\n\n  /**\n   * Queries for aggregate values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getAggregateResults(filter?: Filter): Observable {\n    return from(this.getDB().then((db) => db.getAggregateResults(filter)));\n  }\n\n  /**\n   * Queries for ontology term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return from(this.getDB().then((db) => db.getOntologyTermOccurences(filter)));\n  }\n\n  /**\n   * Queries data for a specific image.\n   *\n   * @param iri The image identifier ('@id').\n   * @returns An observable emitting the result.\n   */\n  getImageViewerData(iri: string): Observable {\n    return from(this.getDB().then((db) => db.getImageViewerData(iri)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataState.html":{"url":"injectables/DataState.html","title":"injectable - DataState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/data/data.state.ts\n        \n\n            \n                Description\n            \n            \n                Data state repository and service.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _aggregateDataQueryStatus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _listDataQueryStatus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _termOccurencesDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                aggregateData$\n                            \n                            \n                                    Readonly\n                                aggregateDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                filter$\n                            \n                            \n                                    Readonly\n                                listData$\n                            \n                            \n                                    Readonly\n                                listDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                ontologyTermsFullData$\n                            \n                            \n                                    Readonly\n                                queryStatus$\n                            \n                            \n                                    Readonly\n                                termOccurencesData$\n                            \n                            \n                                    Readonly\n                                termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aggregateData\n                            \n                            \n                                    Private\n                                listData\n                            \n                            \n                                    Private\n                                termOccurencesData\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of data state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data query service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            aggregateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregateData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:181\n                \n            \n\n\n            \n                \n                    Queries for aggregate data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ObservableInput\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            listData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:169\n                \n            \n\n\n            \n                \n                    Queries for list data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ObservableInput\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            termOccurencesData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    termOccurencesData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:193\n                \n            \n\n\n            \n                \n                    Queries for term occurences data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObservableInput>\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilter(filter: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:155\n                \n            \n\n\n            \n                \n                    Updates the current filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes to be made to the current filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _aggregateDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:94\n                            \n                        \n\n                \n                    \n                        Implementation subject for aggregateDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _listDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:92\n                            \n                        \n\n                \n                    \n                        Implementation subject for listDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:96\n                            \n                        \n\n                \n                    \n                        Implementation subject for termOccurencesDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            aggregateData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:107\n                            \n                        \n\n                \n                    \n                        Latest aggregate query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            aggregateDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._aggregateDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:118\n                            \n                        \n\n                \n                    \n                        Current status of queries in the aggregateData$ observable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('filter'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:101\n                            \n                        \n\n                \n                    \n                        Current filter. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            listData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:103\n                            \n                        \n\n                \n                    \n                        Latest list query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            listDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._listDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:116\n                            \n                        \n\n                \n                    \n                        Current status of queries in the listData$ observable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ontologyTermsFullData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:98\n                            \n                        \n\n                \n                    \n                        Keeping track of all ontology terms there is data for. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            queryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:123\n                            \n                        \n\n                \n                    \n                        Current status of all queries. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            termOccurencesData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:111\n                            \n                        \n\n                \n                    \n                        Latest term occurences query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._termOccurencesDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:120\n                            \n                        \n\n                \n                    \n                        Current status of queries in the aggregateData$ observable. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, Filter, ListResult } from 'ccf-database';\nimport { combineLatest, Observable, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { distinct, map, pluck, publishReplay, refCount, switchMap, tap } from 'rxjs/operators';\n\nimport { DataSourceService } from '../../services/data-source/data-source.service';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702']\n};\n\n/** Current state of data queries. */\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n}\n\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository {\n  /** Implementation subject for listDataQueryStatus$. */\n  private readonly _listDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for termOccurencesDataQueryStatus$. */\n  private readonly _termOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$: Observable>;\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest list query data. */\n  readonly listData$ = this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest term occurences query data. */\n  readonly termOccurencesData$ = this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ));\n\n  /** Current status of queries in the listData$ observable. */\n  readonly listDataQueryStatus$ = this._listDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly termOccurencesDataQueryStatus$ = this._termOccurencesDataQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._listDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n\n    const ontologyTermsData = new ReplaySubject>(1);\n    source.getOntologyTermOccurences().subscribe(ontologyTermsData);\n    this.ontologyTermsFullData$ = ontologyTermsData;\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: Object.assign({}, this.getState().filter, filter)\n    });\n  }\n\n  /**\n   * Queries for list data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private listData(filter: Filter): ObservableInput {\n    this._listDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getListResults(filter);\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getAggregateResults(filter);\n  }\n\n  /**\n   * Queries for term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private termOccurencesData(filter: Filter): ObservableInput> {\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getOntologyTermOccurences(filter);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataStateModel.html":{"url":"interfaces/DataStateModel.html","title":"interface - DataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/data/data.state.ts\n        \n\n            \n                Description\n            \n            \n                Store data state. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         Filter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current filter. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, Filter, ListResult } from 'ccf-database';\nimport { combineLatest, Observable, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { distinct, map, pluck, publishReplay, refCount, switchMap, tap } from 'rxjs/operators';\n\nimport { DataSourceService } from '../../services/data-source/data-source.service';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702']\n};\n\n/** Current state of data queries. */\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n}\n\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository {\n  /** Implementation subject for listDataQueryStatus$. */\n  private readonly _listDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for termOccurencesDataQueryStatus$. */\n  private readonly _termOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$: Observable>;\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest list query data. */\n  readonly listData$ = this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest term occurences query data. */\n  readonly termOccurencesData$ = this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ));\n\n  /** Current status of queries in the listData$ observable. */\n  readonly listDataQueryStatus$ = this._listDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly termOccurencesDataQueryStatus$ = this._termOccurencesDataQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._listDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n\n    const ontologyTermsData = new ReplaySubject>(1);\n    source.getOntologyTermOccurences().subscribe(ontologyTermsData);\n    this.ontologyTermsFullData$ = ontologyTermsData;\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: Object.assign({}, this.getState().filter, filter)\n    });\n  }\n\n  /**\n   * Queries for list data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private listData(filter: Filter): ObservableInput {\n    this._listDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getListResults(filter);\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getAggregateResults(filter);\n  }\n\n  /**\n   * Queries for term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private termOccurencesData(filter: Filter): ObservableInput> {\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getOntologyTermOccurences(filter);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  { name: 'logo', namespace: 'app', url: 'assets/icons/app/hubmap-logo.svg' },\n\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n\n  // Add default icons here!\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition-1.html":{"url":"interfaces/DefaultIconDefinition-1.html","title":"interface - DefaultIconDefinition-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  { name: 'logo', namespace: 'app', url: 'assets/icons/hubmap-logo.svg' },\n\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/icons-organs_bladder.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/icons-organs_brain.svg' },\n  { name: 'colon', namespace: 'app', url: 'assets/icons/icons-organs_colon.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/icons-organs_heart.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/icons-organs_kidney.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/icons-organs_liver.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/icons-organs_lung.svg' },\n  { name: 'lymph_nodes', namespace: 'app', url: 'assets/icons/icons-organs_lymph-nodes.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/icons-organs_ovaries.svg' },\n  { name: 'small_intestine', namespace: 'app', url: 'assets/icons/icons-organs_small intestine.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/icons-organs_spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/icons-organs_stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/icons-organs_thymus.svg' },\n\n  // Add default icons here!\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsLabelComponent.html":{"url":"components/DetailsLabelComponent.html","title":"component - DetailsLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component that takes an array of strings and renders\nthat array as a string, separated by commas, in the icon color.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-details-label\n            \n\n            \n                styleUrls\n                ./details-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        details\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:19\n                            \n                        \n                \n                    \n                        The array of details to be displayed.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-details-label'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:14\n                            \n                        \n\n                \n                    \n                        HTML Class Name \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            arrayToString\n                        \n                        \n                    \n                \n            \n            \n                \narrayToString(inputArray: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:27\n                \n            \n\n\n            \n                \n                    Function that handles converting the array given\ninto a formatted string for display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputArray\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an array of strings to join.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the formatted string of items separated by a comma.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, HostBinding } from '@angular/core';\n\n/**\n * Reusable component that takes an array of strings and renders\n * that array as a string, separated by commas, in the icon color.\n */\n@Component({\n  selector: 'ccf-details-label',\n  templateUrl: './details-label.component.html',\n  styleUrls: ['./details-label.component.scss']\n})\nexport class DetailsLabelComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-details-label';\n\n  /**\n   * The array of details to be displayed.\n   */\n  @Input() details: string[] = [];\n\n  /**\n   * Function that handles converting the array given\n   * into a formatted string for display.\n   * @param inputArray an array of strings to join.\n   * @returns the formatted string of items separated by a comma.\n   */\n  arrayToString(inputArray: string[]): string {\n    return inputArray.join(', ');\n  }\n}\n\n    \n\n    \n        {{ arrayToString(details) }}\n    \n\n    \n                \n                    ./details-label.component.scss\n                \n                :host {\n    display: block;\n    height: 2.25rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ arrayToString(details) }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DetailsLabelModule.html":{"url":"modules/DetailsLabelModule.html","title":"module - DetailsLabelModule","body":"\n                   \n\n\n\n\n    Modules\n    DetailsLabelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/details-label/details-label.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailsLabelComponent } from './details-label.component';\n\n@NgModule({\n  declarations: [DetailsLabelComponent],\n  imports: [CommonModule],\n  exports: [DetailsLabelComponent]\n})\nexport class DetailsLabelModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        drawers\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                    \n                                \n                                \n                                    \n                                        drawers:     [unknown, unknown]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [unknown, unknown]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged-1.html":{"url":"interfaces/DrawerContainersChanged-1.html","title":"interface - DrawerContainersChanged-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        drawers\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                    \n                                \n                                \n                                    \n                                        drawers:     [unknown, unknown]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [unknown, unknown]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized-1.html":{"url":"interfaces/DrawerInitialized-1.html","title":"interface - DrawerInitialized-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expanded\n                                \n                                \n                                        margin\n                                \n                                \n                                        opened\n                                \n                                \n                                        type\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled-1.html":{"url":"interfaces/DrawerToggled-1.html","title":"interface - DrawerToggled-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expanded\n                                \n                                \n                                        margin\n                                \n                                \n                                        opened\n                                \n                                \n                                        type\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n\n\n    \n        Description\n    \n    \n        Component for a dropdown menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                optionsVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChanged\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:16\n                            \n                        \n                \n                    \n                        What the component is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:21\n                            \n                        \n                \n                    \n                        Choices displayed in the dropdown menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:26\n                            \n                        \n                \n                    \n                        Current option selected.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the new selected option when selection is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:49\n                \n            \n\n\n            \n                \n                    Updates the selected value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value that has been selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleOptions\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:41\n                \n            \n\n\n            \n                \n                    Controls fade-in effect after dropdown menu opens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'invisible'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:36\n                            \n                        \n\n                \n                    \n                        Determines if menu contents are visible (used for fade-in effect).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Component for a dropdown menu.\n */\n@Component({\n  selector: 'ccf-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent {\n\n  /**\n   * What the component is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * Choices displayed in the dropdown menu.\n   */\n  @Input() options: string[];\n\n  /**\n   * Current option selected.\n   */\n  @Input() selection: string;\n\n  /**\n   * Emits the new selected option when selection is changed.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines if menu contents are visible (used for fade-in effect).\n   */\n  optionsVisible = 'invisible';\n\n  /**\n   * Controls fade-in effect after dropdown menu opens\n   */\n  toggleOptions(): void {\n    this.optionsVisible = this.optionsVisible === 'visible' ? 'invisible' : 'visible';\n  }\n\n  /**\n   * Updates the selected value.\n   * @param value The value that has been selected\n   */\n  selectionChanged(value: string): void {\n    this.selection = value;\n    this.selectionChange.emit(value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n      \n        \n          \n            {{ option }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dropdown.component.scss\n                \n                @keyframes slideInHorizontalDropdown {\n  from {\n    width: 0;\n  }\n  to {\n    width: 9.85rem;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.dropdown-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        font-size: 14px;\n        border: none;\n\n        mat-select {\n          font-size: 16px;\n          font-weight: bold;\n        }\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      background-color: black;\n      transform: none;\n      height: 2px;\n    }\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .option-panel {\n  animation: slideInHorizontalDropdown .3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  position: absolute !important;\n  top: 1.55rem;\n  max-width: 152px;\n  border-radius: 0px;\n  border-width: 1px;\n  border-style: solid;\n\n\n  .mat-option {\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    padding-left: 1em;\n  }\n\n  :last-child {\n    border-bottom: none;\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0px !important;\n}\n\n.dropdown-form-field {\n  height: 3rem;\n  width: 100%;\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n  }\n}\n\n::ng-deep .ccf-dropdown {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-.5em);\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}                                    {{ option }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dropdown/dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DropdownComponent } from './dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent]\n})\n\nexport class DropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualSliderComponent.html":{"url":"components/DualSliderComponent.html","title":"component - DualSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DualSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n\n\n    \n        Description\n    \n    \n        Component containing a button that when clicked will show a slider popover.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dual-slider\n            \n\n            \n                styleUrls\n                ./dual-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsVisible\n                            \n                            \n                                highValue\n                            \n                            \n                                    Private\n                                isSliderInitialized\n                            \n                            \n                                isSliderOpen\n                            \n                            \n                                lowValue\n                            \n                            \n                                options\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                popoverElement\n                            \n                            \n                                popoverPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeSliderPopover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onKeyHigh\n                            \n                            \n                                onKeyLow\n                            \n                            \n                                optionsChanged\n                            \n                            \n                                sliderValueChanged\n                            \n                            \n                                toggleSliderPopover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                selection\n                            \n                            \n                                valueRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rangeLabel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:102\n                            \n                        \n\n                \n                    \n                            Creates an instance of dual slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The overlay service used to create the slider popover.\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the component's element. Used during event handling.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:41\n                            \n                        \n                \n                    \n                        Which criteria the slider is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:51\n                            \n                        \n                \n                    \n                        The current range selected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueRange\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:46\n                            \n                        \n                \n                    \n                        The lower and upper range of the slider.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:56\n                            \n                        \n                \n                    \n                        Emits the new selection range when a change is made to it.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:168\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:214\n                \n            \n\n\n            \n                \n                    Creates and initializes the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:125\n                \n            \n\n\n            \n                \n                    Updates slider options (with optionsChanged) and selection when changes detected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes that have been made to the slider properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:155\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyHigh\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyHigh(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:243\n                \n            \n\n\n            \n                \n                    Updates the slider's high pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyLow\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyLow(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:227\n                \n            \n\n\n            \n                \n                    Updates the slider's low pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionsChanged\n                        \n                        \n                    \n                \n            \n            \n                \noptionsChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:139\n                \n            \n\n\n            \n                \n                    Updates the slider options, and the slider values if necessary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sliderValueChanged\n                        \n                        \n                    \n                \n            \n            \n                \nsliderValueChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:204\n                \n            \n\n\n            \n                \n                    Handler for updates to the slider values.\nEmits the updated selection value array.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:187\n                \n            \n\n\n            \n                \n                    Toggles the visibility of the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'invisible'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:81\n                            \n                        \n\n                \n                    \n                        Determines if slider contents are visible (used for fade-in effect).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:76\n                            \n                        \n\n                \n                    \n                        Value bound to the slider's high pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isSliderInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:102\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover has been created and initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSliderOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:61\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover is shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:71\n                            \n                        \n\n                \n                    \n                        Value bound to the slider's low pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:66\n                            \n                        \n\n                \n                    \n                        Slider options.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OverlayRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:97\n                            \n                        \n\n                \n                    \n                        Reference to the slider popover overlay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popover', {read: ElementRef, static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the popover element.\nThis is undefined until the slider popover is initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverPortal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CdkPortal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CdkPortal, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the template for the slider popover.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rangeLabel\n                    \n                \n\n                \n                    \n                        getrangeLabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:86\n                                \n                            \n                    \n                        \n                                Computes the current age range for display in the button.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { Options } from 'ng5-slider';\n\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-dual-slider',\n  templateUrl: './dual-slider.component.html',\n  styleUrls: ['./dual-slider.component.scss']\n})\nexport class DualSliderComponent implements OnDestroy, OnChanges {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement: ElementRef;\n\n  /**\n   * Which criteria the slider is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * The lower and upper range of the slider.\n   */\n  @Input() valueRange: number[];\n\n  /**\n   * The current range selected.\n   */\n  @Input() selection: number[];\n\n  /**\n   * Emits the new selection range when a change is made to it.\n   */\n  @Output() selectionChange = new EventEmitter();\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options: Options;\n\n  /**\n   * Value bound to the slider's low pointer value.\n   */\n  lowValue: number;\n\n  /**\n   * Value bound to the slider's high pointer value.\n   */\n  highValue: number;\n\n  /**\n   * Determines if slider contents are visible (used for fade-in effect).\n   */\n  contentsVisible = 'invisible';\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get rangeLabel(): string {\n    const { lowValue, highValue } = this;\n    if (lowValue === highValue) {\n      return `${lowValue}`;\n    }\n    return `${lowValue}-${highValue}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of dual slider component.\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   */\n  constructor(\n    overlay: Overlay,\n    private element: ElementRef,\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'slider-pane',\n      positionStrategy\n    });\n  }\n\n  /**\n   * Updates slider options (with optionsChanged) and selection when changes detected.\n   * @param changes Changes that have been made to the slider properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.valueRange) {\n      this.optionsChanged();\n    }\n    if (changes.selection) {\n      // Detect when selection is changed and update low/high value.\n      this.lowValue = Math.min(...this.selection);\n      this.highValue = Math.max(...this.selection);\n    }\n  }\n\n  /**\n   * Updates the slider options, and the slider values if necessary.\n   */\n  optionsChanged(): void {\n    this.options = {\n      floor: this.valueRange ? this.valueRange[0] : 0,\n      ceil: this.valueRange ? this.valueRange[1] : 0,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n    this.lowValue = this.options.floor ?? 0;\n    this.highValue = this.options.ceil ?? 0;\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy(): void {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click, mouse movement, and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  // @HostListener('document:mousemove', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  @HostListener('document:touchstart', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    if (!isSliderOpen) {\n      return;\n    } else if (element.nativeElement.contains(target)) {\n      return;\n    } else if (popoverElement && popoverElement.nativeElement.contains(target)) {\n      return;\n    }\n\n    this.overlayRef.detach();\n    this.isSliderInitialized = false;\n    this.isSliderOpen = false;\n    this.contentsVisible = 'invisible';\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (isSliderInitialized) {\n      this.overlayRef.detach();\n      this.isSliderInitialized = false;\n    } else if (!isSliderInitialized && !isSliderOpen) {\n      this.initializeSliderPopover();\n    }\n\n    this.contentsVisible = this.contentsVisible === 'visible' ? 'invisible' : 'visible';\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Emits the updated selection value array.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue } = this;\n\n    this.selection = [lowValue, highValue];\n    this.selectionChange.emit(this.selection);\n  }\n\n  /**\n   * Creates and initializes the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n\n  /**\n   * Updates the slider's low pointer value when Enter key is pressed.\n   * @param event Event passed into the component\n   */\n  onKeyLow(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue = Number(this.options.floor) && newValue \n    \n\n    \n        \n  \n    \n      \n         {{ options.floor }}> \n        \n      \n\n      \n      \n\n      \n         {{ options.ceil }} \n        \n      \n    \n\n    \n      \n        {{ label }}\n        {{ rangeLabel }}\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual-slider.component.scss\n                \n                .slider-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        border: none;\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      background-color: black;\n      transform: none;\n      height: 2px;\n    }\n  }\n}\n\n\n.slider-labels {\n  display: flex;\n  flex-direction: column;\n  .name-label {\n    font-size: 14px;\n  }\n\n  .range-label {\n    font-weight: bold;\n  }\n}\n\n::ng-deep .ccf-slider.wrapper {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-1.5em);\n  }\n}\n\n// Styles for the popover slider\n// NOTE: This must NOT be nested inside the wrapper/container!\n\n@keyframes slideInHorizontalSlider {\n  from {\n    width: 0;\n  }\n  to {\n    width: 20em;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .slider-pane {\n  border-width: 1px;\n  border-style: solid;\n  position: absolute !important;\n  top: -1px;\n}\n\n.ccf-slider.detached {\n  animation: slideInHorizontalSlider 0.3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 0rem;\n  height: 70px;\n  padding: .75rem; // NOTE: Use padding instead of margin!\n\n  .slider ::ng-deep {\n    visibility: hidden;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: .15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: 0.095rem - ($pointer-size / 2);\n      border-width: .1rem;\n      border-style: solid;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    width: 32px;\n    \n    &.min {\n      margin-right: 1rem;\n    }\n    \n    &.max {\n      margin-left: 1rem;\n      align-items: flex-end;\n\n      .ceil, input {\n        text-align: right;\n      }\n    }\n\n    .floor, .ceil {\n      font-size: 14px;\n    }\n\n    input {\n      border: none;\n      width: 28px;\n      font-size: 16px;\n      font-weight: bold;\n      padding: 0;\n    }\n\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{ options.floor }}>                                          {{ options.ceil }}                                     {{ label }}        {{ rangeLabel }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualSliderModule.html":{"url":"modules/DualSliderModule.html","title":"module - DualSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    DualSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { DualSliderComponent } from './dual-slider.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    Ng5SliderModule\n  ],\n  declarations: [DualSliderComponent],\n  exports: [DualSliderComponent]\n})\nexport class DualSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtDeckProps.html":{"url":"interfaces/ExtDeckProps.html","title":"interface - ExtDeckProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtDeckProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DeckProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canvas\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hms-dbmi/viv';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Options applied during queries. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ageRange\n                                \n                                \n                                        bmiRange\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        hasSpatialEntity\n                                \n                                \n                                            Optional\n                                        highlightedEntities\n                                \n                                \n                                        ontologyTerms\n                                \n                                \n                                        sex\n                                \n                                \n                                        technologies\n                                \n                                \n                                        tmc\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                    \n                                \n                                \n                                    \n                                        ageRange:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Age range. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                    \n                                \n                                \n                                    \n                                        bmiRange:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    BMI range. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Include optional debugging information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSpatialEntity\n                                    \n                                \n                                \n                                    \n                                        hasSpatialEntity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether it has a spatial entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedEntities\n                                    \n                                \n                                \n                                    \n                                        highlightedEntities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Entities to be highlighted \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ontology terms. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:     \"Both\" | \"Male\" | \"Female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Both\" | \"Male\" | \"Female\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gender. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technologies. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tmc\n                                    \n                                \n                                \n                                    \n                                        tmc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TMC. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersContentComponent.html":{"url":"components/FiltersContentComponent.html","title":"component - FiltersContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n\n\n    \n        Description\n    \n    \n        Contains components of the filters popup and handles changes in filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-content\n            \n\n            \n                styleUrls\n                ./filters-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyButtonClick\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:21\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:16\n                            \n                        \n                \n                    \n                        Determines if the filters are visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        applyFilters\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the filters to be applied\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the filter change when they happen\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \napplyButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:46\n                \n            \n\n\n            \n                \n                    Emits the current filters when the apply button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilter(value: unknown, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:38\n                \n            \n\n\n            \n                \n                    Updates the filter object with a new key/value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be saved for the filter\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the filter to be saved at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Contains components of the filters popup and handles changes in filter settings\n */\n@Component({\n  selector: 'ccf-filters-content',\n  templateUrl: './filters-content.component.html',\n  styleUrls: ['./filters-content.component.scss']\n})\nexport class FiltersContentComponent {\n\n  /**\n   * Determines if the filters are visible\n   */\n  @Input() hidden: boolean;\n\n  /**\n   * Allows the filters to be set from outside the component\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emits the filter change when they happen\n   */\n  @Output() filtersChange = new EventEmitter>();\n\n  /**\n   * Emits the filters to be applied\n   */\n  @Output() applyFilters = new EventEmitter>();\n\n  /**\n   * Updates the filter object with a new key/value\n   * @param value The value to be saved for the filter\n   * @param key The key for the filter to be saved at\n   */\n  updateFilter(value: unknown, key: string): void {\n    this.filters = { ...this.filters, [key]: value };\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits the current filters when the apply button is clicked\n   */\n  applyButtonClick(): void {\n    this.applyFilters.emit(this.filters);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n  \n\n\n\n  \n\n\n\n  APPLY FILTERS\n\n\n    \n\n    \n                \n                    ./filters-content.component.scss\n                \n                .filter {\n  &.hidden {\n    display: none !important;\n  }\n\n  margin-top: 2em;\n}\n\n.button-container {\n  &.hidden {\n    display: none !important;\n  }\n  \n  margin-top: 2em;\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.outline-button {\n  box-shadow: 0.1rem 0.1rem 0.2rem 0rem #000000;\n  border-radius: 4px;\n  background: none;\n  border-width: 1px;\n  border-style: solid;\n  padding: 0.4em;\n  cursor: pointer;\n}\n\n.outline-button:active {\n  background: #69f0ae;\n  color: black;\n}\n\n.patient-filters {\n  display: flex;\n  width: 90%;\n\n  &.hidden {\n    display: none !important;\n  }\n\n  ccf-dual-slider {\n    margin-left: .5em;\n    width: 33%;\n  }\n\n  ccf-dropdown {\n    width: 33%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            APPLY FILTERS'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersContentModule.html":{"url":"modules/FiltersContentModule.html","title":"module - FiltersContentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CheckboxModule\n                        \n                        \n                            DropdownModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CheckboxModule } from '../../../shared/components/checkbox/checkbox.module';\nimport { DropdownModule } from '../../../shared/components/dropdown/dropdown.module';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { FiltersContentComponent } from './filters-content.component';\n\n\n@NgModule({\n  imports: [CommonModule, CheckboxModule, DropdownModule, DualSliderModule],\n  declarations: [FiltersContentComponent],\n  exports: [FiltersContentComponent]\n})\nexport class FiltersContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersPopoverComponent.html":{"url":"components/FiltersPopoverComponent.html","title":"component - FiltersPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n\n\n    \n        Description\n    \n    \n        Popover box for filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-popover\n            \n\n            \n                styleUrls\n                ./filters-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                removeBox\n                            \n                            \n                                toggleFilterVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawerExpanded\n                            \n                            \n                                filters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawerExpanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:21\n                            \n                        \n                \n                    \n                        Keeps track of whether or not the containing drawer is expanded\nBecause the styles need to change accordingly\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:15\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilters(filters: Record)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:51\n                \n            \n\n\n            \n                \n                    Emits the current filters, and hides the popover box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object containing all the currently set filters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBox\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:43\n                \n            \n\n\n            \n                \n                    Hides the filters popover box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFilterVisible\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFilterVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:36\n                \n            \n\n\n            \n                \n                    Toggles filter visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:31\n                            \n                        \n\n                \n                    \n                        Keeps track of whether or not the filters popover box is visible or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Popover box for filter settings\n */\n@Component({\n  selector: 'ccf-filters-popover',\n  templateUrl: './filters-popover.component.html',\n  styleUrls: ['./filters-popover.component.scss']\n})\nexport class FiltersPopoverComponent {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filters: Record;\n\n  /**\n   * Keeps track of whether or not the containing drawer is expanded\n   * Because the styles need to change accordingly\n   */\n  @Input() drawerExpanded: boolean;\n\n  /**\n   * Emits the current filters\n   */\n  @Output() filtersChange = new EventEmitter>();\n\n  /**\n   * Keeps track of whether or not the filters popover box is visible or not\n   */\n  filtersVisible = false;\n\n  /**\n   * Toggles filter visible\n   */\n  toggleFilterVisible(): void {\n    this.filtersVisible = !this.filtersVisible;\n  }\n\n  /**\n   * Hides the filters popover box\n   */\n  removeBox(): void {\n    this.filtersVisible = false;\n  }\n\n  /**\n   * Emits the current filters, and hides the popover box\n   * @param filters The object containing all the currently set filters\n   */\n  applyFilters(filters: Record): void {\n    this.filters = filters;\n    this.filtersChange.emit(filters);\n    this.removeBox();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./filters-popover.component.scss\n                \n                .filters-popover {\n  position: inherit;\n\n  &.expanded {\n    position: relative;\n\n    .popup-container {\n      right: inherit;\n    }\n\n    .popup-body {\n      padding-left: 4em !important;\n    }\n  }\n}\n\n.popup-container {\n  position: absolute;\n  border-width: 0px;\n  border-style: solid;\n  width: 0em;\n  height: 16.5rem; // 22.5rem\n  z-index: 5;\n  top: 0;\n  right: 24rem;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  transition-property: width;\n  transition-duration: 0.3s;\n\n  .popup-body {\n    position: relative;\n    opacity: 0;\n    transition-property: opacity;\n    transition-duration: 0s;\n    transition-delay: 0s;\n  }\n\n  &.visible {\n    width: 35rem;\n    border-width: 1px;\n\n    .popup-body {\n      padding: 1.5rem;\n      opacity: 1;\n      transition-delay: 0.3s;\n      transition-duration: 0.3s;\n    }\n  }\n}\n\n.show-hide {\n  width: 3rem;\n  height: 3rem;\n  background: none;\n  border: none;\n  z-index: 10;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersPopoverModule.html":{"url":"modules/FiltersPopoverModule.html","title":"module - FiltersPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_imports\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FiltersContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FiltersContentModule } from '../filters-content/filters-content.module';\nimport { FiltersPopoverComponent } from './filters-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FiltersContentModule],\n  declarations: [FiltersPopoverComponent],\n  exports: [FiltersPopoverComponent]\n})\nexport class FiltersPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlatNode.html":{"url":"classes/FlatNode.html","title":"class - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/flat-node.ts\n        \n\n            \n                Description\n            \n            \n                Node type used by ontology tree component.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    expandable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(original: OntologyNode, level: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:29\n                            \n                        \n\n                \n                    \n                            Creates an instance of flat node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        original\n                                                  \n                                                        \n                                                                        OntologyNode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The original ontology node object.\n\n                                                        \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The level of the new flat node in the tree.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(original: OntologyNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:27\n                \n            \n\n\n            \n                \n                    Creates a flat node from a ontology node object and a level in the tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original ontology node object.\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The level of the new flat node in the tree.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlatNode\n\n                    \n                    \n                        The newly created flat node.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:11\n                                \n                            \n                    \n                        \n                                Gets this node's label.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expandable\n                    \n                \n\n                \n                    \n                        getexpandable()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:16\n                                \n                            \n                    \n                        \n                                Indicates whether this node has children.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { OntologyNode } from './ontology-node';\n\n\n/**\n * Node type used by ontology tree component.\n */\nexport class FlatNode {\n  /**\n   * Gets this node's label.\n   */\n  get label(): string { return this.original.label; }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean {\n    return this.original.children.length > 0;\n  }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(readonly original: OntologyNode, readonly level: number) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/core/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header which is always displayed on the site; contains current filter info,\na link to download data, and a logo which resets the page when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hubmapPortalUrl\n                            \n                            \n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                downloadClicked\n                            \n                            \n                                refreshClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:28\n                            \n                        \n                \n                    \n                        Current filter settings\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapPortalUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:18\n                            \n                        \n                \n                    \n                        URL to Hubmap Portal site\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedIn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:23\n                            \n                        \n                \n                    \n                        Is the user logged in?\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        downloadClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:38\n                            \n                        \n                \n                    \n                        Emitted when download button is clicked\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:33\n                            \n                        \n                \n                    \n                        Emitted when refresh button is clicked\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Header which is always displayed on the site; contains current filter info,\n * a link to download data, and a logo which resets the page when clicked.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n\n  /**\n   * URL to Hubmap Portal site\n   */\n  @Input() hubmapPortalUrl: string;\n\n  /**\n   * Is the user logged in?\n   */\n  @Input() loggedIn: boolean;\n\n  /**\n   * Current filter settings\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emitted when refresh button is clicked\n   */\n  @Output() refreshClicked = new EventEmitter();\n\n  /**\n   * Emitted when download button is clicked\n   */\n  @Output() downloadClicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n  \n    Sex: {{filters?.sex}}\n    Age: {{filters?.ageRange[0]}}-{{filters?.ageRange[1]}}\n    BMI: {{filters?.bmiRange[0]}}-{{filters?.bmiRange[1]}}\n  \n\n  refresh\n\n  \n    \n      cloud_download\n    \n  \n  \n\n  Login\n  Logout\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .ccf-header {\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  display: flex;\n\n  .logo {\n    width: 6rem;\n  }\n\n  .download {\n    height: 1.5rem;\n  }\n\n  // Styled to match the HuBMAP Portal\n  .authentication {\n    width: 8.25rem;\n    border-radius: 2px;\n  }\n\n  .logo, .download, .refresh {\n    display: flex;\n    align-items: center;\n    transition: color 1s;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  :not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n\n  .filter-labels {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    font: 400 16px/20px Inter, sans-serif;\n  }\n\n  ::ng-deep ccf-info-button {\n    height: 2rem;\n    width: 2rem;\n    display: flex;\n    justify-content: center;\n    .mat-icon {\n      height: 2rem;\n      width: 2rem;\n      font-size: 2rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Sex: {{filters?.sex}}    Age: {{filters?.ageRange[0]}}-{{filters?.ageRange[1]}}    BMI: {{filters?.bmiRange[0]}}-{{filters?.bmiRange[1]}}    refresh            cloud_download          Login  Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent-1.html":{"url":"components/HeaderComponent-1.html","title":"component - HeaderComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Page header\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of header component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-header'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\nimport { PageState } from '../../core/store/page/page.state';\n\n\n/**\n * Page header\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-header';\n\n  /**\n   * Creates an instance of header component.\n   *\n   * @param page Page data.\n   */\n  constructor(readonly page: PageState) { }\n}\n\n    \n\n    \n        \n\n\n\n  \n    chevron_left\n    BACK\n  \n\n\n\n  \n    \n  \n  CCF REGISTRATION USER INTERFACE\n\n\n\n\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n\n  .text {\n    font-size: 1.5rem;\n    font-weight: lighter;\n  }\n\n  .link {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  .home {\n    * {\n      transition: color 1s;\n    }\n\n    .backbutton {\n      // Material icons do not always fill the space given\n      // Scale up size for icon to look correct\n      font-size: 2.25rem;\n      width: 2.25rem;\n      height: 2.25rem;\n    }\n  }\n\n  .hubmap .logo {\n    width: 4.5rem;\n    height: 1.5rem;\n    margin-right: 1rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      chevron_left    BACK            CCF REGISTRATION USER INTERFACE'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoButtonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { InfoButtonModule } from '../../modules/info/info-button/info-button.module';\nimport { HeaderComponent } from './header.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule, MatTooltipModule, InfoButtonModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition-1.html":{"url":"interfaces/IconDefinition-1.html","title":"interface - IconDefinition-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getArguments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:120\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown[]\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMethodName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:106\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerIcon\n                        \n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:72\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerIconImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:82\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState-1.html":{"url":"injectables/IconRegistryState-1.html","title":"injectable - IconRegistryState-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getArguments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:120\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown[]\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMethodName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:106\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerIcon\n                        \n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:72\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerIconImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:82\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdObject.html":{"url":"interfaces/IdObject.html","title":"interface - IdObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IdObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@id' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@id' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageViewer.html":{"url":"classes/ImageViewer.html","title":"class - ImageViewer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageViewer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channelConfigs\n                            \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _loaders\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                deck\n                            \n                            \n                                    Protected\n                                layerConfigs\n                            \n                            \n                                    Protected\n                                layers\n                            \n                            \n                                    Readonly\n                                props\n                            \n                            \n                                    Protected\n                                states\n                            \n                            \n                                    Protected\n                                views\n                            \n                            \n                                    Protected\n                                vivViews\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createVivViews\n                            \n                            \n                                finalize\n                            \n                            \n                                    Private\n                                initializeDeck\n                            \n                            \n                                    Private\n                                layerFilter\n                            \n                            \n                                    Private\n                                onViewStateChange\n                            \n                            \n                                    Private\n                                resetChannelConfigs\n                            \n                            \n                                    Async\n                                setSize\n                            \n                            \n                                    Async\n                                setSources\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Async\n                                updateChannelConfigs\n                            \n                            \n                                    Protected\n                                updateDeckProps\n                            \n                            \n                                    Protected\n                                updateLayers\n                            \n                            \n                                    Protected\n                                updateState\n                            \n                            \n                                    Protected\n                                updateViews\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    sources\n                                \n                                \n                                    loaders\n                                \n                                \n                                    channelNames\n                                \n                                \n                                    channelConfigs\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Props)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:86\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    Props\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _channelConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Loader[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayerConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Layer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            props\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            vivViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VivView[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:80\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalize\n                        \n                        \n                    \n                \n            \n            \n                \nfinalize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeDeck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDeck(props)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Deck\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            layerFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerFilter(undefined: LayerFilterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LayerFilterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewStateChange(undefined: OnViewStateChangeArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OnViewStateChangeArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChannelConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize(width: number, height: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSources(sources: DataSource[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            DataSource[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChannelConfigs(configs: Record>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Record>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateDeckProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDeckProps(props: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(args: ValueOrGenerator | >)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ValueOrGenerator | >\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n\n                \n                    \n                        getsources()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loaders\n                    \n                \n\n                \n                    \n                        getloaders()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        channelNames\n                    \n                \n\n                \n                    \n                        getchannelNames()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        channelConfigs\n                    \n                \n\n                \n                    \n                        getchannelConfigs()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:77\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hms-dbmi/viv';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerAccordionComponent.html":{"url":"components/ImageViewerAccordionComponent.html","title":"component - ImageViewerAccordionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerAccordionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts\n\n\n    \n        Description\n    \n    \n        Expandable accordion panel for the image viewer\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-accordion\n            \n\n            \n                styleUrls\n                ./image-viewer-accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layers\n                            \n                            \n                                metadata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:30\n                            \n                        \n                \n                    \n                        Whether content is waiting to be loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:25\n                            \n                        \n                \n                    \n                        The list of layers used to render this and child components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metadata\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:20\n                            \n                        \n                \n                    \n                        Metadata of image to be displayed in the About panel\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:35\n                            \n                        \n                \n                    \n                        Output to pass up the changes made to the layers to parent components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:38\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.  \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme } from '../../color-scheme/color-schemes';\n\n\n/**\n * Expandable accordion panel for the image viewer\n */\n@Component({\n  selector: 'ccf-image-viewer-accordion',\n  templateUrl: './image-viewer-accordion.component.html',\n  styleUrls: ['./image-viewer-accordion.component.scss']\n})\nexport class ImageViewerAccordionComponent {\n\n  /**\n   * Metadata of image to be displayed in the About panel\n   */\n  @Input() metadata: { label: string; value: string; }[];\n\n  /**\n   * The list of layers used to render this and child components\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Whether content is waiting to be loaded.\n   */\n  @Input() isLoading: boolean;\n\n  /**\n   * Output to pass up the changes made to the layers to parent components\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /** Emits when the default scheme has changed.  */\n  @Output() schemeChange = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n      Layers\n    \n    \n  \n\n  \n    \n      About\n    \n    \n      \n        {{ entry.label }}:\n        {{ entry.value }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-accordion.component.scss\n                \n                .mat-expansion-panel {\n  margin-left: 1.5rem;\n  margin-right: 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  border-radius: 0 !important;\n  position: unset;\n\n  .mat-expansion-panel-header {\n    padding: 0;\n\n    mat-panel-title {\n      font-weight: bold;\n    }\n\n    ::ng-deep .mat-expansion-indicator {\n      position: relative;\n      right: 1em;\n    }\n  }\n\n  .data-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    font-size: 0.75rem;\n\n    .data-entry {\n      display: flex;\n      text-overflow: ellipsis;\n      justify-content: center;\n      margin-bottom: .25rem;\n\n      .label,\n      .value {\n        display: flex;\n        height: 1rem;\n        line-height: 1rem;\n      }\n\n      .label {\n        justify-content: flex-end;\n        width: 50%;\n      }\n\n      .value {\n        justify-content: flex-start;\n        margin-left: 1rem;\n        width: 50%;\n        flex-wrap: wrap;\n        height: 100%;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Layers                      About                      {{ entry.label }}:        {{ entry.value }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerAccordionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerAccordionModule.html":{"url":"modules/ImageViewerAccordionModule.html","title":"module - ImageViewerAccordionModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerAccordionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerAccordionModule\n\n\n\ncluster_ImageViewerAccordionModule_declarations\n\n\n\ncluster_ImageViewerAccordionModule_imports\n\n\n\ncluster_ImageViewerAccordionModule_exports\n\n\n\n\nImageViewerAccordionComponent\n\nImageViewerAccordionComponent\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule -->\n\nImageViewerAccordionComponent->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent  -->\n\nImageViewerAccordionModule->ImageViewerAccordionComponent \n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerAccordionModule -->\n\nImageViewerLayersModule->ImageViewerAccordionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerAccordionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImageViewerLayersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerAccordionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\nimport { ImageViewerAccordionComponent } from './image-viewer-accordion.component';\nimport { ImageViewerLayersModule } from '../image-viewer-layers/image-viewer-layers.module';\n\n\n@NgModule({\n  imports: [CommonModule, MatExpansionModule, ImageViewerLayersModule],\n  declarations: [ImageViewerAccordionComponent],\n  exports: [ImageViewerAccordionComponent]\n})\nexport class ImageViewerAccordionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerContentComponent.html":{"url":"components/ImageViewerContentComponent.html","title":"component - ImageViewerContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts\n\n\n    \n        Description\n    \n    \n        Content for the image viewer sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-content\n            \n\n            \n                styleUrls\n                ./image-viewer-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                isLoading\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeViewer\n                            \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ImageViewerData\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:21\n                            \n                        \n                \n                    \n                        Image data to be displayed in the sidebar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:31\n                            \n                        \n                \n                    \n                        Whether content is waiting to be loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:26\n                            \n                        \n                \n                    \n                        The list of layers used to render this and child components\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeViewer\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:36\n                            \n                        \n                \n                    \n                        Emits closeViewer on close button click\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:41\n                            \n                        \n                \n                    \n                        Output to pass up the changes made to the layers to parent components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:44\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.  \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:49\n                \n            \n\n\n            \n                \n                    Hides the viewer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ImageViewerData } from 'ccf-database';\n\nimport { ColorScheme } from '../../../core/models/color-scheme';\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\n/**\n * Content for the image viewer sidebar\n */\n@Component({\n  selector: 'ccf-image-viewer-content',\n  templateUrl: './image-viewer-content.component.html',\n  styleUrls: ['./image-viewer-content.component.scss']\n})\nexport class ImageViewerContentComponent {\n\n  /**\n   * Image data to be displayed in the sidebar\n   */\n  @Input() data: ImageViewerData;\n\n  /**\n   * The list of layers used to render this and child components\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Whether content is waiting to be loaded.\n   */\n  @Input() isLoading: boolean;\n\n  /**\n   * Emits closeViewer on close button click\n   */\n  @Output() closeViewer = new EventEmitter();\n\n  /**\n   * Output to pass up the changes made to the layers to parent components\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /** Emits when the default scheme has changed.  */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Hides the viewer\n   */\n  close(): void {\n    this.closeViewer.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n  \n  \n    {{ data.organName }}\n    {{ data.label }}\n  \n  \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-content.component.scss\n                \n                .viewer-sidebar {\n  .viewer-close-header {\n    display: flex;\n    justify-content: flex-end;\n    height: 3rem;\n    padding-right: 1.5rem;\n    padding-left: 1.5rem;\n    \n    .viewer-close-button {\n      border: none;\n      padding: 0;\n      background: inherit;\n      cursor: pointer;\n    }\n  }\n}\n  \n.sample-info {\n  padding-right: 1.5rem;\n  padding-left: 1.5rem;\n  padding-top: 1.5rem;\n  padding-bottom: 1rem;\n  \n  .sample-region {\n    font-weight: bold;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close            {{ data.organName }}    {{ data.label }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerContentModule.html":{"url":"modules/ImageViewerContentModule.html","title":"module - ImageViewerContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerContentModule\n\n\n\ncluster_ImageViewerContentModule_declarations\n\n\n\ncluster_ImageViewerContentModule_imports\n\n\n\ncluster_ImageViewerContentModule_exports\n\n\n\n\nImageViewerContentComponent\n\nImageViewerContentComponent\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerContentModule -->\n\nImageViewerContentComponent->ImageViewerContentModule\n\n\n\n\n\nImageViewerContentComponent \n\nImageViewerContentComponent \n\nImageViewerContentComponent  -->\n\nImageViewerContentModule->ImageViewerContentComponent \n\n\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerContentModule -->\n\nImageViewerAccordionModule->ImageViewerContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImageViewerAccordionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ImageViewerAccordionModule } from '../image-viewer-accordion/image-viewer-accordion.module';\nimport { ImageViewerContentComponent } from './image-viewer-content.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, ImageViewerAccordionModule],\n  declarations: [ImageViewerContentComponent],\n  exports: [ImageViewerContentComponent]\n})\nexport class ImageViewerContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageViewerData.html":{"url":"interfaces/ImageViewerData.html","title":"interface - ImageViewerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageViewerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Data for image viewer display. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        metadata\n                                \n                                \n                                        organName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Other metadata. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Containing organ name. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageViewerLayer.html":{"url":"classes/ImageViewerLayer.html","title":"class - ImageViewerLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageViewerLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/image-viewer-layer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PureImageViewerLayer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightness\n                            \n                            \n                                color\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customizedColor\n                            \n                            \n                                defaultOrder\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                selected\n                            \n                            \n                                selectionOrder\n                            \n                            \n                                transparency\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrightness\n                            \n                            \n                                isDark\n                            \n                            \n                                isLight\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    background\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ImageViewerLayerArgs)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ImageViewerLayerArgs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brightness\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [number, number]\n\n                        \n                    \n                    \n                        \n                            Default value : [20, 60]\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customizedColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectionOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transparency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrightness\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrightness()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:70\n                \n            \n\n\n            \n                \n                    Converts the layer's hex color code to RGB and calculates a value for the color brightness\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDark\n                        \n                        \n                    \n                \n            \n            \n                \nisDark()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:102\n                \n            \n\n\n            \n                \n                    Determines whether the color icon is dark enough to require a border (dark mode only)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLight\n                        \n                        \n                    \n                \n            \n            \n                \nisLight()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:95\n                \n            \n\n\n            \n                \n                    Determines whether the color icon is light enough to require a border (light mode only)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:47\n                                \n                            \n                    \n                        \n                                Dynamically creates a background style based on the layer's color or color scheme\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ColorScheme } from './color-scheme';\n\nexport interface PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number];\n  transparency: number;\n\n  selected: boolean;\n  customizedColor: boolean;\n  selectionOrder: number;\n  defaultOrder: number;\n}\n\nexport type ImageViewerLayerRequiredArgNames = 'id' | 'colorScheme';\nexport type ImageViewerLayerArgs =\n  Pick &\n  Partial>;\n\nexport class ImageViewerLayer implements PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number] = [20, 60];\n  transparency = 100;\n\n  selected = false;\n  customizedColor = false;\n  selectionOrder = 0;\n  defaultOrder = -1;\n\n  constructor(data: ImageViewerLayerArgs) {\n    Object.assign(this, {\n      label: data.id,\n      color: data.colorScheme.colors[0]\n    }, data);\n  }\n\n  /**\n   * Dynamically creates a background style based on the layer's color or color scheme\n   */\n  get background(): string {\n    if (this.colorScheme.type === 'discrete') {\n      return this.color;\n    }\n\n    const colors = this.colorScheme.colors;\n    const positions = this.colorScheme.positions;\n\n    let gradient = 'linear-gradient(to right, ';\n    colors.forEach((color, index) => {\n      gradient += `${color} ${positions[index] * 100}%`;\n      if (index  225 ? true : false;\n  }\n\n  /**\n   * Determines whether the color icon is dark enough to require a border (dark mode only)\n   */\n  isDark(): boolean {\n    return this.getBrightness() \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerLayersComponent.html":{"url":"components/ImageViewerLayersComponent.html","title":"component - ImageViewerLayersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerLayersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts\n\n\n    \n        Description\n    \n    \n        Component in charge of rendering list of the image layers along with the ability\nto choose which ones are to be showm and what display properties they have.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-layers\n            \n\n            \n                styleUrls\n                ./image-viewer-layers.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-layers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxOnChange\n                            \n                            \n                                layerChanged\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:26\n                            \n                        \n                \n                    \n                        Whether content is waiting to be loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:21\n                            \n                        \n                \n                    \n                        The list of layers to be displayed which contain the styilng properties needed\nto make rendering decisions.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:31\n                            \n                        \n                \n                    \n                        A sorted list of selected layers containing information such as selectionOrder and colorScheme.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:36\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkboxOnChange\n                        \n                        \n                    \n                \n            \n            \n                \ncheckboxOnChange(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:54\n                \n            \n\n\n            \n                \n                    Function in charge of handling the layers' checkbox change events.  It keeps track of layers' selected\nand selectionOrder properties as well as emitting the updated layer list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the layer that needs updating based on the event passed with it.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            layerChanged\n                        \n                        \n                    \n                \n            \n            \n                \nlayerChanged(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:67\n                \n            \n\n\n            \n                \n                    This method captures changes to a layer's color options and updates the layers list accordingly\nbefore emitting the new set of active layers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the updated layer object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackById\n                        \n                        \n                    \n                \n            \n            \n                \ntrackById(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:44\n                \n            \n\n\n            \n                \n                    Used by ngFor to track changes across ImageViewerLayer instances.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The layer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The layer's unique id.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme } from '../../color-scheme/color-schemes';\n\n\n/**\n * Component in charge of rendering list of the image layers along with the ability\n * to choose which ones are to be showm and what display properties they have.\n */\n@Component({\n  selector: 'ccf-image-viewer-layers',\n  templateUrl: './image-viewer-layers.component.html',\n  styleUrls: ['./image-viewer-layers.component.scss']\n})\nexport class ImageViewerLayersComponent {\n  /**\n   * The list of layers to be displayed which contain the styilng properties needed\n   * to make rendering decisions.\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Whether content is waiting to be loaded.\n   */\n  @Input() isLoading: boolean;\n\n  /**\n   * A sorted list of selected layers containing information such as selectionOrder and colorScheme.\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /**\n   * Emits when the default scheme has changed.\n   */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Used by ngFor to track changes across ImageViewerLayer instances.\n   *\n   * @param layer The layer.\n   * @returns The layer's unique id.\n   */\n  trackById(layer: ImageViewerLayer): string {\n    return layer.id;\n  }\n\n  /**\n   * Function in charge of handling the layers' checkbox change events.  It keeps track of layers' selected\n   * and selectionOrder properties as well as emitting the updated layer list.\n   * @param event contains whether or not the layer was selected or unselected.\n   * @param layer is the layer that needs updating based on the event passed with it.\n   */\n  checkboxOnChange(layer: ImageViewerLayer): void {\n    this.layerChange.emit(new ImageViewerLayer({\n      ...layer,\n      selected: !layer.selected\n    }));\n  }\n\n  /**\n   * This method captures changes to a layer's color options and updates the layers list accordingly\n   * before emitting the new set of active layers.\n   * @param layer the updated layer object.\n   * @param referenceLayer the layer object before the changes, used for referencing which layer in the list to update.\n   */\n  layerChanged(layer: ImageViewerLayer): void {\n    this.layerChange.emit(layer);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n\n    \n      \n        \n          {{ layer.label }}\n        \n        \n        \n      \n    \n  \n  \n    \n      RGB Images are not customizable.\n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-layers.component.scss\n                \n                :host {\n  .layer {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 1.5rem;\n  }\n\n  .hidden {\n    visibility: hidden !important;\n  }\n\n  .color-selector-placeholder {\n    height: 1rem;\n    width: 1rem;\n    border-radius: 100%;\n  }\n\n  .no-layers-text {\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ layer.label }}                                                RGB Images are not customizable.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerLayersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerLayersModule.html":{"url":"modules/ImageViewerLayersModule.html","title":"module - ImageViewerLayersModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerLayersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerLayersModule\n\n\n\ncluster_ImageViewerLayersModule_declarations\n\n\n\ncluster_ImageViewerLayersModule_imports\n\n\n\ncluster_ImageViewerLayersModule_exports\n\n\n\n\nImageViewerLayersComponent\n\nImageViewerLayersComponent\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerLayersModule -->\n\nImageViewerLayersComponent->ImageViewerLayersModule\n\n\n\n\n\nImageViewerLayersComponent \n\nImageViewerLayersComponent \n\nImageViewerLayersComponent  -->\n\nImageViewerLayersModule->ImageViewerLayersComponent \n\n\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nImageViewerLayersModule -->\n\nColorPickerLauncherModule->ImageViewerLayersModule\n\n\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nImageViewerLayersModule -->\n\nSchemeDropdownModule->ImageViewerLayersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerLayersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorPickerLauncherModule\n                        \n                        \n                            SchemeDropdownModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerLayersComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ImageViewerLayersComponent } from './image-viewer-layers.component';\nimport { SchemeDropdownModule } from '../../scheme-dropdown/scheme-dropdown.module';\nimport { ColorPickerLauncherModule } from '../../color-scheme/color-picker-launcher/color-picker-launcher.module';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule, ColorPickerLauncherModule, SchemeDropdownModule],\n  declarations: [ImageViewerLayersComponent],\n  exports: [ImageViewerLayersComponent]\n})\nexport class ImageViewerLayersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerLegendComponent.html":{"url":"components/ImageViewerLegendComponent.html","title":"component - ImageViewerLegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerLegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts\n\n\n    \n        Description\n    \n    \n        Legend in the image viewer displaying the selected layers and their colors\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-legend\n            \n\n            \n                styleUrls\n                ./image-viewer-legend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _layers\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layers\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:18\n                            \n                        \n                \n                    \n                        The list of layers used to render this components\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ImageViewerLayer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n\n                \n                    \n                        getlayers()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:21\n                                \n                            \n\n                \n                    \n                        setlayers(layers: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:18\n                                \n                            \n                    \n                        \n                                The list of layers used to render this components\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layers\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n/**\n * Legend in the image viewer displaying the selected layers and their colors\n */\n@Component({\n  selector: 'ccf-image-viewer-legend',\n  templateUrl: './image-viewer-legend.component.html',\n  styleUrls: ['./image-viewer-legend.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageViewerLegendComponent {\n  /**\n   * The list of layers used to render this components\n   */\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set layers(layers: ImageViewerLayer[]) {\n    this._layers = [...layers].sort((v1, v2) => v1.selectionOrder - v2.selectionOrder);\n  }\n  get layers(): ImageViewerLayer[] { return this._layers; }\n  private _layers: ImageViewerLayer[];\n}\n\n    \n\n    \n        \n  \n    \n    {{ layer.label }}\n  \n\n\n    \n\n    \n                \n                    ./image-viewer-legend.component.scss\n                \n                .legend {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  height: 3rem;\n\n  .legend-item {\n    margin-right: 1rem;\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .item-color {\n      margin-right: 1rem;\n      height: 1rem;\n      width: 1rem;\n    }\n\n    .item-title {\n      font-size: 14px;\n      display: flex;\n      align-items: center;\n    }\n  }\n}\n\n.circle {\n  border-radius: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ layer.label }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerLegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerLegendModule.html":{"url":"modules/ImageViewerLegendModule.html","title":"module - ImageViewerLegendModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerLegendModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerLegendModule\n\n\n\ncluster_ImageViewerLegendModule_declarations\n\n\n\ncluster_ImageViewerLegendModule_exports\n\n\n\n\nImageViewerLegendComponent\n\nImageViewerLegendComponent\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerLegendModule -->\n\nImageViewerLegendComponent->ImageViewerLegendModule\n\n\n\n\n\nImageViewerLegendComponent \n\nImageViewerLegendComponent \n\nImageViewerLegendComponent  -->\n\nImageViewerLegendModule->ImageViewerLegendComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerLegendComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerLegendComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageViewerLegendComponent } from './image-viewer-legend.component';\n\n\n\n@NgModule({\n  declarations: [ImageViewerLegendComponent],\n  imports: [CommonModule],\n  exports: [ImageViewerLegendComponent]\n})\nexport class ImageViewerLegendModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerModule.html":{"url":"modules/ImageViewerModule.html","title":"module - ImageViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerModule\n\n\n\ncluster_ImageViewerModule_imports\n\n\n\ncluster_ImageViewerModule_exports\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nImageViewerModule -->\n\nImageViewerContentModule->ImageViewerModule\n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerModule -->\n\nImageViewerLayersModule->ImageViewerModule\n\n\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerModule -->\n\nImageViewerPopoverModule->ImageViewerModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerModule -->\n\nViewerModule->ImageViewerModule\n\n\n\n\n\nImageViewerContentModule \n\nImageViewerContentModule \n\nImageViewerContentModule  -->\n\nImageViewerModule->ImageViewerContentModule \n\n\n\n\n\nImageViewerLayersModule \n\nImageViewerLayersModule \n\nImageViewerLayersModule  -->\n\nImageViewerModule->ImageViewerLayersModule \n\n\n\n\n\nImageViewerPopoverModule \n\nImageViewerPopoverModule \n\nImageViewerPopoverModule  -->\n\nImageViewerModule->ImageViewerPopoverModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLayersModule\n                        \n                        \n                            ImageViewerPopoverModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLayersModule\n                        \n                        \n                            ImageViewerPopoverModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { ImageViewerContentModule } from './image-viewer-content/image-viewer-content.module';\nimport { ImageViewerLayersModule } from './image-viewer-layers/image-viewer-layers.module';\nimport { ImageViewerPopoverModule } from './image-viewer-popover/image-viewer-popover.module';\nimport { ViewerModule } from './viewer/viewer.module';\n\n\n@NgModule({\n  imports: [ImageViewerPopoverModule, ImageViewerContentModule, ViewerModule, ImageViewerLayersModule],\n  providers: [],\n  declarations: [],\n  exports: [ImageViewerPopoverModule, ImageViewerContentModule, ImageViewerLayersModule]\n})\nexport class ImageViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerPopoverComponent.html":{"url":"components/ImageViewerPopoverComponent.html","title":"component - ImageViewerPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts\n\n\n    \n        Description\n    \n    \n        Popup that displays detailed information on a selected image along with viewing options\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-popover\n            \n\n            \n                styleUrls\n                ./image-viewer-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                isLoading\n                            \n                            \n                                result\n                            \n                            \n                                sourceUrls\n                            \n                            \n                                viewerVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                onChannelsChange\n                            \n                            \n                                open\n                            \n                            \n                                    Private\n                                setSourceUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: ViewerState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:57\n                            \n                        \n\n                \n                    \n                            Initializes the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        ViewerState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The image viewer state.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to this components change detector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:70\n                \n            \n\n\n            \n                \n                    Returns viewer to closed state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChannelsChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChannelsChange(channels: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channels\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(data: ImageViewerData, result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:79\n                \n            \n\n\n            \n                \n                    Changes viewer to opened state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ImageViewerData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data of the image to be passed into the viewer\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSourceUrls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSourceUrls(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:99\n                \n            \n\n\n            \n                \n                    Sets the source urls from the currently active data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EMPTY_DATA\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:37\n                            \n                        \n\n                \n                    \n                        Data of the image to be passed into the viewer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:52\n                            \n                        \n\n                \n                    \n                        Whether data is currently loading.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EMPTY_RESULT\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:42\n                            \n                        \n\n                \n                    \n                        Currently active result.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceUrls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:47\n                            \n                        \n\n                \n                    \n                        Urls to load image data from.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewerVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:57\n                            \n                        \n\n                \n                    \n                        Whether or not the image viewer is visible\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ImageViewerData, ListResult } from 'ccf-database';\n\nimport { ViewerState } from '../../../core/store/viewer/viewer.state';\n\n\nconst EMPTY_DATA: ImageViewerData = {\n  '@id': '',\n  '@type': 'ImageViewerData',\n  id: '',\n  label: '',\n  organName: '',\n  metadata: []\n};\n\nconst EMPTY_RESULT: ListResult = {\n  '@id': '',\n  '@type': 'ListResult',\n  id: '',\n  label: ''\n};\n\n\n/**\n * Popup that displays detailed information on a selected image along with viewing options\n */\n@Component({\n  selector: 'ccf-image-viewer-popover',\n  templateUrl: './image-viewer-popover.component.html',\n  styleUrls: ['./image-viewer-popover.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageViewerPopoverComponent {\n  /**\n   * Data of the image to be passed into the viewer\n   */\n  data = EMPTY_DATA;\n\n  /**\n   * Currently active result.\n   */\n  result = EMPTY_RESULT;\n\n  /**\n   * Urls to load image data from.\n   */\n  sourceUrls: string[] = [];\n\n  /**\n   * Whether data is currently loading.\n   */\n  isLoading = true;\n\n  /**\n   * Whether or not the image viewer is visible\n   */\n  viewerVisible = false;\n\n  /**\n   * Initializes the component.\n   *\n   * @param state The image viewer state.\n   * @param cdr Reference to this components change detector.\n   */\n  constructor(readonly state: ViewerState, private readonly cdr: ChangeDetectorRef) { }\n\n  /**\n   * Returns viewer to closed state\n   */\n  close(): void {\n    this.viewerVisible = false;\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Changes viewer to opened state\n   * @param data Data of the image to be passed into the viewer\n   */\n  open(data: ImageViewerData, result: ListResult): void {\n    this.viewerVisible = true;\n    this.data = data;\n    this.result = result;\n    this.isLoading = true;\n    this.setSourceUrls(result);\n    this.cdr.markForCheck();\n  }\n\n  onChannelsChange(channels: string[]): void {\n    this.isLoading = false;\n    this.state.createLayers(channels);\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Sets the source urls from the currently active data.\n   *\n   * @param result The active data.\n   */\n  private setSourceUrls(result: ListResult): void {\n    const { resultType, resultUrl } = result;\n    if (resultType !== 'image_viewer' || resultUrl === undefined) {\n      this.sourceUrls = [];\n    } else {\n      this.sourceUrls = [resultUrl];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n    \n  \n  \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-popover.component.scss\n                \n                .image-viewer-container {\n  position: fixed;\n  top: 4rem;\n  overflow: hidden;\n  z-index: 10;\n  flex-grow: 1;\n  height: calc(100% - 1.5rem);\n  width: 100%;\n  left: 100%;\n  transition-property: left;\n  transition-duration: .5s;\n  transition-timing-function: ease-in-out;\n\n  &.expanded {\n    left: 0%;\n  }\n\n  .image-viewer-window {\n    margin-top: 1.5rem;\n    height: calc(100% - 2rem);\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .viewer {\n      width: 100%;\n      height: calc(100% - 8rem);\n      margin-left: 1.5rem;\n    }\n\n    .legend {\n      width: 100%;\n      height: 3.5rem;\n      margin-top: 1.5rem;\n      margin-left: 1.5rem;\n    }\n  }\n\n  .image-viewer-drawer {\n    width: 25.5rem;\n    margin: 0 1.5rem;\n\n    .drawer-icons {\n      display: flex;\n\n      .button {\n        width: 3rem;\n        height: 3rem;\n        color: #9e9e9e;\n        background: none;\n        border: none;\n        cursor: pointer;\n        outline: none;\n\n        :hover {\n          color: #1e88e5;\n        }\n\n        mat-icon {\n          font-size: 2.2rem;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerPopoverModule.html":{"url":"modules/ImageViewerPopoverModule.html","title":"module - ImageViewerPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerPopoverModule\n\n\n\ncluster_ImageViewerPopoverModule_declarations\n\n\n\ncluster_ImageViewerPopoverModule_imports\n\n\n\ncluster_ImageViewerPopoverModule_exports\n\n\n\n\nImageViewerPopoverComponent\n\nImageViewerPopoverComponent\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule -->\n\nImageViewerPopoverComponent->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent  -->\n\nImageViewerPopoverModule->ImageViewerPopoverComponent \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nImageViewerPopoverModule -->\n\nDrawerModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerPopoverModule -->\n\nImageViewerContentModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerPopoverModule -->\n\nImageViewerLegendModule->ImageViewerPopoverModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerPopoverModule -->\n\nViewerModule->ImageViewerPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DrawerModule\n                        \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLegendModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DrawerModule } from '../../../shared/components/drawer/drawer.module';\nimport { ImageViewerContentModule } from '../image-viewer-content/image-viewer-content.module';\nimport { ImageViewerLegendModule } from '../image-viewer-legend/image-viewer-legend.module';\nimport { ViewerModule } from '../viewer/viewer.module';\nimport { ImageViewerPopoverComponent } from './image-viewer-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, ImageViewerContentModule, DrawerModule, ViewerModule, ImageViewerLegendModule],\n  declarations: [ImageViewerPopoverComponent],\n  exports: [ImageViewerPopoverComponent]\n})\nexport class ImageViewerPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageViewerProps.html":{"url":"interfaces/ImageViewerProps.html","title":"interface - ImageViewerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageViewerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canvas\n                                \n                                \n                                            Optional\n                                        channelNames\n                                \n                                \n                                            Optional\n                                        defaultChannelConfig\n                                \n                                \n                                            Optional\n                                        height\n                                \n                                \n                                        id\n                                \n                                \n                                        initialViewState\n                                \n                                \n                                            Optional\n                                        sources\n                                \n                                \n                                            Optional\n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLCanvasElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelNames\n                                    \n                                \n                                \n                                    \n                                        channelNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultChannelConfig\n                                    \n                                \n                                \n                                    \n                                        defaultChannelConfig:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialViewState\n                                    \n                                \n                                \n                                    \n                                        initialViewState:         State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sources\n                                    \n                                \n                                \n                                    \n                                        sources:     DataSource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DataSource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hms-dbmi/viv';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/info/info-button/info-button.component.ts\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/info/info-button/info-button.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            launchInfoDialog\n                        \n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/info/info-button/info-button.component.ts:26\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent {\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(): void {\n    this.dialog.open(InfoDialogComponent, {\n      width: '60em',\n      data: {}\n    });\n  }\n}\n\n    \n\n    \n        \n  info_outline\n\n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info {\n  cursor: pointer;\n  transition: color 1s;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  info_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent-1.html":{"url":"components/InfoButtonComponent-1.html","title":"component - InfoButtonComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/info/info-button/info-button.component.ts\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/info/info-button/info-button.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            launchInfoDialog\n                        \n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/info/info-button/info-button.component.ts:26\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent {\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(): void {\n    this.dialog.open(InfoDialogComponent, {\n      width: '60em',\n      backdropClass: 'modal-backdrop-dark',\n      data: {}\n    });\n  }\n}\n\n    \n\n    \n        \n  info_outline\n\n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .ccf-info-button {\n  cursor: pointer;\n  transition: color 1s;\n  font-size: 2rem;\n  vertical-align: sub;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  info_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/info/info-button/info-button.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: unknown)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:27\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                        Data being injected into the dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                        A reference to the dialog that this component creates, used to call the dialog's methods\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent {\n  /**\n   * Creates an instance of info dialog component.\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown\n  ) { }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      HuBMAP\n      The Human Biomolecular Atlas Project\n\n      \n        \n          The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis\n          technologies, computational tools, and generate foundational tissue maps in order to accelerate the\n          construction of an atlas of the human body at single-cell resolution for understanding the relationship\n          between tissue organization and function.\n          \n          https://hubmapconsortium.org\n        \n\n        Common Coordinate Framework (CCF)\n        \n          The HuBMAP common coordinate framework (CCF) is under active development. It aims to semantically annotate and\n          spatially index HuBMAP data for efficient spatial and semantic search, browsing, and filtering. The CCF v1.0.0\n          became available in June 2020. The CCF Ontology is available as an OWL file,\n          on GitHub, and\n          on BioPortal. For\n          documentation, see CCF Portal and preprint of CCF\n          Ontology publication on arxiv.\n        \n\n        CCF Exploration User Interface (EUI)\n        \n          The CCF Exploration User Interface (EUI) represents data across multiple scales, supporting navigation by\n          multiple coordinate systems, including spatial, physiologic, and organ-based browsing. The first\n          proof-of-concept user interface for the CCF v1.0.0 became available in June 2020. The EUI continues to evolve\n          as more data becomes available. The CCF EUI code is available\n          on GitHub.\n          A demo video is on YouTube.\n        \n\n        Acknowledgements\n        \n          The CCF work is under active development by the Indiana University Mapping Component as part of the HuBMAP\n          HIVE effort with expert input by the HuBMAP team. Data was provided by the HuBMAP Tissue Mapping Centers. This\n          research is funded by the NIH Common Fund through the Office of Strategic Coordination/Office of the NIH\n          Director under award OT2OD026671, by the NIDDK Kidney Precision Medicine Project grant U2CDK114886, and the\n          NIH National Institute of Allergy and Infectious Diseases (NIAID), Department of Health and Human Services\n          under BCBB Support Services Contract HHSN316201300006W/HHSN27200002.\n        \n      \n\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.ccf-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n      background-color: white;\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .heading {\n      margin-bottom: 0;\n      font-size: 0.875rem;\n      font-weight: bold;\n    }\n\n    .close {\n      .close-icon {\n        float: right;\n        margin-top: 1rem;\n        margin-right: 1rem;\n        cursor: pointer;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin-bottom: 0;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .footer {\n      padding-top: 1.5rem;\n      .nih-logo {\n        height: 2.25rem;\n        display: block;\n        margin: auto;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              HuBMAP      The Human Biomolecular Atlas Project                        The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis          technologies, computational tools, and generate foundational tissue maps in order to accelerate the          construction of an atlas of the human body at single-cell resolution for understanding the relationship          between tissue organization and function.                    https://hubmapconsortium.org                Common Coordinate Framework (CCF)                  The HuBMAP common coordinate framework (CCF) is under active development. It aims to semantically annotate and          spatially index HuBMAP data for efficient spatial and semantic search, browsing, and filtering. The CCF v1.0.0          became available in June 2020. The CCF Ontology is available as an OWL file,          on GitHub, and          on BioPortal. For          documentation, see CCF Portal and preprint of CCF          Ontology publication on arxiv.                CCF Exploration User Interface (EUI)                  The CCF Exploration User Interface (EUI) represents data across multiple scales, supporting navigation by          multiple coordinate systems, including spatial, physiologic, and organ-based browsing. The first          proof-of-concept user interface for the CCF v1.0.0 became available in June 2020. The EUI continues to evolve          as more data becomes available. The CCF EUI code is available          on GitHub.          A demo video is on YouTube.                Acknowledgements                  The CCF work is under active development by the Indiana University Mapping Component as part of the HuBMAP          HIVE effort with expert input by the HuBMAP team. Data was provided by the HuBMAP Tissue Mapping Centers. This          research is funded by the NIH Common Fund through the Office of Strategic Coordination/Office of the NIH          Director under award OT2OD026671, by the NIDDK Kidney Precision Medicine Project grant U2CDK114886, and the          NIH National Institute of Allergy and Infectious Diseases (NIAID), Department of Health and Human Services          under BCBB Support Services Contract HHSN316201300006W/HHSN27200002.                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent-1.html":{"url":"components/InfoDialogComponent-1.html","title":"component - InfoDialogComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/info/info-dialog/info-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: unknown)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/info/info-dialog/info-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/info/info-dialog/info-dialog.component.ts:27\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/info/info-dialog/info-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                        Data being injected into the dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/info/info-dialog/info-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                        A reference to the dialog that this component creates, used to call the dialog's methods\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent {\n  /**\n   * Creates an instance of info dialog component.\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown\n  ) { }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      HuBMAP CCF Registration User Interface Prototype\n\n      \n        \n          This Registration User Interface (RUI) supports the registration of three-dimensional (3D) tissue blocks within 3D reference organs. Surgeons and\n          others involved in the tissue procurement process can use the interface to\n        \n        \n          \n            Enter their name and select a reference organ (kidney; soon heart, lung, spleen, colon).\n          \n          \n            Size the tissue block in three dimensions.\n          \n          \n            Position and rotate the 3D tissue block within a 3D reference organ so its placement correctly mirrors the tissue block extraction site.\n          \n          \n            Save all registration information into a clipboard for easy pasting into custom templates in REDCap (or other systems) used to keep track\n            of tissue and tissue registration data. If using the RUI integrated into the HuBMAP Ingestion Portal, registration information is automatically\n            saved with the associated tissue block.\n          \n        \n\n        \n          A first prototype of the CCF RUI became available in September 2019.  The CCF RUI specification is available\n          here\n          and code is available on GitHub.\n          A demo video is on YouTube here.\n        \n\n        \n          The registration data is used in current versions of the Common Coordinate Framework (CCF) and the CCF Exploration User Interface (EUI) developed within HuBMAP,\n          see CCF Portal at ttps://hubmapconsortium.github.io/ccf.\n        \n\n        \n\n        Acknowledgements\n        \n          The CCF and associated user interfaces are developed by the MC-IU team within the HuBMAP HIVE. The MC-IU team includes Katy Börner, Lisel Record, Bruce Herr II,\n          Leonard Cross, Ellen Quardokus, and Andreas Bueckle, Indiana University, Bloomington, IN and Griffin Weber, Harvard Medical School, Boston, MA. Former members of\n          the team are Paul Macklin, Randy Heiland, and Jim Sluka at Indiana University, Bloomington, IN and Samuel Friedman, Opto-Knowledge Systems, Inc. We acknowledge\n          expert input from Jeffrey Spraggins and Sanjay Jain and their teams as well as the overall HuBMAP consortium.\n        \n\n        \n          The three-dimensional kidney data models were kindly provided by Kristen Browne, U.S. National Library of Medicine using data from the\n          Visible Human Project.\n        \n\n        \n          The work is funded by NIH Award OT2OD026671.\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.rui-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .close {\n      .close-icon {\n        float: right;\n        margin-top: 1rem;\n        margin-right: 1rem;\n        cursor: pointer;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin-bottom: 2.25rem;\n      text-align: center;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              HuBMAP CCF Registration User Interface Prototype                        This Registration User Interface (RUI) supports the registration of three-dimensional (3D) tissue blocks within 3D reference organs. Surgeons and          others involved in the tissue procurement process can use the interface to                                      Enter their name and select a reference organ (kidney; soon heart, lung, spleen, colon).                                Size the tissue block in three dimensions.                                Position and rotate the 3D tissue block within a 3D reference organ so its placement correctly mirrors the tissue block extraction site.                                Save all registration information into a clipboard for easy pasting into custom templates in REDCap (or other systems) used to keep track            of tissue and tissue registration data. If using the RUI integrated into the HuBMAP Ingestion Portal, registration information is automatically            saved with the associated tissue block.                                    A first prototype of the CCF RUI became available in September 2019.  The CCF RUI specification is available          here          and code is available on GitHub.          A demo video is on YouTube here.                          The registration data is used in current versions of the Common Coordinate Framework (CCF) and the CCF Exploration User Interface (EUI) developed within HuBMAP,          see CCF Portal at ttps://hubmapconsortium.github.io/ccf.                        Acknowledgements                  The CCF and associated user interfaces are developed by the MC-IU team within the HuBMAP HIVE. The MC-IU team includes Katy Börner, Lisel Record, Bruce Herr II,          Leonard Cross, Ellen Quardokus, and Andreas Bueckle, Indiana University, Bloomington, IN and Griffin Weber, Harvard Medical School, Boston, MA. Former members of          the team are Paul Macklin, Randy Heiland, and Jim Sluka at Indiana University, Bloomington, IN and Samuel Friedman, Opto-Knowledge Systems, Inc. We acknowledge          expert input from Jeffrey Spraggins and Sanjay Jain and their teams as well as the overall HuBMAP consortium.                          The three-dimensional kidney data models were kindly provided by Kristen Browne, U.S. National Library of Medicine using data from the          Visible Human Project.                          The work is funded by NIH Award OT2OD026671.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deferred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Promise(resolve => this.resolve = resolve)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                            \n                        \n\n                \n                    \n                        Promise used to await on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:33\n                            \n                        \n\n                \n                    \n                        Whether this state is true or false. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                            \n                        \n\n                \n                    \n                        Resolve function for the promise. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:42\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueOf\n                        \n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:59\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:52\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => this.resolve = resolve);\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise { return this.deferred; }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean { return this.initialized; }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(`open, open-instant`, style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// tslint:disable-line: no-unsafe-any\n  get position(): 'start' | 'end' { return this._position; }\n  set position(value: 'start' | 'end') { this._position = value || 'start'; }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-opened') // tslint:disable-line: no-unsafe-any\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { this.toggle(coerceBooleanProperty(value)); }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-expanded') // tslint:disable-line: no-unsafe-any\n  get expanded(): boolean { return this._expanded; }\n  set expanded(value: boolean) { this.toggleExpanded(coerceBooleanProperty(value)); }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // tslint:disable-line: no-unsafe-any\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    }};\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) { return this._measuredWidth; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) { return 0; }\n\n    return this._measuredWidth = width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) { return this._measuredMargin; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    return this._measuredMargin = margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void { this.toggle(true); }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void { this.toggle(false); }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) { return; }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void { this.toggleExpanded(true); }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void { this.toggleExpanded(false); }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) { return; }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // tslint:disable-line: no-unsafe-any\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // tslint:disable-line: no-unsafe-any\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled':\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_position: '' | 'start' | 'end'; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_opened: BooleanInput; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_expanded: BooleanInput; // tslint:disable-line: variable-name member-ordering\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState-1.html":{"url":"classes/InitializationState-1.html","title":"class - InitializationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deferred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Promise(resolve => this.resolve = resolve)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                            \n                        \n\n                \n                    \n                        Promise used to await on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:33\n                            \n                        \n\n                \n                    \n                        Whether this state is true or false. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                            \n                        \n\n                \n                    \n                        Resolve function for the promise. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:42\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueOf\n                        \n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:59\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:52\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => this.resolve = resolve);\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise { return this.deferred; }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean { return this.initialized; }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(`open, open-instant`, style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// tslint:disable-line: no-unsafe-any\n  get position(): 'start' | 'end' { return this._position; }\n  set position(value: 'start' | 'end') { this._position = value || 'start'; }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-opened') // tslint:disable-line: no-unsafe-any\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { this.toggle(coerceBooleanProperty(value)); }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-expanded') // tslint:disable-line: no-unsafe-any\n  get expanded(): boolean { return this._expanded; }\n  set expanded(value: boolean) { this.toggleExpanded(coerceBooleanProperty(value)); }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // tslint:disable-line: no-unsafe-any\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    }};\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) { return this._measuredWidth; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) { return 0; }\n\n    return this._measuredWidth = width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) { return this._measuredMargin; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    return this._measuredMargin = margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void { this.toggle(true); }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void { this.toggle(false); }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) { return; }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void { this.toggleExpanded(true); }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void { this.toggleExpanded(false); }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) { return; }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // tslint:disable-line: no-unsafe-any\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // tslint:disable-line: no-unsafe-any\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled':\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_position: '' | 'start' | 'end'; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_opened: BooleanInput; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_expanded: BooleanInput; // tslint:disable-line: variable-name member-ordering\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JsonOntologyNode.html":{"url":"interfaces/JsonOntologyNode.html","title":"interface - JsonOntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JsonOntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Structure of a single json ontology node.\n\n            \n\n            \n                Extends\n            \n            \n                        IdObject\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                \n                                \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                    \n                                \n                                \n                                    \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym:         ValueObject[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValueObject[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Json synonyms property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                    \n                                \n                                \n                                    \n                                        http://www.w3.org/2000/01/rdf-schema#label:         [ValueObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [ValueObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json label property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         [IdObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [IdObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json parent property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabeledSlideToggleComponent.html":{"url":"components/LabeledSlideToggleComponent.html","title":"component - LabeledSlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LabeledSlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts\n\n\n    \n        Description\n    \n    \n        Generic toggle slider component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-labeled-slide-toggle\n            \n\n            \n                styleUrls\n                ./labeled-slide-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./labeled-slide-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                labels\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    left\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:32\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labels\n                    \n                \n                \n                    \n                        Type :     [string, string]\n\n                    \n                \n                \n                    \n                        Default value : ['Left', 'Right']\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:22\n                            \n                        \n                \n                    \n                        The two selection options to be toggled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Default value : 'Left'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:27\n                            \n                        \n                \n                    \n                        Input value for toggle slider\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:37\n                            \n                        \n                \n                    \n                        Emits the datatype with the currently selected option\n\n                    \n                \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-labeled-slide-toggle'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:17\n                            \n                        \n\n                \n                    \n                        HTML class name\n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateToggle\n                        \n                        \n                    \n                \n            \n            \n                \nupdateToggle(selection: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:51\n                \n            \n\n\n            \n                \n                    Updates and emits the currently selected option\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current toggle state (true=left, false=right)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        left\n                    \n                \n\n                \n                    \n                        getleft()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:42\n                                \n                            \n                    \n                        \n                                Determines if left toggle option is selected\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, HostBinding } from '@angular/core';\n\n\n/**\n * Generic toggle slider component\n */\n@Component({\n  selector: 'ccf-labeled-slide-toggle',\n  templateUrl: './labeled-slide-toggle.component.html',\n  styleUrls: ['./labeled-slide-toggle.component.scss']\n})\n\nexport class LabeledSlideToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-labeled-slide-toggle';\n\n  /**\n   * The two selection options to be toggled\n   */\n  @Input() labels: [string, string] = ['Left', 'Right'];\n\n  /**\n   * Input value for toggle slider\n   */\n  @Input() value = 'Left';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Emits the datatype with the currently selected option\n   */\n  @Output() valueChange = new EventEmitter();\n\n  /**\n   * Determines if left toggle option is selected\n   */\n  get left(): boolean {\n    const { value, labels } = this;\n    return value !== labels[1];\n  }\n\n  /**\n   * Updates and emits the currently selected option\n   * @param selection The current toggle state (true=left, false=right)\n   */\n  updateToggle(selection: boolean): void {\n    this.value = selection ? this.labels[0] : this.labels[1];\n    this.valueChange.emit(this.value);\n  }\n}\n\n    \n\n    \n        {{labels[0]}}\n\n{{labels[1]}}\n\n    \n\n    \n                \n                    ./labeled-slide-toggle.component.scss\n                \n                :host{\n  .slide-label {\n    margin: 0 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{labels[0]}}{{labels[1]}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabeledSlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabeledSlideToggleModule.html":{"url":"modules/LabeledSlideToggleModule.html","title":"module - LabeledSlideToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    LabeledSlideToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { LabeledSlideToggleComponent } from './labeled-slide-toggle.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule],\n  declarations: [LabeledSlideToggleComponent],\n  exports: [LabeledSlideToggleComponent]\n})\nexport class LabeledSlideToggleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-left-sidebar\n            \n\n            \n                styleUrls\n                ./left-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./left-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detailsLabels\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-left-sidebar'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:14\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detailsLabels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['heart', 'front', 'female']\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\nimport { PageState } from '../../core/store/page/page.state';\n\n\n@Component({\n  selector: 'ccf-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LeftSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-left-sidebar';\n\n  detailsLabels: string[] = ['heart', 'front', 'female'];\n\n  constructor(readonly page: PageState) {}\n}\n\n    \n\n    \n        \n  \n\n\n  \n  \n  \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./left-sidebar.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  hr {\n    width: 100%;\n    margin-top: 0.75rem;\n    margin-bottom: 1.5rem;\n    border-style: solid;\n    border-width: 1.5px;\n  }\n\n  :not(hr) {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n\n  *:first-child {\n    margin-top: 1.5rem;\n  }\n\n  .organ-sliders {\n    display: flex;\n    height: 3rem;\n    align-items: center;\n\n    .toggle {\n      margin-top: 0;\n      margin-left: 0;\n    }\n  }\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeftSidebarModule.html":{"url":"modules/LeftSidebarModule.html","title":"module - LeftSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    LeftSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nLeftSidebarModule -->\n\nDetailsLabelModule->LeftSidebarModule\n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLeftSidebarModule -->\n\nLabeledSlideToggleModule->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nLeftSidebarModule -->\n\nOrganSelectorModule->LeftSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DetailsLabelModule\n                        \n                        \n                            LabeledSlideToggleModule\n                        \n                        \n                            NameInputModule\n                        \n                        \n                            OrganSelectorModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { LeftSidebarComponent } from './left-sidebar.component';\nimport { NameInputModule } from '../../shared/components/name-input/name-input.module';\nimport { OrganSelectorModule } from '../../shared/components/organ-selector/organ-selector.module';\nimport { DetailsLabelModule } from '../../shared/components/details-label/details-label.module';\nimport { LabeledSlideToggleModule } from '../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\n\n\n@NgModule({\n  declarations: [LeftSidebarComponent],\n  imports: [CommonModule, NameInputModule, OrganSelectorModule, LabeledSlideToggleModule, DetailsLabelModule],\n  exports: [LeftSidebarComponent]\n})\nexport class LeftSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResult.html":{"url":"interfaces/ListResult.html","title":"interface - ListResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Result for list of tissues. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        downloadTooltip\n                                \n                                \n                                            Optional\n                                        downloadUrl\n                                \n                                \n                                            Optional\n                                        highlighted\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        resultType\n                                \n                                \n                                            Optional\n                                        resultUrl\n                                \n                                \n                                            Optional\n                                        shortInfo\n                                \n                                \n                                            Optional\n                                        thumbnailUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadTooltip\n                                    \n                                \n                                \n                                    \n                                        downloadTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of data download. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadUrl\n                                    \n                                \n                                \n                                    \n                                        downloadUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url for data download. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlighted\n                                    \n                                \n                                \n                                    \n                                        highlighted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the result should be highlighted \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultType\n                                    \n                                \n                                \n                                    \n                                        resultType:     \"external_link\" | \"local_link\" | \"image_viewer\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"external_link\" | \"local_link\" | \"image_viewer\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of result url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultUrl\n                                    \n                                \n                                \n                                    \n                                        resultUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Result url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortInfo\n                                    \n                                \n                                \n                                    \n                                        shortInfo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Short description. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnailUrl\n                                    \n                                \n                                \n                                    \n                                        thumbnailUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Small icon url. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        payload\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sender of the message. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message-1.html":{"url":"interfaces/Message-1.html","title":"interface - Message-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        payload\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sender of the message. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: unknown, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                    Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                    Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                        Counter used to give each message a unique id. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:81\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:91\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSources\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:101\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            nextMessageId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel-1.html":{"url":"classes/MessageChannel-1.html","title":"class - MessageChannel-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: unknown, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                    Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                    Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                        Counter used to give each message a unique id. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:81\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:91\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSources\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:101\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            nextMessageId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:161\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:151\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:126\n                            \n                        \n\n                \n                    \n                        The message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                        The message listener. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService-1.html":{"url":"injectables/MessageService-1.html","title":"injectable - MessageService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:161\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:151\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:126\n                            \n                        \n\n                \n                    \n                        The message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                        The message listener. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isolated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig-1.html":{"url":"interfaces/MessageServiceConfig-1.html","title":"interface - MessageServiceConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isolated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameInputComponent.html":{"url":"components/NameInputComponent.html","title":"component - NameInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n\n\n    \n        Description\n    \n    \n        Component for inputting the researcher's name\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-name-input\n            \n\n            \n                styleUrls\n                ./name-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         UserName\n\n                    \n                \n                \n                    \n                        Default value : {\n    firstName: '',\n    lastName: ''\n  }\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:36\n                            \n                        \n                \n                    \n                        Current user name\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nameChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:44\n                            \n                        \n                \n                    \n                        Emits a UserName object\n\n                    \n                \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-name-input'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:31\n                            \n                        \n\n                \n                    \n                        HTML class name\n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateName\n                        \n                        \n                    \n                \n            \n            \n                \nupdateName(input: InputEvent, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:51\n                \n            \n\n\n            \n                \n                    Updates username with a new entry and emits the UserName object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        InputEvent from the input element which contains the new value\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        firstName or lastName\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * User name data\n */\nexport interface UserName {\n\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss']\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Current user name\n   */\n  @Input() name: UserName = {\n    firstName: '',\n    lastName: ''\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n    \n        \n  First Name\n  \n\n\n\n  Last Name\n  \n\n\n    \n\n    \n                \n                    ./name-input.component.scss\n                \n                :host {\n  display: flex;\n\n  .field {\n    width: 50%;\n\n    &:not(:last-child) {\n      padding-right: 0.75rem;\n    }\n\n    .input {\n      text-align: left;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  First Name    Last Name  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NameInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NameInputModule.html":{"url":"modules/NameInputModule.html","title":"module - NameInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NameInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\n\n\nNameInputModule\n\nNameInputModule\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/name-input/name-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NameInputComponent } from './name-input.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule, MatInputModule],\n  declarations: [NameInputComponent],\n  exports: [NameInputComponent]\n})\nexport class NameInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OMEZarrInfo.html":{"url":"interfaces/OMEZarrInfo.html","title":"interface - OMEZarrInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OMEZarrInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Loader, createZarrLoader, OMEZarrReader, createOMETiffLoader } from '@hms-dbmi/viv';\n\nexport enum LoaderType {\n  Zarr = 'zarr',\n  OMEZarr = 'ome-zarr',\n  StaticZarr = 'static',\n\n  Tiff = 'tiff',\n  Tiff2 = 'tiff 2',\n  BFTiff = 'bf tiff',\n  CovidTiff = 'covid tiff',\n  StaticTiff = 'static tiff'\n}\n\n// createLoader info argument types\nexport type ZarrInfo = Parameters[0];\nexport interface OMEZarrInfo {\n  url: string;\n}\nexport interface TiffInfo {\n  url: string;\n  offsets?: string | number[];\n}\n\n// Copied from vitessce-image-viewer demo source\nexport async function createLoader(\n  type: LoaderType,\n  info: ZarrInfo | OMEZarrInfo | TiffInfo\n): Promise {\n  switch (type) {\n    case LoaderType.Zarr:\n    case LoaderType.StaticZarr:\n      return createZarrLoader(info as ZarrInfo);\n\n    case LoaderType.OMEZarr: {\n      const { url } = info as OMEZarrInfo;\n      const reader = await OMEZarrReader.fromUrl(url);\n      const { loader } = await reader.loadOMEZarr();\n      return loader;\n    }\n\n    case LoaderType.Tiff:\n    case LoaderType.Tiff2:\n    case LoaderType.BFTiff:\n    case LoaderType.CovidTiff:\n    case LoaderType.StaticTiff: {\n      const { url, offsets = [] } = info as TiffInfo;\n      return createOMETiffLoader({ url, offsets: await loadOffsets(offsets) });\n    }\n\n    default:\n      throw Error(`Pyramid type (${type}) is not supported`);\n  }\n}\n\nasync function loadOffsets(url: string | number[]): Promise {\n  if (typeof url !== 'string') { return url; }\n  const res = await fetch(url);\n  return res.status !== 404 ? await res.json() as number[] : [];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OldRuiData.html":{"url":"interfaces/OldRuiData.html","title":"interface - OldRuiData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OldRuiData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/hubmap/old-rui-utils.ts\n        \n\n            \n                Description\n            \n            \n                RUI v0.5.0 format \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alignment_datetime\n                                \n                                \n                                        alignment_id\n                                \n                                \n                                        alignment_operator_first_name\n                                \n                                \n                                        alignment_operator_last_name\n                                \n                                \n                                        reference_organ_id\n                                \n                                \n                                        tissue_object_rotation\n                                \n                                \n                                        tissue_object_size\n                                \n                                \n                                        tissue_position_mass_point\n                                \n                                \n                                        tissue_position_vertices\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_datetime\n                                    \n                                \n                                \n                                    \n                                        alignment_datetime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creation time. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_id\n                                    \n                                \n                                \n                                    \n                                        alignment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_operator_first_name\n                                    \n                                \n                                \n                                    \n                                        alignment_operator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creator first name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_operator_last_name\n                                    \n                                \n                                \n                                    \n                                        alignment_operator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creator last name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ_id\n                                    \n                                \n                                \n                                    \n                                        reference_organ_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organ reference identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_object_rotation\n                                    \n                                \n                                \n                                    \n                                        tissue_object_rotation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue object rotation. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_object_size\n                                    \n                                \n                                \n                                    \n                                        tissue_object_size:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue object size. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_position_mass_point\n                                    \n                                \n                                \n                                    \n                                        tissue_position_mass_point:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue point of mass. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_position_vertices\n                                    \n                                \n                                \n                                    \n                                        tissue_position_vertices:     unknown[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Position vertices. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ccf } from '../util/prefixes';\n\n/** RUI v0.5.0 format */\nexport interface OldRuiData {\n  /** Identifier. */\n  alignment_id: string;\n  /** Creator first name. */\n  alignment_operator_first_name: string;\n  /** Creator last name. */\n  alignment_operator_last_name: string;\n  /** Creation time. */\n  alignment_datetime: string;\n  /** Organ reference identifier. */\n  reference_organ_id: string;\n  /** Position vertices. */\n  tissue_position_vertices: unknown[];\n  /** Tissue point of mass. */\n  tissue_position_mass_point: {\n    x: number,\n    y: number,\n    z: number\n  };\n  /** Tissue object rotation. */\n  tissue_object_rotation: {\n    x: number,\n    y: number,\n    z: number\n  };\n  /** Tissue object size. */\n  tissue_object_size: {\n    x: number,\n    y: number,\n    z: number\n  };\n}\n\n/**\n * Fixes old RUI data from VU.\n *\n * @param data The original RUI data\n * @returns The fixed RUI data\n */\nfunction fixOldRuiKidneyData(data: OldRuiData): OldRuiData {\n  return {\n    ...data,\n    tissue_position_mass_point: {\n      x: data.tissue_position_mass_point.x - 60 / 2,\n      y: data.tissue_position_mass_point.y - 100 / 2,\n      z: data.tissue_position_mass_point.z - 60 / 2\n    }\n  };\n}\n\n/**\n * Converts version 0.5.0 RUI data to new JSONLD format.\n * @param data The old data.\n * @param [externalId] An optional label.\n * @param [refOrganId] The organ id.\n * @returns The translated JSONLD data.\n */\nexport function convertOldRuiToJsonLd(data: OldRuiData, label?: string, refOrganId?: string): object {\n  let placementTarget: string | undefined;\n  if (refOrganId) {\n    placementTarget = refOrganId;\n  } else if (data.reference_organ_id === 'uuid-1234-5678') {\n    placementTarget = ccf.x('VHKidney').id;\n  } else if(data.reference_organ_id) {\n    placementTarget = data.reference_organ_id;\n  }\n\n  if (placementTarget?.endsWith('Kidney')) {\n    data = fixOldRuiKidneyData(data);\n  }\n\n  const D = data.tissue_object_size;\n  const R = data.tissue_object_rotation;\n  const T = data.tissue_position_mass_point;\n\n  return {\n    '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n    '@id': 'http://purl.org/ccf/0.5/' + data.alignment_id,\n    '@type': 'SpatialEntity',\n    label: label || undefined,\n    creator: `${data.alignment_operator_first_name} ${data.alignment_operator_last_name}`,\n    creator_first_name: data.alignment_operator_first_name,\n    creator_last_name: data.alignment_operator_last_name,\n    // creator_orcid: data.alignment_operator_orcid,\n    creation_date: data.alignment_datetime,\n    ccf_annotations: [],\n    x_dimension: D.x, y_dimension: D.y, z_dimension: D.z, dimension_units: 'millimeter',\n\n    placement: {\n      '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n      '@id': 'http://purl.org/ccf/0.5/' + data.alignment_id + '_placement',\n      '@type': 'SpatialPlacement',\n      target: placementTarget,\n      placement_date: data.alignment_datetime,\n\n      x_scaling: 1, y_scaling: 1, z_scaling: 1, scaling_units: 'ratio',\n      x_rotation: R.x, y_rotation: R.y, z_rotation: R.z, rotation_order: 'XYZ', rotation_units: 'degree',\n      x_translation: T.x, y_translation: T.y, z_translation: T.z, translation_units: 'millimeter'\n    }\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyExplorationModule.html":{"url":"modules/OntologyExplorationModule.html","title":"module - OntologyExplorationModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyExplorationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-exploration.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from './ontology-search/ontology-search.module';\nimport { OntologySelectionModule } from './ontology-selection/ontology-selection.module';\nimport { OntologyTreeModule } from './ontology-tree/ontology-tree.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule,\n    OntologySelectionModule\n  ],\n  exports: [OntologySearchModule, OntologyTreeModule, OntologySelectionModule]\n})\nexport class OntologyExplorationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyNode.html":{"url":"interfaces/OntologyNode.html","title":"interface - OntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/ontology-node.ts\n        \n\n            \n                Description\n            \n            \n                A node in the ontology tree.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        parent\n                                \n                                \n                                        synonymLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of child identifiers.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of this node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for this ontology node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The identifier of the parent node. undefined if this is the root node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synonymLabels\n                                    \n                                \n                                \n                                    \n                                        synonymLabels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Labels for the synonyms of the label of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface OntologyNode {\n  /**\n   * The unique identifier of this node.\n   */\n  id: string;\n\n  /**\n   * Label for this ontology node.\n   */\n  label: string;\n\n  /**\n   * The identifier of the parent node. `undefined` if this is the root node.\n   */\n  parent: string;\n\n  /**\n   * An array of child identifiers.\n   */\n  children: string[];\n\n  /**\n   * Labels for the synonyms of the label of this node.\n   */\n  synonymLabels: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySearchComponent.html":{"url":"components/OntologySearchComponent.html","title":"component - OntologySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n\n\n    \n        Description\n    \n    \n        Componenet for searching the Ontology nodes.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-search\n            \n\n            \n                styleUrls\n                ./ontology-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleteOpen\n                            \n                            \n                                filteredResults$\n                            \n                            \n                                formControl\n                            \n                            \n                                    Public\n                                ontologyService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFormatter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                sortBySynonymResult\n                            \n                            \n                                sortLexically\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologyService: OntologySearchService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologyService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of searchService which provides all the search functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:25\n                            \n                        \n                \n                    \n                        Output event-emitter which emits the id of the OntologyNode whose label was\nselected by the user in the search-results\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFormatter\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFormatter(option?: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:72\n                \n            \n\n\n            \n                \n                    A formatter function to enable different display and selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a part of the search result entry to be displayed as a display value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:54\n                \n            \n\n\n            \n                \n                    on-init lifecycle hook for this component -\ngets the searched value from the view, sends it to the filter function in the OntologyService,\nand gets the search results from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:98\n                \n            \n\n\n            \n                \n                    Callback function triggered when the user selects a value from search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of MatAutocompleteSelectedEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortBySynonymResult\n                        \n                        \n                    \n                \n            \n            \n                \nsortBySynonymResult(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:81\n                \n            \n\n\n            \n                \n                    Sorts by results which have synonyms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 or -1\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortLexically\n                        \n                        \n                    \n                \n            \n            \n                \nsortLexically(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:90\n                \n            \n\n\n            \n                \n                    Sorts lexically\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        lower case value of node label\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoCompleteOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:36\n                            \n                        \n\n                \n                    \n                        Determines if autocomplete is open or close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredResults$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:41\n                            \n                        \n\n                \n                    \n                        Observable which provides the filtered search results\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('')\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:30\n                            \n                        \n\n                \n                    \n                        Instance of FormControl - tracks the value and validation status of an individual form control\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ontologyService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologySearchService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:47\n                            \n                        \n\n                \n                    \n                        instance of searchService which provides all the search functionality\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { get, sortBy } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../../core/models/ontology-node';\nimport { OntologySearchService, SearchResult } from '../../../core/services/ontology-search/ontology-search.service';\n\n\n/**\n * Componenet for searching the Ontology nodes.\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss']\n})\nexport class OntologySearchComponent implements OnInit {\n  /**\n   * Output event-emitter which emits the id of the OntologyNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() selected = new EventEmitter();\n\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new FormControl('');\n\n\n  /**\n   * Determines if autocomplete is open or close.\n   */\n  autoCompleteOpen = false;\n\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$: Observable;\n\n  /**\n   * Creates an instance of ontology search component.\n   * @param ontologyService instance of searchService which provides all the search functionality\n   */\n  constructor(public ontologyService: OntologySearchService) { }\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit(): void {\n    this.ontologyService.loadOntology();\n    const valueChanges = this.formControl.valueChanges as Observable;\n    this.filteredResults$ = valueChanges.pipe(\n      filter(value => typeof value === 'string'),\n      startWith(''),\n      switchMap(value => this.ontologyService.filter(value)),\n      map(searchResults => sortBy(searchResults, [\n        this.sortBySynonymResult, 'index', this.sortLexically\n      ]))\n    );\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option?: SearchResult): string {\n    return (option?.displayLabel ?? []).join('');\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Sorts lexically\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, ['option', 'value', 'node']) as OntologyNode;\n    if (node) {\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        \n          {{option.displayLabel[0]}}\n          {{option.displayLabel[1]}}\n          {{option.displayLabel[2]}}\n        \n      \n    \n\n    search\n  \n\n\n    \n\n    \n                \n                    ./ontology-search.component.scss\n                \n                .ccf-ontology-search {\n  width: 25rem;\n  margin-top: 1.5rem;\n\n  .field {\n    margin-left: 1.5rem;\n    width: 100%;\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-end {\n      border-radius: 0 500px 500px 0;\n      margin: 0;\n    }\n\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n          height: 3rem;\n\n          input {\n            margin-left: .4rem;\n          }\n        }\n        .mat-form-field-suffix {\n          top: .5rem;\n          border: none;\n        }\n      }\n    }\n\n    .mat-form-field-outline-start {\n      border-radius: 500px 0 0 500px;\n      min-width: 40px;\n\t  }\n  }\n}\n\n::ng-deep .ccf-ontology-search.detached {\n  border: 2px solid;\n  border-top: none;\n  border-radius: 0 0 1rem 1rem;\n  max-height: 18rem;\n\n  .results-container {\n    width: 380px;\n    margin-bottom: 1rem;\n    overflow: auto;\n    max-height: 15rem;\n    scrollbar-width: thin;\n\n    mat-option {\n      height: 1.5rem;\n      width: 380px;\n      \n      .search-term {\n        text-decoration: underline;\n      }\n    }\n  }\n\n}\n\n.autocomplete-open {\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-start {\n      border-radius: 50% 0 0 0;\n      border-bottom: none;\n    }\n\n    .mat-form-field-outline-end {\n      border-radius: 0 1rem 0 0;\n      border-bottom: none;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{option.displayLabel[0]}}          {{option.displayLabel[1]}}          {{option.displayLabel[2]}}                      search  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySearchModule.html":{"url":"modules/OntologySearchModule.html","title":"module - OntologySearchModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OntologySearchComponent } from './ontology-search.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  declarations: [OntologySearchComponent],\n  exports: [OntologySearchComponent]\n})\nexport class OntologySearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologySearchService.html":{"url":"injectables/OntologySearchService.html","title":"injectable - OntologySearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologySearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable OntologySearchService responsible for search result computations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootNode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                formatLabel\n                            \n                            \n                                getChildren\n                            \n                            \n                                getIndexOfMatch\n                            \n                            \n                                loadOntology\n                            \n                            \n                                    Private\n                                lookup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, store: Store, ontologyState: OntologyState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:107\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http requests service.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global data store.\n\n                                                        \n                                                \n                                                \n                                                        ontologyState\n                                                  \n                                                        \n                                                                        OntologyState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global ontology state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:142\n                \n            \n\n\n            \n                \n                    Searches the ontology with the search-term\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an array of search-results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatLabel\n                        \n                        \n                    \n                \n            \n            \n                \nformatLabel(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:200\n                \n            \n\n\n            \n                \n                    Formats label based on where the search-term was found in the OntologyNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        label or first synonym-label of OntologyNode which has the search-term\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search-term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        an array in the form of [prefix, search-term, suffix]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChildren\n                        \n                        \n                    \n                \n            \n            \n                \ngetChildren(node: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:216\n                \n            \n\n\n            \n                \n                    Fetches the children of an ontology node.\nNote: This can be called without a reference to this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node for which to get children.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyNode[]\n\n                    \n                    \n                        An array of children, empty if the node has no children.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIndexOfMatch\n                        \n                        \n                    \n                \n            \n            \n                \ngetIndexOfMatch(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:190\n                \n            \n\n\n            \n                \n                    Gets index of match in the ontology label\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the provided ontology node label or synonym label\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the searched text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the index of the match in the label\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadOntology\n                        \n                        \n                    \n                \n            \n            \n                \nloadOntology()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:124\n                \n            \n\n\n            \n                \n                    Loads ontology.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lookup(nodes: Immutable[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:154\n                \n            \n\n\n            \n                \n                    looks up ontology nodes and composes search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                Immutable[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ontology nodes\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SearchResult[]\n\n                    \n                    \n                        search results\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:107\n                            \n                        \n\n                \n                    \n                        Root node in ontology. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Immutable } from '@ngxs-labs/data/typings';\nimport { Store } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { JsonOntologyNode, jsonToOntologyNode } from '../../models/json-ontology';\nimport { OntologyNode } from '../../models/ontology-node';\nimport { OntologyState, OntologyStateModel } from '../../store/ontology/ontology.state';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/** Type of function for getting child nodes from a parent node. */\nexport type GetChildrenFunc = (o: OntologyNode) => OntologyNode[];\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[''] = { parent: '', children: [] } as unknown as OntologyNode;\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[''].children) as string;\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[''];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = {\n    id: 'http://purl.obolibrary.org/obo/UBERON_0013702',\n    label: 'body',\n    parent: '',\n    children: organIds,\n    synonymLabels: []\n  };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /** Root node in ontology. */\n  rootNode: Observable>;\n\n  /**\n   * Creates an instance of ontology search service.\n   *\n   * @param http The http requests service.\n   * @param store The global data store.\n   * @param ontologyState The global ontology state.\n   */\n  constructor(private http: HttpClient, private store: Store, private ontologyState: OntologyState) {\n    this.rootNode = this.ontologyState.rootNode$;\n    this.getChildren = this.getChildren.bind(this) as GetChildrenFunc;\n  }\n\n  /**\n   * Loads ontology.\n   */\n  loadOntology(): void {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => this.ontologyState.setOntology(ontology));\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.ontologyState.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologySelection.html":{"url":"interfaces/OntologySelection.html","title":"interface - OntologySelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologySelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/ontology-selection.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         OntologyNode | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OntologyNode } from './ontology-node';\n\nexport interface OntologySelection {\n  location: OntologyNode | undefined;\n  id: string;\n  label: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySelectionComponent.html":{"url":"components/OntologySelectionComponent.html","title":"component - OntologySelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Ontology selection component that encapsulates ontology search and tree components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-selection\n            \n\n            \n                styleUrls\n                ./ontology-selection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ontologySearchService\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                occurenceData\n                            \n                            \n                                ontologyFilter\n                            \n                            \n                                termData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologySearchService: OntologySearchService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology selection component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologySearchService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for searching the ontology.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global state store.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        occurenceData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:28\n                            \n                        \n                \n                    \n                        A record of terms within the current filter.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ontologyFilter\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:40\n                            \n                        \n                \n                    \n                        Input list of selected ontology terms passed down to ontology-tree.\nUsed to change display of ontology tree when selection is made from\noutside the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        termData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:33\n                            \n                        \n                \n                    \n                        A record of terms the app currently has data for.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ontologySelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n                \n                    \n                        Captures and passes along the change in ontologySelections.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(ontologyNode: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:61\n                \n            \n\n\n            \n                \n                    Ontology selection event when node is selected from the search results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontologyNode\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected ontology node.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ontologySearchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologySearchService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n\n                \n                    \n                        Service for searching the ontology.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tree\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologyTreeComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(OntologyTreeComponent, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        View child of search component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Output, EventEmitter, Input } from '@angular/core';\nimport { Store } from '@ngxs/store';\n\nimport { OntologyNode } from '../../../core/models/ontology-node';\nimport { OntologySearchService } from '../../../core/services/ontology-search/ontology-search.service';\nimport { OntologyState, OntologyStateModel } from '../../../core/store/ontology/ontology.state';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\nimport { OntologySelection } from '../../../core/models/ontology-selection';\n\n\n/**\n * Ontology selection component that encapsulates ontology search and tree components.\n */\n@Component({\n  selector: 'ccf-ontology-selection',\n  templateUrl: './ontology-selection.component.html',\n  styleUrls: ['./ontology-selection.component.scss']\n})\nexport class OntologySelectionComponent {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree: OntologyTreeComponent;\n\n  /**\n   * A record of terms within the current filter.  To be passed on to ontology-tree\n   */\n  @Input() occurenceData: Record;\n\n  /**\n   * A record of terms the app currently has data for.  To be passed on to ontology-tree\n   */\n  @Input() termData: Record;\n\n  /**\n   * Input list of selected ontology terms passed down to ontology-tree.\n   * Used to change display of ontology tree when selection is made from\n   * outside the component.\n   */\n  @Input() ontologyFilter: string[];\n\n  /**\n   * Captures and passes along the change in ontologySelections.\n   */\n  @Output() ontologySelection = new EventEmitter();\n\n  /**\n   * Creates an instance of ontology selection component.\n   * @param ontologySearchService Service for searching the ontology.\n   * @param store The global state store.\n   */\n  constructor(\n    public ontologySearchService: OntologySearchService,\n    private readonly store: Store\n  ) { }\n\n  /**\n   * Ontology selection event when node is selected from the search results.\n   * @param ontologyNode selected ontology node.\n   */\n  selected(ontologyNode: OntologyNode): void {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    this.tree.expandAndSelect(ontologyNode, node => nodes[node.parent]);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ontology-selection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySelectionModule.html":{"url":"modules/OntologySelectionModule.html","title":"module - OntologySelectionModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySelectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_imports\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { OntologySelectionComponent } from './ontology-selection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule\n  ],\n  declarations: [OntologySelectionComponent],\n  exports: [OntologySelectionComponent],\n})\nexport class OntologySelectionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologyState.html":{"url":"injectables/OntologyState.html","title":"injectable - OntologyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologyState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Ontology tree state.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                nodes$\n                            \n                            \n                                    Public\n                                    Readonly\n                                rootNode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setOntology\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOntology\n                        \n                        \n                    \n                \n            \n            \n                \nsetOntology(ontology: OntologyStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts:50\n                \n            \n\n\n            \n                \n                    Sets the ontology state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontology\n                                    \n                                                OntologyStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new state.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            nodes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(map(state => Object.values(state.nodes)))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts:39\n                            \n                        \n\n                \n                    \n                        All nodes in the ontology tree. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            rootNode$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(map(state => state.nodes[state.root]))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts:42\n                            \n                        \n\n                \n                    \n                        Root node of the ontology tree. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../models/ontology-node';\n\n\n/**\n * Data model for the ontology state.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n/**\n * Ontology tree state.\n */\n@StateRepository()\n@State({\n  name: 'ontology',\n  defaults: {\n    root: '',\n    nodes: {}\n  }\n})\n@Injectable()\nexport class OntologyState extends NgxsDataRepository {\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.state$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.state$.pipe(map(state => state.nodes[state.root]));\n\n  /**\n   * Sets the ontology state.\n   *\n   * @param ontology The new state.\n   */\n  @DataAction()\n  setOntology(ontology: OntologyStateModel): void {\n    this.ctx.setState(ontology);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyStateModel.html":{"url":"interfaces/OntologyStateModel.html","title":"interface - OntologyStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Data model for the ontology state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        nodes\n                                \n                                \n                                        root\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hash table of nodes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier of the root node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../models/ontology-node';\n\n\n/**\n * Data model for the ontology state.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n/**\n * Ontology tree state.\n */\n@StateRepository()\n@State({\n  name: 'ontology',\n  defaults: {\n    root: '',\n    nodes: {}\n  }\n})\n@Injectable()\nexport class OntologyState extends NgxsDataRepository {\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.state$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.state$.pipe(map(state => state.nodes[state.root]));\n\n  /**\n   * Sets the ontology state.\n   *\n   * @param ontology The new state.\n   */\n  @DataAction()\n  setOntology(ontology: OntologyStateModel): void {\n    this.ctx.setState(ontology);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyTreeModule.html":{"url":"modules/OntologyTreeModule.html","title":"module - OntologyTreeModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyTreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganInfo.html":{"url":"interfaces/OrganInfo.html","title":"interface - OrganInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrganInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts\n        \n\n            \n                Description\n            \n            \n                Contains the organ name and url of the icon svg\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        src\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Output, EventEmitter } from '@angular/core';\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n\n  src: string;\n\n  /**\n   * Name of the organ\n   */\n  name: string;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss']\n})\nexport class OrganSelectorComponent {\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() organChanged = new EventEmitter();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  organList: OrganInfo[] = [\n    {src: 'app:bladder', name: 'Bladder'},\n    {src: 'app:brain', name: 'Brain'},\n    {src: 'app:colon', name: 'Colon'},\n    {src: 'app:heart', name: 'Heart'},\n    {src: 'app:kidney', name: 'Kidney'},\n    {src: 'app:liver', name: 'Liver'},\n    {src: 'app:lung', name: 'Lung'},\n    {src: 'app:lymph_nodes', name: 'Lymph Nodes'},\n    {src: 'app:ovaries', name: 'Ovaries'},\n    {src: 'app:small_intestine', name: 'Small Intestine'},\n    {src: 'app:spleen', name: 'Spleen'},\n    {src: 'app:stomach', name: 'Stomach'},\n    {src: 'app:thymus', name: 'Thymus'}\n  ];\n\n  /**\n   * Currently selected organ\n   */\n  selectedOrgan: string;\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   * @param dir Direction to be scrolled\n   * @param step Size of step (px)\n   */\n  shift(dir: string, step: number): void {\n    if (this.onLeft && dir === 'left') {\n      return;\n    } else if (this.onRight && dir === 'right') {\n      return;\n    }\n    const element = document.getElementsByClassName('carousel-item-list')[0] as HTMLElement;\n    let val = parseInt(element.style.left, 10) || 0;\n    val = dir === 'right' ? val -= step : val += step;\n    element.style.left = val+'px';\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val === step*(5 - this.organList.length) ? true : false;\n  }\n\n  /**\n   * Sets currently selected organ and emits the organ name\n   * @param icon The icon selected\n   */\n  selectOrgan(icon: OrganInfo): void {\n    this.selectedOrgan = icon.name;\n    this.organChanged.emit(icon.name);\n  }\n\n  /**\n   * Determines whether an icon represents the currently selected organ\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(icon: OrganInfo): boolean {\n    return this.selectedOrgan === icon.name;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganSelectorComponent.html":{"url":"components/OrganSelectorComponent.html","title":"component - OrganSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts\n\n\n    \n        Description\n    \n    \n        Organ carousel for selecting the organ to be viewed\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-organ-selector\n            \n\n            \n                styleUrls\n                ./organ-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organ-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onLeft\n                            \n                            \n                                onRight\n                            \n                            \n                                organList\n                            \n                            \n                                selectedOrgan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                selectOrgan\n                            \n                            \n                                shift\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                organChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        organChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:29\n                            \n                        \n                \n                    \n                        Emits the name of the organ when selected\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisSelected(icon: OrganInfo)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:99\n                \n            \n\n\n            \n                \n                    Determines whether an icon represents the currently selected organ\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                OrganInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The icon of interest\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if selected\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOrgan\n                        \n                        \n                    \n                \n            \n            \n                \nselectOrgan(icon: OrganInfo)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:89\n                \n            \n\n\n            \n                \n                    Sets currently selected organ and emits the organ name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                OrganInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The icon selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shift\n                        \n                        \n                    \n                \n            \n            \n                \nshift(dir: string, step: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:71\n                \n            \n\n\n            \n                \n                    Scrolls the carousel left or right by one step.\nPrevents scrolling past the beginning or end of the carousel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Direction to be scrolled\n\n                                    \n                                \n                                \n                                    step\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Size of step (px)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLeft\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:34\n                            \n                        \n\n                \n                    \n                        Determines whether the carousel is at the beginning\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onRight\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:39\n                            \n                        \n\n                \n                    \n                        Determines whether the carousel is at the end\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OrganInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {src: 'app:bladder', name: 'Bladder'},\n    {src: 'app:brain', name: 'Brain'},\n    {src: 'app:colon', name: 'Colon'},\n    {src: 'app:heart', name: 'Heart'},\n    {src: 'app:kidney', name: 'Kidney'},\n    {src: 'app:liver', name: 'Liver'},\n    {src: 'app:lung', name: 'Lung'},\n    {src: 'app:lymph_nodes', name: 'Lymph Nodes'},\n    {src: 'app:ovaries', name: 'Ovaries'},\n    {src: 'app:small_intestine', name: 'Small Intestine'},\n    {src: 'app:spleen', name: 'Spleen'},\n    {src: 'app:stomach', name: 'Stomach'},\n    {src: 'app:thymus', name: 'Thymus'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:44\n                            \n                        \n\n                \n                    \n                        List of organs in the carousel\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedOrgan\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.component.ts:63\n                            \n                        \n\n                \n                    \n                        Currently selected organ\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter } from '@angular/core';\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n\n  src: string;\n\n  /**\n   * Name of the organ\n   */\n  name: string;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss']\n})\nexport class OrganSelectorComponent {\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() organChanged = new EventEmitter();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  organList: OrganInfo[] = [\n    {src: 'app:bladder', name: 'Bladder'},\n    {src: 'app:brain', name: 'Brain'},\n    {src: 'app:colon', name: 'Colon'},\n    {src: 'app:heart', name: 'Heart'},\n    {src: 'app:kidney', name: 'Kidney'},\n    {src: 'app:liver', name: 'Liver'},\n    {src: 'app:lung', name: 'Lung'},\n    {src: 'app:lymph_nodes', name: 'Lymph Nodes'},\n    {src: 'app:ovaries', name: 'Ovaries'},\n    {src: 'app:small_intestine', name: 'Small Intestine'},\n    {src: 'app:spleen', name: 'Spleen'},\n    {src: 'app:stomach', name: 'Stomach'},\n    {src: 'app:thymus', name: 'Thymus'}\n  ];\n\n  /**\n   * Currently selected organ\n   */\n  selectedOrgan: string;\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   * @param dir Direction to be scrolled\n   * @param step Size of step (px)\n   */\n  shift(dir: string, step: number): void {\n    if (this.onLeft && dir === 'left') {\n      return;\n    } else if (this.onRight && dir === 'right') {\n      return;\n    }\n    const element = document.getElementsByClassName('carousel-item-list')[0] as HTMLElement;\n    let val = parseInt(element.style.left, 10) || 0;\n    val = dir === 'right' ? val -= step : val += step;\n    element.style.left = val+'px';\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val === step*(5 - this.organList.length) ? true : false;\n  }\n\n  /**\n   * Sets currently selected organ and emits the organ name\n   * @param icon The icon selected\n   */\n  selectOrgan(icon: OrganInfo): void {\n    this.selectedOrgan = icon.name;\n    this.organChanged.emit(icon.name);\n  }\n\n  /**\n   * Determines whether an icon represents the currently selected organ\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(icon: OrganInfo): boolean {\n    return this.selectedOrgan === icon.name;\n  }\n}\n\n    \n\n    \n        \n  chevron_left\n  \n    \n      \n        \n        {{icon.name}}\n      \n    \n  \n  chevron_right\n\n\n    \n\n    \n                \n                    ./organ-selector.component.scss\n                \n                .carousel {\n  display: flex;\n  align-items: center;\n  height: 4.5rem;\n  justify-content: space-between;\n  border-radius: 3px;\n\n  .carousel-left-icon,\n  .carousel-right-icon {\n    font-size: 32px;\n    transform: scale(1, 1.2);\n    height: 2rem;\n    width: 2rem;\n    cursor: pointer;\n\n    &.disabled {\n      cursor: default;\n    }\n  }\n\n  .carousel-left-icon {\n    text-align: right;\n  }\n\n  .carousel-right-icon {\n    text-align: left;\n  }\n\n  .carousel-item-container {\n    overflow: hidden;\n\n    .carousel-item-list {\n      position: relative;\n      left: 0px;\n      display: flex;\n      transition: all 0.25s ease-in-out;\n      width: 17.5rem;\n\n      .carousel-item {\n        display: flex;\n        flex-direction: column;\n        cursor: pointer;\n        justify-content: center;\n\n        .carousel-icon {\n          text-align: center;\n          width: 3.5rem;\n          height: 2.75rem;\n        }\n\n        .carousel-text {\n          text-align: center;\n          font-size: 10px;\n        }\n\n        &.selected {\n          .carousel-text {\n            font-size: 16px;\n            font-weight: bold;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  chevron_left                            {{icon.name}}              chevron_right'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganSelectorModule.html":{"url":"modules/OrganSelectorModule.html","title":"module - OrganSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/organ-selector/organ-selector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrganSelectorComponent } from './organ-selector.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [OrganSelectorComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [OrganSelectorComponent]\n})\nexport class OrganSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageState.html":{"url":"injectables/PageState.html","title":"injectable - PageState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                embedded$\n                            \n                            \n                                    Readonly\n                                homeUrl$\n                            \n                            \n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setEmbedded\n                            \n                            \n                                setUserName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEmbedded\n                        \n                        \n                    \n                \n            \n            \n                \nsetEmbedded(embedded: boolean, url?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    embedded\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUserName\n                        \n                        \n                    \n                \n            \n            \n                \nsetUserName(name: Pick)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            embedded$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('embedded'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            homeUrl$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('homeUrl'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            user$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('user'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { patch } from '@ngxs/store/operators';\nimport { pluck } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n\nexport interface Person {\n  firstName: string;\n  lastName: string;\n}\n\nexport interface PageStateModel {\n  embedded: boolean;\n  homeUrl: string;\n  user: Person;\n}\n\n\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    embedded: false,\n    homeUrl: '',\n    user: {\n      firstName: '',\n      lastName: ''\n    }\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  readonly embedded$ = this.state$.pipe(pluck('embedded'));\n  readonly homeUrl$ = this.state$.pipe(pluck('homeUrl'));\n  readonly user$ = this.state$.pipe(pluck('user'));\n\n  constructor() {\n    super();\n\n    // TODO load embedded from global variable\n\n    if (!environment.production && typeof globalThis === 'object') {\n      globalThis.setEmbedded = this.setEmbedded.bind(this);\n    }\n  }\n\n  @DataAction()\n  setEmbedded(embedded: boolean, url?: string): void {\n    this.ctx.patchState({\n      embedded,\n      homeUrl: url ?? this.ctx.getState().homeUrl\n    });\n  }\n\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch(name)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageStateModel.html":{"url":"interfaces/PageStateModel.html","title":"interface - PageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        embedded\n                                \n                                \n                                        homeUrl\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        embedded\n                                    \n                                \n                                \n                                    \n                                        embedded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Person\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { patch } from '@ngxs/store/operators';\nimport { pluck } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n\nexport interface Person {\n  firstName: string;\n  lastName: string;\n}\n\nexport interface PageStateModel {\n  embedded: boolean;\n  homeUrl: string;\n  user: Person;\n}\n\n\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    embedded: false,\n    homeUrl: '',\n    user: {\n      firstName: '',\n      lastName: ''\n    }\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  readonly embedded$ = this.state$.pipe(pluck('embedded'));\n  readonly homeUrl$ = this.state$.pipe(pluck('homeUrl'));\n  readonly user$ = this.state$.pipe(pluck('user'));\n\n  constructor() {\n    super();\n\n    // TODO load embedded from global variable\n\n    if (!environment.production && typeof globalThis === 'object') {\n      globalThis.setEmbedded = this.setEmbedded.bind(this);\n    }\n  }\n\n  @DataAction()\n  setEmbedded(embedded: boolean, url?: string): void {\n    this.ctx.patchState({\n      embedded,\n      homeUrl: url ?? this.ctx.getState().homeUrl\n    });\n  }\n\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch(name)\n    }));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { patch } from '@ngxs/store/operators';\nimport { pluck } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n\nexport interface Person {\n  firstName: string;\n  lastName: string;\n}\n\nexport interface PageStateModel {\n  embedded: boolean;\n  homeUrl: string;\n  user: Person;\n}\n\n\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    embedded: false,\n    homeUrl: '',\n    user: {\n      firstName: '',\n      lastName: ''\n    }\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  readonly embedded$ = this.state$.pipe(pluck('embedded'));\n  readonly homeUrl$ = this.state$.pipe(pluck('homeUrl'));\n  readonly user$ = this.state$.pipe(pluck('user'));\n\n  constructor() {\n    super();\n\n    // TODO load embedded from global variable\n\n    if (!environment.production && typeof globalThis === 'object') {\n      globalThis.setEmbedded = this.setEmbedded.bind(this);\n    }\n  }\n\n  @DataAction()\n  setEmbedded(embedded: boolean, url?: string): void {\n    this.ctx.patchState({\n      embedded,\n      homeUrl: url ?? this.ctx.getState().homeUrl\n    });\n  }\n\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch(name)\n    }));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PictureInPictureViewer.html":{"url":"classes/PictureInPictureViewer.html","title":"class - PictureInPictureViewer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PictureInPictureViewer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ImageViewer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channelConfigs\n                            \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _loaders\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                deck\n                            \n                            \n                                    Protected\n                                layerConfigs\n                            \n                            \n                                    Protected\n                                layers\n                            \n                            \n                                    Readonly\n                                props\n                            \n                            \n                                    Protected\n                                states\n                            \n                            \n                                    Protected\n                                views\n                            \n                            \n                                    Protected\n                                vivViews\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Async\n                                createVivViews\n                            \n                            \n                                clear\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createVivViews\n                            \n                            \n                                finalize\n                            \n                            \n                                    Private\n                                initializeDeck\n                            \n                            \n                                    Private\n                                layerFilter\n                            \n                            \n                                    Private\n                                onViewStateChange\n                            \n                            \n                                    Private\n                                resetChannelConfigs\n                            \n                            \n                                    Async\n                                setSize\n                            \n                            \n                                    Async\n                                setSources\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Async\n                                updateChannelConfigs\n                            \n                            \n                                    Protected\n                                updateDeckProps\n                            \n                            \n                                    Protected\n                                updateLayers\n                            \n                            \n                                    Protected\n                                updateState\n                            \n                            \n                                    Protected\n                                updateViews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: PictureInPictureViewerProps)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        PictureInPictureViewerProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _channelConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:78\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:69\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Loader[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:74\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:73\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:68\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:86\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayerConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:83\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Layer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:82\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            props\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:84\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:81\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            vivViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VivView[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:80\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:169\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:168\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalize\n                        \n                        \n                    \n                \n            \n            \n                \nfinalize()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:110\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeDeck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDeck(props)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:212\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Deck\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            layerFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerFilter(undefined: LayerFilterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:244\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LayerFilterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewStateChange(undefined: OnViewStateChangeArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:250\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OnViewStateChangeArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChannelConfigs()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:231\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize(width: number, height: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:114\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSources(sources: DataSource[])\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:133\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            DataSource[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:171\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChannelConfigs(configs: Record>)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:148\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Record>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateDeckProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDeckProps(props: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:208\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(args: ValueOrGenerator | >)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:195\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ValueOrGenerator | >\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViews()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DetailView, OverviewView, OverviewViewNewArgs, VivView } from '@hms-dbmi/viv';\n\nimport { ImageViewer, ImageViewerProps, LayerConfig } from './image-viewer';\n\nexport type OverviewArgs = Omit;\nexport interface PictureInPictureViewerProps extends ImageViewerProps {\n  overview: OverviewArgs;\n}\n\nconst OVERVIEW_DEFAULTS: Partial = {\n  margin: 25,\n  scale: 0.15,\n  position: 'bottom-left'\n};\n\nexport class PictureInPictureViewer extends ImageViewer {\n  constructor(props: PictureInPictureViewerProps) {\n    super({\n      ...props,\n      overview: { ...OVERVIEW_DEFAULTS, ...props.overview }\n    });\n  }\n\n  protected async createVivViews(): Promise {\n    const { loaders, width, height, props: { initialViewState, overview } } = this;\n    if (loaders.length === 0) { return []; }\n\n    const detailView = new DetailView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'detail',\n        width,\n        height\n      }\n    });\n\n    const overviewView = new OverviewView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'overview',\n        width,\n        height\n      },\n      loader: loaders[0],\n      ...overview\n    });\n\n    return [detailView, overviewView];\n  }\n\n  protected async createLayerConfigs(): Promise {\n    const { loaders, channelConfigs } = this;\n    if (loaders.length === 0) { return []; }\n\n    const loaderSelection: { channel: string }[] = [];\n    const channelIsOn: boolean[] = [];\n    const colorValues: [number, number, number][] = [];\n    const sliderValues: [number, number][] = [];\n    for (const [key, { active, color, slider }] of Object.entries(channelConfigs)) {\n      loaderSelection.push({ channel: key });\n      channelIsOn.push(active);\n      colorValues.push(color);\n      sliderValues.push(slider);\n    }\n\n    const isRgb = loaders[0].isRgb;\n    return [\n      {\n        loader: this.loaders[0],\n        loaderSelection,\n        channelIsOn: isRgb ? [true, true, true] : channelIsOn,\n        colorValues: isRgb ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]] : colorValues,\n        sliderValues: isRgb ? [[0, 255], [0, 255], [0, 255]] : sliderValues\n      }\n    ];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PictureInPictureViewerProps.html":{"url":"interfaces/PictureInPictureViewerProps.html","title":"interface - PictureInPictureViewerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PictureInPictureViewerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ImageViewerProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        overview\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                    \n                                \n                                \n                                    \n                                        overview:         OverviewArgs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OverviewArgs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DetailView, OverviewView, OverviewViewNewArgs, VivView } from '@hms-dbmi/viv';\n\nimport { ImageViewer, ImageViewerProps, LayerConfig } from './image-viewer';\n\nexport type OverviewArgs = Omit;\nexport interface PictureInPictureViewerProps extends ImageViewerProps {\n  overview: OverviewArgs;\n}\n\nconst OVERVIEW_DEFAULTS: Partial = {\n  margin: 25,\n  scale: 0.15,\n  position: 'bottom-left'\n};\n\nexport class PictureInPictureViewer extends ImageViewer {\n  constructor(props: PictureInPictureViewerProps) {\n    super({\n      ...props,\n      overview: { ...OVERVIEW_DEFAULTS, ...props.overview }\n    });\n  }\n\n  protected async createVivViews(): Promise {\n    const { loaders, width, height, props: { initialViewState, overview } } = this;\n    if (loaders.length === 0) { return []; }\n\n    const detailView = new DetailView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'detail',\n        width,\n        height\n      }\n    });\n\n    const overviewView = new OverviewView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'overview',\n        width,\n        height\n      },\n      loader: loaders[0],\n      ...overview\n    });\n\n    return [detailView, overviewView];\n  }\n\n  protected async createLayerConfigs(): Promise {\n    const { loaders, channelConfigs } = this;\n    if (loaders.length === 0) { return []; }\n\n    const loaderSelection: { channel: string }[] = [];\n    const channelIsOn: boolean[] = [];\n    const colorValues: [number, number, number][] = [];\n    const sliderValues: [number, number][] = [];\n    for (const [key, { active, color, slider }] of Object.entries(channelConfigs)) {\n      loaderSelection.push({ channel: key });\n      channelIsOn.push(active);\n      colorValues.push(color);\n      sliderValues.push(slider);\n    }\n\n    const isRgb = loaders[0].isRgb;\n    return [\n      {\n        loader: this.loaders[0],\n        loaderSelection,\n        channelIsOn: isRgb ? [true, true, true] : channelIsOn,\n        colorValues: isRgb ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]] : colorValues,\n        sliderValues: isRgb ? [[0, 255], [0, 255], [0, 255]] : sliderValues\n      }\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PureImageViewerLayer.html":{"url":"interfaces/PureImageViewerLayer.html","title":"interface - PureImageViewerLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PureImageViewerLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/image-viewer-layer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        brightness\n                                \n                                \n                                        color\n                                \n                                \n                                        colorScheme\n                                \n                                \n                                        customizedColor\n                                \n                                \n                                        defaultOrder\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        selected\n                                \n                                \n                                        selectionOrder\n                                \n                                \n                                        transparency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brightness\n                                    \n                                \n                                \n                                    \n                                        brightness:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                    \n                                \n                                \n                                    \n                                        colorScheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customizedColor\n                                    \n                                \n                                \n                                    \n                                        customizedColor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOrder\n                                    \n                                \n                                \n                                    \n                                        defaultOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionOrder\n                                    \n                                \n                                \n                                    \n                                        selectionOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transparency\n                                    \n                                \n                                \n                                    \n                                        transparency:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColorScheme } from './color-scheme';\n\nexport interface PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number];\n  transparency: number;\n\n  selected: boolean;\n  customizedColor: boolean;\n  selectionOrder: number;\n  defaultOrder: number;\n}\n\nexport type ImageViewerLayerRequiredArgNames = 'id' | 'colorScheme';\nexport type ImageViewerLayerArgs =\n  Pick &\n  Partial>;\n\nexport class ImageViewerLayer implements PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number] = [20, 60];\n  transparency = 100;\n\n  selected = false;\n  customizedColor = false;\n  selectionOrder = 0;\n  defaultOrder = -1;\n\n  constructor(data: ImageViewerLayerArgs) {\n    Object.assign(this, {\n      label: data.id,\n      color: data.colorScheme.colors[0]\n    }, data);\n  }\n\n  /**\n   * Dynamically creates a background style based on the layer's color or color scheme\n   */\n  get background(): string {\n    if (this.colorScheme.type === 'discrete') {\n      return this.color;\n    }\n\n    const colors = this.colorScheme.colors;\n    const positions = this.colorScheme.positions;\n\n    let gradient = 'linear-gradient(to right, ';\n    colors.forEach((color, index) => {\n      gradient += `${color} ${positions[index] * 100}%`;\n      if (index  225 ? true : false;\n  }\n\n  /**\n   * Determines whether the color icon is dark enough to require a border (dark mode only)\n   */\n  isDark(): boolean {\n    return this.getBrightness() \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserComponent.html":{"url":"components/ResultsBrowserComponent.html","title":"component - ResultsBrowserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsBrowserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n\n\n    \n        Description\n    \n    \n        ResultsBrowser is the container component in charge of rendering the label and stats of\nthe results as well as handling the virtual scrolling and click emitters of\nResultsBrowserItems.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser\n            \n\n            \n                styleUrls\n                ./results-browser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atScrollBottom\n                            \n                            \n                                selectedResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aggregateData\n                            \n                            \n                                data\n                            \n                            \n                                dataLoading\n                            \n                            \n                                resultLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resultClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aggregateData\n                    \n                \n                \n                    \n                        Type :         AggregateResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:25\n                            \n                        \n                \n                    \n                        Input used to add a list of stats at the top the results browser.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ListResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:20\n                            \n                        \n                \n                    \n                        Input array of items used to generate the list of results in the results browser.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dataLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:35\n                            \n                        \n                \n                    \n                        Whether or not the state is currently loading in data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resultLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:30\n                            \n                        \n                \n                    \n                        Input allowing the title of the result browser to be set outside of the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resultClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:41\n                            \n                        \n                \n                    \n                        Output emitting the result that was clicked on and its relevant information.\nUsed for opening and rendering the result viewer.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScroll\n                        \n                        \n                    \n                \n            \n            \n                \nonScroll(event: UIEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:59\n                \n            \n\n\n            \n                \n                    Handles the scroll event to detect when scroll is at the bottom.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            UIEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scroll event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            atScrollBottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:47\n                            \n                        \n\n                \n                    \n                        Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\nUsed to determine whether or not to render the gradient at the bottom.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListResult\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:52\n                            \n                        \n\n                \n                    \n                        Keeps track of the selected result for highlighting\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AggregateResult, ListResult } from 'ccf-database';\n\n\n/**\n * ResultsBrowser is the container component in charge of rendering the label and stats of\n * the results as well as handling the virtual scrolling and click emitters of\n * ResultsBrowserItems.\n */\n@Component({\n  selector: 'ccf-results-browser',\n  templateUrl: './results-browser.component.html',\n  styleUrls: ['./results-browser.component.scss']\n})\nexport class ResultsBrowserComponent {\n\n  /**\n   * Input array of items used to generate the list of results in the results browser.\n   */\n  @Input() data: ListResult[];\n\n  /**\n   * Input used to add a list of stats at the top the results browser.\n   */\n  @Input() aggregateData: AggregateResult[];\n\n  /**\n   * Input allowing the title of the result browser to be set outside of the component.\n   */\n  @Input() resultLabel: string;\n\n  /**\n   * Whether or not the state is currently loading in data.\n   */\n  @Input() dataLoading: boolean;\n\n  /**\n   * Output emitting the result that was clicked on and its relevant information.\n   * Used for opening and rendering the result viewer.\n   */\n  @Output() resultClicked = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\n   * Used to determine whether or not to render the gradient at the bottom.\n   */\n  atScrollBottom = false;\n\n  /**\n   * Keeps track of the selected result for highlighting\n   */\n  selectedResult: ListResult;\n\n  /**\n   * Handles the scroll event to detect when scroll is at the bottom.\n   *\n   * @param event The scroll event.\n   */\n  onScroll(event: UIEvent): void {\n    if (!event.target) {\n      return;\n    }\n\n    const { clientHeight, scrollHeight, scrollTop } = event.target as Element;\n    const diff = scrollHeight - scrollTop - clientHeight;\n    this.atScrollBottom = diff \n    \n\n    \n        \n  \n    {{ resultLabel }}\n    \n      {{stat.count}}\n      {{stat.label}}\n    \n  \n\n  \n    \n      \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./results-browser.component.scss\n                \n                .results-browser-container {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 7rem);\n  padding: 0.75rem 1.5rem 1.5rem 1.5rem;\n\n  .stat-box {\n    margin-bottom: 1.5rem;\n    line-height: 1.25;\n\n    #title {\n      margin-bottom: 0.75rem;\n      font-weight: bold;\n    }\n\n    .stat-row {\n      display: flex;\n      flex-direction: row;\n\n      .stat-value {\n        margin-right: 1rem;\n        width: 5.5rem;\n        text-align: right;\n      }\n    }\n  }\n\n  .results-browser-list {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    overflow-y: scroll;\n    scrollbar-width: thin;\n  }\n\n  .scroll-gradient {\n    position: absolute;\n    height: 9rem;\n    width: 95%;\n    bottom: 0;\n    pointer-events: none;\n\n    &.hidden {\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ resultLabel }}          {{stat.count}}      {{stat.label}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserItemComponent.html":{"url":"components/ResultsBrowserItemComponent.html","title":"component - ResultsBrowserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsBrowserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts\n\n\n    \n        Description\n    \n    \n        Component in charge of rendering the individual result browser items that are\nused in the ResultsBrowserComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser-item\n            \n\n            \n                styleUrls\n                ./results-browser-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                openImageViewer\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ListResult\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:19\n                            \n                        \n                \n                    \n                        Input object containing the label, download, click action,\nand image information for the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        openImageViewer\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:24\n                            \n                        \n                \n                    \n                        Output used to pass up the intent to open the ImageViewer\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openResult\n                        \n                        \n                    \n                \n            \n            \n                \nopenResult()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:30\n                \n            \n\n\n            \n                \n                    Decided which action to take based on the result's resultType property\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ListResult } from 'ccf-database';\n\n\n/**\n * Component in charge of rendering the individual result browser items that are\n * used in the ResultsBrowserComponent.\n */\n@Component({\n  selector: 'ccf-results-browser-item',\n  templateUrl: './results-browser-item.component.html',\n  styleUrls: ['./results-browser-item.component.scss']\n})\nexport class ResultsBrowserItemComponent {\n  /**\n   * Input object containing the label, download, click action,\n   * and image information for the component.\n   */\n  @Input() data: ListResult;\n\n  /**\n   * Output used to pass up the intent to open the ImageViewer\n   */\n  @Output() openImageViewer = new EventEmitter();\n\n  /**\n   * Decided which action to take based on the result's resultType property\n   * @param result the result which was clicked on\n   */\n  openResult(): void {\n    switch (this.data.resultType) {\n      case ('image_viewer'): {\n        // Open the image-viewer\n        this.openImageViewer.emit();\n        break;\n      }\n      case ('external_link'): {\n        // Open link in new tab\n        window.open(this.data.resultUrl, '_blank');\n        break;\n      }\n      case ('local_link'): {\n        // Open link in current tab\n        window.open(this.data.resultUrl, '_self');\n        break;\n      }\n      default: {\n        // When no resultType is set, image viewer is the default\n        this.openImageViewer.emit();\n        break;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n\n    \n      {{ data.label }}\n      {{ info }}\n    \n  \n\n  \n    \n      cloud_download\n    \n  \n  \n    \n      cloud_download\n    \n  \n\n\n    \n\n    \n                \n                    ./results-browser-item.component.scss\n                \n                @use '~@angular/material/theming' as *;\n\n.result-item {\n    border-top: 1px solid;\n    padding: .5rem;\n    display: flex;\n    flex-direction: row;\n    height: 4rem;\n\n    .result-item-click-area {\n        display: flex;\n        cursor: pointer;\n\n        .result-image {\n            width: 5rem;\n            height: 100%;\n            object-fit: cover;\n        }\n\n        .result-image-placeholder {\n            width: 5rem;\n        }\n\n        .result-description {\n            width: 15rem;\n            font-size: .625rem;\n            margin-left: 1rem;\n            margin-right: 1rem;\n            line-height: 1.25;\n\n            div {\n                width: 10rem;\n            }\n\n            .description-label {\n                font-weight: bold !important;\n            }\n\n            .description-data {\n                text-overflow: ellipsis;\n                overflow: hidden;\n                white-space: nowrap;\n                font-weight: lighter;\n            }\n        }\n    }\n\n    .result-download {\n        width: 1.5rem;\n\n        .download {\n            cursor: pointer;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ data.label }}      {{ info }}                  cloud_download                  cloud_download      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserItemModule.html":{"url":"modules/ResultsBrowserItemModule.html","title":"module - ResultsBrowserItemModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResultsBrowserItemModule\n\n\n\ncluster_ResultsBrowserItemModule_declarations\n\n\n\ncluster_ResultsBrowserItemModule_exports\n\n\n\n\nResultsBrowserItemComponent\n\nResultsBrowserItemComponent\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule -->\n\nResultsBrowserItemComponent->ResultsBrowserItemModule\n\n\n\n\n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent  -->\n\nResultsBrowserItemModule->ResultsBrowserItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResultsBrowserItemComponent } from './results-browser-item.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [ResultsBrowserItemComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [ResultsBrowserItemComponent]\n})\nexport class ResultsBrowserItemModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserModule.html":{"url":"modules/ResultsBrowserModule.html","title":"module - ResultsBrowserModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_imports\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserModule -->\n\nResultsBrowserItemModule->ResultsBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResultsBrowserItemModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResultsBrowserItemModule } from '../results-browser-item/results-browser-item.module';\nimport { ResultsBrowserComponent } from './results-browser.component';\n\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\n\n@NgModule({\n  declarations: [ResultsBrowserComponent],\n  imports: [\n    CommonModule,\n    ResultsBrowserItemModule,\n    ScrollingModule\n  ],\n  exports: [ResultsBrowserComponent]\n})\nexport class ResultsBrowserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RightSidebarComponent.html":{"url":"components/RightSidebarComponent.html","title":"component - RightSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RightSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-right-sidebar\n            \n\n            \n                styleUrls\n                ./right-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./right-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(stage: StageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of right sidebar component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stage\n                                                  \n                                                        \n                                                                        StageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Stage state service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-right-sidebar'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:14\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\nimport { StageState } from '../../core/store/stage/stage.state';\n\n\n@Component({\n  selector: 'ccf-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RightSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-right-sidebar';\n\n  /**\n   * Creates an instance of right sidebar component.\n   *\n   * @param stage Stage state service.\n   */\n  constructor(readonly stage: StageState) {}\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./right-sidebar.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  hr {\n    width: 100%;\n    margin-top: 0.75rem;\n    margin-bottom: 1.5rem;\n    border-style: solid;\n    border-width: 1.5px;\n  }\n\n  :not(hr) {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n\n  *:first-child {\n    margin-top: 1.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RightSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RightSidebarModule.html":{"url":"modules/RightSidebarModule.html","title":"module - RightSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    RightSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockSizeInputModule\n                        \n                        \n                            RotationSliderModule\n                        \n                        \n                            SlicesInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BlockSizeInputModule } from '../../shared/components/block-size-input/block-size-input.module';\nimport { RotationSliderModule } from '../../shared/components/rotation-slider/rotation-slider.module';\nimport { SlicesInputModule } from '../../shared/components/slices-input/slices-input.module';\nimport { RightSidebarComponent } from './right-sidebar.component';\n\n\n@NgModule({\n  imports: [CommonModule, BlockSizeInputModule, RotationSliderModule, SlicesInputModule],\n  declarations: [RightSidebarComponent],\n  exports: [RightSidebarComponent]\n})\nexport class RightSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rotation.html":{"url":"interfaces/Rotation.html","title":"interface - Rotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n        \n\n            \n                Description\n            \n            \n                Type in which the values of the sliders are stored. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                                \n                                        z\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X slider value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y slider value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z slider value \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss']\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    this.rotation = { ... this.rotation, [axis]: +newRotation };\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(): void {\n    this.rotation = DEFAULT_ROTATION;\n    this.rotationChange.emit(this.rotation);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RotationSliderComponent.html":{"url":"components/RotationSliderComponent.html","title":"component - RotationSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RotationSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n\n\n    \n        Description\n    \n    \n        Component that enables the setting of a Rotation object via either 3 draggable sliders\nor through an Input method.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-rotation-slider\n            \n\n            \n                styleUrls\n                ./rotation-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rotation-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRotation\n                            \n                            \n                                resetRotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotationChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotation\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ROTATION\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:37\n                            \n                        \n                \n                    \n                        Input that allows the rotation to be changed from outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rotationChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:42\n                            \n                        \n                \n                    \n                        Output that emits the new rotation whenever it is changed from within the component\n\n                    \n                \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-rotation-slider'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:32\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeRotation\n                        \n                        \n                    \n                \n            \n            \n                \nchangeRotation(newRotation: number | string, axis: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:49\n                \n            \n\n\n            \n                \n                    Function that handles updating the rotation and emitting the new value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newRotation\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new value for one of the axis to be set to\n\n                                    \n                                \n                                \n                                    axis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        which axis to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetRotation\n                        \n                        \n                    \n                \n            \n            \n                \nresetRotation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:57\n                \n            \n\n\n            \n                \n                    Function to easily reset the rotations to 0 and emit this change.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss']\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    this.rotation = { ... this.rotation, [axis]: +newRotation };\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(): void {\n    this.rotation = DEFAULT_ROTATION;\n    this.rotationChange.emit(this.rotation);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Rotation\n  \n  refresh\n\n\n\n  X\n  \n    \n  \n  {{ rotation.x }}\n\n\n\n  Y\n  \n    \n  \n  {{ rotation.y }}\n\n\n\n  Z\n  \n    \n  \n  {{ rotation.z }}\n\n\n    \n\n    \n                \n                    ./rotation-slider.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .title {\n      font-weight: bold;\n    }\n\n    .reset {\n      transform: scaleX(-1);\n      cursor: pointer;\n    }\n  }\n\n  .slider-box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 4rem;\n    padding-left: 0.5rem;\n\n    .value {\n      width: 1.5rem;\n      text-align: center;\n    }\n\n    .slider-container {\n      width: 100%;\n      padding-left: 3rem;\n      padding-right: 3rem;\n      padding-bottom: 0.5rem;\n\n      .slider {\n        -webkit-appearance: none;\n        width: 100%;\n        height: 2px;\n        border-radius: 5px;\n        outline: none;\n        opacity: 0.7;\n        -webkit-transition: 0.2s;\n        transition: opacity 0.2s;\n      }\n\n      .slider:hover {\n        opacity: 1;\n      }\n\n      .slider::-webkit-slider-thumb {\n        -webkit-appearance: none;\n        appearance: none;\n        width: 15px;\n        height: 15px;\n        border-radius: 50%;\n        cursor: pointer;\n      }\n\n      .slider::-moz-range-thumb {\n        width: 15x;\n        height: 15px;\n        border-radius: 50%;\n        cursor: pointer;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Rotation    refresh  X          {{ rotation.x }}  Y          {{ rotation.y }}  Z          {{ rotation.z }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RotationSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RotationSliderModule.html":{"url":"modules/RotationSliderModule.html","title":"module - RotationSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    RotationSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RotationSliderComponent } from './rotation-slider.component';\n\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [RotationSliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [RotationSliderComponent]\n})\nexport class RotationSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchemeDropdownComponent.html":{"url":"components/SchemeDropdownComponent.html","title":"component - SchemeDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SchemeDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts\n\n\n    \n        Description\n    \n    \n        Scheme dropdown menu (for the Layers section)\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-scheme-dropdown\n            \n\n            \n                styleUrls\n                ./scheme-dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scheme-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                schemeIdx\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                schemeChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colorScheme\n                    \n                \n                \n                    \n                        Type :         ColorScheme\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES[0]\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Current color scheme\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:18\n                            \n                        \n                \n                    \n                        All scheme options available\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Emits ColorSchemeSelection of a selected scheme\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:38\n                \n            \n\n\n            \n                \n                    Filters out scheme options to include only discrete schemes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            schemeChanged\n                        \n                        \n                    \n                \n            \n            \n                \nschemeChanged(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:46\n                \n            \n\n\n            \n                \n                    Updates the current scheme index and emits the currently selected scheme\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeIdx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:33\n                            \n                        \n\n                \n                    \n                        Index of the currently selected scheme\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../../modules/color-scheme/color-schemes';\n\n/**\n * Scheme dropdown menu (for the Layers section)\n */\n@Component({\n  selector: 'ccf-scheme-dropdown',\n  templateUrl: './scheme-dropdown.component.html',\n  styleUrls: ['./scheme-dropdown.component.scss']\n})\nexport class SchemeDropdownComponent implements OnInit {\n\n  /**\n   * All scheme options available\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * Current color scheme\n   */\n  @Input() colorScheme: ColorScheme = DEFAULT_COLOR_SCHEMES[0];\n\n  /**\n   * Emits ColorSchemeSelection of a selected scheme\n   */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Index of the currently selected scheme\n   */\n  schemeIdx = 0;\n\n  /**\n   * Filters out scheme options to include only discrete schemes\n   */\n  ngOnInit(): void {\n    this.schemeOptions = this.schemeOptions.filter(scheme => scheme.type === 'discrete');\n    this.schemeChanged(0);\n  }\n\n  /**\n   * Updates the current scheme index and emits the currently selected scheme\n   */\n  schemeChanged(idx: number): void {\n    this.colorScheme = this.schemeOptions[idx];\n    this.schemeIdx = idx;\n    this.schemeChange.emit(this.colorScheme);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./scheme-dropdown.component.scss\n                \n                .container {\n  display: flex;\n  justify-content: flex-end;\n  width: 104%;\n  height: 3rem;\n\n  mat-form-field {\n    width: 9rem;\n\n    ::ng-deep .mat-form-field-wrapper {\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n// Disable label resizing effect\n::ng-deep .mat-form-field-label {\n  transform: none !important;\n}\n\n::ng-deep .scheme-option-panel {\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  border-width: 1px;\n  border-style: solid;\n  position: absolute;\n  right: -10rem;\n  top: -1rem;\n  display: flex;\n  flex-direction: column;\n  width: 12rem;\n  height: 9rem;\n\n  mat-option:first-child {\n    margin-top: 0.75rem;\n  }\n  mat-option:last-of-type {\n    margin-bottom: 0.75rem;\n  }\n\n  mat-option {\n    .mat-option-text {\n      display: flex;\n      justify-content: center;\n\n      .mat-radio-checked {\n        .mat-radio-label {\n          .mat-radio-container {\n            .mat-radio-outer-circle {\n              border-width: 0 !important;\n            }\n          }\n        }\n      }\n\n      .scheme-radio-button {\n        .mat-radio-label {\n          .mat-radio-container {\n            width: 1rem;\n            height: 1rem;\n            .mat-radio-outer-circle {\n              width: 1rem;\n              height: 1rem;\n              border-width: 1px; \n              border-style: solid;\n            }\n            .mat-radio-inner-circle {\n              width: 1rem;\n              height: 1rem;\n            }\n          }\n          .mat-radio-label-content {\n            padding-left: 1rem;\n          }\n        }\n\n        .swatch {\n          display: flex;\n          width: 7rem;\n          height: 1rem;\n\n          :hover {\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SchemeDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchemeDropdownModule.html":{"url":"modules/SchemeDropdownModule.html","title":"module - SchemeDropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    SchemeDropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchemeDropdownModule\n\n\n\ncluster_SchemeDropdownModule_declarations\n\n\n\ncluster_SchemeDropdownModule_imports\n\n\n\ncluster_SchemeDropdownModule_exports\n\n\n\n\nSchemeDropdownComponent\n\nSchemeDropdownComponent\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nSchemeDropdownModule -->\n\nSchemeDropdownComponent->SchemeDropdownModule\n\n\n\n\n\nSchemeDropdownComponent \n\nSchemeDropdownComponent \n\nSchemeDropdownComponent  -->\n\nSchemeDropdownModule->SchemeDropdownComponent \n\n\n\n\n\nColorBarModule\n\nColorBarModule\n\nSchemeDropdownModule -->\n\nColorBarModule->SchemeDropdownModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SchemeDropdownComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorBarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SchemeDropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ColorBarModule } from '../../modules/color-scheme/color-bar/color-bar.module';\nimport { SchemeDropdownComponent } from './scheme-dropdown.component';\n\n@NgModule({\n  declarations: [SchemeDropdownComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRadioModule,\n    ColorBarModule\n  ],\n  exports: [SchemeDropdownComponent]\n})\nexport class SchemeDropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Search result interface type for the search results\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayLabel\n                                \n                                \n                                        index\n                                \n                                \n                                        node\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayLabel\n                                    \n                                \n                                \n                                    \n                                        displayLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label to be displayed in the view \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ensures order of search-results \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:         OntologyNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    instance of OntologyNode, provides data associated with a search result \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Immutable } from '@ngxs-labs/data/typings';\nimport { Store } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { JsonOntologyNode, jsonToOntologyNode } from '../../models/json-ontology';\nimport { OntologyNode } from '../../models/ontology-node';\nimport { OntologyState, OntologyStateModel } from '../../store/ontology/ontology.state';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/** Type of function for getting child nodes from a parent node. */\nexport type GetChildrenFunc = (o: OntologyNode) => OntologyNode[];\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[''] = { parent: '', children: [] } as unknown as OntologyNode;\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[''].children) as string;\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[''];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = {\n    id: 'http://purl.obolibrary.org/obo/UBERON_0013702',\n    label: 'body',\n    parent: '',\n    children: organIds,\n    synonymLabels: []\n  };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /** Root node in ontology. */\n  rootNode: Observable>;\n\n  /**\n   * Creates an instance of ontology search service.\n   *\n   * @param http The http requests service.\n   * @param store The global data store.\n   * @param ontologyState The global ontology state.\n   */\n  constructor(private http: HttpClient, private store: Store, private ontologyState: OntologyState) {\n    this.rootNode = this.ontologyState.rootNode$;\n    this.getChildren = this.getChildren.bind(this) as GetChildrenFunc;\n  }\n\n  /**\n   * Loads ontology.\n   */\n  loadOntology(): void {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => this.ontologyState.setOntology(ontology));\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.ontologyState.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchableItem.html":{"url":"interfaces/SearchableItem.html","title":"interface - SearchableItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchableItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Item that can be searched for. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        age\n                                \n                                \n                                            Optional\n                                        bmi\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        ontologyTerms\n                                \n                                \n                                            Optional\n                                        sex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Age. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                    \n                                \n                                \n                                    \n                                        bmi:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    BMI. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ontology terms. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Gender. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig.html":{"url":"interfaces/SlicesConfig.html","title":"interface - SlicesConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/stage/stage.state.ts\n        \n\n            \n                Description\n            \n            \n                Slices configuration \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        numSlices\n                                \n                                \n                                        thickness\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices per block \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of slice \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { pluck } from 'rxjs/operators';\n\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Data contained in the stage state. */\nexport interface StageStateModel {\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n}\n\n\n/**\n * Data for the main stage/3d display\n */\n@StateRepository()\n@State({\n  name: 'stage',\n  defaults: {\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN }\n  }\n})\n@Injectable()\nexport class StageState extends NgxsImmutableDataRepository {\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(pluck('blockSize'));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(pluck('rotation'));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(pluck('slicesConfig'));\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  updateBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  updateRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  updateSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig-1.html":{"url":"interfaces/SlicesConfig-1.html","title":"interface - SlicesConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing slices data of the tissue block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        numSlices\n                                \n                                \n                                        thickness\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices in the block \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of each tissue slice \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss']\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlicesInputComponent.html":{"url":"components/SlicesInputComponent.html","title":"component - SlicesInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SlicesInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n\n\n    \n        Description\n    \n    \n        Component for entering data on block slices\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-slices-input\n            \n\n            \n                styleUrls\n                ./slices-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slices-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshSlices\n                            \n                            \n                                updateSlicesData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfigChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasThicknessValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        slicesConfig\n                    \n                \n                \n                    \n                        Default value : DEFAULT_SLICES_CONFIG\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:34\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        slicesConfigChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:39\n                            \n                        \n                \n                    \n                        Emitter for slice data values\n\n                    \n                \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-slices-input'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:29\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshSlices\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshSlices()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:62\n                \n            \n\n\n            \n                \n                    Refreshes all slice data values to empty values\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSlicesData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSlicesData(input: InputEvent, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:53\n                \n            \n\n\n            \n                \n                    Limits the length of the input if needed and updates values when an input changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        InputEvent from the input element which contains the new value\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the dimension to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasThicknessValue\n                    \n                \n\n                \n                    \n                        gethasThicknessValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:44\n                                \n                            \n                    \n                        \n                                Returns whether a valid thickness value has been entered.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss']\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n    \n        \n  Tissue Slices\n  \n  refresh\n\n\n\n  \n    Thickness\n    \n    μm\n  \n\n  \n    # Slices\n    \n  \n\n\n    \n\n    \n                \n                    ./slices-input.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .title {\n      font-weight: bold;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n    }\n  }\n\n  .slices-inputs {\n    display: flex;\n\n    .field {\n      width: 33.33%;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      &.mat-focused .suffix, .suffix.show {\n        display: initial;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Slices    refresh      Thickness        μm        # Slices      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlicesInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SlicesInputModule.html":{"url":"modules/SlicesInputModule.html","title":"module - SlicesInputModule","body":"\n                   \n\n\n\n\n    Modules\n    SlicesInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { SlicesInputComponent } from './slices-input.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatInputModule, MatIconModule],\n  declarations: [SlicesInputComponent],\n  exports: [SlicesInputComponent]\n})\nexport class SlicesInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntity.html":{"url":"interfaces/SpatialEntity.html","title":"interface - SpatialEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                A spatial entity. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        creation_date\n                                \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                            Optional\n                                        creator_first_name\n                                \n                                \n                                            Optional\n                                        creator_last_name\n                                \n                                \n                                            Optional\n                                        creator_orcid\n                                \n                                \n                                        dimension_units\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        object\n                                \n                                \n                                        x_dimension\n                                \n                                \n                                        y_dimension\n                                \n                                \n                                        z_dimension\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Coloring. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creation date. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator first name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator last name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_orcid\n                                    \n                                \n                                \n                                    \n                                        creator_orcid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units dimensions are in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    IRI of the Entity this Spatial Entity represents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Entity label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Data references. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z-dimension. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReference.html":{"url":"interfaces/SpatialObjectReference.html","title":"interface - SpatialObjectReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialObjectReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                A reference to a spatial object. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        file\n                                \n                                \n                                        file_format\n                                \n                                \n                                            Optional\n                                        file_subpath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data file name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data format. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_subpath\n                                    \n                                \n                                \n                                    \n                                        file_subpath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File subpath. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacement.html":{"url":"interfaces/SpatialPlacement.html","title":"interface - SpatialPlacement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialPlacement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                Object describing the placement of an entity. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        placement_date\n                                \n                                \n                                            Optional\n                                        rotation_order\n                                \n                                \n                                        rotation_units\n                                \n                                \n                                        scaling_units\n                                \n                                \n                                        source\n                                \n                                \n                                        target\n                                \n                                \n                                        translation_units\n                                \n                                \n                                            Optional\n                                        w_rotation\n                                \n                                \n                                        x_rotation\n                                \n                                \n                                        x_scaling\n                                \n                                \n                                        x_translation\n                                \n                                \n                                        y_rotation\n                                \n                                \n                                        y_scaling\n                                \n                                \n                                        y_translation\n                                \n                                \n                                        z_rotation\n                                \n                                \n                                        z_scaling\n                                \n                                \n                                        z_translation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date placement was made. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_order\n                                    \n                                \n                                \n                                    \n                                        rotation_order:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Order rotations should be applied in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units rotation is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units scaling is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     SpatialEntity | SpatialObjectReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialEntity | SpatialObjectReference\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Source entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         SpatialEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialEntity\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Target entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units translation is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        w_rotation\n                                    \n                                \n                                \n                                    \n                                        w_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Rotation in w-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in z-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in z-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in z-dimension. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _lighting\n                                \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        scenegraph\n                                \n                                \n                                            Optional\n                                        scenegraphNode\n                                \n                                \n                                        tooltip\n                                \n                                \n                                        transformMatrix\n                                \n                                \n                                            Optional\n                                        unpickable\n                                \n                                \n                                            Optional\n                                        wireframe\n                                \n                                \n                                            Optional\n                                        zoomBasedOpacity\n                                \n                                \n                                            Optional\n                                        zoomToOnLoad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { load, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { CubeGeometry } from '@luma.gl/core';\nimport { ScenegraphNode } from '@luma.gl/experimental';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { doCollisions } from './spatial-scene-collider';\n\n\n// Programmers Note: had to disable tslint in a few places due to deficient typings.\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\n// tslint:disable: no-unsafe-any\nasync function loadGLTF(model: SpatialSceneNode): Promise {\n  const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n\n  const scenegraphNode = model.scenegraphNode ? gltf.nodes?.find((n) => n.name === model.scenegraphNode) : undefined;\n  if (scenegraphNode) {\n    if (!scenegraphNode.rotation && gltf.scene?.nodes?.length > 0) {\n      scenegraphNode.rotation = gltf.scene.nodes[gltf.scene.nodes.length-1].rotation;\n    }\n    gltf.scene = {\n      id: 'scene-1',\n      name: 'Scene',\n      nodes: [scenegraphNode]\n    };\n    gltf.scenes = [gltf.scene, ...gltf.scenes];\n  }\n  return gltf;\n}\n// tslint:enable: no-unsafe-any\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: {[key: string]: unknown}): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // tslint:disable-next-line: no-unsafe-any\n        mesh: new CubeGeometry(),\n        wireframe: false,\n        getTransformMatrix: (d) => (d as {transformMatrix: number[][]}).transformMatrix,\n        getColor: (d) => (d as {color: [number, number, number, number]}).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({data: data || [], zoomOpacity: 0.8, doCollisions: false});\n\n    // tslint:disable-next-line: no-unsafe-any\n    registerLoaders([DracoWorkerLoader, GLTFLoader]);\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as {data: SpatialSceneNode[], zoomOpacity: number, doCollisions: boolean};\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return [\n      meshLayer('cubes', cubes, {wireframe: false}),\n      meshLayer('wireframes', wireframes, {wireframe: true, pickable: false}),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          id: 'models-' + model['@id'],\n          opacity: model.zoomBasedOpacity ? state.zoomOpacity : 1.0,\n          pickable: !model.unpickable,\n          coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n          data: [model],\n          scenegraph: model.scenegraphNode ?\n            loadGLTF(model) as Promise :\n            model.scenegraph as unknown as ScenegraphNode,\n          _lighting: model._lighting,  // 'pbr' | undefined\n          getTransformMatrix: model.transformMatrix as unknown as number[][],\n          getColor: model.color || [0, 255, 0, 0.5*255],\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(e: {info: object}): unknown {\n    return e.info;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode-1.html":{"url":"interfaces/SpatialSceneNode-1.html","title":"interface - SpatialSceneNode-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-scene.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _lighting\n                                \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        scenegraph\n                                \n                                \n                                            Optional\n                                        scenegraphNode\n                                \n                                \n                                        tooltip\n                                \n                                \n                                        transformMatrix\n                                \n                                \n                                            Optional\n                                        unpickable\n                                \n                                \n                                            Optional\n                                        wireframe\n                                \n                                \n                                            Optional\n                                        zoomBasedOpacity\n                                \n                                \n                                            Optional\n                                        zoomToOnLoad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport { getSpatialEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { ccf, rui } from './util/prefixes';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': 'SpatialSceneNode';\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return getSpatialEntity(this.db.store, bodyId);\n  }\n\n  getReferenceOrgans(filter?: Filter): SpatialEntity[] {\n    let organsId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        organsId = ccf.spatial.MaleOrgans.id;\n        break;\n      case 'Female':\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n      case 'Both':\n      default:\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n    }\n    return [getSpatialEntity(this.db.store, organsId)];\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const wholeBody = getSpatialEntity(this.db.store, ccf.spatial.Body.id);\n    const body = this.getReferenceBody(filter);\n    const organs = getSpatialEntity(this.db.store, ccf.spatial.MaleOrgans.id);\n    const store = this.db.store;\n    const terms = filter?.ontologyTerms || [];\n    const hasTerm = {\n      body: terms.indexOf(rui.body.id) === 0,\n      kidney: terms.indexOf(rui.kidney.id) === 0,\n      right_kidney: terms.indexOf(rui.right_kidney.id) === 0,\n      left_kidney: terms.indexOf(rui.left_kidney.id) === 0,\n      spleen: terms.indexOf(rui.spleen.id) === 0,\n    };\n\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      this.getSceneNode(body, wholeBody, {unpickable: true, color: [255, 255, 255, 1*255]}),\n      ...this.getReferenceOrgans(filter).map((organ) =>\n        this.getSceneNode(organ, body, {unpickable: true, _lighting: 'pbr', zoomBasedOpacity: true,  color: [255, 0, 0, 1*255]})\n      ),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.right_kidney, zoomToOnLoad: hasTerm.right_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.left_kidney, zoomToOnLoad: hasTerm.left_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleen').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.spleen, zoomToOnLoad: hasTerm.spleen})\n    ];\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), wholeBody, {color: [0, 0, 255, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), wholeBody, {color: [255, 0, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC1').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC2').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC3').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true})\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const highlighted = new Set(filter?.highlightedEntities);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, {\n        color: highlighted.has(entity.entityId as string) ? [10, 10, 229, 0.9*255] : [255, 255, 255, 0.9*255]\n      })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial = {}): SpatialSceneNode | undefined {\n    const has3dObject = source.object && source.object.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4().rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId || undefined,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      } as SpatialSceneNode;\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerOverlayComponent.html":{"url":"components/SpinnerOverlayComponent.html","title":"component - SpinnerOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n\n\n    \n        Description\n    \n    \n        Overlay component that displays a progress spinner and\nan optional text description.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spinner-overlay\n            \n\n            \n                styleUrls\n                ./spinner-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:19\n                            \n                        \n                \n                    \n                        Whether the overlay is active/showing. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:22\n                            \n                        \n                \n                    \n                        Optional text description displayed alongside the spinner. \n\n                    \n                \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-spinner-overlay'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Overlay component that displays a progress spinner and\n * an optional text description.\n */\n@Component({\n  selector: 'ccf-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerOverlayComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spinner-overlay';\n\n  /** Whether the overlay is active/showing. */\n  @Input() @HostBinding('class.active') active = false;\n\n  /** Optional text description displayed alongside the spinner. */\n  @Input() text: string;\n}\n\n    \n\n    \n        \n{{ text }}\n\n    \n\n    \n                \n                    ./spinner-overlay.component.scss\n                \n                :host {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 4rem);\n  top: 4rem;\n  z-index: 100;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.6s, opacity 0.4s ease-in-out;\n\n  mat-spinner {\n    margin-bottom: 1rem;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out 0.3s;\n  }\n\n  &.active {\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n\n    mat-spinner {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpinnerOverlayModule.html":{"url":"modules/SpinnerOverlayModule.html","title":"module - SpinnerOverlayModule","body":"\n                   \n\n\n\n\n    Modules\n    SpinnerOverlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerOverlayComponent],\n  exports: [SpinnerOverlayComponent]\n})\nexport class SpinnerOverlayModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StageNavComponent.html":{"url":"components/StageNavComponent.html","title":"component - StageNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StageNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Component that allows the user to change the viewing angle and rendering mode of the stage.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-stage-nav\n            \n\n            \n                styleUrls\n                ./stage-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stage-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateSide\n                            \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                view3D\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sideChange\n                            \n                            \n                                view3DChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :         Side\n\n                    \n                \n                \n                    \n                        Default value : 'anterior'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:25\n                            \n                        \n                \n                    \n                        Input that allows changing the current side from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3D\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:30\n                            \n                        \n                \n                    \n                        Input that allows toggling of 3D view on / off from outside the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sideChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:35\n                            \n                        \n                \n                    \n                        Output that emits whenever the current side selection changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3DChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:40\n                            \n                        \n                \n                    \n                        Output that emits whenever the 3D view is toggled on / off\n\n                    \n                \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-stage-nav'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:20\n                            \n                        \n\n                \n                    \n                        HTML class name\n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSide\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSide(selection: Side)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:46\n                \n            \n\n\n            \n                \n                    Handles the updating of the side selection and calling the event emitter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                Side\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new selected side\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateView\n                        \n                        \n                    \n                \n            \n            \n                \nupdateView(selection: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:56\n                \n            \n\n\n            \n                \n                    Handles updating of the boolean that keeps track of current view\nand calling the event emitter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        3D (true) or Register (false)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, HostBinding } from '@angular/core';\n\n\n/** Valid values for side. */\nexport type Side = 'left' | 'right' | 'anterior' | 'posterior';\n\n/**\n * Component that allows the user to change the viewing angle and rendering mode of the stage.\n */\n@Component({\n  selector: 'ccf-stage-nav',\n  templateUrl: './stage-nav.component.html',\n  styleUrls: ['./stage-nav.component.scss']\n})\nexport class StageNavComponent {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-stage-nav';\n\n  /**\n   * Input that allows changing the current side from outside the component\n   */\n  @Input() side: Side = 'anterior';\n\n  /**\n   * Input that allows toggling of 3D view on / off from outside the component\n   */\n  @Input() view3D = false;\n\n  /**\n   * Output that emits whenever the current side selection changes\n   */\n  @Output() sideChange = new EventEmitter();\n\n  /**\n   * Output that emits whenever the 3D view is toggled on / off\n   */\n  @Output() view3DChange = new EventEmitter();\n\n  /**\n   * Handles the updating of the side selection and calling the event emitter\n   * @param selection the new selected side\n   */\n  updateSide(selection: Side): void {\n    this.side = selection;\n    this.sideChange.emit(this.side);\n  }\n\n  /**\n   * Handles updating of the boolean that keeps track of current view\n   * and calling the event emitter.\n   * @param selection 3D (true) or Register (false)\n   */\n  updateView(selection: boolean): void {\n    this.view3D = selection;\n    this.view3DChange.emit(this.view3D);\n  }\n}\n\n    \n\n    \n        \n  Left\n  Right\n  Anterior\n  Posterior\n\n\n\n\n\n    \n\n    \n                \n                    ./stage-nav.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  .view-slider {\n    margin-left: -1rem;\n    margin-bottom: .5rem;\n  }\n\n  .input-group {\n    margin-right: 1.5rem;\n    margin-bottom: .5rem;\n\n    .nav-input {\n      margin-right: 1.5rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Left  Right  Anterior  Posterior'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StageNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StageNavModule.html":{"url":"modules/StageNavModule.html","title":"module - StageNavModule","body":"\n                   \n\n\n\n\n    Modules\n    StageNavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_imports\n\n\n\ncluster_StageNavModule_exports\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\n\n\nStageNavModule\n\nStageNavModule\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LabeledSlideToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { LabeledSlideToggleModule } from '../../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\n\nimport { StageNavComponent } from './stage-nav.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatRadioModule, LabeledSlideToggleModule],\n  declarations: [StageNavComponent],\n  exports: [StageNavComponent]\n})\nexport class StageNavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StageState.html":{"url":"injectables/StageState.html","title":"injectable - StageState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/stage/stage.state.ts\n        \n\n            \n                Description\n            \n            \n                Data for the main stage/3d display\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                blockSize$\n                            \n                            \n                                    Readonly\n                                rotation$\n                            \n                            \n                                    Readonly\n                                slicesConfig$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateBlockSize\n                            \n                            \n                                updateRotation\n                            \n                            \n                                updateSlicesConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBlockSize\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBlockSize(blockSize: XYZTriplet)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/stage/stage.state.ts:64\n                \n            \n\n\n            \n                \n                    Updates the block size\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    blockSize\n                                    \n                                                XYZTriplet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new block size values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateRotation\n                        \n                        \n                    \n                \n            \n            \n                \nupdateRotation(rotation: XYZTriplet)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/stage/stage.state.ts:74\n                \n            \n\n\n            \n                \n                    Updates the rotation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rotation\n                                    \n                                                XYZTriplet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new rotation values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSlicesConfig\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSlicesConfig(slicesConfig: SlicesConfig)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/stage/stage.state.ts:84\n                \n            \n\n\n            \n                \n                    Updates the slice configuration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    slicesConfig\n                                    \n                                                SlicesConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new slice configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            blockSize$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('blockSize'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/store/stage/stage.state.ts:52\n                            \n                        \n\n                \n                    \n                        Block size observable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            rotation$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('rotation'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/store/stage/stage.state.ts:54\n                            \n                        \n\n                \n                    \n                        Rotation observable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            slicesConfig$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('slicesConfig'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/store/stage/stage.state.ts:56\n                            \n                        \n\n                \n                    \n                        Slice configuration observable \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { pluck } from 'rxjs/operators';\n\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Data contained in the stage state. */\nexport interface StageStateModel {\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n}\n\n\n/**\n * Data for the main stage/3d display\n */\n@StateRepository()\n@State({\n  name: 'stage',\n  defaults: {\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN }\n  }\n})\n@Injectable()\nexport class StageState extends NgxsImmutableDataRepository {\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(pluck('blockSize'));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(pluck('rotation'));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(pluck('slicesConfig'));\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  updateBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  updateRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  updateSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StageStateModel.html":{"url":"interfaces/StageStateModel.html","title":"interface - StageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/stage/stage.state.ts\n        \n\n            \n                Description\n            \n            \n                Data contained in the stage state. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blockSize\n                                \n                                \n                                        rotation\n                                \n                                \n                                        slicesConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockSize\n                                    \n                                \n                                \n                                    \n                                        blockSize:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Block size \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                    \n                                \n                                \n                                    \n                                        rotation:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model rotation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slicesConfig\n                                    \n                                \n                                \n                                    \n                                        slicesConfig:         SlicesConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SlicesConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Slice configuration \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { pluck } from 'rxjs/operators';\n\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Data contained in the stage state. */\nexport interface StageStateModel {\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n}\n\n\n/**\n * Data for the main stage/3d display\n */\n@StateRepository()\n@State({\n  name: 'stage',\n  defaults: {\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN }\n  }\n})\n@Injectable()\nexport class StageState extends NgxsImmutableDataRepository {\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(pluck('blockSize'));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(pluck('rotation'));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(pluck('slicesConfig'));\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  updateBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  updateRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  updateSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoreDebugComponent.html":{"url":"components/StoreDebugComponent.html","title":"component - StoreDebugComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StoreDebugComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n\n\n    \n        Description\n    \n    \n        Simple component for displaying the current values in the data store.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-store-debug\n            \n\n            \n                styleUrls\n                ./store-debug.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./store-debug.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                root\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of store debug component.\nSets up the store data listeners.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data store.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detection for this component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-store-debug'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:60\n                \n            \n\n\n            \n                \n                    Cleans up subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            root\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:36\n                            \n                        \n\n                \n                    \n                        Latest store data \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:39\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:26\n                                \n                            \n                    \n                        \n                                Gets the store data as a list of state name to key-value pairs\n\n\n                                \n                                    Returns :         KVList\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnDestroy, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\n\n/** Key-Value pair */\nexport type KVPair = [string, T];\n/** Array of Key-Value pairs */\nexport type KVList = KVPair[];\n\n/**\n * Simple component for displaying the current values in the data store.\n */\n@Component({\n  selector: 'ccf-store-debug',\n  templateUrl: './store-debug.component.html',\n  styleUrls: ['./store-debug.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StoreDebugComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-store-debug';\n\n  /**\n   * Gets the store data as a list of state name to key-value pairs\n   */\n  get data(): KVList {\n    const states: KVList = Object.entries(this.root as object);\n    const stateValues: KVList = states.map(([key, values]) => {\n      return [key, Object.entries(values)];\n    });\n    const statesWithData = stateValues.filter(([_key, values]) => values.length > 0);\n    return statesWithData;\n  }\n\n  /** Latest store data */\n  private root: unknown = {};\n\n  /** Subscriptions managed by this component */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of store debug component.\n   * Sets up the store data listeners.\n   *\n   * @param store The data store.\n   * @param cdr Change detection for this component.\n   */\n  constructor(store: Store, cdr: ChangeDetectorRef) {\n    const sub = store.subscribe(root => {\n      this.root = root;\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  /**\n   * Cleans up subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{ state[0] }}\n  \n    \n      {{ kv[0] }}: {{ kv[1] | json }}\n    \n  \n\n\n    \n\n    \n                \n                    ./store-debug.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ state[0] }}            {{ kv[0] }}: {{ kv[1] | json }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StoreDebugComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreDebugModule.html":{"url":"modules/StoreDebugModule.html","title":"module - StoreDebugModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreDebugModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/store-debug/store-debug.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreDebugComponent } from './store-debug.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [StoreDebugComponent],\n  exports: [StoreDebugComponent]\n})\nexport class StoreDebugModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { environment } from '../../../environments/environment';\nimport { DataState } from './data/data.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { OntologyState } from './ontology/ontology.state';\nimport { ViewerState } from './viewer/viewer.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  IconRegistryState,\n  DataState,\n  OntologyState,\n  ViewerState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                component\n                            \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                    Private\n                                initializeImpl\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyThemeClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:82\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:37\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:20\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeImpl(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:67\n                \n            \n\n\n            \n                \n                    Implementation of initialize.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The top level component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetTheme\n                        \n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:56\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:46\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:13\n                            \n                        \n\n                \n                    \n                        Top level component on which themes are applied. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:15\n                            \n                        \n\n                \n                    \n                        Default theme class. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:17\n                            \n                        \n\n                \n                    \n                        Currently active theme class. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, Inject, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  /** Top level component on which themes are applied. */\n  private component?: ComponentRef;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const service = component.injector.get(ThemingService);\n    service.initializeImpl(component);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme || '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) { return; }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Implementation of initialize.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  private initializeImpl(component: ComponentRef): void {\n    if (this.component) {\n      throw new Error('Theming service has already been initialized!');\n    }\n\n    this.component = component;\n    this.applyThemeClass(this.theme);\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const component = this.component;\n    if (!cls || !component) { return; }\n\n    const renderer = component.injector.get(Renderer2, null);\n    if (!renderer) { return; }\n\n    const root = component.location.nativeElement as HTMLElement;\n    const overlay = component.injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) { renderer[methodName](overlay, cls); }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService-1.html":{"url":"injectables/ThemingService-1.html","title":"injectable - ThemingService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                component\n                            \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                    Private\n                                initializeImpl\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyThemeClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:82\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:37\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:20\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeImpl(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:67\n                \n            \n\n\n            \n                \n                    Implementation of initialize.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The top level component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetTheme\n                        \n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:56\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:46\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:13\n                            \n                        \n\n                \n                    \n                        Top level component on which themes are applied. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:15\n                            \n                        \n\n                \n                    \n                        Default theme class. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:17\n                            \n                        \n\n                \n                    \n                        Currently active theme class. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, Inject, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  /** Top level component on which themes are applied. */\n  private component?: ComponentRef;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const service = component.injector.get(ThemingService);\n    service.initializeImpl(component);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme || '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) { return; }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Implementation of initialize.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  private initializeImpl(component: ComponentRef): void {\n    if (this.component) {\n      throw new Error('Theming service has already been initialized!');\n    }\n\n    this.component = component;\n    this.applyThemeClass(this.theme);\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const component = this.component;\n    if (!cls || !component) { return; }\n\n    const renderer = component.injector.get(Renderer2, null);\n    if (!renderer) { return; }\n\n    const root = component.location.nativeElement as HTMLElement;\n    const overlay = component.injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) { renderer[methodName](overlay, cls); }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TiffInfo.html":{"url":"interfaces/TiffInfo.html","title":"interface - TiffInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TiffInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        offsets\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offsets\n                                    \n                                \n                                \n                                    \n                                        offsets:     string | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Loader, createZarrLoader, OMEZarrReader, createOMETiffLoader } from '@hms-dbmi/viv';\n\nexport enum LoaderType {\n  Zarr = 'zarr',\n  OMEZarr = 'ome-zarr',\n  StaticZarr = 'static',\n\n  Tiff = 'tiff',\n  Tiff2 = 'tiff 2',\n  BFTiff = 'bf tiff',\n  CovidTiff = 'covid tiff',\n  StaticTiff = 'static tiff'\n}\n\n// createLoader info argument types\nexport type ZarrInfo = Parameters[0];\nexport interface OMEZarrInfo {\n  url: string;\n}\nexport interface TiffInfo {\n  url: string;\n  offsets?: string | number[];\n}\n\n// Copied from vitessce-image-viewer demo source\nexport async function createLoader(\n  type: LoaderType,\n  info: ZarrInfo | OMEZarrInfo | TiffInfo\n): Promise {\n  switch (type) {\n    case LoaderType.Zarr:\n    case LoaderType.StaticZarr:\n      return createZarrLoader(info as ZarrInfo);\n\n    case LoaderType.OMEZarr: {\n      const { url } = info as OMEZarrInfo;\n      const reader = await OMEZarrReader.fromUrl(url);\n      const { loader } = await reader.loadOMEZarr();\n      return loader;\n    }\n\n    case LoaderType.Tiff:\n    case LoaderType.Tiff2:\n    case LoaderType.BFTiff:\n    case LoaderType.CovidTiff:\n    case LoaderType.StaticTiff: {\n      const { url, offsets = [] } = info as TiffInfo;\n      return createOMETiffLoader({ url, offsets: await loadOffsets(offsets) });\n    }\n\n    default:\n      throw Error(`Pyramid type (${type}) is not supported`);\n  }\n}\n\nasync function loadOffsets(url: string | number[]): Promise {\n  if (typeof url !== 'string') { return url; }\n  const res = await fetch(url);\n  return res.status !== 404 ? await res.json() as number[] : [];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-toggle-button'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether this button is attach to a drawer in position 'end'. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:79\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:59\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:69\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:91\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the owning drawer is opened. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"start\" | \"end\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'start'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:34\n                            \n                        \n\n                \n                    \n                        Position of the owning side drawer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:25\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'keyboard_arrow_right';\n    let collapse = 'keyboard_arrow_left';\n    if (this.position === 'end') { ([expand, collapse] = [collapse, expand]); }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0px 4px 4px 0px;\n  cursor: pointer;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 4px 0px 0px 4px;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  transform: scale(1,2);\n  top: .6rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent-1.html":{"url":"components/ToggleButtonComponent-1.html","title":"component - ToggleButtonComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-toggle-button'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether this button is attach to a drawer in position 'end'. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:79\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:59\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:69\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:91\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the owning drawer is opened. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"start\" | \"end\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'start'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:34\n                            \n                        \n\n                \n                    \n                        Position of the owning side drawer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:25\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'keyboard_arrow_right';\n    let collapse = 'keyboard_arrow_left';\n    if (this.position === 'end') { ([expand, collapse] = [collapse, expand]); }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0px 4px 4px 0px;\n  cursor: pointer;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 4px 0px 0px 4px;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  transform: scale(1,2);\n  top: .6rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserName.html":{"url":"interfaces/UserName.html","title":"interface - UserName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n        \n\n            \n                Description\n            \n            \n                User name data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * User name data\n */\nexport interface UserName {\n\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss']\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Current user name\n   */\n  @Input() name: UserName = {\n    firstName: '',\n    lastName: ''\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValueObject.html":{"url":"interfaces/ValueObject.html","title":"interface - ValueObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValueObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@value' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @value\n                                    \n                                \n                                \n                                    \n                                        @value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@value' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerComponent.html":{"url":"components/ViewerComponent.html","title":"component - ViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-viewer\n            \n\n            \n                styleUrls\n                ./viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _layers\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                canvas\n                            \n                            \n                                isDemo\n                            \n                            \n                                    Private\n                                sensor\n                            \n                            \n                                    Private\n                                viewer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                sourcesFromUrls\n                            \n                            \n                                    Private\n                                    Async\n                                updateLayers\n                            \n                            \n                                    Private\n                                    Async\n                                updateSources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                            \n                                sources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                channelsChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sources\n                                \n                                \n                                    layers\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(container: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        channelsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:76\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sourcesFromUrls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sourcesFromUrls(urls: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urls\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DataSource[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            updateSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSources()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ImageViewerLayer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDemo\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sensor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResizeSensor\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageViewer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:81\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n\n                \n                    \n                        getsources()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:63\n                                \n                            \n\n                \n                    \n                        setsources(urls: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            urls\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n\n                \n                    \n                        getlayers()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:73\n                                \n                            \n\n                \n                    \n                        setlayers(layers: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:69\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layers\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { ChannelConfig, DataSource, ImageViewer, LoaderType, PictureInPictureViewer, TiffInfo } from 'ccf-image-viewer';\nimport { ResizeSensor } from 'css-element-queries';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\nconst DEMO_SOURCE: DataSource = {\n  type: LoaderType.Tiff,\n  info: {\n    url: 'https://vitessce-demo-data.storage.googleapis.com/test-data/hubmap/pyramid_0.0.2/spraggins.ome.tif'\n  }\n};\n\nfunction hexToRgbTriple(hex: string): [number, number, number] {\n  // tslint:disable: no-bitwise\n  if (hex === undefined || hex.length !== 7) {\n    return [255, 255, 255];\n  }\n\n  const value = Number.parseInt(hex.slice(1), 16) | 0;\n  if (Number.isNaN(value)) {\n    return [255, 255, 255];\n  }\n\n  const red = (value >> 16) & 0xff;\n  const green = (value >> 8) & 0xff;\n  const blue = value & 0xff;\n\n  return [red, green, blue];\n  // tslint:enable: no-bitwise\n}\n\nfunction brightnessToSlider(brightness: [number, number]): [number, number] {\n  const SLIDER_MAX = 2 ** 16 - 1;\n  return [\n    Math.trunc(SLIDER_MAX * brightness[0] / 100),\n    Math.trunc(SLIDER_MAX * brightness[1] / 100)\n  ];\n}\n\n@Component({\n  selector: 'ccf-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewerComponent implements AfterViewInit, OnDestroy {\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set sources(urls: string[]) {\n    this._sources = this.sourcesFromUrls(urls);\n    this.isDemo = false;\n    if (this._sources.length === 0) {\n      this._sources = []; // Disabled showing demo image via [DEMO_SOURCE]\n      this.isDemo = true;\n    }\n\n    this.clear();\n    this.updateSources();\n  }\n  get sources(): string[] {\n    return this._sources.map(source => (source.info as TiffInfo).url);\n  }\n  private _sources: DataSource[] = []; // Disabled showing demo image via [DEMO_SOURCE]\n\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set layers(layers: ImageViewerLayer[]) {\n    this._layers = layers;\n    this.updateLayers();\n  }\n  get layers(): ImageViewerLayer[] { return this._layers; }\n  private _layers: ImageViewerLayer[] = [];\n\n  @Output() channelsChange = new EventEmitter();\n\n  @ViewChild('canvas', { read: ElementRef }) canvas: ElementRef;\n\n  isDemo = true;\n  private viewer: ImageViewer;\n  private sensor: ResizeSensor;\n\n  constructor(private readonly container: ElementRef) { }\n\n  ngAfterViewInit(): void {\n    const {\n      container: { nativeElement: container },\n      canvas: { nativeElement: element }\n    } = this;\n    const { clientWidth, clientHeight } = element;\n\n    this.viewer = new PictureInPictureViewer({\n      id: 'image-viewer',\n      initialViewState: {\n        zoom: -6,\n        target: [25000, 10000, 0]\n      },\n      canvas: element,\n      width: clientWidth,\n      height: clientHeight,\n      overview: {\n        detailWidth: clientWidth,\n        detailHeight: clientHeight\n      },\n      defaultChannelConfig: {\n        active: false\n      }\n    });\n\n    this.sensor = new ResizeSensor(container, ({ width, height }) => {\n      this.viewer.setSize(width, height);\n    });\n\n    (async () => {\n      await this.updateSources();\n      await this.updateLayers();\n    })();\n  }\n\n  ngOnDestroy(): void {\n    this.sensor.detach();\n    this.viewer.finalize();\n  }\n\n  private async updateSources(): Promise {\n    const { _sources: sources, viewer, channelsChange } = this;\n    if (!viewer) {\n      return;\n    }\n\n    await viewer.setSources(sources);\n\n    const isRgb = viewer.loaders.some((loader: { isRgb: boolean }) => loader.isRgb);\n    channelsChange.emit(!isRgb ? viewer.channelNames : []);\n  }\n\n  private async updateLayers(): Promise {\n    const { layers, viewer } = this;\n    if (!viewer || layers.length === 0) {\n      return;\n    }\n\n    const configs: Record> = layers.reduce((result, layer) => ({\n      ...result,\n      [layer.id]: {\n        active: layer.selected,\n        color: hexToRgbTriple(layer.color),\n        slider: brightnessToSlider(layer.brightness)\n      }\n    }), {});\n\n    await viewer.updateChannelConfigs(configs);\n  }\n\n  private clear(): void {\n    this.viewer?.clear();\n  }\n\n  private sourcesFromUrls(urls: string[]): DataSource[] {\n    return urls.filter(url => !!url).map(url => ({\n      type: LoaderType.Tiff,\n      info: { url }\n    }));\n  }\n}\n\n    \n\n    \n        \n  warning\n  This is a demo image\n\n\n\n    \n\n    \n                \n                    ./viewer.component.scss\n                \n                :host {\n  .demo-warning {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n    text-align: center;\n\n    .text {\n      vertical-align: top;\n    }\n  }\n\n  canvas {\n    position: relative !important;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  warning  This is a demo image'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewerModule.html":{"url":"modules/ViewerModule.html","title":"module - ViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nViewerComponent\n\nViewerComponent\n\n\n\nViewerModule\n\nViewerModule\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ViewerComponent } from './viewer.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [ViewerComponent],\n  exports: [ViewerComponent]\n})\nexport class ViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewerState.html":{"url":"injectables/ViewerState.html","title":"injectable - ViewerState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ViewerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsDataEntityCollectionsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                activeLayers$\n                            \n                            \n                                    Readonly\n                                layers$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLayers\n                            \n                            \n                                    Private\n                                getAutoColor\n                            \n                            \n                                setDefaultScheme\n                            \n                            \n                                updateLayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createLayers\n                        \n                        \n                    \n                \n            \n            \n                \ncreateLayers(ids: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAutoColor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAutoColor(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDefaultScheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetDefaultScheme(scheme: ColorScheme)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scheme\n                                    \n                                                ColorScheme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLayer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLayer(id: string, changes: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changes\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            activeLayers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            layers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { EntityUpdate, NgxsEntityCollections } from '@ngxs-labs/data/typings';\nimport { createEntityCollections } from '@ngxs-labs/data/utils';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { DEFAULT_COLOR_SCHEMES } from '../../../modules/color-scheme/color-schemes';\nimport { ColorScheme } from '../../models/color-scheme';\nimport { ImageViewerLayer, PureImageViewerLayer } from '../../models/image-viewer-layer';\n\n\nconst NUM_LAYERS_SELECTED_ON_CREATION = 4;\nconst IMAGE_VIEWER_LAYER_DEFAULTS = {\n  brightness: [2, 31] as [number, number],\n  transparency: 100,\n  customizedColor: false,\n  defaultOrder: -1\n};\n\nexport interface ViewerStateModel extends NgxsEntityCollections {\n  defaultScheme: ColorScheme;\n  autoColorIndex: number;\n  selectionCounter: number;\n}\n\n@StateRepository()\n@State({\n  name: 'viewer',\n  defaults: {\n    ...createEntityCollections(),\n    defaultScheme: DEFAULT_COLOR_SCHEMES[0],\n    autoColorIndex: 0,\n    selectionCounter: 0\n  }\n})\n@Injectable()\nexport class ViewerState extends NgxsDataEntityCollectionsRepository {\n  readonly layers$ = this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  );\n  readonly activeLayers$ = this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  );\n\n  @DataAction()\n  createLayers(ids: string[]): void {\n    const maxSelected = NUM_LAYERS_SELECTED_ON_CREATION;\n    const { defaultScheme } = this.snapshot;\n    const length = ids.length;\n\n    this.removeEntitiesMany(this.ids);\n    this.addEntitiesMany(ids.map((id, index) => ({\n      id,\n      label: id,\n      colorScheme: defaultScheme,\n      color: index ): void {\n    const { autoColorIndex, selectionCounter } = this.snapshot;\n    const layer = this.entities[id];\n    let color = changes.color || layer.color;\n    let defaultOrder = layer.defaultOrder;\n    if (!layer.customizedColor && !changes.customizedColor &&\n        changes.selected && layer.defaultOrder === -1) {\n      color = this.getAutoColor(autoColorIndex);\n      defaultOrder = autoColorIndex;\n      this.ctx.patchState({ autoColorIndex: autoColorIndex + 1 });\n    }\n\n    this.updateEntitiesMany([{\n      id,\n      changes: {\n        ...changes,\n        color,\n        selectionOrder: selectionCounter,\n        defaultOrder\n      }\n    }]);\n    this.ctx.patchState({ selectionCounter: selectionCounter + 1 });\n  }\n\n  @DataAction()\n  setDefaultScheme(scheme: ColorScheme): void {\n    const { entities } = this;\n    const changes: EntityUpdate[] = [];\n    for (const [id, layer] of Object.entries(entities)) {\n      if (!layer.customizedColor) {\n        const index = layer.colorScheme.colors.indexOf(layer.color);\n        changes.push({\n          id,\n          changes: {\n            colorScheme: scheme,\n            color: scheme.colors[index]\n          }\n        });\n      }\n    }\n\n    this.updateEntitiesMany(changes);\n    this.ctx.patchState({ defaultScheme: scheme });\n  }\n\n  private getAutoColor(index: number): string {\n    const { defaultScheme: { colors } } = this.snapshot;\n    const order = [0, 6, 3, 1, 5, 2, 4];\n    return colors[order[index % order.length]];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewerStateModel.html":{"url":"interfaces/ViewerStateModel.html","title":"interface - ViewerStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewerStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsEntityCollections\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        autoColorIndex\n                                \n                                \n                                        defaultScheme\n                                \n                                \n                                        selectionCounter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoColorIndex\n                                    \n                                \n                                \n                                    \n                                        autoColorIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultScheme\n                                    \n                                \n                                \n                                    \n                                        defaultScheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionCounter\n                                    \n                                \n                                \n                                    \n                                        selectionCounter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { EntityUpdate, NgxsEntityCollections } from '@ngxs-labs/data/typings';\nimport { createEntityCollections } from '@ngxs-labs/data/utils';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { DEFAULT_COLOR_SCHEMES } from '../../../modules/color-scheme/color-schemes';\nimport { ColorScheme } from '../../models/color-scheme';\nimport { ImageViewerLayer, PureImageViewerLayer } from '../../models/image-viewer-layer';\n\n\nconst NUM_LAYERS_SELECTED_ON_CREATION = 4;\nconst IMAGE_VIEWER_LAYER_DEFAULTS = {\n  brightness: [2, 31] as [number, number],\n  transparency: 100,\n  customizedColor: false,\n  defaultOrder: -1\n};\n\nexport interface ViewerStateModel extends NgxsEntityCollections {\n  defaultScheme: ColorScheme;\n  autoColorIndex: number;\n  selectionCounter: number;\n}\n\n@StateRepository()\n@State({\n  name: 'viewer',\n  defaults: {\n    ...createEntityCollections(),\n    defaultScheme: DEFAULT_COLOR_SCHEMES[0],\n    autoColorIndex: 0,\n    selectionCounter: 0\n  }\n})\n@Injectable()\nexport class ViewerState extends NgxsDataEntityCollectionsRepository {\n  readonly layers$ = this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  );\n  readonly activeLayers$ = this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  );\n\n  @DataAction()\n  createLayers(ids: string[]): void {\n    const maxSelected = NUM_LAYERS_SELECTED_ON_CREATION;\n    const { defaultScheme } = this.snapshot;\n    const length = ids.length;\n\n    this.removeEntitiesMany(this.ids);\n    this.addEntitiesMany(ids.map((id, index) => ({\n      id,\n      label: id,\n      colorScheme: defaultScheme,\n      color: index ): void {\n    const { autoColorIndex, selectionCounter } = this.snapshot;\n    const layer = this.entities[id];\n    let color = changes.color || layer.color;\n    let defaultOrder = layer.defaultOrder;\n    if (!layer.customizedColor && !changes.customizedColor &&\n        changes.selected && layer.defaultOrder === -1) {\n      color = this.getAutoColor(autoColorIndex);\n      defaultOrder = autoColorIndex;\n      this.ctx.patchState({ autoColorIndex: autoColorIndex + 1 });\n    }\n\n    this.updateEntitiesMany([{\n      id,\n      changes: {\n        ...changes,\n        color,\n        selectionOrder: selectionCounter,\n        defaultOrder\n      }\n    }]);\n    this.ctx.patchState({ selectionCounter: selectionCounter + 1 });\n  }\n\n  @DataAction()\n  setDefaultScheme(scheme: ColorScheme): void {\n    const { entities } = this;\n    const changes: EntityUpdate[] = [];\n    for (const [id, layer] of Object.entries(entities)) {\n      if (!layer.customizedColor) {\n        const index = layer.colorScheme.colors.indexOf(layer.color);\n        changes.push({\n          id,\n          changes: {\n            colorScheme: scheme,\n            color: scheme.colors[index]\n          }\n        });\n      }\n    }\n\n    this.updateEntitiesMany(changes);\n    this.ctx.patchState({ defaultScheme: scheme });\n  }\n\n  private getAutoColor(index: number): string {\n    const { defaultScheme: { colors } } = this.snapshot;\n    const order = [0, 6, 3, 1, 5, 2, 4];\n    return colors[order[index % order.length]];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/stage/stage.state.ts\n        \n\n            \n                Description\n            \n            \n                A object with x, y, and z channels of the same type. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                                \n                                        z\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X channel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y channel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z channel \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { pluck } from 'rxjs/operators';\n\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Data contained in the stage state. */\nexport interface StageStateModel {\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n}\n\n\n/**\n * Data for the main stage/3d display\n */\n@StateRepository()\n@State({\n  name: 'stage',\n  defaults: {\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN }\n  }\n})\n@Injectable()\nexport class StageState extends NgxsImmutableDataRepository {\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(pluck('blockSize'));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(pluck('rotation'));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(pluck('slicesConfig'));\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  updateBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  updateRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  updateSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) - Exploration User Interface (EUI).\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, gender, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.7\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.7\n        \n            @angular/compiler : ^10.0.7\n        \n            @angular/core : ^10.0.7\n        \n            @angular/forms : ^10.0.7\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.7\n        \n            @angular/platform-browser-dynamic : ^10.0.7\n        \n            @angular/router : ^10.0.7\n        \n            @deck.gl/core : ^8.2.4\n        \n            @deck.gl/geo-layers : ^8.2.4\n        \n            @deck.gl/layers : ^8.2.4\n        \n            @deck.gl/mesh-layers : ^8.2.4\n        \n            @hms-dbmi/viv : ^0.4.2\n        \n            @loaders.gl/core : ^2.2.8\n        \n            @loaders.gl/draco : ^2.2.8\n        \n            @loaders.gl/gltf : ^2.2.8\n        \n            @luma.gl/core : ^8.2.0\n        \n            @math.gl/core : ^3.2.2\n        \n            @ngxs-labs/data : ^3.0.6\n        \n            @ngxs/logger-plugin : ^3.6.2\n        \n            @ngxs/store : ^3.6.2\n        \n            @rdfjs/data-model : ^1.1.2\n        \n            bind-decorator : ^1.0.11\n        \n            cannon-es : ^0.15.1\n        \n            comlink : ^4.3.0\n        \n            css-element-queries : ^1.2.3\n        \n            graphology : ^0.17.1\n        \n            graphology-shortest-path : ^1.3.4\n        \n            jsonld : ^3.1.1\n        \n            lodash : ^4.17.19\n        \n            n3 : ^1.6.1\n        \n            ng5-slider : ^1.2.4\n        \n            quaternion : ^1.1.0\n        \n            quaternion-to-euler : ^0.5.0\n        \n            rdf-literal : ^1.1.1\n        \n            rdfxml-streaming-parser : ^1.3.6\n        \n            react : ^16.13.1\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataQueryState   (projects/.../data.state.ts)\n                        \n                        \n                            LoaderType   (projects/.../loader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n            \n                \n                    \n                        \n                        DataQueryState\n                    \n                \n                    \n                        \n                            Current state of data queries. \n\n                        \n                    \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : running\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    projects/ccf-image-viewer/src/lib/loader.ts\n    \n        \n            \n                \n                    \n                        \n                        LoaderType\n                    \n                \n                        \n                            \n                                 Zarr\n                            \n                        \n                        \n                            \n                                Value : zarr\n                            \n                        \n                        \n                            \n                                 OMEZarr\n                            \n                        \n                        \n                            \n                                Value : ome-zarr\n                            \n                        \n                        \n                            \n                                 StaticZarr\n                            \n                        \n                        \n                            \n                                Value : static\n                            \n                        \n                        \n                            \n                                 Tiff\n                            \n                        \n                        \n                            \n                                Value : tiff\n                            \n                        \n                        \n                            \n                                 Tiff2\n                            \n                        \n                        \n                            \n                                Value : tiff 2\n                            \n                        \n                        \n                            \n                                 BFTiff\n                            \n                        \n                        \n                            \n                                Value : bf tiff\n                            \n                        \n                        \n                            \n                                 CovidTiff\n                            \n                        \n                        \n                            \n                                Value : covid tiff\n                            \n                        \n                        \n                            \n                                 StaticTiff\n                            \n                        \n                        \n                            \n                                Value : static tiff\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - Exploration User Interface (EUI)\n\n\n\n\n\n\n\n\nCCF-EUI: Common Coordinate Framework (CCF) - Exploration User Interface (EUI)\nBackground and More Information\nFor more information, see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nCCF-EUI is developed at the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockSizeInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorBarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorPickerLauncherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorSchemeContentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorSchemePopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DetailsLabelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerAccordionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerLayersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerLegendModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabeledSlideToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeftSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NameInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyExplorationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySelectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyTreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RightSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RotationSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchemeDropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SlicesInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpinnerOverlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StageNavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreDebugModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_exports\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\ncluster_ColorBarModule\n\n\n\ncluster_ColorBarModule_declarations\n\n\n\ncluster_ColorBarModule_exports\n\n\n\ncluster_ColorPickerLauncherModule\n\n\n\ncluster_ColorPickerLauncherModule_declarations\n\n\n\ncluster_ColorPickerLauncherModule_imports\n\n\n\ncluster_ColorPickerLauncherModule_exports\n\n\n\ncluster_ColorSchemeContentsModule\n\n\n\ncluster_ColorSchemeContentsModule_declarations\n\n\n\ncluster_ColorSchemeContentsModule_exports\n\n\n\ncluster_ColorSchemePopupModule\n\n\n\ncluster_ColorSchemePopupModule_declarations\n\n\n\ncluster_ColorSchemePopupModule_exports\n\n\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_ImageViewerAccordionModule\n\n\n\ncluster_ImageViewerAccordionModule_declarations\n\n\n\ncluster_ImageViewerAccordionModule_imports\n\n\n\ncluster_ImageViewerAccordionModule_exports\n\n\n\ncluster_ImageViewerContentModule\n\n\n\ncluster_ImageViewerContentModule_declarations\n\n\n\ncluster_ImageViewerContentModule_exports\n\n\n\ncluster_ImageViewerLayersModule\n\n\n\ncluster_ImageViewerLayersModule_declarations\n\n\n\ncluster_ImageViewerLayersModule_imports\n\n\n\ncluster_ImageViewerLayersModule_exports\n\n\n\ncluster_ImageViewerLegendModule\n\n\n\ncluster_ImageViewerLegendModule_declarations\n\n\n\ncluster_ImageViewerLegendModule_exports\n\n\n\ncluster_ImageViewerModule\n\n\n\ncluster_ImageViewerModule_imports\n\n\n\ncluster_ImageViewerModule_exports\n\n\n\ncluster_ImageViewerPopoverModule\n\n\n\ncluster_ImageViewerPopoverModule_declarations\n\n\n\ncluster_ImageViewerPopoverModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\ncluster_ResultsBrowserItemModule\n\n\n\ncluster_ResultsBrowserItemModule_declarations\n\n\n\ncluster_ResultsBrowserItemModule_exports\n\n\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_SchemeDropdownModule\n\n\n\ncluster_SchemeDropdownModule_declarations\n\n\n\ncluster_SchemeDropdownModule_exports\n\n\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBodyModule\n\nBodyModule\n\nAppModule -->\n\nBodyModule->AppModule\n\n\n\n\n\nBodyUiModule \n\nBodyUiModule \n\nBodyUiModule  -->\n\nBodyModule->BodyUiModule \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule -->\n\nDrawerModule->ImageViewerPopoverModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule -->\n\nDualSliderModule->ColorSchemeContentsModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nAppModule -->\n\nImageViewerModule->AppModule\n\n\n\n\n\nImageViewerContentModule \n\nImageViewerContentModule \n\nImageViewerContentModule  -->\n\nImageViewerModule->ImageViewerContentModule \n\n\n\n\n\nImageViewerLayersModule \n\nImageViewerLayersModule \n\nImageViewerLayersModule  -->\n\nImageViewerModule->ImageViewerLayersModule \n\n\n\n\n\nImageViewerPopoverModule \n\nImageViewerPopoverModule \n\nImageViewerPopoverModule  -->\n\nImageViewerModule->ImageViewerPopoverModule \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nAppModule -->\n\nInfoDialogModule->AppModule\n\n\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyModule -->\n\nBodyUiModule->BodyModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nColorBarComponent\n\nColorBarComponent\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorBarModule -->\n\nColorBarComponent->ColorBarModule\n\n\n\n\n\nColorBarComponent \n\nColorBarComponent \n\nColorBarComponent  -->\n\nColorBarModule->ColorBarComponent \n\n\n\nColorSchemeContentsModule -->\n\nColorBarModule->ColorSchemeContentsModule\n\n\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nSchemeDropdownModule -->\n\nColorBarModule->SchemeDropdownModule\n\n\n\n\n\nColorPickerLauncherComponent\n\nColorPickerLauncherComponent\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule -->\n\nColorPickerLauncherComponent->ColorPickerLauncherModule\n\n\n\n\n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent  -->\n\nColorPickerLauncherModule->ColorPickerLauncherComponent \n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerLayersModule -->\n\nColorPickerLauncherModule->ImageViewerLayersModule\n\n\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorPickerLauncherModule -->\n\nColorSchemePopupModule->ColorPickerLauncherModule\n\n\n\n\n\nColorSchemePopupComponent \n\nColorSchemePopupComponent \n\nColorSchemePopupComponent  -->\n\nColorSchemePopupModule->ColorSchemePopupComponent \n\n\n\n\n\nColorSchemeContentsComponent\n\nColorSchemeContentsComponent\n\nColorSchemeContentsModule -->\n\nColorSchemeContentsComponent->ColorSchemeContentsModule\n\n\n\nColorSchemePopupModule -->\n\nColorSchemeContentsModule->ColorSchemePopupModule\n\n\n\n\n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent  -->\n\nColorSchemeContentsModule->ColorSchemeContentsComponent \n\n\n\n\n\nColorSchemePopupComponent\n\nColorSchemePopupComponent\n\nColorSchemePopupModule -->\n\nColorSchemePopupComponent->ColorSchemePopupModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nContentModule -->\n\nStoreDebugModule->ContentModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\nLeftSidebarModule -->\n\nDetailsLabelModule->LeftSidebarModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nImageViewerAccordionComponent\n\nImageViewerAccordionComponent\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule -->\n\nImageViewerAccordionComponent->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent  -->\n\nImageViewerAccordionModule->ImageViewerAccordionComponent \n\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerContentModule -->\n\nImageViewerAccordionModule->ImageViewerContentModule\n\n\n\nImageViewerModule -->\n\nImageViewerLayersModule->ImageViewerModule\n\n\n\nImageViewerAccordionModule -->\n\nImageViewerLayersModule->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerLayersComponent \n\nImageViewerLayersComponent \n\nImageViewerLayersComponent  -->\n\nImageViewerLayersModule->ImageViewerLayersComponent \n\n\n\n\n\nImageViewerContentComponent\n\nImageViewerContentComponent\n\nImageViewerContentModule -->\n\nImageViewerContentComponent->ImageViewerContentModule\n\n\n\nImageViewerModule -->\n\nImageViewerContentModule->ImageViewerModule\n\n\n\n\n\nImageViewerContentComponent \n\nImageViewerContentComponent \n\nImageViewerContentComponent  -->\n\nImageViewerContentModule->ImageViewerContentComponent \n\n\n\nImageViewerPopoverModule -->\n\nImageViewerContentModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerLayersComponent\n\nImageViewerLayersComponent\n\nImageViewerLayersModule -->\n\nImageViewerLayersComponent->ImageViewerLayersModule\n\n\n\nImageViewerLayersModule -->\n\nSchemeDropdownModule->ImageViewerLayersModule\n\n\n\n\n\nSchemeDropdownComponent \n\nSchemeDropdownComponent \n\nSchemeDropdownComponent  -->\n\nSchemeDropdownModule->SchemeDropdownComponent \n\n\n\n\n\nImageViewerLegendComponent\n\nImageViewerLegendComponent\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerLegendModule -->\n\nImageViewerLegendComponent->ImageViewerLegendModule\n\n\n\n\n\nImageViewerLegendComponent \n\nImageViewerLegendComponent \n\nImageViewerLegendComponent  -->\n\nImageViewerLegendModule->ImageViewerLegendComponent \n\n\n\nImageViewerPopoverModule -->\n\nImageViewerLegendModule->ImageViewerPopoverModule\n\n\n\nImageViewerModule -->\n\nImageViewerPopoverModule->ImageViewerModule\n\n\n\n\n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent  -->\n\nImageViewerPopoverModule->ImageViewerPopoverComponent \n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerModule -->\n\nViewerModule->ImageViewerModule\n\n\n\nImageViewerPopoverModule -->\n\nViewerModule->ImageViewerPopoverModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\nImageViewerPopoverComponent\n\nImageViewerPopoverComponent\n\nImageViewerPopoverModule -->\n\nImageViewerPopoverComponent->ImageViewerPopoverModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\nLeftSidebarModule -->\n\nLabeledSlideToggleModule->LeftSidebarModule\n\n\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nLeftSidebarModule -->\n\nOrganSelectorModule->LeftSidebarModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nResultsBrowserItemComponent\n\nResultsBrowserItemComponent\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule -->\n\nResultsBrowserItemComponent->ResultsBrowserItemModule\n\n\n\nResultsBrowserModule -->\n\nResultsBrowserItemModule->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent  -->\n\nResultsBrowserItemModule->ResultsBrowserItemComponent \n\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nSchemeDropdownComponent\n\nSchemeDropdownComponent\n\nSchemeDropdownModule -->\n\nSchemeDropdownComponent->SchemeDropdownModule\n\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        54 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    51 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    62 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DeckCallbackArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            DeckProps   (projects/.../image-viewer.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            GetChildrenFunc   (projects/.../ontology-search.service.ts)\n                        \n                        \n                            ImageViewerLayerArgs   (projects/.../image-viewer-layer.ts)\n                        \n                        \n                            ImageViewerLayerRequiredArgNames   (projects/.../image-viewer-layer.ts)\n                        \n                        \n                            JsonDict   (projects/.../hubmap-data.ts)\n                        \n                        \n                            KVList   (projects/.../store-debug.component.ts)\n                        \n                        \n                            KVPair   (projects/.../store-debug.component.ts)\n                        \n                        \n                            LayerConfig   (projects/.../image-viewer.ts)\n                        \n                        \n                            LayerFilterArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            OnViewStateChangeArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            OverviewArgs   (projects/.../picture-in-picture-viewer.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            Side   (projects/.../stage-nav.component.ts)\n                        \n                        \n                            State   (projects/.../image-viewer.ts)\n                        \n                        \n                            ValueOrGenerator   (projects/.../image-viewer.ts)\n                        \n                        \n                            ZarrInfo   (projects/.../loader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container. \n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers. \n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type. \n\n                \n            \n            \n                \n                        GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type. \n\n                \n            \n            \n                \n                        GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type. \n\n                \n            \n            \n                \n                        GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components. \n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container. \n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers. \n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type. \n\n                \n            \n            \n                \n                        GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type. \n\n                \n            \n            \n                \n                        GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type. \n\n                \n            \n            \n                \n                        GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components. \n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/image-viewer.ts\n    \n    \n        \n            \n                \n                    \n                    DeckCallbackArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeckProps\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerConfig\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerFilterArgs\n                \n            \n            \n                \n                            DeckCallbackArgs\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OnViewStateChangeArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    State\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValueOrGenerator\n                \n            \n            \n                \n                        T | \n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer. \n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer. \n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n    \n    \n        \n            \n                \n                    \n                    GetChildrenFunc\n                \n            \n            \n                \n                    Type of function for getting child nodes from a parent node. \n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/core/models/image-viewer-layer.ts\n    \n    \n        \n            \n                \n                    \n                    ImageViewerLayerArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ImageViewerLayerRequiredArgNames\n                \n            \n            \n                \n                        \"id\" | \"colorScheme\"\n\n                \n            \n        \n    \n    projects/ccf-database/src/lib/hubmap/hubmap-data.ts\n    \n    \n        \n            \n                \n                    \n                    JsonDict\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n    \n    \n        \n            \n                \n                    \n                    KVList\n                \n            \n            \n                \n                    Array of Key-Value pairs \n\n                \n            \n            \n                \n                            KVPair[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    KVPair\n                \n            \n            \n                \n                    Key-Value pair \n\n                \n            \n            \n                \n                        [string, T]\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n    \n    \n        \n            \n                \n                    \n                    OverviewArgs\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n    \n    \n        \n            \n                \n                    \n                    Side\n                \n            \n            \n                \n                    Valid values for side. \n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\"\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/loader.ts\n    \n    \n        \n            \n                \n                    \n                    ZarrInfo\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
