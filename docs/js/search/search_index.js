var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AggregateResult.html",[0,0.243,1,2.64]],["body/interfaces/AggregateResult.html",[0,0.453,1,3.754,2,1.183,3,0.055,4,0.055,5,0.055,6,0.042,7,3.623,8,1.08,9,4.785,10,5.334,11,0.005,12,0.36,13,0.792,14,5.79,15,3.148,16,1.585,17,0.006,18,1.68,19,0.74,20,1.589,21,4.828,22,3.214,23,0.094,24,3.141,25,3.205,26,3.46,27,3.596,28,2.096,29,2.665,30,3.623,31,3.623,32,3.327,33,2.117,34,3.855,35,3.623,36,1.948,37,4.27,38,3.623,39,3.623,40,3.465,41,3.327,42,3.465,43,3.465,44,3.327,45,4.349,46,1.589,47,1.492,48,0.98,49,1.634,50,3.867,51,1.994,52,3.094,53,0.583,54,3.465,55,1.876,56,3.094,57,3.205,58,3.465,59,4.617,60,4.27,61,4.434,62,4.434,63,4.802,64,5.193,65,1.391,66,3.754,67,4.27,68,1.884,69,1.994,70,2.817,71,2.994,72,2.902,73,2.721,74,3.094,75,4.434,76,3.327,77,3.327,78,4.27,79,4.123,80,2.994,81,3.465,82,1.408,83,2.531,84,3.094,85,3.327,86,3.465,87,0.836,88,3.623,89,2.665,90,3.327,91,3.465,92,2.47,93,3.141,94,3.205,95,3.108,96,3.205,97,2.161,98,3.465,99,0.004,100,0.003]],["title/components/AppComponent.html",[101,0.588,102,1.385]],["body/components/AppComponent.html",[3,0.064,4,0.053,5,0.035,6,0.058,8,0.451,11,0.004,12,0.416,13,0.566,15,2.26,16,1.061,17,0.006,19,0.404,20,1.01,23,0.035,24,1.475,26,2.474,33,2.017,34,1.51,36,1.977,47,1.561,48,1.655,49,2.108,51,1.248,52,1.937,53,0.556,55,0.881,56,1.937,65,1.526,67,4.449,73,1.731,93,1.475,99,0.003,100,0.005,101,1.059,102,2.052,103,2.022,104,0.867,105,0.941,106,0.989,107,0.881,108,3.28,109,4.103,110,4.457,111,4.993,112,3.628,113,3.171,114,2.319,115,4.993,116,2.949,117,2.771,118,2.228,119,2.196,120,1.386,121,5.397,122,1.432,123,4.457,124,6.046,125,2.317,126,6.046,127,1.204,128,1.431,129,1.305,130,3.28,131,1.279,132,4.103,133,3.303,134,5.03,135,4.103,136,1.776,137,3.076,138,4.993,139,4.993,140,4.993,141,2.402,142,4.103,143,3.28,144,2.413,145,1.279,146,3.054,147,3.303,148,1.793,149,4.993,150,0.266,151,0.295,152,2.54,153,1.273,154,1.764,155,2.383,156,1.325,157,5.892,158,2.695,159,3.303,160,4.181,161,2.927,162,2.383,163,2.522,164,3.303,165,3.28,166,2.522,167,3.453,168,2.927,169,1.734,170,2.927,171,2.522,172,4.103,173,1.939,174,2.927,175,1.764,176,2.522,177,2.052,178,3.28,179,0.069,180,1.531,181,1.097,182,3.628,183,1.77,184,2.383,185,2.695,186,3.28,187,3.28,188,3.28,189,3.28,190,3.28,191,2.522,192,1.625,193,2.093,194,2.66,195,3.453,196,7.663,197,1.11,198,5.397,199,1.816,200,4.993,201,3.28,202,2.522,203,3.28,204,0.941,205,1.206,206,3.28,207,3.28,208,3.28,209,3.28,210,3.28,211,3.28,212,2.695,213,2.695,214,3.28,215,1.625,216,1.077,217,2.268,218,3.28,219,0.482,220,3.28,221,3.28,222,3.28,223,2.383,224,1.833,225,2.006,226,5.977,227,4.103,228,2.268,229,3.28,230,3.28,231,5.593,232,2.522,233,1.201,234,3.28,235,1.874,236,1.116,237,1.817,238,1.817,239,2.413,240,2.61,241,3.28,242,4.993,243,3.28,244,3.28,245,4.993,246,3.28,247,1.262,248,1.817,249,2.61,250,3.28,251,4.993,252,1.344,253,1.302,254,3.28,255,4.993,256,3.28,257,3.28,258,3.28,259,1.817,260,3.28,261,2.268,262,4.993,263,4.993,264,4.457,265,4.993,266,4.993,267,4.993,268,3,269,1.585,270,1.817,271,2.308,272,3,273,2.854,274,2.61,275,1.9,276,2.383,277,1.325,278,2.522,279,2.103,280,2.006,281,1.955,282,1.817,283,1.829,284,1.67,285,2.851,286,1.411,287,3.28,288,2.006,289,2.54,290,1.477,291,2.246,292,2.474,293,1.706,294,2.522,295,1.764,296,1.443,297,2.54,298,1.714,299,2.784,300,1.381,301,1.411,302,1.325,303,2.169,304,3.28,305,1.714,306,2.354,307,1.874,308,1.817,309,1.714,310,2.695,311,2.695,312,2.083,313,2.927,314,2.383,315,2.522,316,2.927,317,0.515,318,1.32,319,1.342,320,0.989,321,2.038,322,0.989,323,1.506,324,0.925,325,0.941,326,1.506,327,0.941,328,0.989,329,0.941,330,0.989,331,0.941,332,1.285,333,0.989,334,0.941,335,0.956,336,0.989,337,0.941,338,0.989,339,0.941,340,0.989,341,1.409,342,1.506,343,1.651,344,2.193,345,1.506,346,0.941,347,1.506,348,0.941,349,0.972,350,1.506,351,0.941,352,1.409,353,1.506,354,1.409,355,1.506,356,0.941,357,0.989,358,0.941,359,0.941,360,0.989,361,0.941,362,0.989,363,0.941,364,1.823,365,0.941,366,0.989,367,0.941,368,1.506,369,0.941,370,0.989,371,0.941,372,0.989,373,0.956,374,0.989,375,0.941,376,0.989,377,0.941,378,0.989,379,0.941,380,0.925,381,0.881,382,0.941,383,0.925,384,0.956,385,0.941,386,0.989,387,0.941,388,0.956,389,0.989,390,1.409,391,0.941,392,0.989,393,0.989]],["title/components/AppComponent-1.html",[101,0.492,102,1.159,253,0.885]],["body/components/AppComponent-1.html",[3,0.082,4,0.054,5,0.054,6,0.041,11,0.003,17,0.006,23,0.054,47,1.649,48,1.671,49,1.611,53,0.77,55,1.388,65,1.553,99,0.004,100,0.005,101,0.933,102,2.449,103,1.662,104,1.366,105,1.481,106,1.557,107,1.388,114,2.367,117,2.84,118,2.276,119,3.041,120,1.919,121,6.957,122,1.983,123,6.171,128,1.222,136,1.261,148,1.531,150,0.158,151,0.464,169,1.481,173,1.481,177,1.951,179,0.108,193,1.41,199,1.388,224,1.965,253,1.679,268,3.214,269,2.495,270,2.861,271,2.194,272,3.214,273,3.951,274,3.614,275,1.965,276,3.752,277,2.086,278,3.97,279,2.912,280,3.159,281,2.095,282,2.861,283,1.892,284,2.312,285,3.26,286,2.222,290,1.688,293,1.457,314,3.752,315,3.97,316,4.609,317,0.811,318,1.828,319,1.858,320,1.557,321,2.51,322,1.557,323,2.085,324,1.457,325,1.481,326,2.085,327,1.481,328,1.557,329,1.481,330,1.557,331,1.481,332,1.582,333,1.557,334,1.481,335,1.506,336,1.557,337,1.481,338,1.557,339,1.481,340,1.557,341,1.951,342,2.085,343,2.129,344,2.617,345,2.085,346,1.481,347,2.085,348,1.481,349,1.531,350,2.085,351,1.481,352,1.951,353,2.085,354,1.951,355,2.085,356,1.481,357,1.557,358,1.481,359,1.481,360,1.557,361,1.481,362,1.557,363,1.481,364,2.35,365,1.481,366,1.557,367,1.481,368,2.085,369,1.481,370,1.557,371,1.481,372,1.557,373,1.506,374,1.557,375,1.481,376,1.557,377,1.481,378,1.557,379,1.481,380,1.457,381,1.388,382,1.481,383,1.457,384,1.506,385,1.481,386,1.557,387,1.481,388,1.506,389,1.557,390,1.951,391,1.481,392,1.557,393,1.557,394,5.164,395,2.951,396,4.609]],["title/modules/AppModule.html",[397,0.746,398,3.774]],["body/modules/AppModule.html",[3,0.061,4,0.061,5,0.061,6,0.046,11,0.003,17,0.006,23,0.061,99,0.005,100,0.003,102,2.764,136,1.408,150,0.304,151,0.518,170,5.148,171,4.435,174,5.148,175,3.102,179,0.121,204,1.654,226,4.739,231,4.435,317,0.905,397,0.876,398,7.806,399,1.654,400,1.654,401,2.481,402,2.399,403,2.168,404,1.739,405,5.148,406,5.148,407,5.148,408,5.148,409,6.692,410,6.692,411,6.369,412,6.091,413,6.692,414,6.692,415,6.369,416,6.692,417,6.692,418,6.692,419,2.098,420,1.525,421,5.767,422,2.28,423,2.242,424,3.886,425,2.719,426,6.636,427,4.918,428,6.636,429,5.148,430,5.767,431,5.767,432,5.767,433,5.148,434,5.767,435,5.148,436,4.191,437,5.148,438,5.767,439,3.815,440,5.767,441,5.148,442,4.739,443,4.191,444,4.435,445,5.767,446,5.403,447,5.767,448,5.767,449,4.739,450,5.767,451,6.11,452,5.767,453,4.739,454,4.739]],["title/classes/AppPage.html",[179,0.103,455,3.774]],["body/classes/AppPage.html",[3,0.077,4,0.077,5,0.077,6,0.073,11,0.004,12,0.503,17,0.006,23,0.077,95,3.864,99,0.005,100,0.004,119,3.22,129,1.663,136,1.787,150,0.223,179,0.153,197,1.914,247,1.798,283,2.681,319,1.967,455,6.621,456,3.627,457,7.319,458,8.43,459,8.43,460,7.319,461,1.561,462,7.319,463,6.533,464,6.533,465,6.533,466,6.533]],["title/classes/AppPage-1.html",[179,0.086,253,0.885,455,3.159]],["body/classes/AppPage-1.html",[3,0.077,4,0.077,5,0.077,6,0.073,11,0.004,12,0.503,17,0.006,23,0.077,95,3.864,99,0.005,100,0.004,119,3.22,129,1.663,136,1.787,150,0.223,179,0.153,197,1.914,247,1.798,283,2.681,319,1.967,455,6.621,456,3.627,458,8.43,459,8.43,461,1.561,463,6.533,464,6.533,465,6.533,466,6.533,467,7.319,468,7.319,469,7.319]],["title/components/BlockSizeInputComponent.html",[101,0.588,324,1.385]],["body/components/BlockSizeInputComponent.html",[0,0.281,3,0.07,4,0.041,5,0.041,6,0.063,8,0.779,11,0.002,12,0.267,13,0.642,15,1.299,16,1.05,17,0.006,18,1.193,19,0.54,20,1.353,22,1.788,23,0.06,29,3.975,47,1.485,48,1.526,49,2.292,51,1.478,53,0.87,55,1.044,65,1.332,87,0.62,93,1.748,99,0.003,100,0.004,101,0.935,102,1.598,103,1.362,104,1.027,105,1.114,106,1.171,107,1.044,113,2.467,114,2.056,117,2.8,118,2.242,120,1.573,122,1.625,127,0.774,128,0.919,129,1.419,136,0.949,148,1.152,150,0.119,151,0.349,169,1.114,173,1.114,177,1.598,179,0.081,183,1.259,193,1.061,197,1.259,199,1.044,205,1.311,219,0.833,224,1.685,225,3.465,233,2.075,252,0.863,253,0.837,268,3.364,269,2.737,270,3.138,271,2.332,279,2.386,281,1.975,283,2.075,284,2.236,285,2.671,286,1.672,290,1.383,291,1.748,292,1.925,293,2.771,297,1.976,301,1.672,302,1.569,305,2.961,306,2.671,307,3.237,308,2.152,309,2.031,317,0.61,318,1.498,319,1.975,320,1.171,321,2.216,322,1.171,323,1.708,324,2.074,325,2.794,326,1.708,327,1.114,328,1.171,329,1.114,330,1.171,331,1.114,332,1.397,333,1.171,334,1.114,335,1.133,336,1.171,337,1.114,338,1.171,339,1.114,340,1.171,341,1.598,342,1.708,343,1.826,344,2.356,345,1.708,346,1.114,347,1.708,348,1.114,349,1.152,350,1.708,351,1.114,352,1.598,353,1.708,354,1.598,355,1.708,356,1.114,357,1.171,358,1.114,359,1.114,360,1.171,361,1.114,362,1.171,363,1.114,364,2.016,365,1.114,366,1.171,367,1.114,368,1.708,369,1.114,370,1.171,371,1.114,372,1.171,373,1.133,374,1.171,375,1.114,376,1.171,377,1.114,378,1.171,379,1.114,380,1.096,381,1.044,382,1.114,383,1.096,384,1.133,385,1.114,386,1.171,387,1.114,388,1.133,389,1.171,390,1.598,391,1.114,392,1.171,393,1.171,461,1.027,470,6.421,471,6.008,472,2.987,473,4.356,474,4.779,475,3.199,476,5.141,477,4.356,478,6.703,479,6.559,480,5.665,481,2.336,482,5.141,483,2.496,484,3.884,485,3.917,486,4.07,487,3.884,488,4.655,489,5.756,490,5.056,491,6.008,492,3.975,493,3.884,494,2.671,495,0.934,496,3.138,497,0.951,498,3.747,499,3.465,500,5.181,501,4.519,502,3.941,503,3.884,504,3.465,505,2.115,506,2.987,507,5.968,508,2.987,509,2.987,510,2.987,511,4.356,512,2.987,513,5.968,514,5.056,515,5.665,516,5.141,517,2.152,518,2.22,519,3.917,520,2.22,521,3.467,522,4.341,523,1.748,524,2.987,525,2.987,526,1.976,527,2.376,528,3.192]],["title/modules/BlockSizeInputModule.html",[397,0.746,529,3.567]],["body/modules/BlockSizeInputModule.html",[3,0.074,4,0.074,5,0.074,6,0.056,11,0.004,17,0.006,23,0.074,99,0.005,100,0.004,150,0.291,151,0.631,179,0.147,204,2.015,293,2.537,317,1.103,324,2.835,325,2.015,397,1.067,399,2.015,400,2.015,401,2.711,402,2.048,403,2.048,404,2.711,419,2.371,420,1.857,422,2.154,423,2.534,424,4.393,425,3.311,470,5.771,471,5.4,529,7.103,530,6.268,531,6.268,532,6.268,533,6.268,534,2.81,535,2.307,536,6.905,537,5.771,538,6.268]],["title/modules/BodyModule.html",[397,0.746,409,3.567]],["body/modules/BodyModule.html",[3,0.075,4,0.075,5,0.075,6,0.057,11,0.004,17,0.006,23,0.075,99,0.005,100,0.004,128,1.688,150,0.276,151,0.641,179,0.149,204,2.046,317,1.12,397,1.084,399,2.046,400,2.046,401,2.557,402,2.08,403,2.08,404,2.729,409,7.125,419,2.393,420,1.886,422,2.601,423,2.557,534,2.836,535,2.343,539,6.366,540,6.366,541,6.366,542,7.315,543,7.132,544,5.861,545,7.132]],["title/classes/BodyUI.html",[179,0.103,546,3.567]],["body/classes/BodyUI.html",[0,0.275,3,0.04,4,0.04,5,0.04,6,0.076,8,0.519,11,0.002,12,0.26,13,0.629,16,1.213,17,0.006,18,1.174,19,0.765,20,1.689,23,0.058,28,0.908,36,1.632,46,1.563,53,0.899,87,1.418,99,0.003,100,0.002,118,1.233,125,2.722,127,1.663,128,2.273,129,1.818,145,1.421,150,0.255,153,1.466,156,1.526,179,0.138,197,1.233,205,1.586,219,1.227,236,1.889,252,1.795,301,2.831,302,1.526,332,0.718,419,1.856,456,1.872,461,1.4,495,1.941,497,1.309,501,2.092,527,3.394,546,4.033,547,6.883,548,3.103,549,4.56,550,4.178,551,2.725,552,5.585,553,4.94,554,6.86,555,5.406,556,5.406,557,5.406,558,5.406,559,5.406,560,5.406,561,5.549,562,5.549,563,5.549,564,5.549,565,5.549,566,1.12,567,4.56,568,2.713,569,5.549,570,3.394,571,3.777,572,3.777,573,3.777,574,4.991,575,4.56,576,3.777,577,4.364,578,3.777,579,4.56,580,3.777,581,3.777,582,4.56,583,3.777,584,3.777,585,4.56,586,5.239,587,5.058,588,3.179,589,4.744,590,3.777,591,5.058,592,4.56,593,3.777,594,4.56,595,3.777,596,1.739,597,4.56,598,3.777,599,4.56,600,3.777,601,2.616,602,5.406,603,4.56,604,4.56,605,2.158,606,4.56,607,3.103,608,3.394,609,2.231,610,2.158,611,3.103,612,1.699,613,5.058,614,1.466,615,4.56,616,3.439,617,2.904,618,2.231,619,2.399,620,1.661,621,2.031,622,2.231,623,2.399,624,3.347,625,3.103,626,3.103,627,2.231,628,3.103,629,1.661,630,3.103,631,3.103,632,3.103,633,3.103,634,3.103,635,2.31,636,3.103,637,3.103,638,3.103,639,4.56,640,3.103,641,3.103,642,3.103,643,1.591,644,2.092,645,1.557,646,2.399,647,3.103,648,4.56,649,4.178,650,3.103,651,4.56,652,3.103,653,5.406,654,4.56,655,4.56,656,3.103,657,3.103,658,6.223,659,4.56,660,3.103,661,5.406,662,1.263,663,3.103,664,3.103,665,4.56,666,2.904,667,3.103,668,3.103,669,3.103,670,3.103,671,4.56,672,5.406,673,2.604,674,6.348,675,4.56,676,4.56,677,4.56,678,3.103,679,3.103,680,3.103,681,3.103,682,2.904,683,3.103,684,3.103,685,3.103,686,3.103,687,3.103,688,1.286,689,3.103,690,3.103,691,3.103,692,2.399,693,3.103,694,2.744,695,3.103,696,3.103,697,3.103,698,3.103]],["title/classes/BodyUILayer.html",[179,0.103,552,3.395]],["body/classes/BodyUILayer.html",[0,0.226,3,0.067,4,0.048,5,0.048,6,0.067,11,0.003,12,0.314,13,0.721,16,1.47,17,0.006,18,1.632,19,0.672,20,0.924,23,0.067,28,1.901,36,2.191,46,1.682,53,0.708,69,2.42,83,2.207,87,0.729,95,2.518,99,0.004,100,0.003,125,2.064,127,0.91,128,1.967,129,1.527,141,1.378,145,2.129,150,0.279,179,0.096,197,1.413,205,1.135,216,2.089,219,1.298,236,1.555,240,2.388,247,1.736,252,1.758,253,0.984,282,2.531,332,1.209,456,2.264,461,1.326,492,2.324,495,1.098,497,1.04,525,3.513,547,6.042,550,5.28,552,5.469,574,4.381,586,3.89,591,3.513,605,2.611,608,3.89,609,2.698,614,2.468,624,4.23,629,2.01,643,3.081,644,3.523,645,2.623,658,4.621,662,2.645,673,3.131,688,3.006,694,3.32,699,3.32,700,6.529,701,2.955,702,6.529,703,6.359,704,7.059,705,7.059,706,4.569,707,5.676,708,4.569,709,4.569,710,4.569,711,4.078,712,5.676,713,6.529,714,3.754,715,3.159,716,4.078,717,3.513,718,5.226,719,4.078,720,3.513,721,6.011,722,3.513,723,5.676,724,3.754,725,6.619,726,4.078,727,6.529,728,5.058,729,4.078,730,4.078,731,3.32,732,3.754,733,4.078,734,4.078,735,4.078,736,4.078,737,4.078,738,4.078,739,2.901,740,3.513,741,6.081,742,4.889,743,4.889,744,3.513,745,3.513,746,4.889,747,3.513,748,4.381,749,2.154,750,5.676,751,5.226,752,2.207,753,3.754,754,3.754,755,3.754,756,6.529,757,4.078,758,4.078,759,5.676,760,4.078,761,4.078,762,4.078,763,5.676,764,5.226,765,3.513,766,4.078,767,4.078,768,6.529,769,4.078,770,4.078,771,4.078,772,3.513,773,5.676,774,5.676,775,4.078,776,5.676,777,6.499,778,4.078,779,5.676,780,4.078,781,3.513,782,3.022,783,4.078,784,4.078,785,4.078,786,4.078,787,5.676,788,6.529,789,6.011,790,5.226,791,5.676,792,5.676,793,4.078,794,4.078,795,4.078,796,4.078,797,4.078,798,3.754,799,4.078,800,4.078,801,4.078,802,2.901,803,4.078,804,4.078,805,3.513,806,4.078,807,4.078,808,3.513,809,4.078,810,4.078,811,4.078]],["title/interfaces/BodyUIProps.html",[0,0.243,617,3.774]],["body/interfaces/BodyUIProps.html",[0,0.321,2,1.061,3,0.05,4,0.05,5,0.05,6,0.038,11,0.003,12,0.323,13,0.735,16,1.424,17,0.006,18,1.325,19,0.6,23,0.068,28,1.925,36,1.609,46,1.7,99,0.004,100,0.003,118,1.045,125,2.512,128,1.757,145,1.661,150,0.272,153,1.824,156,1.899,179,0.136,205,1.499,219,1.309,236,2.208,252,1.93,301,2.023,302,1.899,332,0.893,419,2.096,497,1.309,501,2.604,527,2.876,546,3.416,547,3.416,548,3.863,549,3.863,550,4.119,551,2.555,552,5.136,553,4.543,554,6.903,555,3.863,556,3.863,557,3.863,558,3.863,559,3.863,560,3.863,567,3.863,568,1.939,570,2.876,574,4.811,575,3.863,577,4.185,579,3.863,582,3.863,585,3.863,587,3.614,589,4.654,591,3.614,592,3.863,594,3.863,597,3.863,599,3.863,601,2.216,602,6.103,603,5.33,604,5.33,605,2.687,606,5.33,607,3.863,608,3.968,609,2.777,610,2.687,611,3.863,612,2.115,613,5.71,614,1.824,615,5.33,616,3.882,617,4.987,618,4.729,619,4.716,620,3.522,621,3.994,622,2.777,623,2.985,624,3.778,625,3.863,626,3.863,627,2.777,628,3.863,629,2.068,630,3.863,631,3.863,632,3.863,633,3.863,634,3.863,635,2.876,636,3.863,637,3.863,638,3.863,639,5.33,640,3.863,641,3.863,642,3.863,643,1.98,644,2.604,645,1.939,646,2.985,647,3.863,648,5.33,649,4.716,650,3.863,651,5.33,652,3.863,653,6.103,654,5.33,655,5.33,656,3.863,657,3.863,658,6.591,659,5.33,660,3.863,661,6.103,662,1.572,663,3.863,664,3.863,665,5.33,666,3.614,667,3.863,668,3.863,669,3.863,670,3.863,671,5.33,672,6.103,673,2.94,674,6.903,675,5.33,676,5.33,677,5.33,678,3.863,679,3.863,680,3.863,681,3.863,682,3.614,683,3.863,684,3.863,685,3.863,686,3.863,687,3.863,688,1.6,689,3.863,690,3.863,691,3.863,692,2.985,693,3.863,694,3.416,695,3.863,696,3.863,697,3.863,698,3.863]],["title/interfaces/BodyUIViewStateProps.html",[0,0.243,613,3.774]],["body/interfaces/BodyUIViewStateProps.html",[0,0.321,2,1.062,3,0.05,4,0.05,5,0.05,6,0.038,11,0.003,12,0.323,13,0.736,16,1.364,17,0.006,18,1.5,19,0.524,23,0.068,28,1.131,36,1.61,46,1.7,87,1.278,99,0.004,100,0.003,118,1.046,125,2.512,128,1.758,145,1.662,150,0.272,153,1.826,156,1.901,179,0.136,205,1.5,219,1.309,236,2.209,252,1.931,301,2.025,302,1.901,332,0.894,419,2.097,497,1.309,501,2.607,527,2.878,546,3.419,547,3.419,548,3.867,549,3.867,550,4.122,551,2.556,552,5.138,553,4.545,554,6.905,555,3.867,556,3.867,557,3.867,558,3.867,559,3.867,560,3.867,567,3.867,568,1.94,570,2.878,574,4.813,575,3.867,577,4.187,579,3.867,582,3.867,585,3.867,587,3.618,589,4.655,591,3.618,592,3.867,594,3.867,597,3.867,599,3.867,601,2.218,602,6.106,603,5.333,604,5.333,605,2.689,606,6.106,607,3.867,608,4.9,609,2.779,610,2.689,611,3.867,612,2.117,613,6.159,614,2.519,615,6.905,616,4.541,617,3.618,618,2.779,619,2.988,620,2.07,621,2.53,622,2.779,623,2.988,624,3.78,625,3.867,626,3.867,627,2.779,628,3.867,629,2.07,630,3.867,631,3.867,632,3.867,633,3.867,634,3.867,635,2.878,636,3.867,637,3.867,638,3.867,639,5.333,640,3.867,641,3.867,642,3.867,643,1.982,644,2.607,645,1.94,646,2.988,647,3.867,648,5.333,649,4.719,650,3.867,651,5.333,652,3.867,653,6.106,654,5.333,655,5.333,656,3.867,657,3.867,658,6.592,659,5.333,660,3.867,661,6.106,662,1.573,663,3.867,664,3.867,665,5.333,666,3.618,667,3.867,668,3.867,669,3.867,670,3.867,671,5.333,672,6.106,673,2.941,674,6.905,675,5.333,676,5.333,677,5.333,678,3.867,679,3.867,680,3.867,681,3.867,682,3.618,683,3.867,684,3.867,685,3.867,686,3.867,687,3.867,688,1.602,689,3.867,690,3.867,691,3.867,692,2.988,693,3.867,694,3.419,695,3.867,696,3.867,697,3.867,698,3.867]],["title/components/BodyUiComponent.html",[101,0.588,327,1.408]],["body/components/BodyUiComponent.html",[3,0.072,4,0.042,5,0.042,6,0.07,11,0.002,12,0.276,13,0.659,17,0.006,19,0.667,23,0.042,28,0.967,36,1.441,47,1.506,48,1.545,53,0.831,55,1.081,65,1.358,68,2.088,73,3.124,81,2.66,87,0.927,99,0.004,100,0.004,101,0.948,102,1.639,103,1.396,104,1.063,105,1.153,106,1.212,107,1.081,114,2.081,117,2.805,118,2.249,120,1.612,122,1.666,125,1.135,127,0.801,128,2.16,129,1.643,136,0.982,144,2.807,148,1.192,150,0.242,151,0.361,152,2.046,160,5.886,161,3.589,162,2.922,163,3.092,167,5.165,168,3.589,169,1.153,173,1.153,177,1.639,179,0.084,184,2.922,193,1.098,197,1.291,199,1.081,205,1.333,216,1.908,219,1.098,224,1.719,253,0.866,277,1.624,290,1.419,293,1.135,295,2.162,317,0.631,318,1.536,319,1.561,320,1.212,321,2.252,322,1.212,323,1.752,324,1.135,325,1.153,326,1.752,327,2.142,328,1.212,329,1.153,330,1.212,331,1.153,332,1.419,333,1.212,334,1.153,335,1.173,336,1.212,337,1.153,338,1.212,339,1.153,340,1.212,341,1.639,342,1.752,343,1.862,344,2.389,345,1.752,346,1.153,347,1.752,348,1.153,349,1.192,350,1.752,351,1.153,352,2.329,353,1.752,354,1.639,355,1.752,356,1.153,357,1.212,358,1.153,359,1.153,360,1.212,361,1.153,362,1.212,363,1.153,364,2.056,365,1.153,366,1.212,367,1.153,368,1.752,369,1.153,370,1.212,371,1.153,372,1.212,373,1.173,374,1.212,375,1.153,376,1.212,377,1.153,378,1.212,379,1.153,380,1.135,381,1.081,382,1.153,383,1.135,384,1.173,385,1.153,386,1.212,387,1.153,388,1.173,389,1.212,390,1.639,391,1.153,392,1.212,393,1.212,461,1.053,475,2.407,481,2.395,483,2.546,495,1.396,497,0.826,505,2.169,544,7.161,546,6.185,550,5.031,551,1.893,566,1.192,568,2.812,588,1.943,601,1.896,618,3.431,682,4.466,728,4.017,752,2.807,812,7.778,813,4.021,814,2.254,815,4.331,816,6.819,817,5.809,818,6.819,819,5.809,820,4.743,821,2.446,822,6.819,823,3.304,824,5.809,825,4.021,826,4.017,827,3.431,828,5.184,829,3.842,830,5.184,831,4.021,832,2.3,833,5.809,834,4.021,835,4.021,836,5.031,837,5.809,838,4.017,839,4.021,840,2.66,841,4.021,842,4.021,843,4.021,844,4.021,845,4.021,846,4.021,847,4.021,848,2.162,849,2.554,850,1.943,851,4.021,852,4.021,853,4.021,854,4.021,855,4.021,856,4.021,857,2.298,858,4.021,859,4.315,860,4.021,861,6.819,862,4.021,863,5.427,864,4.021,865,4.021,866,4.021,867,4.021,868,4.021,869,4.021,870,4.021,871,5.809,872,4.021,873,4.021,874,4.021,875,5.809,876,4.021,877,5.809,878,5.809,879,4.021,880,2.298]],["title/modules/BodyUiModule.html",[397,0.746,542,3.567]],["body/modules/BodyUiModule.html",[3,0.075,4,0.075,5,0.075,6,0.057,11,0.004,17,0.006,23,0.075,99,0.005,100,0.004,128,1.693,150,0.277,151,0.643,179,0.15,204,2.052,317,1.123,327,2.889,397,1.087,399,2.052,400,2.052,401,2.733,402,2.086,403,2.086,404,2.733,419,2.397,420,1.892,422,2.193,423,2.562,534,2.841,535,2.35,542,7.129,544,5.878,812,6.384,881,6.384,882,6.384,883,6.384,884,7.153,885,7.153]],["title/classes/CCFDatabase.html",[179,0.103,886,3.247]],["body/classes/CCFDatabase.html",[0,0.152,1,1.646,2,0.691,3,0.032,4,0.032,5,0.032,6,0.073,8,1.197,9,3.725,11,0.004,12,0.21,13,0.537,16,1.366,17,0.006,18,0.845,19,0.734,20,1.172,23,0.061,24,3.789,25,2.896,26,1.517,27,1.953,28,1.931,32,1.944,34,3.001,36,2.327,45,2.623,47,1.239,48,0.573,50,1.695,53,0.954,65,1.298,66,2.546,68,2.68,69,3.458,73,3.505,80,3.725,83,4.143,85,3.007,87,1.368,92,2.731,94,2.896,95,3.566,96,2.896,99,0.005,100,0.005,118,1.052,127,1.298,128,1.12,129,1.739,131,1.213,145,1.669,150,0.266,152,3.954,179,0.064,180,1.999,181,1.583,183,1.905,194,3.923,197,1.052,219,0.958,236,2.537,237,4.75,240,3.407,247,1.758,249,2.475,252,1.449,253,1.02,259,1.695,456,1.517,461,1.691,495,2.061,497,1.003,506,3.641,522,2.797,566,0.907,574,1.695,701,1.913,715,2.116,728,5.824,749,4.347,752,2.288,814,1.838,886,4.311,887,6.602,888,2.731,889,4.226,890,5.732,891,3.132,892,3.891,893,4.453,894,4.735,895,4.453,896,3.891,897,4.759,898,4.226,899,4.735,900,3.678,901,3.06,902,6.338,903,4.735,904,5.123,905,4.453,906,3.06,907,5.169,908,3.06,909,4.208,910,4.403,911,4.226,912,3.06,913,5.818,914,4.226,915,3.06,916,2.797,917,5.155,918,3.641,919,4.226,920,3.007,921,4.226,922,3.06,923,4.226,924,5.818,925,3.06,926,4.226,927,3.06,928,6.388,929,5.169,930,3.06,931,2.546,932,3.06,933,3.891,934,3.06,935,4.226,936,3.678,937,3.891,938,3.641,939,3.06,940,5.012,941,1.838,942,3.274,943,4.226,944,3.06,945,4.226,946,3.06,947,2.731,948,2.731,949,2.731,950,2.731,951,2.024,952,2.731,953,2.731,954,2.731,955,5.155,956,2.731,957,2.731,958,2.731,959,2.731,960,2.731,961,2.731,962,2.353,963,2.731,964,2.224,965,1.443,966,5.169,967,2.515,968,4.226,969,1.404,970,4.226,971,3.891,972,4.14,973,2.116,974,3.891,975,4.226,976,2.731,977,4.226,978,1.695,979,2.731,980,2.731,981,2.731,982,2.515,983,2.731,984,2.731,985,2.515,986,7.168,987,2.515,988,2.731,989,2.731,990,2.731,991,2.515,992,4.226,993,2.731,994,2.731,995,2.731,996,2.731,997,2.731,998,4.226,999,2.731,1000,2.731,1001,2.731,1002,2.731,1003,2.731,1004,2.731,1005,2.731,1006,2.731,1007,2.224,1008,2.731,1009,2.731,1010,2.731,1011,2.731,1012,2.731,1013,4.226,1014,2.731,1015,2.731,1016,2.492,1017,5.169,1018,2.731,1019,2.731,1020,3.441,1021,2.731,1022,2.731,1023,2.731,1024,2.731,1025,2.731,1026,2.731,1027,2.731,1028,2.731,1029,2.731,1030,2.731,1031,2.731,1032,2.731]],["title/interfaces/CCFDatabaseOptions.html",[0,0.243,902,3.774]],["body/interfaces/CCFDatabaseOptions.html",[0,0.186,1,2.016,2,1.246,3,0.039,4,0.039,5,0.039,6,0.03,8,0.515,9,3.154,11,0.004,12,0.258,13,0.626,16,1.507,17,0.006,18,0.669,19,0.705,23,0.069,24,3.465,25,2.293,26,1.858,27,1.546,28,1.737,32,2.381,34,3.935,36,2.334,45,3.057,47,1.049,48,0.701,50,2.077,65,1.099,66,2.016,68,2.355,69,3.376,73,3.453,80,3.154,83,4.024,85,3.505,87,0.881,92,2.602,94,2.293,95,3.383,96,2.293,99,0.005,100,0.005,118,1.226,127,0.747,128,0.887,131,0.96,145,1.678,150,0.278,152,3.918,179,0.079,180,1.692,181,1.253,183,1.999,194,3.663,219,1.062,236,2.23,237,4.614,240,2.885,247,1.852,249,1.96,252,1.606,253,1.189,259,2.077,461,1.608,497,1.095,506,2.882,522,2.214,574,2.077,701,2.919,715,3.816,728,5.326,749,3.798,752,2.667,814,1.455,886,3.65,887,2.724,888,3.346,889,3.346,890,5.036,893,2.882,895,2.882,897,3.08,900,4.16,902,5.921,904,5.25,905,4.243,907,4.926,909,4.01,910,4.267,911,3.346,913,5.846,914,3.346,916,2.214,918,2.882,919,3.346,920,2.381,921,3.346,923,3.346,924,5.846,926,3.346,928,5.937,929,4.926,931,2.016,933,3.08,935,3.346,936,3.505,937,3.08,938,2.882,940,4.243,941,1.455,942,2.592,943,3.346,945,3.346,947,3.346,948,3.346,949,3.346,950,3.346,951,2.479,952,3.346,953,3.346,954,3.346,955,5.57,956,3.346,957,3.346,958,3.346,959,3.346,960,3.346,961,3.346,962,2.882,963,3.346,964,2.724,965,1.767,966,7.189,967,4.535,968,6.874,969,2.142,970,6.874,971,6.328,972,5.427,973,3.816,974,6.328,975,6.874,976,4.926,977,6.874,978,3.057,979,6.449,980,3.346,981,3.346,982,3.08,983,3.346,984,3.346,985,3.08,986,7.628,987,3.08,988,3.346,989,3.346,990,3.346,991,3.08,992,4.926,993,3.346,994,3.346,995,3.346,996,3.346,997,3.346,998,4.926,999,3.346,1000,3.346,1001,3.346,1002,3.346,1003,3.346,1004,3.346,1005,3.346,1006,3.346,1007,2.724,1008,3.346,1009,3.346,1010,3.346,1011,3.346,1012,3.346,1013,4.926,1014,3.346,1015,3.346,1016,2.819,1017,5.846,1018,3.346,1019,3.346,1020,4.01,1021,3.346,1022,3.346,1023,3.346,1024,3.346,1025,3.346,1026,3.346,1027,3.346,1028,3.346,1029,3.346,1030,3.346,1031,3.346,1032,3.346]],["title/classes/CCFSpatialGraph.html",[179,0.103,905,3.774]],["body/classes/CCFSpatialGraph.html",[3,0.05,4,0.078,5,0.05,6,0.073,11,0.004,12,0.324,13,0.736,16,1.398,17,0.006,18,1.326,19,0.744,23,0.068,53,0.936,80,2.692,83,4.587,84,3.836,87,1.341,99,0.004,100,0.003,118,1.443,127,0.938,129,1.719,150,0.281,152,2.396,179,0.099,197,1.443,205,1.619,216,1.547,219,1.37,236,2.53,237,2.609,247,1.755,252,1.047,253,1.601,259,4.118,272,1.942,456,2.334,461,1.524,495,2.021,497,1.057,566,1.397,608,5.447,609,2.782,616,4.189,643,1.984,644,2.609,645,1.942,673,3.172,748,2.609,857,2.692,859,3.886,863,5.402,886,5.3,887,6.594,890,5.716,905,4.994,910,4.965,955,3.257,964,3.422,965,2.221,987,3.87,1016,3.199,1020,3.422,1033,4.71,1034,6.495,1035,6.495,1036,6.495,1037,8.013,1038,6.495,1039,4.204,1040,6.495,1041,4.994,1042,8.013,1043,6.495,1044,4.71,1045,6.495,1046,6.108,1047,4.71,1048,6.495,1049,6.495,1050,6.158,1051,4.71,1052,6.108,1053,4.71,1054,6.495,1055,8.406,1056,4.71,1057,7.434,1058,3.87,1059,5.797,1060,4.71,1061,4.204,1062,4.71,1063,4.71,1064,5.797,1065,4.71,1066,4.204,1067,4.204,1068,3.621,1069,3.87,1070,4.71,1071,4.71,1072,6.495,1073,6.635,1074,6.908,1075,4.71,1076,3.87,1077,3.621,1078,3.621,1079,3.87,1080,3.062,1081,4.71,1082,4.71,1083,4.71,1084,4.71,1085,4.71,1086,4.71,1087,4.71,1088,4.204,1089,4.71,1090,4.71,1091,4.71,1092,4.71,1093,4.71,1094,4.71,1095,4.71,1096,4.71,1097,2.692,1098,4.71,1099,3.87,1100,2.462,1101,7.434,1102,4.71,1103,7.434,1104,7.434,1105,4.71,1106,4.71,1107,4.71,1108,4.71,1109,4.71,1110,4.71,1111,4.71,1112,4.71,1113,4.71,1114,4.71,1115,4.71,1116,4.71,1117,4.71,1118,6.495,1119,6.109,1120,4.71,1121,4.71,1122,4.71,1123,4.71]],["title/classes/CCFSpatialScene.html",[179,0.103,909,3.567]],["body/classes/CCFSpatialScene.html",[0,0.191,2,0.87,3,0.041,4,0.059,5,0.041,6,0.069,11,0.003,12,0.265,16,1.379,17,0.006,18,1.39,19,0.71,20,0.779,23,0.059,28,1.353,45,2.134,46,1.481,53,0.935,61,3.576,62,3.576,66,2.071,73,3.351,74,3.325,83,4.244,87,1.34,90,2.446,99,0.003,100,0.002,118,1.251,127,1.458,128,2.038,129,1.622,145,2.206,150,0.248,152,1.959,179,0.081,197,1.251,219,1.33,237,2.134,240,2.943,247,1.754,252,2.111,253,1.752,272,1.588,332,1.739,456,1.909,461,1.474,474,2.356,489,3.576,495,2.019,497,0.801,520,4.183,566,1.142,568,2.744,574,5.199,608,3.444,609,2.275,616,3.478,624,4.918,673,3.478,725,4.329,739,3.576,740,6.253,741,6.253,742,4.329,743,4.329,744,4.329,745,5.628,746,4.329,747,4.329,772,2.962,781,4.329,805,2.962,808,5.987,857,3.803,859,4.592,863,6.383,886,4.841,887,6.258,898,5.025,909,4.091,910,5.344,917,5.385,938,4.329,942,2.664,955,2.664,964,2.799,965,1.816,1020,4.091,1039,3.438,1041,4.329,1058,3.165,1068,2.962,1069,3.165,1074,6.399,1076,3.165,1077,2.962,1078,2.962,1079,3.165,1097,2.201,1099,3.165,1124,3.438,1125,5.63,1126,5.63,1127,5.63,1128,5.63,1129,5.63,1130,3.852,1131,5.025,1132,3.852,1133,5.025,1134,3.852,1135,5.025,1136,3.852,1137,5.025,1138,3.852,1139,3.852,1140,5.025,1141,6.533,1142,3.852,1143,2.962,1144,6.95,1145,5.025,1146,3.438,1147,3.438,1148,3.438,1149,6.533,1150,6.95,1151,5.025,1152,5.025,1153,7.497,1154,3.438,1155,5.025,1156,3.438,1157,3.438,1158,3.438,1159,3.165,1160,3.438,1161,3.438,1162,3.438,1163,3.438,1164,3.438,1165,3.438,1166,3.438,1167,3.438,1168,5.025,1169,3.438,1170,3.438,1171,7.686,1172,5.025,1173,5.025,1174,5.025,1175,5.025,1176,5.025,1177,3.438,1178,5.025,1179,3.438,1180,5.025,1181,5.025,1182,3.438,1183,3.438,1184,3.438,1185,3.438,1186,3.438,1187,3.438,1188,3.438,1189,3.438,1190,3.438,1191,3.438,1192,6.95,1193,5.025,1194,3.438,1195,3.438,1196,3.438,1197,5.025,1198,3.438,1199,3.165,1200,3.438,1201,4.091,1202,2.275,1203,3.438,1204,3.438,1205,3.438,1206,3.438,1207,3.438,1208,3.438,1209,1.861,1210,3.438,1211,3.438,1212,3.438,1213,3.438,1214,3.438,1215,3.438,1216,3.438]],["title/interfaces/ChannelConfig.html",[0,0.243,1217,3.247]],["body/interfaces/ChannelConfig.html",[0,0.354,2,0.828,3,0.057,4,0.039,5,0.039,6,0.029,11,0.004,12,0.373,13,0.616,16,1.255,17,0.006,18,1.727,19,0.723,23,0.084,28,1.988,46,1.447,47,1.032,48,0.686,92,3.599,95,3.022,99,0.003,100,0.002,125,1.035,141,1.95,145,1.391,150,0.233,179,0.077,205,1.548,216,1.785,219,1.346,235,2.097,247,1.944,252,1.589,271,2.695,281,2.223,332,1.451,492,3.883,497,0.522,551,2.45,553,4.669,568,2.24,570,3.323,589,3.961,605,2.097,610,2.097,612,2.91,614,1.424,618,4.509,619,2.33,621,1.973,622,5.213,623,2.33,624,3.291,627,3.821,629,2.845,635,3.323,646,2.33,649,5.253,749,3.599,752,3.688,782,2.427,832,3.164,951,2.427,1016,1.579,1080,2.561,1217,4.279,1218,2.537,1219,2.33,1220,3.99,1221,3.688,1222,3.961,1223,4.945,1224,4.669,1225,4.279,1226,2.167,1227,2.427,1228,3.323,1229,3.45,1230,3.323,1231,3.45,1232,2.666,1233,2.666,1234,3.593,1235,4.509,1236,2.666,1237,2.666,1238,3.757,1239,4.473,1240,2.666,1241,3.593,1242,3.593,1243,4.701,1244,4.705,1245,3.45,1246,2.33,1247,2.33,1248,3.638,1249,5.547,1250,4.945,1251,3.948,1252,4.473,1253,2.666,1254,2.666,1255,2.666,1256,4.473,1257,2.167,1258,4.701,1259,4.701,1260,2.537,1261,2.537,1262,4.473,1263,4.73,1264,4.701,1265,2.427,1266,2.537,1267,2.666,1268,2.427,1269,5.196,1270,2.537,1271,5.993,1272,3.757,1273,3.757,1274,4.087,1275,2.427,1276,2.666,1277,2.666,1278,2.666,1279,2.666,1280,2.666,1281,2.666,1282,2.33,1283,4.701,1284,4.701,1285,4.701,1286,5.196,1287,5.547,1288,2.537,1289,2.666,1290,2.537,1291,3.948,1292,2.666,1293,2.666,1294,2.666,1295,2.537,1296,2.666,1297,2.666,1298,2.666,1299,2.537,1300,2.666,1301,2.666,1302,3.948,1303,2.666,1304,2.666,1305,2.537,1306,4.701,1307,2.666,1308,2.921,1309,2.666,1310,3.948,1311,2.427,1312,2.427,1313,2.666,1314,2.537,1315,2.666,1316,3.948,1317,2.537,1318,2.666,1319,2.666,1320,2.427,1321,3.323,1322,2.666,1323,2.666,1324,2.666,1325,2.666,1326,2.666,1327,2.537,1328,2.666,1329,2.244,1330,2.666,1331,2.666,1332,2.666,1333,2.666,1334,2.666,1335,2.537,1336,2.666,1337,2.537,1338,3.757,1339,2.666,1340,2.666,1341,2.666,1342,2.666,1343,2.537,1344,2.666,1345,2.666,1346,2.666,1347,2.666,1348,2.666,1349,2.427,1350,2.666,1351,2.666,1352,3.948,1353,2.666,1354,2.666]],["title/components/CheckboxComponent.html",[101,0.588,329,1.408]],["body/components/CheckboxComponent.html",[3,0.072,4,0.042,5,0.042,6,0.066,8,0.797,11,0.002,12,0.276,15,2.912,16,1.393,17,0.006,19,0.64,20,1.378,23,0.042,24,3.356,46,1.173,47,1.504,48,1.543,49,1.251,53,0.758,55,1.078,65,1.357,69,2.839,73,2.36,82,1.558,87,0.64,89,2.95,99,0.004,100,0.004,101,0.947,102,1.636,103,1.394,104,1.061,105,1.151,106,1.21,107,1.078,114,2.079,117,2.805,118,2.246,120,1.61,122,1.663,127,0.799,128,0.949,129,1.528,131,1.485,136,0.98,144,2.802,146,3.547,148,1.189,150,0.177,151,0.361,159,5.76,169,1.151,173,1.151,177,1.636,179,0.084,180,1.778,183,1.289,193,1.096,197,1.289,199,1.83,205,1.035,219,0.59,224,1.717,232,4.458,233,3.022,236,1.974,248,3.212,259,3.212,268,2.808,269,1.938,275,2.207,281,1.078,284,2.277,286,1.726,290,1.416,291,3.064,292,1.988,293,1.132,295,2.157,308,2.222,309,2.097,311,3.296,317,0.63,318,1.533,319,1.558,320,1.21,321,2.25,322,1.21,323,1.748,324,1.132,325,1.151,326,1.748,327,1.151,328,1.21,329,2.14,330,1.21,331,1.151,332,1.504,333,1.21,334,1.151,335,1.17,336,1.21,337,1.151,338,1.21,339,1.151,340,1.21,341,1.636,342,1.748,343,1.86,344,2.386,345,1.748,346,1.151,347,1.748,348,1.151,349,1.189,350,1.748,351,1.151,352,1.636,353,1.748,354,1.636,355,1.748,356,1.151,357,1.21,358,1.151,359,1.151,360,1.21,361,1.151,362,1.21,363,1.151,364,2.053,365,1.151,366,1.21,367,1.151,368,1.748,369,1.151,370,1.21,371,1.151,372,1.21,373,1.17,374,1.21,375,1.151,376,1.21,377,1.151,378,1.21,379,1.151,380,1.132,381,1.078,382,1.151,383,1.132,384,1.17,385,1.151,386,1.21,387,1.151,388,1.17,389,1.21,390,1.636,391,1.151,392,1.21,393,1.21,461,0.727,475,2.633,481,2.391,483,2.542,495,0.964,496,3.212,497,0.571,499,3.547,505,2.165,517,2.222,518,2.293,523,1.805,528,3.296,596,3.435,620,2.551,821,2.442,832,2.296,1119,3.296,1355,4.011,1356,5.799,1357,5.176,1358,8.249,1359,5.799,1360,8.373,1361,6.81,1362,5.799,1363,5.799,1364,5.596,1365,4.011,1366,5.799,1367,5.799,1368,5.799,1369,5.799,1370,4.011,1371,4.765,1372,6.131,1373,4.458,1374,4.011,1375,3.425,1376,8.042,1377,6.659,1378,4.011,1379,4.214,1380,5.799,1381,7.461,1382,7.016,1383,4.011,1384,3.425,1385,4.458,1386,5.799,1387,4.214,1388,4.264,1389,5.799,1390,5.799,1391,3.296,1392,4.011,1393,5.596,1394,4.011,1395,3.58,1396,4.011,1397,4.011,1398,4.011,1399,4.011,1400,3.296,1401,4.011,1402,2.774,1403,4.214,1404,4.011,1405,4.011]],["title/modules/CheckboxModule.html",[397,0.746,1406,3.567]],["body/modules/CheckboxModule.html",[3,0.075,4,0.075,5,0.075,6,0.057,11,0.004,17,0.006,23,0.075,99,0.005,100,0.004,150,0.286,151,0.642,179,0.15,204,2.049,317,1.121,329,2.888,397,1.085,399,2.049,400,2.049,401,2.731,402,2.083,403,2.083,404,2.731,419,2.395,420,1.889,422,2.19,423,2.559,534,2.838,535,2.347,1391,5.869,1406,7.127,1407,6.375,1408,6.375,1409,6.375,1410,7.143,1411,7.576,1412,7.143]],["title/interfaces/Collision.html",[0,0.243,1413,4.381]],["body/interfaces/Collision.html",[0,0.235,2,1.073,3,0.05,4,0.05,5,0.05,6,0.038,11,0.003,12,0.327,13,0.741,16,1.52,17,0.006,19,0.682,23,0.05,28,2.315,29,4.093,53,1.078,95,1.882,99,0.004,100,0.003,128,1.547,145,1.674,150,0.266,205,1.166,216,2.148,219,1.461,247,1.365,252,1.453,253,1.817,291,2.139,497,1.352,550,3.019,574,3.621,586,3.998,601,2.242,608,4.57,609,2.808,612,2.139,616,2.485,643,2.002,666,3.655,688,2.543,715,3.288,717,3.655,718,5.372,720,3.655,721,5.372,722,3.655,728,4.52,739,4.744,748,3.621,749,2.242,751,6.139,752,2.297,753,3.907,754,3.907,755,3.907,764,3.907,765,3.655,789,5.372,790,3.907,798,5.372,802,3.019,1199,3.907,1413,6.668,1414,4.754,1415,4.754,1416,8.715,1417,8.045,1418,4.754,1419,4.243,1420,4.243,1421,4.754,1422,4.754,1423,6.537,1424,3.736,1425,8.434,1426,4.754,1427,4.754,1428,4.754,1429,4.754,1430,4.754,1431,4.754,1432,4.754,1433,4.754,1434,4.754,1435,4.754,1436,4.754,1437,4.754,1438,4.754,1439,4.754,1440,4.754,1441,4.754,1442,4.754,1443,4.754,1444,4.754,1445,4.754,1446,7.47,1447,4.754,1448,4.754,1449,6.537,1450,8.045,1451,4.754,1452,8.045,1453,4.754,1454,4.754,1455,6.537,1456,6.139,1457,6.537,1458,6.537,1459,6.537,1460,6.537,1461,6.537,1462,6.537,1463,7.47,1464,4.754,1465,4.754,1466,4.754,1467,4.754,1468,6.537,1469,4.754,1470,4.754,1471,4.754,1472,4.754,1473,4.754,1474,4.754,1475,4.754,1476,4.754,1477,8.045,1478,6.537,1479,4.754,1480,4.754,1481,4.754,1482,4.754,1483,4.754,1484,4.754,1485,4.754,1486,4.754,1487,4.754,1488,4.754,1489,4.754,1490,4.754,1491,4.754,1492,4.754,1493,8.434,1494,6.537,1495,6.537,1496,6.537,1497,4.754,1498,4.754,1499,4.754,1500,4.754,1501,4.754]],["title/components/ColorBarComponent.html",[101,0.588,331,1.408]],["body/components/ColorBarComponent.html",[3,0.072,4,0.043,5,0.043,6,0.071,8,0.801,11,0.004,12,0.47,16,1.246,17,0.006,19,0.552,20,1.383,23,0.043,45,2.236,46,0.817,47,1.508,48,1.547,49,1.259,53,0.761,55,1.085,65,1.361,82,1.837,87,0.644,99,0.004,100,0.004,101,0.95,102,1.644,103,1.4,104,1.068,105,1.158,106,1.217,107,1.085,114,2.084,117,2.81,118,2.246,120,1.617,122,1.671,127,1.361,128,0.955,129,1.684,136,0.986,144,3.302,148,1.197,150,0.178,151,0.363,169,1.158,173,1.158,177,1.644,179,0.085,193,1.103,197,1.295,199,1.085,205,0.72,219,0.857,224,2.367,238,4.145,239,4.621,252,0.897,268,1.665,271,1.281,275,1.536,281,2.011,290,1.423,293,1.139,300,1.7,301,1.737,302,1.631,303,3.853,317,0.634,318,1.541,319,1.566,320,1.217,321,2.256,322,1.217,323,1.757,324,1.139,325,1.158,326,1.757,327,1.158,328,1.217,329,1.158,330,1.217,331,2.146,332,1.896,333,1.217,334,1.158,335,1.177,336,1.217,337,1.158,338,1.217,339,1.158,340,1.217,341,1.644,342,1.757,343,1.867,344,2.392,345,1.757,346,1.158,347,1.757,348,1.158,349,1.197,350,1.757,351,1.158,352,1.644,353,1.757,354,1.644,355,1.757,356,1.158,357,1.217,358,1.158,359,1.158,360,1.217,361,1.158,362,1.217,363,1.158,364,2.061,365,1.158,366,1.217,367,1.158,368,1.757,369,1.158,370,1.217,371,1.158,372,1.217,373,1.177,374,1.217,375,1.158,376,1.217,377,1.158,378,1.217,379,1.158,380,1.139,381,1.085,382,1.158,383,1.139,384,1.177,385,1.158,386,1.217,387,1.158,388,1.177,389,1.217,390,1.644,391,1.158,392,1.217,393,1.217,461,1.357,475,2.8,481,2.402,483,2.552,494,1.903,495,0.97,497,0.574,505,2.175,523,2.621,662,2.502,821,2.453,1375,2.385,1502,5.249,1503,4.294,1504,6.833,1505,4.037,1506,7.169,1507,3.853,1508,6.835,1509,5.825,1510,5.199,1511,6.835,1512,3.994,1513,6.835,1514,6.835,1515,6.835,1516,3.227,1517,6.835,1518,4.037,1519,3.329,1520,4.037,1521,3.7,1522,4.181,1523,4.037,1524,4.037,1525,5.825,1526,4.037,1527,5.199,1528,3.603,1529,4.037,1530,4.037,1531,4.037,1532,4.037,1533,4.949,1534,3.603,1535,4.037,1536,4.037,1537,4.037,1538,4.787,1539,5.199,1540,5.199,1541,5.825,1542,2.47,1543,2.564,1544,3.603,1545,4.028,1546,3.853,1547,2.171,1548,4.037,1549,2.171,1550,2.001,1551,2.236,1552,2.934]],["title/modules/ColorBarModule.html",[397,0.746,1553,3.395]],["body/modules/ColorBarModule.html",[3,0.075,4,0.075,5,0.075,6,0.057,11,0.004,17,0.006,23,0.075,99,0.005,100,0.004,150,0.276,151,0.642,179,0.15,204,2.049,317,1.121,331,2.888,332,1.357,397,1.085,399,2.049,400,2.049,401,2.731,402,2.083,403,2.083,404,2.731,419,2.395,420,1.889,422,2.19,423,2.559,534,2.838,535,2.347,1502,4.219,1503,3.451,1504,5.492,1553,6.782,1554,6.375,1555,6.375,1556,6.375,1557,7.143,1558,7.143]],["title/components/ColorPickerLauncherComponent.html",[101,0.588,334,1.408]],["body/components/ColorPickerLauncherComponent.html",[3,0.078,4,0.049,5,0.049,6,0.059,8,0.642,11,0.003,12,0.321,13,0.732,17,0.006,19,0.521,23,0.049,47,1.688,48,1.719,53,0.718,55,1.254,65,1.474,89,3.283,99,0.004,100,0.004,101,1.063,102,1.821,103,1.551,104,1.234,105,1.338,106,1.407,107,1.254,114,2.184,117,2.827,118,2.263,120,1.791,122,1.851,128,1.104,129,1.246,134,4.462,136,1.139,148,1.384,150,0.197,151,0.419,169,1.338,173,1.338,177,1.821,179,0.098,193,1.274,194,2.838,199,1.254,224,2.112,233,2.364,271,1.481,272,1.924,281,1.254,290,1.576,293,1.317,296,2.052,298,3.373,300,1.965,301,2.008,302,1.885,317,0.733,318,1.706,319,1.734,320,1.407,321,2.407,322,1.407,323,1.946,324,1.317,325,1.338,326,1.946,327,1.338,328,1.407,329,1.338,330,1.407,331,1.338,332,1.852,333,1.407,334,2.289,335,2.83,336,1.407,337,1.338,338,1.407,339,1.338,340,1.407,341,1.821,342,1.946,343,2.02,344,2.526,345,1.946,346,1.338,347,1.946,348,1.338,349,1.384,350,1.946,351,1.338,352,1.821,353,1.946,354,1.821,355,1.946,356,1.338,357,1.407,358,1.338,359,1.338,360,1.407,361,1.338,362,1.407,363,1.338,364,2.23,365,1.338,366,1.407,367,1.338,368,1.946,369,1.338,370,1.407,371,1.338,372,1.407,373,1.361,374,1.407,375,1.338,376,1.407,377,1.338,378,1.407,379,1.338,380,1.317,381,1.254,382,1.338,383,1.317,384,1.361,385,1.338,386,1.407,387,1.338,388,1.361,389,1.407,390,1.821,391,1.338,392,1.407,393,1.407,475,2.278,481,2.661,483,2.762,496,3.575,497,0.664,505,2.98,523,2.903,612,4.073,821,2.718,829,4.268,1252,4.462,1502,4.369,1503,3.574,1540,5.759,1547,2.509,1559,6.079,1560,4.666,1561,5.303,1562,4.689,1563,5.759,1564,6.453,1565,6.453,1566,3.042,1567,3.042,1568,6.453,1569,7.397,1570,6.453,1571,5.115,1572,3.978,1573,4.666,1574,4.666,1575,5.759,1576,4.962,1577,3.47,1578,4.962,1579,2.2,1580,2.963,1581,4.666,1582,3.834]],["title/modules/ColorPickerLauncherModule.html",[397,0.746,1583,3.567]],["body/modules/ColorPickerLauncherModule.html",[3,0.073,4,0.073,5,0.073,6,0.056,11,0.004,17,0.006,23,0.073,99,0.005,100,0.004,150,0.283,151,0.624,179,0.146,204,1.992,224,2.104,317,1.09,332,1.586,334,2.879,335,2.61,397,1.055,399,1.992,400,1.992,401,2.699,402,2.026,403,2.026,404,2.699,419,2.355,420,1.837,422,2.56,423,2.517,534,2.791,535,2.282,1502,4.102,1503,3.356,1559,5.707,1583,7.195,1584,6.199,1585,6.199,1586,6.199,1587,6.199,1588,7.009,1589,6.945,1590,6.945,1591,5.707,1592,6.945]],["title/interfaces/ColorScheme.html",[0,0.243,1512,2.372]],["body/interfaces/ColorScheme.html",[0,0.361,2,1.647,3,0.077,4,0.077,5,0.077,6,0.058,11,0.004,12,0.502,13,0.975,16,1.531,17,0.006,18,1.631,19,0.802,23,0.077,53,1.051,99,0.005,100,0.004,1512,4.154,1522,5.772,1533,6.045,1543,5.993,1546,6.045,1593,7.298,1594,7.298]],["title/interfaces/ColorScheme-1.html",[0,0.203,253,0.885,1512,1.985]],["body/interfaces/ColorScheme-1.html",[0,0.31,2,1.007,3,0.066,4,0.047,5,0.047,6,0.036,8,0.613,11,0.003,12,0.496,13,0.709,16,1.341,17,0.006,18,1.397,19,0.786,23,0.1,36,1.551,47,0.848,51,1.697,53,1.074,69,1.697,82,1.68,99,0.004,100,0.003,127,1.856,131,1.849,219,1.37,224,2.37,236,1.518,239,3.021,252,2.049,253,1.985,332,1.372,504,2.728,629,1.962,832,1.765,1502,2.634,1503,2.155,1512,4.579,1522,5.952,1533,6.163,1543,6.127,1546,6.46,1577,2.398,1595,3.98,1596,4.459,1597,5.138,1598,5.138,1599,5.581,1600,5.581,1601,3.98,1602,3.98,1603,5.581,1604,3.98,1605,5.581,1606,3.98,1607,3.98,1608,3.98,1609,8.227,1610,8.227,1611,6.698,1612,8.227,1613,8.227,1614,5.581,1615,5.581,1616,3.98,1617,3.98,1618,3.98,1619,3.98,1620,3.98,1621,3.98,1622,6.444,1623,3.98,1624,3.98,1625,3.98,1626,5.581,1627,3.98,1628,3.98,1629,3.98,1630,6.444,1631,3.98,1632,3.98,1633,3.98,1634,3.98,1635,3.98,1636,5.581,1637,3.98,1638,3.98,1639,6.444,1640,3.98,1641,3.98,1642,3.98,1643,3.98,1644,3.98,1645,3.98,1646,3.98,1647,6.444,1648,3.98,1649,3.98,1650,3.98,1651,3.98,1652,3.98,1653,3.98,1654,3.98,1655,6.444,1656,3.98,1657,3.98,1658,3.98,1659,3.98,1660,3.98,1661,3.98,1662,3.98,1663,3.98,1664,6.444,1665,3.98,1666,3.98,1667,3.98,1668,3.98,1669,3.98,1670,3.98,1671,3.98,1672,3.98,1673,6.444,1674,3.98,1675,3.98,1676,3.98,1677,3.98,1678,3.98,1679,3.98,1680,3.98,1681,3.98,1682,6.444,1683,3.98,1684,3.98,1685,3.98,1686,3.98,1687,3.98,1688,3.98,1689,3.98,1690,2.949,1691,2.006,1692,3.429,1693,3.98]],["title/components/ColorSchemeContentsComponent.html",[101,0.588,337,1.408]],["body/components/ColorSchemeContentsComponent.html",[3,0.058,4,0.03,5,0.03,6,0.073,8,0.615,11,0.002,12,0.308,13,0.82,15,0.952,16,0.868,17,0.006,18,1.584,19,0.667,20,1.887,23,0.03,24,2.013,33,1.807,47,1.295,48,1.416,49,1.955,53,0.842,55,0.765,65,1.101,68,1.988,69,3.202,87,1.087,93,1.28,99,0.003,100,0.003,101,0.815,102,1.262,103,1.075,104,0.753,105,0.816,106,0.858,107,0.765,114,1.823,117,2.744,118,2.196,120,1.242,122,1.283,127,0.891,128,0.673,129,1.744,131,1.605,135,3.676,136,0.695,144,3.028,145,1.605,148,0.844,150,0.191,151,0.256,159,3.657,169,0.816,173,0.816,177,1.262,179,0.06,183,0.632,193,0.777,197,0.994,199,1.202,205,1.501,213,3.676,219,0.813,224,2.512,233,1.639,238,2.478,239,2.162,247,1.154,252,0.632,253,1.191,268,2.81,269,2.162,270,2.478,271,1.754,272,1.174,275,1.083,277,2.233,279,2.869,281,1.831,282,2.478,284,2.278,286,3.256,290,1.093,293,1.768,299,1.31,300,2.869,301,1.225,302,2.752,305,1.488,306,1.342,308,1.576,309,1.488,317,0.447,318,1.183,319,1.202,320,0.858,321,1.89,322,0.858,323,1.349,324,0.803,325,0.816,326,1.349,327,0.816,328,0.858,329,0.816,330,0.858,331,0.816,332,1.742,333,0.858,334,0.816,335,0.83,336,0.858,337,1.798,338,0.858,339,0.816,340,0.858,341,1.262,342,1.349,343,1.51,344,2.054,345,1.349,346,0.816,347,1.349,348,0.816,349,0.844,350,1.349,351,0.816,352,1.262,353,1.349,354,1.262,355,1.349,356,0.816,357,0.858,358,0.816,359,0.816,360,0.858,361,0.816,362,0.858,363,0.816,364,1.667,365,0.816,366,0.858,367,0.816,368,1.349,369,0.816,370,0.858,371,0.816,372,0.858,373,0.83,374,0.858,375,0.816,376,0.858,377,0.816,378,0.858,379,0.816,380,0.803,381,0.765,382,0.816,383,0.803,384,0.83,385,0.816,386,0.858,387,0.816,388,0.83,389,0.858,390,1.262,391,0.816,392,0.858,393,0.858,461,1.496,475,2.212,481,1.845,483,2.064,494,4.032,495,1.638,496,3.472,497,1.249,499,2.737,502,1.375,505,1.67,523,2.819,551,1.535,566,1.639,568,1.845,612,4.173,662,1.496,821,1.884,832,3.103,1078,2.188,1209,1.375,1221,4.132,1379,3.251,1502,5.378,1503,4.399,1506,2.338,1507,2.959,1510,3.993,1512,3.656,1516,2.478,1521,2.841,1528,3.993,1542,3.382,1545,1.968,1547,1.53,1549,1.53,1550,2.217,1551,2.478,1552,2.068,1571,4.334,1572,3.37,1577,2.406,1580,1.807,1690,3.657,1694,7.482,1695,2.846,1696,3.676,1697,4.474,1698,3.676,1699,5.15,1700,5.528,1701,4.474,1702,5.528,1703,5.528,1704,6.267,1705,6.267,1706,4.934,1707,4.543,1708,5.528,1709,5.528,1710,6.38,1711,2.846,1712,4.474,1713,2.846,1714,3.094,1715,1.736,1716,2.846,1717,3.251,1718,3.993,1719,2.846,1720,3.251,1721,2.846,1722,2.846,1723,6.566,1724,2.846,1725,4.474,1726,3.251,1727,3.094,1728,2.217,1729,1.968,1730,2.846,1731,2.846,1732,2.846,1733,4.818,1734,2.846,1735,2.846,1736,2.846,1737,2.846,1738,5.593,1739,2.846,1740,2.846,1741,2.846,1742,2.846,1743,5.593,1744,2.846,1745,2.846,1746,2.846,1747,2.846,1748,2.846,1749,2.846,1750,4.554,1751,2.846,1752,2.846,1753,6.267,1754,2.846,1755,2.846,1756,2.846,1757,2.846,1758,2.846,1759,2.846,1760,5.528,1761,2.54,1762,2.54,1763,2.54,1764,2.54,1765,2.54,1766,2.846,1767,2.846,1768,2.846,1769,2.846,1770,4.474,1771,2.068,1772,2.846,1773,2.846,1774,2.846,1775,1.807,1776,1.968,1777,3.251,1778,2.068,1779,3.094,1780,1.968,1781,2.188,1782,2.338,1783,1.626,1784,4.474,1785,1.882,1786,2.54,1787,3.993,1788,2.188,1789,1.968,1790,2.846,1791,2.54]],["title/modules/ColorSchemeContentsModule.html",[397,0.746,1792,3.567]],["body/modules/ColorSchemeContentsModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,99,0.005,100,0.004,150,0.293,151,0.607,179,0.142,204,1.939,224,2.229,317,1.061,332,1.561,337,2.869,397,1.027,399,1.939,400,1.939,401,2.667,402,1.971,403,1.971,404,2.667,412,6.339,419,2.317,420,1.787,422,2.518,423,2.476,442,5.554,443,4.912,444,5.197,534,2.746,535,2.221,1221,3.266,1502,3.992,1503,3.266,1504,5.197,1553,6.627,1694,5.554,1750,4.912,1792,7.239,1793,6.033,1794,6.033,1795,6.759,1796,6.033,1797,6.759,1798,7.329,1799,6.759,1800,6.033]],["title/components/ColorSchemePopupComponent.html",[101,0.588,339,1.408]],["body/components/ColorSchemePopupComponent.html",[3,0.069,4,0.039,5,0.039,6,0.071,8,0.515,11,0.002,12,0.258,13,0.913,17,0.006,19,0.651,20,1.325,23,0.039,47,1.464,48,1.558,49,1.721,53,0.729,55,1.007,65,1.305,87,1.045,99,0.003,100,0.004,101,0.922,102,1.557,103,1.327,104,0.991,105,1.075,106,1.13,107,1.007,114,2.03,117,2.799,118,2.237,120,1.532,122,1.583,127,1.305,128,0.887,129,1.684,136,0.915,145,1.413,148,1.112,150,0.2,151,0.337,169,1.075,173,1.075,177,1.557,179,0.079,183,0.833,193,1.024,197,1.226,199,1.007,205,1.169,215,2.735,219,0.811,224,2.496,233,2.022,247,0.783,248,3.057,269,3.491,274,1.96,277,2.646,283,1.373,286,2.819,290,1.348,293,1.058,296,2.428,299,1.726,317,0.588,318,1.459,319,2.384,320,1.13,321,2.179,322,1.13,323,1.664,324,1.058,325,1.583,326,1.664,327,1.075,328,1.13,329,1.075,330,1.13,331,1.075,332,1.73,333,1.13,334,1.075,335,1.093,336,1.13,337,1.075,338,1.13,339,2.072,340,1.13,341,1.557,342,1.664,343,1.789,344,2.322,345,1.664,346,1.075,347,1.664,348,1.075,349,1.112,350,1.664,351,1.075,352,1.557,353,1.664,354,1.557,355,1.664,356,1.075,357,1.13,358,1.075,359,1.075,360,1.13,361,1.075,362,1.13,363,1.075,364,1.975,365,1.075,366,1.13,367,1.075,368,1.664,369,1.075,370,1.13,371,1.075,372,1.13,373,1.093,374,1.13,375,1.075,376,1.13,377,1.075,378,1.13,379,1.075,380,1.058,381,1.007,382,1.075,383,1.058,384,1.093,385,1.075,386,1.13,387,1.075,388,1.093,389,1.13,390,1.557,391,1.075,392,1.13,393,1.13,461,0.68,475,2.312,481,2.276,483,2.445,495,0.901,497,0.533,505,2.697,551,1.818,587,5.036,588,1.811,596,3.326,612,3.845,616,1.96,621,2.968,643,1.579,662,2.416,673,1.484,701,2.23,748,2.077,821,2.324,827,3.26,836,4.891,838,3.816,840,2.479,917,2.592,1375,3.26,1379,4.01,1502,5.239,1503,4.286,1507,6.221,1512,3.165,1542,4.007,1571,4.53,1572,3.522,1580,2.381,1591,7.289,1690,4.332,1707,5.382,1714,5.57,1718,4.926,1720,4.01,1783,2.142,1801,3.749,1802,6.55,1803,5.519,1804,7.225,1805,8.723,1806,8.055,1807,4.535,1808,4.535,1809,3.749,1810,4.419,1811,3.505,1812,3.749,1813,4.926,1814,3.749,1815,2.479,1816,4.243,1817,3.08,1818,3.749,1819,4.535,1820,4.535,1821,4.996,1822,4.01,1823,5.519,1824,5.519,1825,3.749,1826,4.926,1827,3.749,1828,6.449,1829,5.519,1830,3.749,1831,3.749,1832,3.505,1833,3.505,1834,3.749,1835,4.243,1836,2.592,1837,3.346,1838,3.346,1839,3.346,1840,3.749,1841,4.926,1842,3.749,1843,3.749,1844,3.749,1845,5.519,1846,3.749,1847,3.749,1848,3.749,1849,3.08]],["title/modules/ColorSchemePopupModule.html",[397,0.746,1588,3.567]],["body/modules/ColorSchemePopupModule.html",[3,0.073,4,0.073,5,0.073,6,0.056,11,0.004,17,0.006,23,0.073,99,0.005,100,0.004,150,0.283,151,0.624,179,0.146,204,1.992,224,2.394,317,1.09,332,1.586,339,2.879,397,1.055,399,1.992,400,1.992,401,2.699,402,2.026,403,2.026,404,2.699,419,2.355,420,1.837,422,2.56,423,2.517,534,2.791,535,2.282,1502,4.102,1503,3.356,1588,7.195,1591,5.707,1694,5.707,1792,7.009,1850,6.199,1851,6.199,1852,6.945,1853,6.199,1854,6.945,1855,6.945,1856,6.945]],["title/interfaces/ColorSchemeSelection.html",[0,0.243,1692,3.774]],["body/interfaces/ColorSchemeSelection.html",[0,0.314,2,1.026,3,0.077,4,0.048,5,0.048,6,0.036,8,0.625,11,0.003,12,0.57,13,0.718,16,0.995,17,0.006,18,1.408,19,0.768,23,0.1,36,1.127,51,2.411,53,1.05,69,1.729,82,1.221,99,0.004,100,0.003,127,1.863,131,1.164,219,1.375,224,2.412,236,2.156,239,3.813,252,2.056,253,1.993,332,1.5,504,3.875,832,2.508,1502,2.684,1503,2.195,1512,4.623,1522,5.815,1533,5.949,1543,5.992,1546,6.397,1577,3.407,1595,4.056,1597,3.734,1598,5.206,1599,5.654,1600,5.654,1601,4.056,1602,4.056,1603,5.654,1604,4.056,1605,5.654,1606,4.056,1607,4.056,1608,4.056,1609,8.259,1610,8.259,1611,6.724,1612,8.259,1613,8.259,1614,5.654,1615,5.654,1616,4.056,1617,4.056,1618,4.056,1619,4.056,1620,4.056,1621,4.056,1622,6.51,1623,4.056,1624,4.056,1625,4.056,1626,5.654,1627,4.056,1628,4.056,1629,4.056,1630,6.51,1631,4.056,1632,4.056,1633,4.056,1634,4.056,1635,4.056,1636,5.654,1637,4.056,1638,4.056,1639,6.51,1640,4.056,1641,4.056,1642,4.056,1643,4.056,1644,4.056,1645,4.056,1646,4.056,1647,6.51,1648,4.056,1649,4.056,1650,4.056,1651,4.056,1652,4.056,1653,4.056,1654,4.056,1655,6.51,1656,4.056,1657,4.056,1658,4.056,1659,4.056,1660,4.056,1661,4.056,1662,4.056,1663,4.056,1664,6.51,1665,4.056,1666,4.056,1667,4.056,1668,4.056,1669,4.056,1670,4.056,1671,4.056,1672,4.056,1673,6.51,1674,4.056,1675,4.056,1676,4.056,1677,4.056,1678,4.056,1679,4.056,1680,4.056,1681,4.056,1682,6.51,1683,4.056,1684,4.056,1685,4.056,1686,4.056,1687,4.056,1688,4.056,1689,4.056,1690,3.005,1691,2.85,1692,4.871,1693,7.043]],["title/components/ContainerComponent.html",[101,0.588,341,1.385]],["body/components/ContainerComponent.html",[3,0.064,4,0.035,5,0.035,6,0.072,8,0.831,11,0.002,12,0.343,13,0.566,17,0.006,18,0.89,19,0.663,20,1.009,23,0.035,46,1.367,47,1.382,48,1.433,49,1.022,51,1.247,53,0.752,55,0.88,65,1.203,82,1.341,87,0.796,99,0.003,100,0.004,101,1.044,102,1.408,103,1.841,104,0.866,105,0.94,106,0.988,107,0.88,109,4.099,114,2.335,117,2.771,118,2.223,120,1.385,122,1.431,125,0.924,127,0.994,128,0.775,129,1.728,131,1.278,136,0.8,145,2.039,148,0.971,150,0.234,151,0.294,153,1.271,156,1.323,169,0.94,173,0.94,177,2.051,179,0.152,180,1.53,181,1.668,183,1.501,192,4.25,193,0.895,197,1.109,199,0.88,205,1.205,216,1.639,219,0.993,224,1.523,247,1.41,252,0.728,253,1.301,273,2.851,274,1.712,275,3.406,277,2.937,283,3.342,290,1.218,293,0.924,314,2.38,317,0.514,318,1.786,319,1.341,320,0.988,321,2.037,322,0.988,323,1.504,324,0.924,325,1.431,326,1.504,327,0.94,328,0.988,329,0.94,330,0.988,331,0.94,332,1.284,333,0.988,334,0.94,335,0.955,336,0.988,337,0.94,338,0.988,339,0.94,340,0.988,341,2.051,342,1.504,343,2.092,344,2.192,345,1.504,346,0.94,347,1.504,348,0.94,349,0.971,350,1.504,351,0.94,352,1.408,353,1.504,354,1.408,355,1.504,356,0.94,357,0.988,358,0.94,359,0.94,360,0.988,361,0.94,362,0.988,363,0.94,364,1.822,365,0.94,366,0.988,367,0.94,368,1.504,369,0.94,370,0.988,371,0.94,372,0.988,373,0.955,374,0.988,375,0.94,376,0.988,377,0.94,378,0.988,379,0.94,380,0.924,381,0.88,382,0.94,383,0.924,384,0.955,385,0.94,386,0.988,387,0.94,388,0.955,389,0.988,390,1.408,391,0.94,392,0.988,393,0.988,395,1.872,403,1.455,461,1.444,495,1.199,497,0.859,502,1.583,551,2.65,566,0.971,588,2.919,596,3.526,673,1.975,814,1.936,815,3.837,820,4.29,849,4.29,880,1.872,941,1.936,969,1.479,1516,2.763,1543,3.168,1566,2.352,1567,2.352,1579,1.544,1691,3.039,1715,2.621,1729,2.194,1857,3.275,1858,2.849,1859,3.835,1860,4.452,1861,3.185,1862,5.392,1863,4.452,1864,2.937,1865,5.392,1866,5.392,1867,5.057,1868,3.45,1869,3.185,1870,6.029,1871,3.168,1872,5.392,1873,3.45,1874,4.132,1875,4.132,1876,4.988,1877,2.057,1878,2.937,1879,3.051,1880,3.275,1881,4.452,1882,3.091,1883,3.275,1884,3.835,1885,4.452,1886,3.168,1887,3.299,1888,3.168,1889,3.275,1890,3.051,1891,4.452,1892,4.452,1893,3.275,1894,3.051,1895,3.275,1896,4.452,1897,2.544,1898,3.275,1899,2.763,1900,7.107,1901,4.452,1902,6.029,1903,3.275,1904,3.835,1905,6.029,1906,4.452,1907,3.275,1908,3.625,1909,3.835,1910,4.452,1911,3.275,1912,3.837,1913,3.168,1914,2.923,1915,3.275,1916,3.625,1917,2.923,1918,3.275,1919,2.923,1920,1.935,1921,2.923,1922,2.691,1923,2.518,1924,2.166,1925,2.518,1926,1.814,1927,2.923,1928,2.518,1929,3.835,1930,2.923,1931,2.518,1932,2.923,1933,2.923,1934,3.249,1935,3.249,1936,2.923,1937,2.166,1938,2.923,1939,1.935,1940,2.003,1941,2.923,1942,2.923,1943,2.923,1944,1.814,1945,2.265,1946,2.518,1947,2.265,1948,2.08,1949,2.923,1950,2.923,1951,3.835,1952,1.814,1953,3.625,1954,2.923,1955,2.923,1956,2.08,1957,2.923,1958,2.923,1959,2.923,1960,4.452,1961,4.452,1962,2.923,1963,2.923,1964,2.923,1965,2.923,1966,2.923,1967,2.923,1968,2.923,1969,2.691,1970,2.691]],["title/components/ContainerComponent-1.html",[101,0.492,253,0.885,341,1.159]],["body/components/ContainerComponent-1.html",[3,0.064,4,0.034,5,0.034,6,0.072,8,0.83,11,0.002,12,0.343,13,0.565,17,0.006,18,0.89,19,0.663,20,1.009,23,0.034,46,1.366,47,1.381,48,1.433,49,1.021,51,1.246,53,0.752,55,0.88,65,1.203,82,1.34,87,0.796,99,0.003,100,0.004,101,1.044,102,1.407,103,1.841,104,0.866,105,0.939,106,0.987,107,0.88,109,4.097,114,2.335,117,2.771,118,2.222,120,1.384,122,1.43,125,0.924,127,0.993,128,0.775,129,1.727,131,1.277,136,0.799,145,2.039,148,0.971,150,0.234,151,0.294,153,1.27,156,1.322,169,0.939,173,0.939,177,2.051,179,0.152,180,1.529,181,1.667,183,1.501,192,4.25,193,0.894,197,1.108,199,0.88,205,1.205,216,1.638,219,0.993,224,1.522,247,1.41,252,0.727,253,1.454,273,2.849,274,1.711,275,3.405,277,2.936,283,3.342,290,1.218,293,0.924,314,2.378,317,0.514,318,1.786,319,1.34,320,0.987,321,2.036,322,0.987,323,1.503,324,0.924,325,1.43,326,1.503,327,0.939,328,0.987,329,0.939,330,0.987,331,0.939,332,1.283,333,0.987,334,0.939,335,0.955,336,0.987,337,0.939,338,0.987,339,0.939,340,0.987,341,2.051,342,1.503,343,2.091,344,2.191,345,1.503,346,0.939,347,1.503,348,0.939,349,0.971,350,1.503,351,0.939,352,1.407,353,1.503,354,1.407,355,1.503,356,0.939,357,0.987,358,0.939,359,0.939,360,0.987,361,0.939,362,0.987,363,0.939,364,1.821,365,0.939,366,0.987,367,0.939,368,1.503,369,0.939,370,0.987,371,0.939,372,0.987,373,0.955,374,0.987,375,0.939,376,0.987,377,0.939,378,0.987,379,0.939,380,0.924,381,0.88,382,0.939,383,0.924,384,0.955,385,0.939,386,0.987,387,0.939,388,0.955,389,0.987,390,1.407,391,0.939,392,0.987,393,0.987,395,1.871,403,1.454,461,1.443,495,1.198,497,0.859,502,1.582,551,2.65,566,0.971,588,2.918,596,3.525,673,1.974,814,1.935,815,3.835,820,4.288,849,4.288,880,1.871,941,1.935,969,1.478,1516,2.762,1543,3.166,1566,2.351,1567,2.351,1579,1.543,1691,3.038,1715,2.621,1729,2.193,1858,2.847,1859,3.834,1860,4.45,1861,3.185,1862,5.39,1863,4.45,1864,2.936,1865,5.39,1866,5.39,1867,5.056,1868,3.448,1869,3.184,1870,6.027,1871,3.166,1872,5.39,1873,3.448,1874,4.13,1875,4.13,1877,2.056,1878,2.936,1879,3.05,1881,4.45,1882,3.09,1884,3.834,1885,4.45,1886,3.166,1887,3.298,1888,3.166,1890,3.05,1891,4.45,1892,4.45,1894,3.05,1896,4.45,1897,2.543,1899,2.762,1900,7.106,1901,4.45,1902,6.027,1904,3.834,1905,6.027,1906,4.45,1908,3.623,1909,3.834,1910,4.45,1912,3.835,1913,3.166,1914,2.921,1916,3.623,1917,2.921,1919,2.921,1920,1.933,1921,2.921,1922,2.69,1923,2.517,1924,2.165,1925,2.517,1926,1.813,1927,2.921,1928,2.517,1929,3.834,1930,2.921,1931,2.517,1932,2.921,1933,2.921,1934,3.248,1935,3.248,1936,2.921,1937,2.165,1938,2.921,1939,1.933,1940,2.002,1941,2.921,1942,2.921,1943,2.921,1944,1.813,1945,2.263,1946,2.517,1947,2.263,1948,2.079,1949,2.921,1950,2.921,1951,3.834,1952,1.813,1953,3.623,1954,2.921,1955,2.921,1956,2.079,1957,2.921,1958,2.921,1959,2.921,1960,4.45,1961,4.45,1962,2.921,1963,2.921,1964,2.921,1965,2.921,1966,2.921,1967,2.921,1968,2.921,1969,2.69,1970,2.69,1971,3.273,1972,4.986,1973,3.273,1974,3.273,1975,3.273,1976,3.273,1977,3.273,1978,3.273,1979,3.273,1980,3.273,1981,3.273,1982,3.273,1983,3.273]],["title/components/ContentComponent.html",[101,0.588,343,1.341]],["body/components/ContentComponent.html",[3,0.084,4,0.057,5,0.057,6,0.057,11,0.003,17,0.006,23,0.057,47,1.675,48,1.694,53,0.794,55,1.455,65,1.59,99,0.004,100,0.005,101,0.955,102,2.013,103,1.715,104,1.432,105,1.553,106,1.632,107,1.455,114,2.282,117,2.845,118,2.278,120,1.981,122,2.046,128,1.281,129,1.045,136,1.322,148,1.605,150,0.165,151,0.487,169,1.553,173,1.553,177,2.013,179,0.113,193,1.479,199,1.455,224,2.011,283,2.613,290,1.742,293,1.528,317,0.85,318,1.887,319,1.917,320,1.632,321,2.558,322,1.632,323,2.151,324,1.528,325,1.553,326,2.151,327,1.553,328,1.632,329,1.553,330,1.632,331,1.553,332,1.612,333,1.632,334,1.553,335,1.579,336,1.632,337,1.553,338,1.632,339,1.553,340,1.632,341,2.013,342,2.151,343,2.472,344,2.658,345,2.151,346,1.553,347,2.151,348,1.553,349,1.605,350,2.151,351,1.553,352,2.013,353,2.151,354,2.013,355,2.151,356,1.553,357,1.632,358,1.553,359,1.553,360,1.632,361,1.553,362,1.632,363,1.553,364,2.406,365,1.553,366,1.632,367,1.553,368,2.151,369,1.553,370,1.632,371,1.553,372,1.632,373,1.579,374,1.632,375,1.553,376,1.632,377,1.553,378,1.632,379,1.553,380,1.528,381,1.455,382,1.553,383,1.528,384,1.579,385,1.553,386,1.632,387,1.553,388,1.579,389,1.632,390,2.013,391,1.553,392,1.632,393,1.632,566,2.366,1566,3.364,1567,3.364,1579,2.553,1984,5.414,1985,5.799,1986,5.863,1987,5.414]],["title/components/ContentComponent-1.html",[101,0.492,253,0.885,343,1.122]],["body/components/ContentComponent-1.html",[3,0.063,4,0.034,5,0.034,6,0.071,8,0.917,11,0.002,12,0.337,13,0.555,17,0.006,18,1.354,19,0.539,20,1.598,23,0.034,46,1.455,47,1.367,48,1.419,49,0.997,53,0.8,55,0.859,65,1.185,82,2.039,87,0.95,99,0.003,100,0.004,101,0.999,102,1.382,103,1.177,104,1.295,105,0.917,106,0.964,107,0.859,114,2.399,117,2.766,118,2.219,120,1.359,125,0.902,127,1.622,128,0.756,129,1.698,131,1.254,136,0.781,141,1.794,145,2.022,148,0.948,150,0.219,151,0.287,153,1.24,169,0.917,173,0.917,177,2.14,179,0.151,180,1.501,181,1.637,183,1.755,192,3.563,193,2.072,197,1.088,199,2.039,205,1.354,216,1.05,219,1.161,224,1.5,247,1.392,248,2.712,252,1.598,253,1.055,271,1.014,273,1.827,277,2.694,281,2.244,282,2.712,283,3.296,284,3.14,290,1.196,293,2.228,306,2.308,310,2.627,312,2.03,317,0.502,318,1.764,319,1.316,320,0.964,321,2.011,322,0.964,323,1.476,324,0.902,325,1.404,326,1.476,327,0.917,328,0.964,329,0.917,330,0.964,331,0.917,332,1.268,333,0.964,334,0.917,335,0.932,336,0.964,337,0.917,338,0.964,339,0.917,340,0.964,341,1.382,342,1.476,343,2.072,344,2.168,345,1.476,346,0.917,347,1.476,348,0.917,349,0.948,350,1.476,351,0.917,352,1.382,353,1.476,354,1.382,355,1.476,356,0.917,357,0.964,358,0.917,359,0.917,360,0.964,361,0.917,362,0.964,363,0.917,364,1.794,365,0.917,366,0.964,367,0.917,368,1.476,369,0.917,370,0.964,371,0.917,372,0.964,373,0.932,374,0.964,375,0.917,376,0.964,377,0.917,378,0.964,379,0.917,380,0.902,381,0.859,382,0.917,383,0.902,384,0.932,385,0.917,386,0.964,387,0.917,388,0.932,389,0.964,390,1.382,391,0.917,392,0.964,393,0.964,395,1.827,420,0.845,461,1.304,494,3.145,495,1.431,497,0.696,502,1.544,551,2.521,566,0.948,596,3.493,662,2.404,814,1.9,857,1.827,859,3.111,941,1.9,969,1.452,1100,2.559,1209,1.544,1274,2.798,1388,1.827,1545,2.21,1550,2.949,1566,2.308,1567,2.308,1579,1.507,1691,3.001,1715,1.9,1729,1.406,1785,2.114,1858,2.806,1861,2.944,1867,5.014,1868,3.386,1869,3.145,1871,3.109,1873,3.386,1874,4.08,1875,4.08,1877,2.019,1878,2.694,1879,2.995,1882,2.944,1886,3.109,1887,3.238,1888,3.109,1894,2.995,1909,3.765,1912,3.779,1913,3.109,1920,1.888,1924,2.114,1934,4.246,1935,4.079,1939,1.888,1940,1.955,1948,2.03,1952,1.771,1956,2.03,1985,4.324,1988,3.196,1989,4.37,1990,6.42,1991,5.953,1992,4.37,1993,4.37,1994,4.37,1995,5.953,1996,5.312,1997,5.312,1998,4.896,1999,2.712,2000,3.196,2001,3.765,2002,3.196,2003,3.196,2004,4.37,2005,3.196,2006,3.196,2007,3.386,2008,3.196,2009,3.558,2010,3.386,2011,3.196,2012,3.196,2013,4.37,2014,5.312,2015,4.37,2016,4.409,2017,3.196,2018,3.196,2019,3.109,2020,2.458,2021,2.633,2022,2.458,2023,2.323,2024,2.853,2025,2.853,2026,2.853,2027,2.853,2028,2.853,2029,2.853,2030,2.853,2031,4.37,2032,2.853,2033,2.853,2034,2.853,2035,2.853,2036,2.853,2037,2.853,2038,2.21,2039,4.37,2040,2.853,2041,4.37,2042,1.626,2043,2.853,2044,1.626,2045,1.771,2046,2.853,2047,2.853,2048,2.853,2049,5.312,2050,2.853,2051,2.853,2052,4.37,2053,2.853,2054,2.853,2055,4.37,2056,2.853,2057,2.853,2058,2.853,2059,2.458,2060,2.853,2061,2.627,2062,2.21]],["title/components/ContentComponent-2.html",[101,0.492,343,1.122,1209,1.985]],["body/components/ContentComponent-2.html",[3,0.063,4,0.034,5,0.034,6,0.071,8,0.917,11,0.002,12,0.337,13,0.555,17,0.006,18,1.354,19,0.539,20,1.598,23,0.034,46,1.455,47,1.367,48,1.419,49,0.997,53,0.8,55,0.859,65,1.185,82,2.039,87,0.95,99,0.003,100,0.004,101,0.999,102,1.382,103,1.177,104,1.295,105,0.917,106,0.964,107,0.859,114,2.399,117,2.766,118,2.219,120,1.359,125,0.902,127,1.622,128,0.756,129,1.698,131,1.254,136,0.781,141,1.794,145,2.022,148,0.948,150,0.219,151,0.287,153,1.24,169,0.917,173,0.917,177,2.14,179,0.151,180,1.501,181,1.637,183,1.755,192,3.563,193,2.072,197,1.088,199,2.039,205,1.354,216,1.05,219,1.161,224,1.5,247,1.392,248,2.712,252,1.598,253,0.688,271,1.014,273,1.827,277,2.694,281,2.244,282,2.712,283,3.296,284,3.14,290,1.196,293,2.228,306,2.308,310,2.627,312,2.03,317,0.502,318,1.764,319,1.316,320,0.964,321,2.011,322,0.964,323,1.476,324,0.902,325,1.404,326,1.476,327,0.917,328,0.964,329,0.917,330,0.964,331,0.917,332,1.268,333,0.964,334,0.917,335,0.932,336,0.964,337,0.917,338,0.964,339,0.917,340,0.964,341,1.382,342,1.476,343,2.072,344,2.168,345,1.476,346,0.917,347,1.476,348,0.917,349,0.948,350,1.476,351,0.917,352,1.382,353,1.476,354,1.382,355,1.476,356,0.917,357,0.964,358,0.917,359,0.917,360,0.964,361,0.917,362,0.964,363,0.917,364,1.794,365,0.917,366,0.964,367,0.917,368,1.476,369,0.917,370,0.964,371,0.917,372,0.964,373,0.932,374,0.964,375,0.917,376,0.964,377,0.917,378,0.964,379,0.917,380,0.902,381,0.859,382,0.917,383,0.902,384,0.932,385,0.917,386,0.964,387,0.917,388,0.932,389,0.964,390,1.382,391,0.917,392,0.964,393,0.964,395,1.827,420,0.845,461,1.304,494,3.145,495,1.431,497,0.696,502,1.544,551,2.521,566,0.948,596,3.493,662,2.404,814,1.9,857,1.827,859,3.111,941,1.9,969,1.452,1100,2.559,1209,2.366,1274,2.798,1388,1.827,1545,2.21,1550,2.949,1566,2.308,1567,2.308,1579,1.507,1691,3.001,1715,1.9,1729,1.406,1785,2.114,1858,2.806,1861,2.944,1867,5.014,1868,3.386,1869,3.145,1871,3.109,1873,3.386,1874,4.08,1875,4.08,1877,2.019,1878,2.694,1879,2.995,1882,2.944,1886,3.109,1887,3.238,1888,3.109,1894,2.995,1909,3.765,1912,3.779,1913,3.109,1920,1.888,1924,2.114,1934,4.246,1935,4.079,1939,1.888,1940,1.955,1948,2.03,1952,1.771,1956,2.03,1985,4.324,1989,4.37,1990,6.42,1991,5.953,1992,4.37,1993,4.37,1994,4.37,1995,5.953,1996,5.312,1997,5.312,1999,2.712,2001,3.765,2004,4.37,2007,3.386,2009,3.558,2010,3.386,2013,4.37,2014,5.312,2015,4.37,2016,4.409,2019,3.109,2020,2.458,2021,2.633,2022,2.458,2023,2.323,2024,2.853,2025,2.853,2026,2.853,2027,2.853,2028,2.853,2029,2.853,2030,2.853,2031,4.37,2032,2.853,2033,2.853,2034,2.853,2035,2.853,2036,2.853,2037,2.853,2038,2.21,2039,4.37,2040,2.853,2041,4.37,2042,1.626,2043,2.853,2044,1.626,2045,1.771,2046,2.853,2047,2.853,2048,2.853,2049,5.312,2050,2.853,2051,2.853,2052,4.37,2053,2.853,2054,2.853,2055,4.37,2056,2.853,2057,2.853,2058,2.853,2059,2.458,2060,2.853,2061,2.627,2062,2.21,2063,3.196,2064,4.896,2065,3.196,2066,3.196,2067,3.196,2068,3.196,2069,3.196,2070,3.196,2071,3.196,2072,3.196,2073,3.196,2074,3.196]],["title/interfaces/ContentContainerChanged.html",[0,0.243,2075,2.805]],["body/interfaces/ContentContainerChanged.html",[0,0.427,2,1.274,3,0.059,4,0.059,5,0.059,6,0.045,8,0.776,11,0.003,12,0.388,13,0.831,17,0.006,18,1.308,19,0.815,23,0.102,46,1.484,53,0.628,82,1.97,97,3.358,99,0.004,100,0.003,101,1.069,103,1.762,114,2.474,116,3.334,131,1.446,141,1.702,150,0.172,179,0.118,192,3.633,215,2.797,219,0.83,233,3.158,275,2.79,281,1.97,283,3.499,284,2.452,290,1.378,296,2.483,486,2.661,497,1.043,643,2.377,645,2.328,673,2.235,688,3.041,941,3.16,965,3.457,969,2.174,1100,2.951,1729,3.225,1861,3.16,1864,2.28,1877,2.328,1878,2.962,1882,3.809,1897,3.088,1952,3.127,2016,3.73,2042,2.871,2044,2.871,2075,4.654,2076,4.102,2077,4.424,2078,4.485,2079,4.485,2080,4.981,2081,3.453,2082,4.19,2083,3.453,2084,4.165,2085,4.485,2086,3.585,2087,3.585,2088,4.19,2089,4.19,2090,3.73,2091,3.585,2092,3.585,2093,4.485,2094,3.226,2095,3.334]],["title/interfaces/ContentContainerChanged-1.html",[0,0.203,253,0.885,2075,2.348]],["body/interfaces/ContentContainerChanged-1.html",[0,0.427,2,1.274,3,0.059,4,0.059,5,0.059,6,0.045,8,0.776,11,0.003,12,0.388,13,0.831,17,0.006,18,1.308,19,0.815,23,0.102,46,1.484,53,0.628,82,1.97,97,3.358,99,0.004,100,0.003,101,1.069,103,1.762,114,2.474,116,3.334,131,1.446,141,1.702,150,0.172,179,0.118,192,3.633,215,2.797,219,0.83,233,3.158,275,2.79,281,1.97,283,3.499,284,2.452,290,1.378,296,2.483,486,2.661,497,1.043,643,2.377,645,2.328,673,2.235,688,3.041,941,3.16,965,3.457,969,2.174,1100,2.951,1729,3.225,1861,3.16,1864,2.28,1877,2.328,1878,2.962,1882,3.809,1897,3.088,1952,3.127,2016,3.73,2042,2.871,2044,2.871,2075,4.654,2077,4.424,2078,4.485,2079,4.485,2080,4.981,2081,3.453,2082,4.19,2083,3.453,2084,4.165,2085,4.485,2086,3.585,2087,3.585,2088,4.19,2089,4.19,2090,3.73,2091,3.585,2092,3.585,2093,4.485,2094,3.226,2095,3.334,2096,4.102]],["title/modules/ContentModule.html",[397,0.746,2097,3.774]],["body/modules/ContentModule.html",[3,0.074,4,0.074,5,0.074,6,0.056,11,0.004,17,0.006,23,0.074,99,0.005,100,0.004,150,0.285,151,0.632,179,0.147,204,2.017,317,1.104,343,2.745,388,2.051,397,1.069,399,2.017,400,2.017,401,2.713,402,2.051,403,2.051,404,2.713,419,2.373,420,1.86,422,2.579,423,2.536,534,2.812,535,2.311,1923,5.407,2097,7.628,2098,6.277,2099,6.277,2100,6.277,2101,6.277,2102,7.029,2103,7.033,2104,5.407,2105,7.033]],["title/modules/CoreModule.html",[397,0.746,410,3.567]],["body/modules/CoreModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,87,1.08,99,0.005,100,0.004,119,2.977,150,0.288,151,0.608,179,0.142,204,1.941,317,1.062,397,1.345,399,1.941,400,1.941,401,2.041,402,1.974,403,1.974,404,2.668,410,7.269,419,2.319,420,1.79,422,2.52,423,2.478,497,0.963,1937,4.477,2106,6.041,2107,6.041,2108,6.041,2109,7.269,2110,6.966,2111,6.966,2112,6.768,2113,8.218,2114,5.562,2115,5.027,2116,6.768,2117,6.768,2118,6.768,2119,4.477,2120,8.85,2121,6.768,2122,4.918,2123,6.768]],["title/interfaces/DataSource.html",[0,0.243,92,2.315]],["body/interfaces/DataSource.html",[0,0.456,1,2.705,2,1.135,3,0.053,4,0.053,5,0.053,6,0.066,7,3.478,8,1.058,9,4.396,10,5.637,11,0.005,12,0.346,14,3.478,15,2.964,16,1.576,17,0.006,18,1.617,19,0.745,20,1.374,21,3.478,22,2.316,23,0.093,24,3.46,25,3.077,26,3.366,27,3.547,28,2.068,29,2.559,30,3.478,31,3.478,32,3.194,33,2.032,34,3.792,35,3.478,36,1.908,37,4.155,38,3.478,39,3.478,40,3.327,41,3.194,42,3.327,43,3.327,44,3.194,45,4.261,46,1.556,47,1.565,48,0.941,49,1.569,50,3.763,51,1.914,52,2.971,53,0.917,54,3.327,55,1.825,56,2.971,57,3.077,58,3.327,59,4.493,60,4.155,61,4.314,62,4.314,63,4.705,64,5.087,65,1.353,66,3.653,67,4.155,68,1.808,69,1.914,70,2.705,71,2.875,72,2.786,73,3.236,74,2.971,75,4.314,76,3.194,77,3.194,78,4.155,79,4.012,80,2.875,81,3.327,82,1.352,83,2.43,84,2.971,85,3.194,86,3.327,87,1.314,88,3.478,89,2.559,90,3.194,91,4.493,92,3.203,93,3.705,94,4.155,95,3.509,96,4.155,97,2.801,98,4.493,99,0.004,100,0.003,129,1.485,197,1.51,217,3.478,461,1.394,495,1.849,893,5.223,895,5.223,896,5.582,917,4.697,2124,5.03,2125,5.03,2126,5.03]],["title/interfaces/DataSource-1.html",[0,0.203,92,1.937,253,0.885]],["body/interfaces/DataSource-1.html",[0,0.355,2,0.831,3,0.081,4,0.039,5,0.039,6,0.029,11,0.004,12,0.374,13,0.618,16,1.256,17,0.006,18,1.635,19,0.74,23,0.084,28,1.991,46,1.102,47,1.035,48,0.689,92,3.774,95,3.027,99,0.003,100,0.002,125,1.039,141,1.955,145,1.395,150,0.233,179,0.077,205,1.549,216,1.79,219,1.347,235,2.105,247,1.945,252,1.592,271,2.698,281,2.226,332,1.035,492,3.889,497,0.524,551,2.452,553,4.676,568,2.246,570,3.332,589,3.968,605,2.105,610,2.105,612,2.916,614,1.429,618,4.515,619,2.339,621,1.98,622,5.217,623,2.339,624,3.298,627,3.829,629,2.852,635,3.332,646,2.339,649,5.259,749,3.605,752,3.694,782,2.436,832,3.169,951,2.436,1016,1.585,1080,2.568,1217,3.603,1218,2.547,1219,2.339,1220,2.847,1221,2.632,1222,3.968,1223,4.954,1224,4.676,1225,4.288,1226,2.175,1227,2.436,1228,4.382,1229,4.549,1230,4.382,1231,4.549,1232,2.676,1233,2.676,1234,3.603,1235,4.515,1236,2.676,1237,2.676,1238,3.767,1239,4.483,1240,2.676,1241,3.603,1242,3.603,1243,4.711,1244,4.71,1245,3.459,1246,2.339,1247,2.339,1248,3.644,1249,5.555,1250,4.954,1251,3.958,1252,4.483,1253,2.676,1254,2.676,1255,2.676,1256,4.483,1257,2.175,1258,4.711,1259,4.711,1260,2.547,1261,2.547,1262,4.483,1263,4.738,1264,4.711,1265,2.436,1266,2.547,1267,2.676,1268,2.436,1269,5.205,1270,2.547,1271,5.998,1272,3.767,1273,3.767,1274,4.094,1275,2.436,1276,2.676,1277,2.676,1278,2.676,1279,2.676,1280,2.676,1281,2.676,1282,2.339,1283,4.711,1284,4.711,1285,4.711,1286,5.205,1287,5.555,1288,2.547,1289,2.676,1290,2.547,1291,3.958,1292,2.676,1293,2.676,1294,2.676,1295,2.547,1296,2.676,1297,2.676,1298,2.676,1299,2.547,1300,2.676,1301,2.676,1302,3.958,1303,2.676,1304,2.676,1305,2.547,1306,4.711,1307,2.676,1308,2.929,1309,2.676,1310,3.958,1311,2.436,1312,2.436,1313,2.676,1314,2.547,1315,2.676,1316,3.958,1317,2.547,1318,2.676,1319,2.676,1320,2.436,1321,3.332,1322,2.676,1323,2.676,1324,2.676,1325,2.676,1326,2.676,1327,2.547,1328,2.676,1329,2.253,1330,2.676,1331,2.676,1332,2.676,1333,2.676,1334,2.676,1335,2.547,1336,2.676,1337,2.547,1338,3.767,1339,2.676,1340,2.676,1341,2.676,1342,2.676,1343,2.547,1344,2.676,1345,2.676,1346,2.676,1347,2.676,1348,2.676,1349,2.436,1350,2.676,1351,2.676,1352,3.958,1353,2.676,1354,2.676]],["title/injectables/DataSourceService.html",[160,3.395,2127,1.585]],["body/injectables/DataSourceService.html",[1,2.369,3,0.046,4,0.076,5,0.046,6,0.074,8,1.128,9,3.543,11,0.004,12,0.303,13,0.703,16,1.126,17,0.006,19,0.721,23,0.046,24,2.789,26,2.183,27,2.556,28,1.059,36,2.111,47,1.479,50,2.44,53,0.867,65,1.235,68,1.584,69,2.359,70,4.576,72,5.093,73,3.411,87,1.242,91,4.1,92,3.382,94,3.792,95,3.369,96,3.792,97,2.556,98,4.1,99,0.004,100,0.005,118,0.979,119,1.938,129,1.752,137,4.922,150,0.25,151,0.396,152,4.729,153,1.709,160,4.286,162,6.681,179,0.092,180,1.901,181,2.073,183,1.73,194,2.727,197,1.378,217,4.286,219,0.648,236,2.11,238,4.714,247,1.713,397,0.669,461,1.667,486,3.67,495,1.871,497,0.882,551,2.362,566,2.127,673,1.744,688,1.499,749,3.382,752,2.128,886,5.628,893,4.766,895,4.766,896,5.094,897,5.094,902,6.307,904,4.504,917,4.96,933,5.094,936,3.937,937,5.094,941,2.406,969,1.838,1041,5.985,1329,3.792,1403,3.201,1728,4.423,1810,2.694,1916,4.504,2127,2.001,2128,2.369,2129,9.194,2130,4.405,2131,7.172,2132,7.784,2133,7.784,2134,6.199,2135,4.405,2136,4.405,2137,7.784,2138,4.405,2139,4.405,2140,4.405,2141,5.532,2142,7.784,2143,4.405,2144,6.199,2145,4.405,2146,3.931,2147,3.387,2148,3.387,2149,2.517,2150,6.199,2151,4.405,2152,4.405,2153,4.405,2154,7.784,2155,4.405,2156,7.172,2157,4.405,2158,6.199,2159,3.387,2160,4.405,2161,6.199,2162,3.931,2163,3.931,2164,4.405,2165,4.405,2166,3.931,2167,7.172,2168,4.405,2169,7.784,2170,4.405,2171,4.405,2172,4.405,2173,4.405]],["title/injectables/DataState.html",[167,3.395,2127,1.585]],["body/injectables/DataState.html",[0,0.156,1,1.697,3,0.033,4,0.075,5,0.033,6,0.074,8,1.038,9,3.787,10,5.835,11,0.005,12,0.333,13,0.55,17,0.006,18,0.563,19,0.61,20,1.796,23,0.07,24,2.981,26,1.564,36,2.366,46,0.639,53,0.84,60,1.931,65,0.966,66,2.608,67,1.931,71,4.314,72,5.099,73,3.431,74,1.864,76,2.004,77,2.004,78,1.931,79,1.864,87,1.204,99,0.003,100,0.002,118,0.701,125,2.777,127,1.747,129,1.777,131,1.933,133,3.207,137,4.232,141,2.561,142,3.985,145,0.808,146,1.931,150,0.254,151,0.284,152,1.606,153,1.225,154,1.697,155,2.293,156,1.275,160,4.582,162,2.293,163,2.427,166,3.728,167,3.353,179,0.066,180,1.487,181,1.621,183,1.849,197,1.078,205,1.182,216,2.582,219,0.713,233,1.776,237,1.748,247,1.576,249,3.087,253,0.68,309,1.65,352,0.891,461,1.54,486,2.784,494,2.286,495,1.719,497,1.154,504,1.931,551,2.572,566,0.936,568,2.435,577,4.517,588,3.201,589,4.494,610,1.804,614,1.882,644,2.686,832,3.644,850,2.343,936,4.208,962,5.094,969,1.965,1080,1.488,1097,1.804,1274,3.374,1577,2.608,1811,2.004,1877,1.302,1925,4.54,1926,1.748,1934,1.697,2094,1.804,2127,1.565,2128,1.697,2174,2.594,2175,4.328,2176,3.487,2177,5.27,2178,5.27,2179,5.27,2180,6.836,2181,6.381,2182,7.015,2183,6.381,2184,5.27,2185,5.27,2186,6.381,2187,6.381,2188,4.328,2189,2.594,2190,3.156,2191,4.328,2192,3.156,2193,7.015,2194,4.328,2195,3.156,2196,4.328,2197,3.156,2198,4.328,2199,3.487,2200,3.156,2201,6.737,2202,3.156,2203,4.793,2204,3.156,2205,3.156,2206,6.737,2207,4.328,2208,4.328,2209,3.156,2210,6.044,2211,4.328,2212,3.156,2213,6.666,2214,4.328,2215,3.156,2216,4.328,2217,4.328,2218,3.156,2219,4.328,2220,3.156,2221,3.156,2222,4.328,2223,5.27,2224,4.328,2225,4.328,2226,4.328,2227,5.27,2228,4.328,2229,5.27,2230,6.381,2231,5.27,2232,3.156,2233,4.328,2234,4.328,2235,3.156,2236,4.328,2237,3.156,2238,2.686,2239,1.748,2240,1.748,2241,1.525,2242,4.328,2243,4.328,2244,2.817,2245,2.817,2246,4.328,2247,2.594,2248,2.427,2249,2.817,2250,4.328,2251,2.817,2252,2.817,2253,2.817,2254,2.427,2255,2.427,2256,2.427,2257,2.293,2258,4.852,2259,5.485,2260,2.594,2261,2.594,2262,2.817,2263,1.697,2264,2.004,2265,2.817,2266,2.817,2267,2.817,2268,4.328,2269,2.817,2270,2.817,2271,2.817,2272,2.817,2273,2.594,2274,1.748,2275,2.817,2276,2.427,2277,2.817,2278,2.817,2279,2.817,2280,2.817,2281,2.594,2282,2.004,2283,2.004,2284,2.817,2285,2.817,2286,2.817,2287,2.817,2288,4.328,2289,2.817,2290,2.817,2291,2.817,2292,2.817,2293,2.817,2294,2.817,2295,2.817,2296,2.817,2297,2.817,2298,2.817,2299,2.817,2300,2.817,2301,2.817]],["title/interfaces/DataStateModel.html",[0,0.243,2281,4.034]],["body/interfaces/DataStateModel.html",[0,0.2,1,2.176,2,0.914,3,0.043,4,0.079,5,0.043,6,0.032,8,0.557,9,3.335,10,5.747,11,0.005,12,0.401,13,0.662,17,0.006,18,0.722,19,0.327,20,1.181,23,0.079,24,2.625,26,2.005,36,2.347,46,0.819,53,0.451,60,2.475,65,0.806,66,2.176,67,2.475,71,3.911,72,5.001,73,3.437,74,2.39,76,2.57,77,2.57,78,2.475,79,2.39,87,0.646,99,0.004,100,0.002,118,0.899,125,2.63,127,0.806,131,1.753,133,2.677,137,4.04,141,2.681,142,3.326,145,1.036,146,2.475,150,0.271,151,0.364,152,2.059,153,1.571,154,2.176,155,2.941,156,1.635,160,4.036,162,2.941,163,3.112,166,4.487,167,2.799,179,0.085,180,1.241,181,1.353,183,1.976,205,1.221,216,2.802,219,0.858,233,1.482,237,3.233,247,1.727,249,3.578,253,0.872,309,2.115,352,1.142,461,1.5,486,3.227,494,1.908,497,1.129,504,2.475,551,2.297,568,1.669,577,4.563,589,4.399,610,2.313,614,1.571,644,3.233,832,3.619,850,2.82,936,3.706,962,4.487,969,1.73,1080,1.908,1097,2.313,1274,3.911,1577,2.176,1811,2.57,1877,1.669,1925,5.262,1926,2.242,1934,2.176,2094,2.313,2127,1.884,2174,3.326,2175,3.612,2176,3.447,2177,3.612,2178,3.612,2179,3.612,2180,5.624,2181,5.209,2182,5.209,2183,5.209,2184,3.612,2185,3.612,2186,3.612,2187,5.209,2191,3.612,2193,6.686,2194,3.612,2196,3.612,2198,3.612,2199,3.447,2201,6.108,2203,4.347,2206,6.108,2207,3.612,2208,3.612,2210,5.76,2211,3.612,2213,6.156,2214,3.612,2216,3.612,2217,3.612,2219,3.612,2222,3.612,2223,5.209,2224,3.612,2225,3.612,2226,3.612,2227,5.209,2228,3.612,2229,5.209,2230,6.686,2231,5.209,2233,3.612,2234,3.612,2236,3.612,2238,3.233,2239,2.242,2240,2.242,2241,1.955,2242,5.209,2243,5.209,2244,3.612,2245,3.612,2246,5.209,2247,3.326,2248,3.112,2249,3.612,2250,5.209,2251,3.612,2252,3.612,2253,3.612,2254,3.112,2255,3.112,2256,3.112,2257,2.941,2258,5.624,2259,6.012,2260,3.326,2261,3.326,2262,3.612,2263,2.176,2264,2.57,2265,3.612,2266,3.612,2267,3.612,2268,5.209,2269,3.612,2270,3.612,2271,3.612,2272,3.612,2273,3.326,2274,2.242,2275,3.612,2276,3.112,2277,3.612,2278,3.612,2279,3.612,2280,3.612,2281,4.795,2282,2.57,2283,2.57,2284,3.612,2285,3.612,2286,3.612,2287,3.612,2288,5.209,2289,3.612,2290,3.612,2291,3.612,2292,3.612,2293,3.612,2294,3.612,2295,3.612,2296,3.612,2297,3.612,2298,3.612,2299,3.612,2300,3.612,2301,3.612]],["title/interfaces/DefaultIconDefinition.html",[0,0.243,2302,3.774]],["body/interfaces/DefaultIconDefinition.html",[0,0.313,2,1.426,3,0.067,4,0.067,5,0.067,6,0.051,8,0.869,11,0.004,12,0.434,13,0.893,16,1.557,17,0.006,19,0.726,23,0.083,33,4.048,34,4.488,51,2.998,53,1.076,68,3.39,73,2.19,87,1.542,99,0.005,100,0.004,127,1.259,182,4.591,219,0.929,236,2.681,259,3.5,288,4.818,318,2.529,920,4.012,1727,4.369,1811,4.012,2302,6.599,2303,5.192,2304,5.639,2305,5.639,2306,4.369,2307,7.03,2308,5.639,2309,5.639,2310,4.179,2311,5.639,2312,5.639,2313,5.639,2314,6.613,2315,5.21,2316,5.943,2317,5.943,2318,5.447,2319,5.639,2320,4.369,2321,4.591,2322,6.318,2323,5.639,2324,6.318,2325,5.639]],["title/interfaces/DefaultIconDefinition-1.html",[0,0.203,253,0.885,2302,3.159]],["body/interfaces/DefaultIconDefinition-1.html",[0,0.315,2,1.437,3,0.067,4,0.067,5,0.067,6,0.051,8,0.875,11,0.004,12,0.438,13,0.897,16,1.558,17,0.006,19,0.728,23,0.083,33,4.051,34,4.457,51,3.012,53,1.066,68,3.396,87,1.544,99,0.005,100,0.004,127,1.268,182,4.626,219,0.936,236,2.694,259,3.526,288,4.841,318,2.533,920,4.043,1727,4.402,1811,4.043,2302,6.622,2304,5.682,2305,5.682,2306,4.402,2307,7.064,2308,5.682,2309,5.682,2310,4.21,2311,5.682,2312,5.682,2313,5.682,2314,6.624,2315,5.235,2316,5.959,2317,5.959,2318,5.473,2319,5.682,2320,4.402,2321,4.626,2323,5.682,2325,5.682,2326,5.231,2327,6.366]],["title/interfaces/DrawerContainersChanged.html",[0,0.243,2082,2.805]],["body/interfaces/DrawerContainersChanged.html",[0,0.426,2,1.269,3,0.059,4,0.059,5,0.059,6,0.045,8,0.773,11,0.003,12,0.386,13,0.829,17,0.006,18,1.305,19,0.815,23,0.102,46,1.479,53,0.626,82,1.965,97,3.351,99,0.004,100,0.003,101,1.03,103,1.953,114,2.493,116,3.319,131,1.439,141,1.694,150,0.172,179,0.118,192,4.421,215,2.785,219,0.826,233,3.152,275,2.782,281,1.965,283,3.152,284,2.445,290,1.372,296,2.472,486,3.447,497,0.799,643,2.367,645,2.317,673,2.894,688,3.17,941,2.837,965,3.447,969,2.168,1100,3.822,1729,3.216,1861,3.154,1864,2.27,1877,2.317,1878,2.953,1882,3.807,1897,3.079,1952,3.113,2016,3.719,2042,2.859,2044,2.859,2075,4.178,2076,4.083,2077,4.419,2078,4.472,2079,4.472,2080,4.97,2081,3.437,2082,4.644,2083,4.472,2084,4.158,2085,4.472,2086,3.569,2087,3.569,2088,4.178,2089,4.178,2090,3.719,2091,3.569,2092,3.569,2093,4.472,2094,3.212,2095,3.319]],["title/interfaces/DrawerContainersChanged-1.html",[0,0.203,253,0.885,2082,2.348]],["body/interfaces/DrawerContainersChanged-1.html",[0,0.426,2,1.269,3,0.059,4,0.059,5,0.059,6,0.045,8,0.773,11,0.003,12,0.386,13,0.829,17,0.006,18,1.305,19,0.815,23,0.102,46,1.479,53,0.626,82,1.965,97,3.351,99,0.004,100,0.003,101,1.03,103,1.953,114,2.493,116,3.319,131,1.439,141,1.694,150,0.172,179,0.118,192,4.421,215,2.785,219,0.826,233,3.152,275,2.782,281,1.965,283,3.152,284,2.445,290,1.372,296,2.472,486,3.447,497,0.799,643,2.367,645,2.317,673,2.894,688,3.17,941,2.837,965,3.447,969,2.168,1100,3.822,1729,3.216,1861,3.154,1864,2.27,1877,2.317,1878,2.953,1882,3.807,1897,3.079,1952,3.113,2016,3.719,2042,2.859,2044,2.859,2075,4.178,2077,4.419,2078,4.472,2079,4.472,2080,4.97,2081,3.437,2082,4.644,2083,4.472,2084,4.158,2085,4.472,2086,3.569,2087,3.569,2088,4.178,2089,4.178,2090,3.719,2091,3.569,2092,3.569,2093,4.472,2094,3.212,2095,3.319,2096,4.083]],["title/interfaces/DrawerInitialized.html",[0,0.243,2088,2.805]],["body/interfaces/DrawerInitialized.html",[0,0.429,2,1.29,3,0.06,4,0.06,5,0.06,6,0.046,8,0.786,11,0.003,12,0.393,13,0.838,17,0.006,18,1.319,19,0.814,23,0.102,46,1.496,53,0.636,82,1.986,97,3.378,99,0.004,100,0.003,101,0.981,103,1.777,114,2.489,116,3.376,131,1.464,141,1.723,150,0.174,179,0.12,192,3.663,215,2.832,219,0.84,233,3.001,275,2.813,281,1.986,283,3.173,284,2.471,290,1.396,296,2.514,486,2.695,497,0.813,643,2.407,645,2.357,673,2.263,688,2.788,941,2.868,965,3.485,969,2.192,1100,2.988,1729,3.251,1861,3.179,1864,2.309,1877,2.357,1878,2.986,1882,3.815,1897,3.113,1952,3.166,2016,3.76,2042,2.907,2044,2.907,2075,4.224,2076,4.153,2077,4.439,2078,4.521,2079,4.521,2080,5.011,2081,3.496,2082,4.224,2083,3.496,2084,4.185,2085,4.521,2086,4.694,2087,4.694,2088,4.682,2089,4.224,2090,3.76,2091,3.63,2092,3.63,2093,4.521,2094,3.266,2095,3.376]],["title/interfaces/DrawerInitialized-1.html",[0,0.203,253,0.885,2088,2.348]],["body/interfaces/DrawerInitialized-1.html",[0,0.429,2,1.29,3,0.06,4,0.06,5,0.06,6,0.046,8,0.786,11,0.003,12,0.393,13,0.838,17,0.006,18,1.319,19,0.814,23,0.102,46,1.496,53,0.636,82,1.986,97,3.378,99,0.004,100,0.003,101,0.981,103,1.777,114,2.489,116,3.376,131,1.464,141,1.723,150,0.174,179,0.12,192,3.663,215,2.832,219,0.84,233,3.001,275,2.813,281,1.986,283,3.173,284,2.471,290,1.396,296,2.514,486,2.695,497,0.813,643,2.407,645,2.357,673,2.263,688,2.788,941,2.868,965,3.485,969,2.192,1100,2.988,1729,3.251,1861,3.179,1864,2.309,1877,2.357,1878,2.986,1882,3.815,1897,3.113,1952,3.166,2016,3.76,2042,2.907,2044,2.907,2075,4.224,2077,4.439,2078,4.521,2079,4.521,2080,5.011,2081,3.496,2082,4.224,2083,3.496,2084,4.185,2085,4.521,2086,4.694,2087,4.694,2088,4.682,2089,4.224,2090,3.76,2091,3.63,2092,3.63,2093,4.521,2094,3.266,2095,3.376,2096,4.153]],["title/modules/DrawerModule.html",[397,0.746,411,3.395]],["body/modules/DrawerModule.html",[3,0.068,4,0.068,5,0.068,6,0.051,11,0.004,17,0.006,23,0.068,99,0.005,100,0.004,136,1.568,150,0.298,151,0.577,177,2.804,179,0.135,204,1.842,290,1.568,317,1.008,341,2.804,343,2.621,390,2.804,397,0.976,399,1.842,400,1.842,401,2.607,402,1.873,403,2.321,404,2.607,411,6.941,419,2.246,420,1.698,422,1.97,423,2.4,424,4.16,425,3.028,426,7.103,427,5.264,428,7.103,429,5.732,453,5.278,454,5.278,1923,4.938,1924,4.248,2081,3.929,2328,5.732,2329,5.732,2330,5.732,2331,6.423,2332,4.868,2333,4.868,2334,6.423,2335,5.278,2336,5.732]],["title/interfaces/DrawerToggled.html",[0,0.243,2089,2.805]],["body/interfaces/DrawerToggled.html",[0,0.421,2,1.229,3,0.057,4,0.057,5,0.057,6,0.044,8,0.749,11,0.003,12,0.374,13,0.812,17,0.006,18,1.618,19,0.816,23,0.102,46,1.834,53,0.606,82,2.284,97,3.3,99,0.004,100,0.003,101,0.958,103,1.721,114,2.508,116,3.215,131,1.834,141,2.159,150,0.166,179,0.114,192,3.548,215,3.548,219,0.8,233,3.114,275,2.725,281,2.436,283,3.114,284,3.031,290,1.748,296,3.149,486,2.566,497,0.774,643,2.292,645,2.245,673,2.155,688,2.723,941,2.779,965,3.376,969,2.123,1100,2.845,1729,3.149,1861,3.105,1864,2.199,1877,2.953,1878,2.892,1882,3.79,1897,3.015,1952,3.015,2016,4.612,2042,2.769,2044,2.769,2075,4.092,2076,3.955,2077,4.267,2078,4.38,2079,4.38,2080,4.894,2081,3.33,2082,4.092,2083,3.33,2084,4.107,2085,4.38,2086,3.457,2087,3.457,2088,4.092,2089,4.573,2090,4.612,2091,4.547,2092,4.547,2093,4.38,2094,3.111,2095,3.215]],["title/interfaces/DrawerToggled-1.html",[0,0.203,253,0.885,2089,2.348]],["body/interfaces/DrawerToggled-1.html",[0,0.421,2,1.229,3,0.057,4,0.057,5,0.057,6,0.044,8,0.749,11,0.003,12,0.374,13,0.812,17,0.006,18,1.618,19,0.816,23,0.102,46,1.834,53,0.606,82,2.284,97,3.3,99,0.004,100,0.003,101,0.958,103,1.721,114,2.508,116,3.215,131,1.834,141,2.159,150,0.166,179,0.114,192,3.548,215,3.548,219,0.8,233,3.114,275,2.725,281,2.436,283,3.114,284,3.031,290,1.748,296,3.149,486,2.566,497,0.774,643,2.292,645,2.245,673,2.155,688,2.723,941,2.779,965,3.376,969,2.123,1100,2.845,1729,3.149,1861,3.105,1864,2.199,1877,2.953,1878,2.892,1882,3.79,1897,3.015,1952,3.015,2016,4.612,2042,2.769,2044,2.769,2075,4.092,2077,4.267,2078,4.38,2079,4.38,2080,4.894,2081,3.33,2082,4.092,2083,3.33,2084,4.107,2085,4.38,2086,3.457,2087,3.457,2088,4.092,2089,4.573,2090,4.612,2091,4.547,2092,4.547,2093,4.38,2094,3.111,2095,3.215,2096,3.955]],["title/components/DropdownComponent.html",[101,0.588,346,1.408]],["body/components/DropdownComponent.html",[3,0.068,4,0.039,5,0.039,6,0.068,8,0.747,11,0.002,12,0.252,13,0.616,15,2.552,16,1.385,17,0.006,19,0.646,20,1.718,22,3.808,23,0.039,47,1.45,48,1.495,53,0.72,55,0.985,65,1.288,69,2.461,87,0.585,99,0.003,100,0.004,101,0.99,102,1.532,103,1.305,104,0.97,105,1.052,106,1.106,107,0.985,114,2.014,117,2.791,118,2.236,120,1.507,122,1.557,125,1.035,127,0.73,128,0.868,129,1.597,131,1.391,136,0.895,144,2.623,147,2.425,148,1.087,150,0.112,151,0.33,159,5.047,169,1.052,173,1.052,177,1.532,179,0.077,183,0.815,193,2.084,197,1.207,199,1.738,205,1.276,224,1.63,228,2.536,239,4.103,252,1.589,253,0.79,261,2.536,268,1.512,271,2.268,272,2.667,277,1.481,279,1.544,281,2.282,282,3.582,286,3.076,289,3.882,290,1.326,291,3.82,292,3.204,293,1.824,295,2.92,297,3.289,298,1.917,299,2.977,300,3.483,308,4.227,309,3.989,317,0.576,318,1.436,319,1.459,320,1.106,321,2.155,322,1.106,323,1.637,324,1.035,325,1.052,326,1.637,327,1.052,328,1.106,329,1.052,330,1.106,331,1.052,332,1.45,333,1.106,334,1.052,335,1.069,336,1.106,337,1.052,338,1.106,339,1.052,340,1.106,341,1.532,342,1.637,343,1.766,344,2.301,345,1.637,346,2.05,347,1.637,348,1.052,349,1.087,350,1.637,351,1.052,352,1.532,353,1.637,354,1.532,355,1.637,356,1.052,357,1.106,358,1.052,359,1.052,360,1.106,361,1.052,362,1.106,363,1.052,364,1.95,365,1.052,366,1.106,367,1.052,368,1.637,369,1.052,370,1.106,371,1.052,372,1.106,373,1.069,374,1.106,375,1.052,376,1.106,377,1.052,378,1.106,379,1.052,380,1.035,381,0.985,382,1.052,383,1.035,384,1.069,385,1.052,386,1.106,387,1.052,388,1.069,389,1.106,390,1.532,391,1.052,392,1.106,393,1.106,461,0.984,475,2.523,481,2.239,483,2.414,494,2.56,495,0.881,497,0.92,505,2.027,517,2.031,518,2.095,520,3.103,522,4.884,527,3.955,821,2.287,832,2.15,1007,3.946,1202,4.507,1364,5.313,1382,6.529,1393,3.013,1424,2.095,1519,3.103,1521,3.448,1547,1.972,1549,2.92,1550,2.691,1551,3.008,1696,6.978,1699,4.462,1714,3.755,1729,2.388,1775,2.329,1776,2.536,1777,3.946,1778,2.664,1779,4.471,1780,2.536,1783,2.095,1828,4.846,2001,5.496,2021,1.972,2337,3.667,2338,7.355,2339,5.771,2340,4.846,2341,6.466,2342,5.43,2343,7.148,2344,3.667,2345,4.846,2346,3.667,2347,5.43,2348,3.667,2349,3.667,2350,5.43,2351,3.667,2352,3.667,2353,6.38,2354,5.874,2355,3.667,2356,5.43,2357,3.667,2358,4.846,2359,5.43,2360,3.667,2361,4.846,2362,6.271,2363,2.819,2364,3.013,2365,4.846,2366,3.273,2367,3.013,2368,3.013,2369,2.664,2370,5.496,2371,2.819,2372,4.846,2373,3.013,2374,3.667,2375,3.013,2376,3.273,2377,3.667,2378,2.664,2379,3.667,2380,4.175,2381,3.667,2382,3.273,2383,3.013,2384,3.273,2385,3.273,2386,3.273]],["title/modules/DropdownModule.html",[397,0.746,2387,3.567]],["body/modules/DropdownModule.html",[3,0.075,4,0.075,5,0.075,6,0.057,11,0.004,17,0.006,22,3.256,23,0.075,99,0.005,100,0.004,150,0.291,151,0.636,179,0.148,204,2.029,317,1.11,346,2.885,397,1.075,399,2.029,400,2.029,401,2.719,402,2.063,403,2.063,404,2.719,419,2.381,420,1.87,422,2.169,423,2.544,534,2.822,535,2.324,2387,7.113,2388,6.312,2389,6.312,2390,6.312,2391,7.072,2392,6.488,2393,5.438,2394,6.934,2395,5.812,2396,6.312]],["title/components/DualSliderComponent.html",[101,0.588,348,1.408]],["body/components/DualSliderComponent.html",[3,0.048,4,0.022,5,0.022,6,0.072,8,0.806,11,0.001,12,0.146,13,0.599,15,2.347,16,0.921,17,0.006,18,1.253,19,0.67,20,1.72,22,2.7,23,0.022,47,1.114,48,1.184,49,1.973,51,1.345,53,0.746,55,0.572,63,2.162,65,0.903,69,3.001,71,2.02,75,4.627,82,1.42,87,0.843,93,1.59,99,0.002,100,0.003,101,0.899,102,0.997,103,0.85,104,1.199,105,1.014,106,0.641,107,0.572,114,1.595,117,2.675,118,2.149,120,0.981,122,1.014,127,0.903,128,0.503,129,1.736,131,1.62,134,3.136,136,0.519,144,2.553,145,1.502,147,5.315,148,0.631,150,0.161,151,0.191,159,5.101,169,0.61,173,0.61,177,0.997,179,0.045,180,1.62,181,1.182,183,1.303,193,1.443,197,0.785,199,1.42,202,6.952,205,1.499,219,1.032,223,2.568,224,1.143,228,1.471,233,2.318,235,1.215,239,1.708,247,1.224,249,1.848,252,1.619,253,0.977,268,2.765,269,1.708,270,1.958,271,2.008,272,1.458,274,1.112,277,1.428,279,2.225,281,1.958,282,3.248,283,0.779,284,1.961,286,1.952,289,2.983,290,0.863,291,2.638,292,2.906,293,1.981,295,1.144,296,2.783,297,1.798,298,1.112,299,2.433,300,2.665,302,3.185,305,2.371,306,1.666,307,1.215,308,2.927,309,2.762,317,0.334,318,0.935,319,2.119,320,0.641,321,1.593,322,0.641,323,1.066,324,0.6,325,0.61,326,1.066,327,0.61,328,0.641,329,0.61,330,0.641,331,0.61,332,1.114,333,0.641,334,0.61,335,0.62,336,0.641,337,0.61,338,0.641,339,0.61,340,0.641,341,0.997,342,1.066,343,1.239,344,1.768,345,1.066,346,0.61,347,1.066,348,1.516,349,2.228,350,1.066,351,0.61,352,0.997,353,1.066,354,0.997,355,1.066,356,0.61,357,0.641,358,0.61,359,0.61,360,0.641,361,0.61,362,0.641,363,0.61,364,1.368,365,0.61,366,0.641,367,0.61,368,1.066,369,0.61,370,0.641,371,0.61,372,0.641,373,0.62,374,0.641,375,0.61,376,0.641,377,0.61,378,0.641,379,0.61,380,0.6,381,0.572,382,0.61,383,0.6,384,0.62,385,0.61,386,0.641,387,0.61,388,0.62,389,0.641,390,0.997,391,0.61,392,0.641,393,0.641,443,6.57,461,1.321,475,2.233,481,1.458,483,1.693,486,2.491,492,2.307,494,3.435,495,1.27,497,0.645,499,2.162,505,1.32,517,1.958,518,2.02,520,2.02,522,3.463,523,2.377,526,1.082,527,2.162,528,1.748,551,2.086,566,1.048,588,1.708,596,3.7,616,1.112,621,1.901,643,1.91,662,2.436,673,1.399,701,2.134,731,2.568,748,2.512,814,1.372,821,1.489,827,2.088,832,2.092,836,4.458,838,2.444,840,1.407,941,2.724,969,1.048,991,1.748,1007,2.568,1202,3.463,1209,1.708,1221,4.699,1364,3.727,1373,1.635,1393,1.748,1395,1.898,1506,1.748,1516,1.958,1521,4.018,1549,1.901,1550,1.752,1551,1.958,1577,2.841,1691,1.59,1699,2.904,1715,1.372,1729,0.935,1738,4.716,1743,4.048,1750,3.839,1761,3.155,1762,4.048,1763,1.898,1764,1.898,1765,1.898,1775,1.351,1776,1.471,1777,2.568,1778,1.545,1779,3.654,1780,1.471,1783,1.215,1807,2.904,1808,2.904,1810,1.301,1815,1.407,1816,4.062,1817,1.748,1819,2.904,1820,2.904,1821,2.444,1822,2.568,1832,2.245,1835,3.487,1836,1.471,1837,1.898,1838,1.898,1839,4.048,1849,2.904,1858,2.765,1869,2.491,1894,2.162,1934,1.901,1935,1.144,1970,2.904,2001,4.508,2021,1.144,2042,2.688,2345,3.155,2353,3.155,2354,2.904,2358,3.155,2361,3.155,2362,2.904,2363,1.635,2364,2.904,2365,1.898,2366,1.898,2367,1.748,2368,1.748,2369,1.545,2370,4.062,2371,2.718,2372,3.155,2375,1.748,2376,1.898,2378,1.545,2382,3.155,2383,1.748,2384,1.898,2385,1.898,2397,8.07,2398,1.748,2399,4.535,2400,3.727,2401,2.904,2402,4.535,2403,7.02,2404,6.327,2405,7.02,2406,7.286,2407,6.705,2408,5.864,2409,5.283,2410,5.283,2411,3.534,2412,3.534,2413,3.534,2414,6.327,2415,5.283,2416,5.283,2417,4.535,2418,5.864,2419,2.127,2420,3.534,2421,3.155,2422,3.534,2423,2.338,2424,2.127,2425,3.534,2426,2.127,2427,2.127,2428,2.718,2429,3.534,2430,2.127,2431,2.127,2432,3.534,2433,3.534,2434,3.155,2435,3.534,2436,2.127,2437,2.444,2438,3.534,2439,5.283,2440,2.127,2441,3.534,2442,2.127,2443,3.534,2444,3.155,2445,2.127,2446,5.864,2447,2.127,2448,6.705,2449,5.283,2450,4.535,2451,3.534,2452,2.127,2453,2.127,2454,2.904,2455,2.127,2456,3.534,2457,2.127,2458,2.127,2459,2.127,2460,5.283,2461,3.155,2462,2.127,2463,3.155,2464,2.127,2465,2.127,2466,2.127,2467,3.534,2468,2.127,2469,2.718,2470,4.535,2471,3.534,2472,2.127,2473,2.127,2474,2.127,2475,3.534,2476,3.534,2477,1.635,2478,1.898,2479,2.127,2480,2.127,2481,2.127,2482,2.127,2483,3.534,2484,2.127,2485,2.127,2486,2.127,2487,2.127,2488,2.127,2489,2.127,2490,2.127,2491,1.898,2492,2.127,2493,3.534,2494,2.127,2495,3.534,2496,2.127,2497,3.534,2498,2.127,2499,2.127,2500,2.127,2501,2.127,2502,2.127,2503,2.127,2504,2.127,2505,2.127,2506,2.127,2507,2.127,2508,3.534,2509,4.535,2510,3.534,2511,4.535,2512,2.127,2513,2.127,2514,2.127,2515,5.283,2516,2.127,2517,2.127,2518,2.127,2519,3.534,2520,3.534,2521,3.534,2522,2.127,2523,2.127,2524,2.127,2525,2.127,2526,3.534,2527,2.127,2528,2.127,2529,2.127,2530,1.898,2531,2.127,2532,3.155,2533,1.748,2534,2.127,2535,2.127,2536,2.127]],["title/modules/DualSliderModule.html",[397,0.746,412,3.247]],["body/modules/DualSliderModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,22,3.15,23,0.072,99,0.005,100,0.004,150,0.299,151,0.615,179,0.143,204,1.963,317,1.074,348,2.873,349,2.029,397,1.04,399,1.963,400,1.963,401,2.681,402,1.995,403,1.995,404,2.681,412,6.431,419,2.334,420,1.809,422,2.098,423,2.494,443,4.972,534,2.766,535,2.248,1221,3.306,1750,4.972,1798,7.383,2392,6.36,2393,5.26,2394,6.797,2395,5.622,2397,6.106,2477,5.26,2478,6.106,2537,6.106,2538,6.106,2539,6.106,2540,6.106,2541,8.272,2542,8.272,2543,6.106]],["title/interfaces/ExtDeckProps.html",[0,0.243,1238,3.395]],["body/interfaces/ExtDeckProps.html",[0,0.356,2,0.836,3,0.058,4,0.039,5,0.039,6,0.03,11,0.004,12,0.376,13,0.62,16,1.337,17,0.006,18,1.636,19,0.703,23,0.084,28,1.994,46,1.106,47,1.039,48,0.693,87,0.872,92,3.612,95,3.033,99,0.003,100,0.002,125,1.045,141,1.961,145,1.4,150,0.234,179,0.078,205,1.552,216,1.796,219,1.348,235,2.116,247,1.946,252,1.596,271,2.702,281,2.229,332,1.039,492,3.897,497,0.526,551,2.455,553,4.686,568,2.255,570,3.977,589,3.978,605,2.116,610,2.116,612,2.925,614,2.122,618,5.029,619,2.351,621,3.497,622,5.223,623,2.351,624,3.308,627,3.84,629,2.86,635,3.345,646,2.351,649,5.268,749,3.612,752,3.702,782,2.448,832,3.175,951,2.448,1016,1.593,1080,2.578,1217,3.617,1218,2.56,1219,2.351,1220,2.858,1221,2.642,1222,3.978,1223,4.966,1224,4.686,1225,4.301,1226,2.186,1227,2.448,1228,3.345,1229,3.473,1230,3.345,1231,3.473,1232,2.69,1233,2.69,1234,3.617,1235,4.525,1236,2.69,1237,2.69,1238,4.496,1239,4.496,1240,2.69,1241,3.617,1242,3.617,1243,4.725,1244,4.717,1245,3.473,1246,2.351,1247,2.351,1248,3.653,1249,5.567,1250,4.966,1251,3.973,1252,4.496,1253,2.69,1254,2.69,1255,2.69,1256,4.496,1257,2.186,1258,4.725,1259,4.725,1260,2.56,1261,2.56,1262,4.496,1263,4.75,1264,4.725,1265,2.448,1266,2.56,1267,2.69,1268,2.448,1269,5.218,1270,2.56,1271,6.004,1272,3.781,1273,3.781,1274,4.104,1275,2.448,1276,2.69,1277,2.69,1278,2.69,1279,2.69,1280,2.69,1281,2.69,1282,2.351,1283,4.725,1284,4.725,1285,4.725,1286,5.218,1287,5.567,1288,2.56,1289,2.69,1290,2.56,1291,3.973,1292,2.69,1293,2.69,1294,2.69,1295,2.56,1296,2.69,1297,2.69,1298,2.69,1299,2.56,1300,2.69,1301,2.69,1302,3.973,1303,2.69,1304,2.69,1305,2.56,1306,4.725,1307,2.69,1308,2.94,1309,2.69,1310,3.973,1311,2.448,1312,2.448,1313,2.69,1314,2.56,1315,2.69,1316,3.973,1317,2.56,1318,2.69,1319,2.69,1320,2.448,1321,3.345,1322,2.69,1323,2.69,1324,2.69,1325,2.69,1326,2.69,1327,2.56,1328,2.69,1329,2.264,1330,2.69,1331,2.69,1332,2.69,1333,2.69,1334,2.69,1335,2.56,1336,2.69,1337,2.56,1338,3.781,1339,2.69,1340,2.69,1341,2.69,1342,2.69,1343,2.56,1344,2.69,1345,2.69,1346,2.69,1347,2.69,1348,2.69,1349,2.448,1350,2.69,1351,2.69,1352,3.973,1353,2.69,1354,2.69]],["title/interfaces/Filter.html",[0,0.243,73,1.701]],["body/interfaces/Filter.html",[0,0.444,1,2.606,2,1.094,3,0.051,4,0.051,5,0.051,6,0.039,7,3.351,8,1.038,9,3.785,10,4.961,11,0.005,12,0.333,13,0.751,14,3.351,15,2.931,16,1.584,17,0.006,18,1.732,19,0.781,20,1.34,21,3.351,22,2.231,23,0.092,24,2.98,25,2.964,26,3.282,27,3.502,28,2.041,29,2.465,30,3.351,31,3.351,32,3.077,33,1.958,34,3.734,35,3.351,36,1.872,37,4.051,38,3.351,39,3.351,40,3.205,41,3.077,42,3.205,43,3.205,44,3.077,45,4.493,46,1.816,47,1.434,48,0.907,49,1.511,50,3.669,51,1.844,52,2.862,53,0.539,54,3.205,55,1.78,56,2.862,57,2.964,58,3.205,59,4.99,60,5.194,61,5.15,62,5.15,63,4.961,64,5.364,65,1.503,66,4.058,67,5.194,68,1.742,69,2.521,70,3.562,71,3.785,72,3.669,73,2.811,74,4.456,75,5.15,76,5.15,77,5.15,78,5.362,79,5.177,80,3.785,81,5.364,82,1.78,83,3.2,84,3.912,85,5.15,86,4.38,87,1.458,88,4.58,89,3.369,90,5.15,91,3.205,92,2.285,93,2.98,94,2.964,95,2.987,96,2.964,97,1.998,98,3.205,99,0.004,100,0.003]],["title/components/FiltersContentComponent.html",[101,0.588,351,1.408]],["body/components/FiltersContentComponent.html",[3,0.072,4,0.042,5,0.042,6,0.068,8,0.798,11,0.002,12,0.276,16,1.07,17,0.006,19,0.64,20,1.602,23,0.042,46,1.174,47,1.505,48,1.544,49,2.469,53,0.758,55,1.079,65,1.357,68,2.086,70,3.12,73,3.163,87,0.641,99,0.004,100,0.004,101,0.948,102,1.637,103,1.794,104,1.062,105,1.152,106,1.211,107,1.079,114,2.08,117,2.805,118,2.249,120,1.611,122,1.664,128,0.95,129,1.593,136,0.98,144,3.987,148,1.19,150,0.123,151,0.361,169,1.152,173,1.152,177,1.637,179,0.084,183,1.289,193,1.585,197,1.289,199,1.079,205,1.332,224,1.717,233,2.125,236,1.975,268,2.81,269,1.94,274,4.313,275,1.528,279,2.444,281,2.006,283,2.125,284,2.278,289,2.042,290,1.417,293,1.133,295,3.664,296,3.283,298,3.033,299,3.436,300,2.869,301,1.728,302,1.622,303,3.838,317,0.63,318,1.534,319,1.559,320,1.211,321,2.25,322,1.211,323,1.749,324,1.133,325,1.152,326,1.749,327,1.152,328,1.211,329,1.152,330,1.211,331,1.152,332,1.505,333,1.211,334,1.152,335,1.171,336,1.211,337,1.152,338,1.211,339,1.152,340,1.211,341,1.637,342,1.749,343,1.861,344,2.387,345,1.749,346,1.152,347,1.749,348,1.152,349,1.72,350,1.749,351,2.141,352,2.773,353,1.749,354,1.637,355,1.749,356,1.152,357,1.211,358,1.152,359,1.152,360,1.211,361,1.152,362,1.211,363,1.152,364,2.054,365,1.152,366,1.211,367,1.152,368,1.749,369,1.152,370,1.211,371,1.152,372,1.211,373,1.171,374,1.211,375,1.152,376,1.211,377,1.152,378,1.211,379,1.152,380,1.133,381,1.079,382,1.152,383,1.133,384,1.171,385,1.152,386,1.211,387,1.152,388,1.171,389,1.211,390,1.637,391,1.152,392,1.211,393,1.211,461,1.052,475,2.405,481,2.393,483,2.956,492,4.328,494,2.736,495,0.965,496,3.214,497,1.061,505,2.544,688,2.319,821,2.444,826,4.012,827,3.427,832,2.297,1202,3.427,1221,1.94,1244,3.214,1402,2.776,1507,3.838,1521,3.685,1547,2.159,1549,2.159,1550,1.989,1551,2.224,1691,2.61,1733,4.461,1775,2.55,1776,2.776,1779,2.776,1780,2.776,1781,3.087,1791,5.178,1832,3.685,1985,4.951,1986,4.768,2188,5.178,2338,3.299,2368,3.299,2386,3.583,2544,6.541,2545,6.991,2546,3.583,2547,4.012,2548,7.463,2549,6.081,2550,6.081,2551,3.583,2552,4.015,2553,3.583,2554,3.583,2555,5.178,2556,4.015,2557,7.463,2558,5.802,2559,4.015,2560,5.802,2561,7.463,2562,5.178,2563,4.015,2564,4.015,2565,5.802,2566,4.015,2567,4.015,2568,4.015,2569,4.015,2570,4.015,2571,4.015,2572,3.583,2573,5.802]],["title/modules/FiltersContentModule.html",[397,0.746,2574,3.567]],["body/modules/FiltersContentModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,99,0.005,100,0.004,150,0.293,151,0.607,179,0.142,204,1.939,317,1.061,351,2.869,352,1.907,397,1.027,399,1.939,400,1.939,401,2.667,402,1.971,403,1.971,404,2.667,412,6.339,419,2.317,420,1.787,422,2.518,423,2.476,442,5.554,443,4.912,444,5.197,534,2.746,535,2.221,1406,6.964,2387,6.964,2544,5.197,2545,5.554,2574,7.292,2575,6.033,2576,6.033,2577,6.759,2578,6.033,2579,6.033,2580,6.759,2581,6.759,2582,6.033]],["title/components/FiltersPopoverComponent.html",[101,0.588,169,1.408]],["body/components/FiltersPopoverComponent.html",[3,0.07,4,0.04,5,0.04,6,0.069,8,0.769,11,0.002,12,0.455,13,0.634,17,0.006,19,0.589,20,0.773,23,0.04,46,1.132,47,1.475,48,1.517,51,2.775,53,0.737,55,1.026,65,1.319,68,2.621,73,2.527,82,1.959,87,0.609,99,0.003,100,0.004,101,0.929,102,1.579,103,1.345,104,1.01,105,1.899,106,1.152,107,1.026,114,2.166,117,2.797,118,2.239,120,1.553,122,1.605,127,0.761,128,1.725,129,1.617,133,4.822,136,0.933,144,3.523,148,1.133,150,0.117,151,0.343,169,2.091,171,6.606,173,1.096,177,1.579,179,0.08,183,0.849,193,1.528,197,1.244,199,1.78,202,6.944,205,1.447,216,1.838,223,4.066,224,1.669,236,1.905,238,3.1,252,1.244,253,0.823,271,1.776,275,2.13,277,3.135,279,1.609,281,2.179,282,3.668,285,1.801,289,2.847,290,1.366,293,1.078,295,2.054,297,2.847,298,1.997,299,3.049,300,3.07,301,1.644,302,1.543,303,2.526,317,0.6,318,1.48,319,1.504,320,1.152,321,2.198,322,1.152,323,1.687,324,1.078,325,1.096,326,1.687,327,1.096,328,1.152,329,1.096,330,1.152,331,1.096,332,1.386,333,1.152,334,1.096,335,1.114,336,1.152,337,1.096,338,1.152,339,1.096,340,1.152,341,1.579,342,1.687,343,1.809,344,2.34,345,1.687,346,1.096,347,1.687,348,1.096,349,1.133,350,1.687,351,1.096,352,2.778,353,1.687,354,1.579,355,1.687,356,1.096,357,1.152,358,1.096,359,1.096,360,1.152,361,1.096,362,1.152,363,1.096,364,1.997,365,1.096,366,1.152,367,1.096,368,1.687,369,1.096,370,1.152,371,1.096,372,1.152,373,1.114,374,1.152,375,1.096,376,1.152,377,1.096,378,1.152,379,1.096,380,1.078,381,1.026,382,1.096,383,1.078,384,1.114,385,1.096,386,1.152,387,1.096,388,1.114,389,1.152,390,1.579,391,1.096,392,1.152,393,1.152,461,1.2,475,2.337,481,2.308,483,2.472,489,2.426,495,0.918,497,0.543,502,2.704,505,2.089,662,2.214,821,2.357,826,3.869,827,3.305,828,4.994,829,3.701,830,4.994,832,2.886,880,3.784,1007,4.066,1202,4.584,1244,4.299,1388,3.198,1507,5.133,1549,2.054,1550,1.893,1551,2.116,1611,2.776,1691,2.517,1733,4.302,1775,5.567,1776,2.641,1777,4.066,1778,2.776,1779,2.641,1780,2.641,1783,2.183,1811,3.554,1833,3.554,1849,3.139,2021,4.505,2059,5.091,2090,3.369,2371,5.091,2380,2.937,2544,6.606,2549,4.994,2550,5.91,2562,3.409,2583,3.409,2584,5.91,2585,4.994,2586,6.622,2587,7.29,2588,7.29,2589,6.622,2590,3.82,2591,5.605,2592,4.994,2593,3.82,2594,3.82,2595,5.596,2596,3.82,2597,6.507,2598,3.82,2599,3.82,2600,3.82,2601,6.622,2602,3.82,2603,3.82,2604,4.994,2605,3.82,2606,3.82,2607,3.82,2608,3.82,2609,3.82,2610,5.596,2611,3.82,2612,3.82]],["title/modules/FiltersPopoverModule.html",[397,0.746,413,3.567]],["body/modules/FiltersPopoverModule.html",[3,0.073,4,0.073,5,0.073,6,0.056,11,0.004,17,0.006,23,0.073,99,0.005,100,0.004,150,0.29,151,0.624,169,2.879,171,5.34,172,5.707,179,0.146,204,1.992,317,1.09,352,2.355,397,1.055,399,1.992,400,1.992,401,2.699,402,2.026,403,2.026,404,2.699,413,7.195,419,2.355,420,1.837,422,2.56,423,2.517,424,4.363,425,3.275,534,2.791,535,2.282,2544,5.34,2545,5.707,2574,7.009,2613,6.199,2614,6.199,2615,6.945,2616,6.199,2617,6.199,2618,5.707]],["title/classes/FlatNode.html",[179,0.103,2619,4.381]],["body/classes/FlatNode.html",[3,0.06,4,0.06,5,0.06,6,0.072,8,1.128,11,0.003,12,0.394,15,3.001,16,1.162,17,0.006,18,1.64,19,0.701,23,0.06,46,1.498,53,0.824,65,1.908,82,1.989,87,1.181,99,0.004,100,0.003,101,0.886,107,2.548,125,1.616,129,1.674,131,1.896,150,0.175,179,0.12,180,2.658,181,2.475,183,1.926,184,4.162,194,3.256,197,1.645,236,3.129,247,1.712,252,1.273,456,2.839,461,1.571,495,1.779,497,1.277,566,1.699,601,4.744,701,3.313,1516,4.1,1527,6.607,2421,6.607,2461,6.607,2619,7.737,2620,8.976,2621,5.113,2622,7.319,2623,5.728,2624,5.031,2625,7.621,2626,5.728,2627,9.66,2628,7.365,2629,7.402,2630,5.728,2631,5.728,2632,5.728,2633,7.402,2634,5.728,2635,5.728,2636,7.402,2637,4.896,2638,5.728,2639,5.728,2640,5.728]],["title/components/HeaderComponent.html",[101,0.588,354,1.385]],["body/components/HeaderComponent.html",[3,0.088,4,0.044,5,0.044,6,0.067,8,0.569,11,0.003,12,0.285,16,0.931,17,0.006,19,0.647,23,0.044,33,1.673,34,2.731,36,1.472,37,5.1,46,1.2,47,1.523,48,1.56,49,2.361,53,0.66,55,1.113,60,3.629,63,3.629,64,3.924,65,1.381,73,2.777,93,2.669,99,0.004,100,0.004,101,0.83,102,1.674,103,1.426,104,1.095,105,1.188,106,1.248,107,1.113,113,5.089,114,2.102,117,2.81,118,2.252,120,1.647,122,1.702,128,0.98,129,1.547,136,1.011,148,1.228,150,0.126,151,0.372,169,1.188,173,1.188,177,1.674,179,0.087,191,4.561,193,1.131,199,1.594,224,1.747,252,1.318,253,0.892,268,3.304,271,2.543,272,1.707,276,3.009,280,2.533,281,2.153,283,1.517,284,1.984,285,3.268,286,2.553,289,2.106,290,1.449,291,1.863,292,2.94,293,1.674,294,6.161,296,3.525,299,1.906,300,2.919,301,1.782,302,1.673,305,3.101,306,3.268,307,2.366,308,2.293,309,2.164,317,0.65,318,1.569,319,1.594,320,1.248,321,2.283,322,1.248,323,1.789,324,1.168,325,1.188,326,1.789,327,1.188,328,1.248,329,1.188,330,1.248,331,1.188,332,1.523,333,1.248,334,1.188,335,1.207,336,1.248,337,1.188,338,1.248,339,1.188,340,1.248,341,1.674,342,1.789,343,1.893,344,2.416,345,1.789,346,1.188,347,1.789,348,1.188,349,1.228,350,1.789,351,1.188,352,2.261,353,1.789,354,2.261,355,1.789,356,1.188,357,1.248,358,1.188,359,1.188,360,1.248,361,1.188,362,1.248,363,1.188,364,2.09,365,1.188,366,1.248,367,1.188,368,1.789,369,1.188,370,1.248,371,1.188,372,1.248,373,1.207,374,1.248,375,1.188,376,1.248,377,1.188,378,1.248,379,1.188,380,1.168,381,1.113,382,1.188,383,1.168,384,1.207,385,1.188,386,1.248,387,1.188,388,1.207,389,1.248,390,1.674,391,1.188,392,1.248,393,1.248,475,2.672,481,2.446,483,2.991,496,3.286,497,0.844,504,4.631,505,2.588,516,6.161,526,2.106,821,2.498,832,2.997,972,4.402,973,4.794,974,5.696,1244,3.286,1373,3.183,1375,3.504,1424,2.366,1519,3.39,1547,2.226,1549,2.226,1550,2.052,1551,2.293,1566,2.797,1567,2.797,1579,1.952,1733,4.561,1832,5.295,1931,4.561,2021,2.226,2321,5.501,2369,3.009,2641,4.14,2642,7.57,2643,4.875,2644,4.561,2645,6.187,2646,5.294,2647,6.932,2648,6.932,2649,6.932,2650,4.14,2651,4.14,2652,4.14,2653,5.932,2654,4.14,2655,4.14,2656,5.932,2657,5.932,2658,5.932,2659,5.932,2660,5.932,2661,5.294,2662,5.932,2663,5.932,2664,3.402,2665,4.14,2666,3.402,2667,4.14,2668,4.14,2669,3.402,2670,3.402,2671,4.14,2672,3.695,2673,4.14,2674,4.14,2675,4.14,2676,4.14,2677,4.14]],["title/components/HeaderComponent-1.html",[101,0.492,253,0.885,354,1.159]],["body/components/HeaderComponent-1.html",[0,0.225,3,0.077,4,0.048,5,0.048,6,0.058,8,0.87,11,0.003,12,0.312,17,0.006,19,0.367,20,0.918,23,0.048,33,1.832,36,1.57,47,1.576,48,1.607,49,1.974,53,0.923,55,1.219,65,1.451,87,0.724,93,2.847,99,0.004,100,0.004,101,0.993,102,1.785,103,1.521,104,1.199,105,1.301,106,1.368,107,1.219,113,5.71,114,2.165,117,2.823,118,2.265,120,1.756,122,1.815,125,1.28,127,0.904,128,1.073,129,1.222,136,1.108,148,1.345,150,0.193,151,0.408,169,1.301,173,1.301,177,1.785,179,0.174,180,1.94,181,2.116,183,1.008,184,3.296,193,1.239,199,1.7,224,1.837,252,1.406,253,1.363,268,3.005,271,2.312,276,3.296,280,2.774,281,1.958,284,2.116,285,3.436,286,2.723,288,2.774,289,2.307,290,1.545,292,3.611,293,2.225,299,2.088,300,2.665,301,1.952,302,1.832,305,3.307,306,2.983,317,0.712,318,2.085,319,1.7,320,1.368,321,2.377,322,1.368,323,1.908,324,1.28,325,1.301,326,1.908,327,1.301,328,1.368,329,1.301,330,1.368,331,1.301,332,1.576,333,1.368,334,1.301,335,1.323,336,1.368,337,1.301,338,1.368,339,1.301,340,1.368,341,1.785,342,1.908,343,1.99,344,2.5,345,1.908,346,1.301,347,1.908,348,1.301,349,1.345,350,1.908,351,1.301,352,1.785,353,1.908,354,2.34,355,1.908,356,1.301,357,1.368,358,1.301,359,1.301,360,1.368,361,1.301,362,1.368,363,1.301,364,2.197,365,1.301,366,1.368,367,1.301,368,1.908,369,1.301,370,1.368,371,1.301,372,1.368,373,1.323,374,1.368,375,1.301,376,1.368,377,1.301,378,1.368,379,1.301,380,1.28,381,1.219,382,1.301,383,1.28,384,1.323,385,1.301,386,1.368,387,1.301,388,1.323,389,1.368,390,1.785,391,1.301,392,1.368,393,1.368,395,2.592,495,1.09,517,2.513,519,3.137,523,2.041,526,3.219,566,1.345,972,2.881,1201,3.296,1375,3.737,1549,2.439,1550,2.248,1551,2.513,1566,2.983,1567,2.983,1579,2.139,1715,1.76,1871,4.018,1920,2.679,1931,3.487,1939,2.679,2021,2.439,2310,4.185,2321,3.296,2375,3.727,2643,3.727,2644,6.777,2645,6.503,2646,5.647,2669,3.727,2670,3.727,2672,4.048,2678,4.536,2679,4.536,2680,6.062,2681,6.327,2682,4.536,2683,4.536,2684,6.327,2685,6.327,2686,4.048,2687,4.048,2688,4.536,2689,4.536,2690,3.296,2691,4.536,2692,4.536,2693,4.536,2694,6.503,2695,4.048,2696,4.536]],["title/modules/HeaderModule.html",[397,0.746,2109,3.567]],["body/modules/HeaderModule.html",[3,0.072,4,0.072,5,0.072,6,0.054,11,0.004,17,0.006,23,0.072,99,0.005,100,0.004,150,0.299,151,0.612,179,0.143,204,1.952,317,1.068,354,2.825,397,1.034,399,1.952,400,1.952,401,2.675,402,1.984,403,1.984,404,2.675,419,2.326,420,1.799,422,2.528,423,2.486,424,4.31,425,3.208,435,6.073,534,2.757,535,2.236,2109,7.172,2697,6.073,2698,6.073,2699,6.073,2700,6.073,2701,6.975,2702,6.805,2703,7.359,2704,6.073,2705,8.245,2706,6.805,2707,7.359,2708,6.073,2709,5.592,2710,6.805,2711,6.805]],["title/interfaces/IconDefinition.html",[0,0.243,2712,3.395]],["body/interfaces/IconDefinition.html",[0,0.228,2,1.04,3,0.049,4,0.049,5,0.049,6,0.037,8,0.633,11,0.003,12,0.317,13,0.725,16,1.417,17,0.006,19,0.641,20,0.932,23,0.067,33,4.012,34,4.386,46,1.294,51,2.434,53,1.067,68,3.103,87,1.462,99,0.004,100,0.003,127,1.274,131,1.882,136,1.125,141,2.393,145,1.882,150,0.27,151,0.414,179,0.097,180,1.413,181,1.54,183,1.918,195,3.185,205,0.822,219,1.327,236,2.177,247,1.884,249,2.408,288,4.855,291,2.877,318,2.501,425,2.172,427,3.047,461,1.439,497,0.91,551,2.203,614,1.788,662,2.886,688,2.702,850,3.09,969,1.366,1016,1.982,1235,4.688,1384,4.925,1810,3.912,1815,3.047,2119,3.047,2122,3.347,2127,2.065,2176,3.777,2199,3.777,2203,2.925,2238,3.543,2239,2.552,2240,2.552,2241,2.226,2283,2.925,2303,3.785,2306,6.241,2310,5.25,2314,6.54,2315,5.516,2316,5.855,2317,5.25,2318,4.423,2320,4.423,2423,3.047,2690,3.347,2712,6.121,2713,3.347,2714,3.542,2715,4.917,2716,6.103,2717,6.103,2718,5.649,2719,4.917,2720,3.542,2721,3.047,2722,6.636,2723,4.917,2724,3.542,2725,3.185,2726,3.542,2727,3.542,2728,3.542,2729,3.542,2730,3.542,2731,4.917,2732,4.647,2733,3.542,2734,3.542,2735,3.542,2736,3.542,2737,3.542,2738,4.917,2739,3.542,2740,3.542,2741,3.542,2742,3.185,2743,3.542,2744,3.542,2745,3.542,2746,3.542,2747,3.542,2748,3.542,2749,3.542,2750,4.423,2751,3.542,2752,3.542,2753,3.542,2754,3.542,2755,3.542,2756,3.542,2757,3.542,2758,3.185,2759,3.542,2760,3.542]],["title/interfaces/IconDefinition-1.html",[0,0.203,253,0.885,2712,2.841]],["body/interfaces/IconDefinition-1.html",[0,0.228,2,1.04,3,0.049,4,0.049,5,0.049,6,0.037,8,0.633,11,0.003,12,0.317,13,0.725,16,1.417,17,0.006,19,0.641,20,0.932,23,0.067,33,4.012,34,4.386,46,1.294,51,2.434,53,1.067,68,3.103,87,1.462,99,0.004,100,0.003,127,1.274,131,1.882,136,1.125,141,2.393,145,1.882,150,0.27,151,0.414,179,0.097,180,1.413,181,1.54,183,1.918,195,3.185,205,0.822,219,1.327,236,2.177,247,1.884,249,2.408,288,4.855,291,2.877,318,2.501,425,2.172,427,3.047,461,1.439,497,0.91,551,2.203,614,1.788,662,2.886,688,2.702,850,3.09,969,1.366,1016,1.982,1235,4.688,1384,4.925,1810,3.912,1815,3.047,2119,3.047,2122,3.347,2127,2.065,2176,3.777,2199,3.777,2203,2.925,2238,3.543,2239,2.552,2240,2.552,2241,2.226,2283,2.925,2306,6.241,2310,5.25,2314,6.54,2315,5.516,2316,5.855,2317,5.25,2318,4.423,2320,4.423,2326,3.785,2423,3.047,2690,3.347,2712,6.121,2713,3.347,2714,3.542,2715,4.917,2716,6.103,2717,6.103,2718,5.649,2719,4.917,2720,3.542,2721,3.047,2722,6.636,2723,4.917,2724,3.542,2725,3.185,2726,3.542,2727,3.542,2728,3.542,2729,3.542,2730,3.542,2731,4.917,2732,4.647,2733,3.542,2734,3.542,2735,3.542,2736,3.542,2737,3.542,2738,4.917,2739,3.542,2740,3.542,2741,3.542,2742,3.185,2743,3.542,2744,3.542,2745,3.542,2746,3.542,2747,3.542,2748,3.542,2749,3.542,2750,4.423,2751,3.542,2752,3.542,2753,3.542,2754,3.542,2755,3.542,2756,3.542,2757,3.542,2758,3.185,2759,3.542,2760,3.542]],["title/injectables/IconRegistryState.html",[2127,1.585,2721,3.247]],["body/injectables/IconRegistryState.html",[0,0.207,3,0.044,4,0.044,5,0.044,6,0.067,8,1.046,11,0.003,12,0.288,16,1.263,17,0.006,19,0.65,20,0.847,23,0.063,33,3.986,34,4.128,46,1.539,51,1.593,53,1.064,68,2.507,87,1.335,99,0.004,100,0.003,127,1.389,129,1.553,131,2.143,136,1.022,141,2.523,145,2.061,150,0.263,151,0.376,179,0.088,180,1.833,181,1.999,183,1.86,195,4.134,197,1.328,205,0.747,219,1.295,236,1.425,247,1.839,249,3.125,288,4.653,291,3.422,318,2.371,425,1.973,427,2.768,461,1.597,495,1.934,497,0.595,551,2.525,566,1.241,588,2.022,614,2.32,662,2.945,688,2.739,850,2.888,969,1.773,1016,3.001,1235,4.493,1384,5.202,1810,4.653,1815,3.954,2119,2.768,2122,4.344,2127,1.93,2128,2.251,2176,4.119,2199,4.119,2203,3.796,2238,3.311,2239,2.318,2240,2.318,2241,2.022,2283,2.658,2303,6.876,2306,6.199,2310,5.826,2314,6.091,2315,5.032,2316,5.826,2317,3.954,2318,2.894,2320,4.134,2423,3.954,2690,4.344,2712,6.533,2713,6.08,2714,3.218,2715,3.218,2716,4.596,2717,4.596,2718,6.434,2719,5.849,2720,3.218,2721,3.954,2722,6.993,2723,5.849,2724,4.596,2725,4.134,2726,3.218,2727,3.218,2728,3.218,2729,3.218,2730,4.596,2731,5.849,2732,5.528,2733,4.596,2734,3.218,2735,4.596,2736,5.849,2737,4.596,2738,4.596,2739,3.218,2740,3.218,2741,3.218,2742,2.894,2743,3.218,2744,3.218,2745,3.218,2746,3.218,2747,3.218,2748,3.218,2749,3.218,2750,5.261,2751,5.362,2752,3.218,2753,3.218,2754,3.218,2755,3.218,2756,3.218,2757,3.218,2758,4.134,2759,5.362,2760,3.218,2761,5.335,2762,3.735,2763,3.735,2764,3.735,2765,3.735,2766,3.735,2767,3.735,2768,3.735,2769,3.735]],["title/injectables/IconRegistryState-1.html",[253,0.885,2127,1.326,2721,2.717]],["body/injectables/IconRegistryState-1.html",[0,0.207,3,0.044,4,0.044,5,0.044,6,0.067,8,1.046,11,0.003,12,0.288,16,1.263,17,0.006,19,0.65,20,0.847,23,0.063,33,3.986,34,4.128,46,1.539,51,1.593,53,1.064,68,2.507,87,1.335,99,0.004,100,0.003,127,1.389,129,1.553,131,2.143,136,1.022,141,2.523,145,2.061,150,0.263,151,0.376,179,0.088,180,1.833,181,1.999,183,1.86,195,4.134,197,1.328,205,0.747,219,1.295,236,1.425,247,1.839,249,3.125,288,4.653,291,3.422,318,2.371,425,1.973,427,2.768,461,1.597,495,1.934,497,0.595,551,2.525,566,1.241,588,2.022,614,2.32,662,2.945,688,2.739,850,2.888,969,1.773,1016,3.001,1235,4.493,1384,5.202,1810,4.653,1815,3.954,2119,2.768,2122,4.344,2127,1.93,2128,2.251,2176,4.119,2199,4.119,2203,3.796,2238,3.311,2239,2.318,2240,2.318,2241,2.022,2283,2.658,2306,6.199,2310,5.826,2314,6.091,2315,5.032,2316,5.826,2317,3.954,2318,2.894,2320,4.134,2326,6.876,2423,3.954,2690,4.344,2712,6.533,2713,6.08,2714,3.218,2715,3.218,2716,4.596,2717,4.596,2718,6.434,2719,5.849,2720,3.218,2721,3.954,2722,6.993,2723,5.849,2724,4.596,2725,4.134,2726,3.218,2727,3.218,2728,3.218,2729,3.218,2730,4.596,2731,5.849,2732,5.528,2733,4.596,2734,3.218,2735,4.596,2736,5.849,2737,4.596,2738,4.596,2739,3.218,2740,3.218,2741,3.218,2742,2.894,2743,3.218,2744,3.218,2745,3.218,2746,3.218,2747,3.218,2748,3.218,2749,3.218,2750,5.261,2751,5.362,2752,3.218,2753,3.218,2754,3.218,2755,3.218,2756,3.218,2757,3.218,2758,4.134,2759,5.362,2760,3.218,2761,5.335,2762,3.735,2763,3.735,2764,3.735,2765,3.735,2766,3.735,2767,3.735,2768,3.735,2769,3.735]],["title/interfaces/IdObject.html",[0,0.243,2770,3.774]],["body/interfaces/IdObject.html",[0,0.45,2,1.234,3,0.058,4,0.058,5,0.058,6,0.044,8,0.752,11,0.003,12,0.376,13,0.814,15,2.847,16,1.388,17,0.006,19,0.442,20,1.837,22,4.072,23,0.09,28,2.336,51,3.051,53,0.984,65,1.762,99,0.004,100,0.003,150,0.219,154,2.94,183,1.215,216,2.982,219,1.409,247,1.141,461,0.991,568,2.961,601,4.28,614,2.122,620,3.993,848,4.579,1388,5.634,2624,3.861,2637,3.616,2770,6.547,2771,4.492,2772,4.492,2773,7.309,2774,6.997,2775,3.616,2776,6.165,2777,4.492,2778,4.965,2779,5.9,2780,5.9,2781,5.826,2782,5.9,2783,4.492,2784,7.267,2785,7.267,2786,5.9,2787,4.492,2788,4.492,2789,6.589,2790,4.492,2791,4.492,2792,4.492,2793,4.492,2794,5.9,2795,4.492,2796,4.492,2797,4.492,2798,4.492,2799,4.492,2800,4.492,2801,4.492,2802,3.973,2803,3.973,2804,5.9,2805,4.492,2806,4.492,2807,4.492,2808,4.492,2809,4.492,2810,3.78,2811,4.492]],["title/classes/ImageViewer.html",[179,0.103,1257,2.899]],["body/classes/ImageViewer.html",[0,0.301,3,0.045,4,0.028,5,0.028,6,0.078,11,0.004,12,0.294,13,0.485,16,1.109,17,0.006,18,1.62,19,0.764,20,1.555,23,0.074,28,1.78,46,1.079,47,1.844,48,0.504,53,0.882,87,1.264,92,3.624,95,3.213,99,0.003,100,0.002,125,1.504,127,1.531,129,1.865,141,1.608,145,1.097,150,0.202,179,0.056,197,0.952,205,1.608,216,1.407,219,1.258,235,3.472,247,1.831,252,1.35,271,2.675,281,2.181,332,0.814,456,1.334,461,1.606,492,3.374,495,1.904,497,0.383,551,2.648,553,4.844,566,0.798,568,2.506,570,2.619,588,2.069,589,3.912,605,1.538,610,1.538,612,2.733,614,1.045,618,3.917,619,1.71,621,1.448,622,5.281,623,1.71,624,2.712,627,3.917,629,2.917,635,3.717,646,1.71,649,4.703,749,4.135,752,3.204,782,1.78,832,2.796,951,1.78,1016,1.158,1080,2.019,1217,2.832,1218,6.695,1219,1.71,1220,2.238,1221,2.069,1222,3.674,1223,4.202,1224,4.32,1225,4.019,1226,1.59,1227,1.78,1228,2.619,1229,2.719,1230,2.619,1231,2.719,1232,1.956,1233,1.956,1234,4.019,1235,4.171,1236,1.956,1237,1.956,1238,2.961,1239,3.687,1240,1.956,1241,4.019,1242,4.019,1243,3.874,1244,4.67,1245,3.386,1246,1.71,1247,1.71,1248,3.767,1249,5.382,1250,4.202,1251,3.111,1252,3.687,1253,1.956,1254,1.956,1255,1.956,1256,5.121,1257,2.529,1258,3.874,1259,3.874,1260,3.687,1261,3.687,1262,3.687,1263,4.671,1264,3.874,1265,3.526,1266,3.687,1267,1.956,1268,3.526,1269,4.415,1270,3.687,1271,6.404,1272,4.202,1273,4.202,1274,4.036,1275,2.832,1276,1.956,1277,1.956,1278,1.956,1279,1.956,1280,1.956,1281,1.956,1282,3.859,1283,3.874,1284,3.874,1285,3.874,1286,4.415,1287,4.819,1288,4.202,1289,1.956,1290,2.961,1291,3.111,1292,1.956,1293,1.956,1294,1.956,1295,2.961,1296,1.956,1297,1.956,1298,1.956,1299,1.862,1300,1.956,1301,1.956,1302,3.111,1303,1.956,1304,1.956,1305,2.961,1306,3.874,1307,1.956,1308,2.303,1309,1.956,1310,3.111,1311,4.019,1312,4.019,1313,1.956,1314,1.862,1315,1.956,1316,3.111,1317,4.202,1318,1.956,1319,1.956,1320,4.019,1321,2.619,1322,1.956,1323,1.956,1324,1.956,1325,1.956,1326,1.956,1327,3.687,1328,1.956,1329,1.647,1330,1.956,1331,1.956,1332,1.956,1333,1.956,1334,1.956,1335,2.961,1336,1.956,1337,2.961,1338,4.202,1339,1.956,1340,1.956,1341,1.956,1342,1.956,1343,4.202,1344,1.956,1345,1.956,1346,1.956,1347,1.956,1348,1.956,1349,2.832,1350,1.956,1351,1.956,1352,3.111,1353,1.956,1354,1.956,1516,2.372,2812,3.822,2813,3.822,2814,3.822,2815,3.822,2816,3.822,2817,4.282,2818,2.692,2819,2.692,2820,2.692,2821,2.692,2822,2.692,2823,2.692,2824,2.692,2825,2.692,2826,2.692,2827,2.692,2828,2.692,2829,2.692,2830,2.692,2831,2.692,2832,2.692,2833,2.692,2834,2.403,2835,2.692,2836,2.403,2837,2.692,2838,2.692,2839,2.692,2840,2.692,2841,2.692,2842,2.692,2843,2.692,2844,2.692,2845,2.403,2846,2.692,2847,2.692,2848,2.692,2849,2.692,2850,2.692,2851,2.692,2852,2.403,2853,2.692,2854,2.692,2855,2.692,2856,2.692,2857,2.692,2858,2.692,2859,2.692]],["title/components/ImageViewerAccordionComponent.html",[101,0.588,356,1.408]],["body/components/ImageViewerAccordionComponent.html",[3,0.072,4,0.042,5,0.042,6,0.066,8,0.549,11,0.002,12,0.274,15,2.27,16,0.907,17,0.006,19,0.665,20,1.374,23,0.042,24,2.598,36,1.433,46,1.169,47,1.805,48,1.849,49,2.118,53,0.643,55,2.213,65,1.352,82,1.552,99,0.003,100,0.004,101,0.813,102,1.63,103,1.979,104,1.055,105,1.144,106,1.203,107,1.072,113,2.534,114,2.075,117,2.804,118,2.245,120,1.603,122,1.657,127,1.15,128,0.944,129,1.525,131,1.479,136,0.974,144,2.791,148,1.183,150,0.207,151,0.359,169,1.144,173,1.144,175,4.427,177,1.63,179,0.084,193,1.854,199,1.824,224,1.991,233,2.116,252,1.283,268,3.502,269,1.928,270,2.21,271,2.154,272,1.645,273,2.28,275,1.518,277,2.333,281,1.824,283,3.016,284,2.488,285,2.723,286,2.921,289,2.029,290,1.41,291,3.348,292,2.862,293,1.63,295,2.145,300,2.859,306,2.723,307,4.253,308,2.21,309,2.085,317,0.626,318,1.527,319,1.552,320,1.203,321,2.244,322,1.203,323,1.741,324,1.126,325,1.144,326,1.741,327,1.144,328,1.203,329,1.144,330,1.203,331,1.144,332,1.501,333,1.203,334,1.144,335,1.163,336,1.203,337,1.144,338,1.203,339,1.144,340,1.203,341,1.63,342,1.741,343,1.854,344,2.381,345,1.741,346,1.144,347,1.741,348,1.144,349,1.183,350,1.741,351,1.144,352,1.63,353,1.741,354,1.63,355,1.741,356,2.135,357,1.203,358,1.144,359,1.144,360,1.203,361,1.144,362,1.203,363,1.144,364,2.047,365,1.144,366,1.203,367,1.144,368,1.741,369,1.144,370,1.203,371,1.144,372,1.203,373,1.163,374,1.203,375,1.144,376,1.203,377,1.144,378,1.203,379,1.144,380,1.126,381,1.072,382,1.144,383,1.126,384,1.163,385,1.144,386,1.203,387,1.144,388,1.163,389,1.203,390,1.63,391,1.144,392,1.203,393,1.203,475,2.626,481,2.382,483,2.948,497,0.821,505,2.948,517,2.21,518,2.28,523,3.054,524,3.067,526,2.029,586,2.44,612,1.795,620,2.54,629,3.898,645,1.645,821,2.432,829,3.82,880,2.28,920,3.668,1403,4.197,1424,3.301,1503,1.928,1512,1.928,1519,3.301,1542,2.44,1547,2.145,1549,2.145,1550,1.977,1551,2.21,1571,4.694,1572,3.651,1577,3.106,1580,2.534,1715,2.241,1729,2.54,1789,2.759,1934,2.145,1935,2.145,2141,3.56,2362,3.278,2373,6.977,2622,5.155,2860,4.427,2861,6.765,2862,3.989,2863,7.441,2864,6.789,2865,5.775,2866,5.22,2867,5.22,2868,3.989,2869,4.746,2870,3.989,2871,3.989,2872,3.989,2873,4.746,2874,3.989,2875,5.775,2876,5.775,2877,6.789,2878,3.278,2879,2.899,2880,3.56,2881,3.278,2882,4.746]],["title/modules/ImageViewerAccordionModule.html",[397,0.746,2883,3.567]],["body/modules/ImageViewerAccordionModule.html",[3,0.073,4,0.073,5,0.073,6,0.055,11,0.004,17,0.006,23,0.073,47,1.581,48,1.774,99,0.005,100,0.004,150,0.289,151,0.621,175,3.715,179,0.145,204,1.981,317,1.084,356,2.877,397,1.05,399,1.981,400,1.981,401,2.692,402,2.014,403,2.014,404,2.692,419,2.348,420,1.827,422,2.551,423,2.509,534,2.782,535,2.269,2860,3.715,2861,5.676,2883,7.189,2884,6.165,2885,6.165,2886,6.165,2887,6.165,2888,6.661,2889,6.907,2890,8.32,2891,6.907,2892,6.907,2893,5.311,2894,6.165]],["title/components/ImageViewerContentComponent.html",[101,0.588,358,1.408]],["body/components/ImageViewerContentComponent.html",[3,0.079,4,0.042,5,0.042,6,0.07,8,0.55,11,0.002,12,0.275,17,0.006,19,0.666,23,0.042,24,2.604,36,1.962,46,1.171,47,1.806,48,1.875,49,1.248,50,3.767,53,0.644,55,1.075,65,1.355,82,1.556,99,0.004,100,0.004,101,0.814,102,1.633,103,1.981,104,1.058,105,1.148,106,1.207,107,1.075,113,2.542,114,2.078,117,2.805,118,2.247,120,1.607,122,1.66,127,1.153,128,0.947,129,1.641,131,1.483,136,0.977,144,3.601,148,1.187,150,0.227,151,0.36,152,2.036,169,1.148,173,1.148,175,4.68,177,1.633,179,0.084,193,1.857,197,1.286,199,1.828,205,1.033,224,2.078,233,2.12,252,0.889,268,2.387,271,1.27,279,1.685,283,3.113,285,3.728,286,1.722,289,4.324,290,1.414,292,1.983,293,1.129,296,2.992,297,2.036,298,2.092,299,1.843,300,1.685,301,1.722,302,1.617,307,2.287,317,0.628,318,1.531,319,1.556,320,1.207,321,2.247,322,1.207,323,1.745,324,1.129,325,1.148,326,1.745,327,1.148,328,1.207,329,1.148,330,1.207,331,1.148,332,1.416,333,1.207,334,1.148,335,1.167,336,1.207,337,1.148,338,1.207,339,1.148,340,1.207,341,1.633,342,1.745,343,1.857,344,2.384,345,1.745,346,1.148,347,1.745,348,1.148,349,1.187,350,1.745,351,1.148,352,1.633,353,1.745,354,1.633,355,1.745,356,1.148,357,1.207,358,2.138,359,1.148,360,1.207,361,1.148,362,1.207,363,1.148,364,2.051,365,1.148,366,1.207,367,1.148,368,1.745,369,1.148,370,1.207,371,1.148,372,1.207,373,1.167,374,1.207,375,1.148,376,1.207,377,1.148,378,1.207,379,1.148,380,1.129,381,1.075,382,1.148,383,1.129,384,1.167,385,1.148,386,1.207,387,1.148,388,1.167,389,1.207,390,1.633,391,1.148,392,1.207,393,1.207,461,0.725,475,2.63,481,2.387,483,3.173,497,0.967,505,3.077,517,2.217,518,2.287,523,1.8,612,1.8,620,2.546,629,3.739,821,2.438,829,3.829,920,3.676,1424,3.308,1512,1.934,1519,3.308,1571,4.703,1572,3.657,1577,3.113,1580,2.542,1715,2.247,1729,2.546,1821,4.003,1833,5.719,1935,2.152,1985,4.942,1986,4.757,2546,3.572,2551,3.572,2553,3.572,2554,3.572,2597,5.167,2604,3.572,2860,4.68,2866,5.229,2867,5.229,2869,4.757,2873,4.757,2895,6.692,2896,6.497,2897,7.907,2898,4.002,2899,4.002,2900,4.002,2901,4.002,2902,4.002,2903,4.002,2904,5.789,2905,5.167,2906,5.167,2907,4.002]],["title/modules/ImageViewerContentModule.html",[397,0.746,2908,3.395]],["body/modules/ImageViewerContentModule.html",[3,0.073,4,0.073,5,0.073,6,0.055,11,0.004,17,0.006,23,0.073,47,1.579,48,1.773,99,0.005,100,0.004,150,0.289,151,0.619,175,3.704,179,0.144,204,1.976,317,1.081,358,2.876,397,1.047,399,1.976,400,1.976,401,2.689,402,2.009,403,2.009,404,2.689,419,2.344,420,1.822,422,2.547,423,2.505,424,4.342,425,3.248,534,2.777,535,2.263,2579,6.148,2582,6.148,2860,3.704,2861,5.661,2883,6.995,2895,5.296,2908,6.838,2909,6.148,2910,6.148,2911,6.888,2912,6.148,2913,6.888]],["title/interfaces/ImageViewerData.html",[0,0.243,50,2.719]],["body/interfaces/ImageViewerData.html",[0,0.45,1,2.735,2,1.148,3,0.054,4,0.054,5,0.054,6,0.041,7,3.517,8,1.064,9,3.911,10,5.061,11,0.005,12,0.35,13,0.776,14,3.517,15,3.163,16,1.591,17,0.006,18,1.621,19,0.793,20,1.385,21,3.517,22,2.342,23,0.094,24,3.079,25,3.111,26,3.391,27,3.747,28,2.294,29,2.587,30,3.517,31,3.517,32,3.23,33,2.055,34,3.809,35,3.517,36,2.053,37,4.186,38,3.517,39,3.517,40,3.364,41,3.23,42,3.364,43,3.364,44,3.23,45,4.285,46,1.565,47,1.641,48,1.28,49,2.135,50,4.285,51,2.604,52,4.042,53,0.762,54,5.472,55,2.39,56,3.004,57,3.111,58,3.364,59,4.526,60,4.186,61,4.346,62,4.346,63,4.731,64,5.116,65,1.363,66,3.68,67,4.186,68,1.828,69,1.936,70,2.735,71,2.906,72,2.817,73,2.681,74,3.004,75,4.346,76,3.23,77,3.23,78,4.186,79,4.042,80,2.906,81,3.364,82,1.367,83,2.457,84,3.004,85,3.23,86,3.364,87,0.811,88,3.517,89,2.587,90,3.23,91,3.364,92,2.398,93,3.079,94,3.111,95,3.062,96,3.111,97,2.097,98,3.364,99,0.004,100,0.003,586,4.186]],["title/classes/ImageViewerLayer.html",[179,0.103,1572,2.64]],["body/classes/ImageViewerLayer.html",[0,0.242,3,0.052,4,0.052,5,0.052,6,0.078,11,0.003,12,0.521,13,0.756,15,2.849,16,1.488,17,0.006,18,1.705,19,0.759,20,1.82,23,0.086,28,2.048,33,3.063,36,1.654,46,1.724,48,1.827,53,0.545,82,2.038,87,0.781,99,0.004,100,0.003,127,1.751,129,1.877,145,1.253,150,0.149,179,0.103,180,2.044,197,1.482,199,1.315,219,0.98,224,1.911,226,5.478,227,6.691,228,5.244,239,3.934,247,1.392,248,3.693,252,1.482,253,1.436,272,3.127,298,4.454,300,3.194,332,1.856,456,2.425,461,1.476,495,1.176,566,1.451,568,2.018,662,2.849,699,3.555,814,2.587,823,5.478,1512,4.486,1516,3.693,1521,4.816,1522,2.993,1533,4.409,1543,3.107,1546,3.236,1550,3.304,1561,5.478,1572,3.585,1578,5.83,1710,5.917,1723,6.191,1771,5.917,1826,4.367,2803,3.555,2914,8.023,2915,5.51,2916,6.261,2917,5.917,2918,7.583,2919,7.268,2920,7.583,2921,6.691,2922,6.667,2923,5.95,2924,5.478,2925,4.893,2926,4.893,2927,4.893,2928,4.893,2929,4.893,2930,4.893,2931,4.893,2932,4.893,2933,4.893,2934,4.893,2935,4.367,2936,4.021,2937,4.367,2938,4.893,2939,6.768,2940,6.768,2941,4.893,2942,4.893,2943,4.893,2944,4.021,2945,4.367,2946,4.367,2947,4.367,2948,4.367,2949,4.367,2950,4.367,2951,4.367,2952,4.367,2953,4.367,2954,4.367,2955,4.367,2956,4.367,2957,4.367,2958,4.367]],["title/components/ImageViewerLayersComponent.html",[101,0.588,359,1.408]],["body/components/ImageViewerLayersComponent.html",[3,0.067,4,0.037,5,0.037,6,0.067,8,0.965,11,0.002,12,0.243,13,0.894,16,0.829,17,0.006,19,0.66,23,0.037,24,3.993,28,1.269,46,1.068,47,1.743,48,1.836,49,1.972,51,2.009,53,0.836,55,0.949,65,1.259,68,1.898,69,2.009,82,1.699,87,1.009,89,2.685,93,1.588,99,0.003,100,0.004,101,0.899,102,1.489,103,1.269,104,0.934,105,1.013,106,1.064,107,0.949,112,5.098,114,1.986,117,2.787,118,2.229,120,1.465,122,1.514,127,1.052,128,0.835,129,1.577,131,1.619,133,4.641,134,3.65,136,0.862,144,2.551,148,1.047,150,0.193,151,0.317,169,1.013,173,1.013,175,4.516,177,1.489,179,0.074,183,1.669,193,0.964,197,1.173,199,0.949,205,1.252,216,1.734,224,1.893,225,2.159,232,4.059,233,2.751,235,2.018,236,2.152,239,3.808,247,0.737,248,2.924,268,2.177,269,1.706,271,1.675,272,1.456,274,2.759,281,0.949,283,2.316,285,1.664,290,1.289,293,0.996,295,1.898,300,1.487,305,2.759,306,2.489,307,2.018,317,0.554,318,1.396,319,1.419,320,1.064,321,2.116,322,1.064,323,1.592,324,0.996,325,1.013,326,1.592,327,1.013,328,1.064,329,1.013,330,1.064,331,1.013,332,1.596,333,1.064,334,1.013,335,1.03,336,1.064,337,1.013,338,1.064,339,1.013,340,1.064,341,1.489,342,1.592,343,1.727,344,2.265,345,1.592,346,1.013,347,1.592,348,1.013,349,1.047,350,1.592,351,1.013,352,1.489,353,1.592,354,1.489,355,1.592,356,1.013,357,1.064,358,1.013,359,2.013,360,1.064,361,1.013,362,1.064,363,1.013,364,1.906,365,1.013,366,1.064,367,1.013,368,1.592,369,1.013,370,1.064,371,1.013,372,1.064,373,1.03,374,1.064,375,1.013,376,1.064,377,1.013,378,1.064,379,1.013,380,0.996,381,0.949,382,1.013,383,0.996,384,1.03,385,1.013,386,1.064,387,1.013,388,1.03,389,1.064,390,1.489,391,1.013,392,1.064,393,1.064,395,2.018,461,1.272,475,2.232,481,2.177,483,2.804,494,2.489,495,1.52,496,1.956,497,0.998,499,4.292,505,2.36,519,2.441,523,2.375,526,2.685,596,2.911,612,4.285,629,4.189,821,2.223,920,3.352,1220,2.759,1360,4.711,1384,3.118,1385,4.059,1402,2.441,1503,1.706,1512,3.055,1519,3.017,1542,2.159,1547,1.898,1571,4.372,1572,4.973,1576,4.059,1578,5.394,1580,2.242,1691,2.375,1717,5.098,1727,4.372,1728,3.477,1729,2.322,1813,4.711,1835,2.714,1887,3.491,2083,3.229,2163,4.711,2423,3.491,2434,4.711,2591,4.059,2592,4.711,2860,4.516,2866,4.861,2867,4.861,2869,4.338,2893,6.457,2917,5.098,2937,4.711,2959,3.53,2960,5.279,2961,5.279,2962,5.279,2963,6.322,2964,5.279,2965,5.279,2966,5.279,2967,5.279,2968,3.53,2969,3.53,2970,5.279,2971,4.338,2972,5.279,2973,3.53,2974,5.279,2975,3.53,2976,5.279,2977,3.53,2978,4.711,2979,4.059,2980,5.279,2981,3.53,2982,5.279,2983,3.53,2984,5.279,2985,5.279,2986,3.118,2987,3.151,2988,3.53,2989,3.53,2990,2.714,2991,3.53,2992,3.53,2993,3.53,2994,4.711,2995,4.711,2996,5.279,2997,2.901]],["title/modules/ImageViewerLayersModule.html",[397,0.746,2888,3.395]],["body/modules/ImageViewerLayersModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,47,1.281,48,1.653,99,0.005,100,0.004,150,0.292,151,0.606,175,3.625,179,0.141,204,1.934,224,1.699,317,1.058,332,1.281,335,2.391,359,2.868,397,1.024,399,1.934,400,1.934,401,2.664,402,1.966,403,1.966,404,2.664,419,2.313,420,1.783,422,2.514,423,2.472,534,2.741,535,2.215,1391,5.539,1411,7.317,1503,3.257,1559,5.539,1583,6.96,2860,3.625,2888,6.887,2893,5.183,2998,6.016,2999,6.016,3000,6.016,3001,6.016,3002,6.96,3003,6.741,3004,6.741,3005,5.539,3006,6.741,3007,6.741]],["title/components/ImageViewerLegendComponent.html",[101,0.588,361,1.408]],["body/components/ImageViewerLegendComponent.html",[3,0.076,4,0.046,5,0.046,6,0.066,8,0.607,11,0.003,12,0.303,13,0.704,17,0.006,19,0.58,23,0.046,24,3.23,47,1.81,48,1.859,49,2.239,53,0.799,55,1.186,56,4.24,65,1.43,68,1.586,87,0.704,93,2.792,99,0.004,100,0.004,101,0.859,102,1.751,103,1.973,104,1.167,105,1.266,106,1.33,107,1.186,114,2.146,117,2.819,118,2.257,120,1.723,122,1.78,128,1.044,129,1.504,131,1.839,136,1.078,148,1.308,150,0.189,151,0.397,169,1.266,173,1.266,175,4.414,177,1.751,179,0.092,193,1.205,199,1.929,205,0.787,224,1.81,239,2.999,247,0.921,268,3.385,269,2.132,270,2.444,271,2.278,272,1.82,281,1.186,284,2.075,285,2.08,290,1.516,292,2.187,293,1.751,297,2.245,300,1.858,305,3.244,306,2.926,317,1.373,318,1.641,319,1.668,320,1.33,321,2.349,322,1.33,323,1.871,324,1.245,325,1.266,326,1.871,327,1.266,328,1.33,329,1.266,330,1.33,331,1.266,332,1.56,333,1.33,334,1.266,335,1.287,336,1.33,337,1.266,338,1.33,339,1.266,340,1.33,341,1.751,342,1.871,343,1.961,344,2.475,345,1.871,346,1.266,347,1.871,348,1.266,349,1.308,350,1.871,351,1.266,352,1.751,353,1.871,354,1.751,355,1.871,356,1.266,357,1.33,358,1.266,359,1.266,360,1.33,361,2.234,362,1.33,363,1.266,364,2.165,365,1.266,366,1.33,367,1.266,368,1.871,369,1.266,370,1.33,371,1.266,372,1.33,373,1.287,374,1.33,375,1.266,376,1.33,377,1.266,378,1.33,379,1.266,380,1.245,381,1.186,382,1.266,383,1.245,384,1.287,385,1.266,386,1.33,387,1.266,388,1.287,389,1.33,390,1.751,391,1.266,392,1.33,393,1.33,461,0.8,475,2.191,495,1.061,523,3.505,551,1.993,612,1.985,629,4.091,643,1.858,644,2.444,645,1.82,748,2.444,821,2.614,829,4.748,1403,4.51,1516,3.438,1522,3.796,1547,2.373,1566,2.926,1567,2.926,1572,4.414,1579,2.08,1580,2.802,1582,3.626,2364,3.626,2860,4.414,2879,3.206,2994,5.539,3008,6.745,3009,4.412,3010,5.539,3011,7.179,3012,6.206,3013,6.408,3014,6.206,3015,4.412,3016,3.938,3017,4.412,3018,3.938,3019,3.938,3020,5.539,3021,4.412,3022,4.412,3023,4.412,3024,4.412]],["title/modules/ImageViewerLegendModule.html",[397,0.746,3025,3.567]],["body/modules/ImageViewerLegendModule.html",[3,0.075,4,0.075,5,0.075,6,0.057,11,0.004,17,0.006,23,0.075,47,1.356,48,1.693,99,0.005,100,0.004,150,0.276,151,0.641,175,3.836,179,0.149,204,2.046,317,1.12,361,2.888,397,1.084,399,2.046,400,2.046,401,2.729,402,2.08,403,2.08,404,2.729,419,2.393,420,1.886,422,2.187,423,2.557,534,2.836,535,2.343,2860,3.836,3008,5.861,3025,7.125,3026,6.366,3027,6.366,3028,6.366,3029,7.132,3030,7.132]],["title/modules/ImageViewerModule.html",[397,0.746,414,3.567]],["body/modules/ImageViewerModule.html",[3,0.069,4,0.069,5,0.069,6,0.053,11,0.004,17,0.006,23,0.069,47,1.661,48,1.782,99,0.005,100,0.004,150,0.286,151,0.592,175,3.54,176,5.061,179,0.138,204,1.888,317,1.033,397,1,399,1.888,400,1.888,401,2.436,402,1.92,403,2.356,404,2.636,414,7.312,419,2.28,420,1.741,422,2.478,423,2.436,433,5.875,2618,5.409,2860,3.54,2888,6.894,2893,5.061,2894,5.875,2895,5.061,2908,6.894,3031,5.875,3032,5.875,3033,5.875,3034,7.244,3035,6.586,3036,6.582,3037,5.875]],["title/components/ImageViewerPopoverComponent.html",[101,0.588,173,1.408]],["body/components/ImageViewerPopoverComponent.html",[3,0.063,4,0.063,5,0.034,6,0.07,8,0.923,11,0.005,12,0.34,13,0.56,15,1.652,16,1.135,17,0.006,19,0.641,20,1.463,23,0.034,26,4.152,28,1.613,33,1.307,36,2.308,40,3.966,41,3.138,44,2.055,47,1.836,48,1.875,49,1.541,50,4.222,53,0.849,54,2.14,55,1.328,65,1.194,69,1.881,82,1.804,87,1.071,89,2.514,99,0.003,100,0.004,101,0.865,102,1.394,103,1.613,104,0.856,105,0.928,106,0.976,107,0.869,114,2.061,117,2.769,118,2.219,120,1.372,122,1.418,125,0.913,127,1.44,128,0.766,129,1.651,134,4.641,136,0.79,141,2.527,145,1.719,148,0.959,150,0.183,151,0.291,152,1.646,169,0.928,173,1.925,175,4.675,176,6.684,177,1.394,179,0.068,183,1.492,184,2.351,193,2.082,197,1.098,199,0.869,202,3.8,205,1.459,215,2.449,216,1.063,219,0.882,224,1.511,233,1.81,238,4.222,239,2.388,252,1.098,253,0.697,268,2.768,269,1.563,270,1.792,271,2.294,272,2.768,273,2.824,274,2.583,275,1.231,276,2.351,277,1.307,278,2.488,279,2.525,280,1.979,281,1.943,284,2.418,285,3.594,288,1.979,290,1.207,291,1.456,292,1.603,293,1.394,294,2.488,296,1.423,297,2.514,298,1.691,299,2.761,300,1.363,301,1.392,302,1.307,303,2.14,312,3.808,317,0.776,318,1.307,319,1.328,320,0.976,321,2.024,322,0.976,323,1.49,324,0.913,325,0.928,326,1.49,327,0.928,328,0.976,329,0.928,330,0.976,331,0.928,332,1.449,333,0.976,334,0.928,335,0.943,336,0.976,337,0.928,338,0.976,339,0.928,340,0.976,341,1.394,342,1.49,343,1.638,344,2.18,345,1.49,346,0.928,347,1.49,348,0.928,349,0.959,350,1.49,351,0.928,352,1.394,353,1.49,354,1.394,355,1.49,356,0.928,357,0.976,358,0.928,359,0.928,360,0.976,361,0.928,362,0.976,363,0.928,364,1.808,365,0.928,366,0.976,367,0.928,368,1.49,369,0.928,370,0.976,371,0.928,372,0.976,373,0.943,374,0.976,375,0.928,376,0.976,377,0.928,378,0.976,379,0.928,380,0.913,381,0.869,382,0.928,383,0.913,384,0.943,385,0.928,386,0.976,387,0.928,388,0.943,389,0.976,390,1.394,391,0.928,392,0.976,393,0.976,396,2.888,420,0.856,461,1.382,489,2.055,495,1.613,502,1.563,551,1.863,566,0.959,662,2.244,673,1.281,715,3.417,941,1.918,1202,2.919,1220,3.984,1388,1.849,1507,3.269,1552,2.351,1562,3.591,1566,2.33,1567,2.33,1576,3.8,1579,1.525,1691,2.223,1833,4.263,1874,4.106,1875,4.106,1879,3.023,1890,3.023,1953,4.357,2016,2.514,2021,3.224,2059,2.488,2061,2.659,2062,2.237,2090,1.646,2437,3.417,2583,2.888,2584,5.352,2585,4.411,2725,4.641,2860,4.675,2866,4.61,3038,4.942,3039,4.411,3040,5.996,3041,5.996,3042,4.942,3043,4.942,3044,3.235,3045,4.877,3046,4.942,3047,3.235,3048,3.8,3049,4.942,3050,3.235,3051,1.979,3052,4.942,3053,3.235,3054,4.942,3055,3.235,3056,5.996,3057,3.235,3058,3.235,3059,4.411,3060,5.996,3061,3.235,3062,3.235,3063,3.235,3064,4.942,3065,3.235,3066,3.235,3067,4.942,3068,3.235,3069,3.235,3070,4.942,3071,3.235,3072,3.235,3073,3.235,3074,3.235,3075,2.888,3076,3.235,3077,3.235]],["title/modules/ImageViewerPopoverModule.html",[397,0.746,3034,3.567]],["body/modules/ImageViewerPopoverModule.html",[3,0.069,4,0.069,5,0.069,6,0.053,11,0.004,17,0.006,23,0.069,47,1.659,48,1.803,99,0.005,100,0.004,150,0.294,151,0.589,172,5.388,173,2.858,175,3.526,176,5.041,179,0.137,204,1.881,317,1.029,397,0.996,399,1.881,400,1.881,401,2.631,402,1.912,403,1.912,404,2.631,411,6.579,419,2.274,420,1.734,422,2.472,423,2.43,441,5.852,534,2.695,535,2.154,2617,5.852,2618,5.388,2860,3.526,2895,5.041,2908,6.579,3008,5.388,3025,6.914,3034,7.309,3035,6.579,3037,5.852,3078,5.852,3079,5.852,3080,6.556,3081,5.852,3082,6.556]],["title/interfaces/ImageViewerProps.html",[0,0.243,1246,3.118]],["body/interfaces/ImageViewerProps.html",[0,0.349,2,0.804,3,0.056,4,0.038,5,0.038,6,0.029,11,0.004,12,0.365,13,0.603,16,1.376,17,0.006,18,1.675,19,0.754,23,0.083,28,2.106,46,1.075,47,1.01,48,0.667,87,1.437,92,3.863,95,2.985,99,0.003,100,0.002,125,1.005,141,2.273,145,1.361,150,0.23,179,0.075,205,1.536,216,1.746,219,1.338,235,2.036,247,1.934,252,1.566,271,2.822,281,2.355,332,1.01,492,3.835,497,0.507,551,2.432,553,4.612,568,2.907,570,3.251,589,3.904,605,2.036,610,2.036,612,2.86,614,1.383,618,4.974,619,4.037,621,1.916,622,5.175,623,2.263,624,3.234,627,3.755,629,2.796,635,3.251,646,2.263,649,5.203,749,3.555,752,3.643,782,2.357,832,3.13,951,2.357,1016,1.533,1080,2.506,1217,3.515,1218,2.464,1219,2.263,1220,2.778,1221,2.568,1222,3.904,1223,4.874,1224,4.612,1225,4.205,1226,2.104,1227,2.357,1228,3.251,1229,3.375,1230,3.251,1231,3.375,1232,2.589,1233,2.589,1234,3.515,1235,4.453,1236,2.589,1237,2.589,1238,3.675,1239,4.396,1240,2.589,1241,3.515,1242,3.515,1243,4.619,1244,4.665,1245,3.375,1246,3.375,1247,4.476,1248,4.168,1249,6.119,1250,5.666,1251,3.862,1252,4.396,1253,2.589,1254,2.589,1255,2.589,1256,4.396,1257,2.104,1258,4.619,1259,4.619,1260,2.464,1261,2.464,1262,4.396,1263,4.662,1264,4.619,1265,2.357,1266,2.464,1267,2.589,1268,2.357,1269,5.122,1270,2.464,1271,5.956,1272,3.675,1273,3.675,1274,4.028,1275,2.357,1276,2.589,1277,2.589,1278,2.589,1279,2.589,1280,2.589,1281,2.589,1282,2.263,1283,4.619,1284,4.619,1285,4.619,1286,5.122,1287,5.479,1288,2.464,1289,2.589,1290,2.464,1291,3.862,1292,2.589,1293,2.589,1294,2.589,1295,2.464,1296,2.589,1297,2.589,1298,2.589,1299,2.464,1300,2.589,1301,2.589,1302,3.862,1303,2.589,1304,2.589,1305,2.464,1306,4.619,1307,2.589,1308,2.858,1309,2.589,1310,3.862,1311,2.357,1312,2.357,1313,2.589,1314,2.464,1315,2.589,1316,3.862,1317,2.464,1318,2.589,1319,2.589,1320,2.357,1321,3.251,1322,2.589,1323,2.589,1324,2.589,1325,2.589,1326,2.589,1327,2.464,1328,2.589,1329,2.179,1330,2.589,1331,2.589,1332,2.589,1333,2.589,1334,2.589,1335,2.464,1336,2.589,1337,2.464,1338,3.675,1339,2.589,1340,2.589,1341,2.589,1342,2.589,1343,2.464,1344,2.589,1345,2.589,1346,2.589,1347,2.589,1348,2.589,1349,2.357,1350,2.589,1351,2.589,1352,3.862,1353,2.589,1354,2.589]],["title/components/InfoButtonComponent.html",[101,0.588,363,1.408]],["body/components/InfoButtonComponent.html",[3,0.103,4,0.05,5,0.05,6,0.06,8,0.901,11,0.003,12,0.328,17,0.006,19,0.386,23,0.05,33,2.648,36,1.184,47,1.605,48,1.632,53,0.833,55,1.282,65,1.491,87,0.761,89,3.334,99,0.004,100,0.005,101,1.07,102,1.849,103,1.575,104,1.262,105,1.369,106,1.439,107,1.282,114,2.199,117,2.83,118,2.265,120,1.819,122,1.88,125,1.347,128,1.129,129,1.265,136,1.165,148,1.415,150,0.228,151,0.429,169,1.369,173,1.369,177,1.849,179,0.1,180,2.01,181,2.191,183,1.061,193,1.303,197,1.456,199,1.282,205,1.169,224,1.887,281,1.282,290,1.6,293,1.347,296,3.838,301,2.054,302,1.928,317,0.749,318,1.733,319,1.761,320,1.439,321,2.43,322,1.439,323,1.976,324,1.347,325,1.369,326,1.976,327,1.369,328,1.439,329,1.369,330,1.439,331,1.369,332,1.605,333,1.439,334,1.369,335,1.392,336,1.439,337,1.369,338,1.439,339,1.369,340,1.439,341,1.849,342,1.976,343,2.044,344,2.547,345,1.976,346,1.369,347,1.976,348,1.369,349,1.415,350,1.976,351,1.369,352,1.849,353,1.976,354,1.849,355,1.976,356,1.369,357,1.439,358,1.369,359,1.369,360,1.439,361,1.369,362,1.439,363,2.311,364,2.257,365,1.88,366,1.439,367,1.369,368,1.976,369,1.369,370,1.439,371,1.369,372,1.439,373,1.392,374,1.439,375,1.369,376,1.439,377,1.369,378,1.439,379,1.369,380,1.347,381,1.282,382,1.369,383,1.347,384,1.392,385,1.369,386,1.439,387,1.369,388,1.392,389,1.439,390,1.849,391,1.369,392,1.439,393,1.439,436,3.468,461,0.865,495,1.147,566,1.415,941,2.544,969,1.943,1097,2.727,1562,4.762,1714,4.532,1832,4.162,2021,2.566,2669,3.922,2686,5.849,2709,6.151,3083,5.755,3084,3.922,3085,6.622,3086,7.192,3087,6.151,3088,5.386,3089,8.058,3090,4.772,3091,8.058,3092,4.772,3093,7.538,3094,4.762,3095,4.772,3096,6.554,3097,3.922,3098,4.259,3099,4.772,3100,4.772]],["title/modules/InfoButtonModule.html",[397,0.746,2701,3.567]],["body/modules/InfoButtonModule.html",[3,0.094,4,0.073,5,0.073,6,0.056,11,0.004,17,0.006,23,0.073,99,0.005,100,0.004,150,0.29,151,0.625,179,0.146,204,1.995,317,1.092,363,2.879,397,1.057,399,1.995,400,1.995,401,2.7,402,2.028,403,2.028,404,2.7,415,6.672,419,2.357,420,1.839,422,2.562,423,2.519,424,4.367,425,3.279,436,5.054,437,6.208,534,2.793,535,2.285,2336,6.208,2701,7.197,2709,5.715,3083,5.348,3101,6.208,3102,6.208,3103,6.955,3104,6.208,3105,6.955]],["title/components/InfoDialogComponent.html",[101,0.588,365,1.408]],["body/components/InfoDialogComponent.html",[0,0.373,3,0.094,4,0.033,5,0.062,6,0.057,8,0.808,11,0.002,12,0.404,13,0.547,17,0.006,19,0.475,23,0.033,29,3.828,33,1.266,36,2.281,47,1.354,48,1.408,49,0.977,52,2.848,53,0.654,55,0.842,65,1.562,79,2.848,83,3.189,87,0.5,89,2.453,99,0.003,100,0.004,101,1.073,102,1.36,103,1.159,104,0.828,105,0.899,106,0.945,107,0.842,114,1.897,117,2.763,118,2.248,120,1.338,122,1.383,128,1.391,129,1.274,131,1.505,136,0.765,147,3.189,148,0.929,150,0.147,151,0.282,169,0.899,173,0.899,177,1.36,179,0.066,180,2.185,181,1.612,183,1.071,193,0.856,195,4.064,197,1.584,199,1.579,205,0.86,216,1.584,224,1.481,225,2.949,248,2.671,252,1.467,271,1.53,275,1.835,279,2.475,283,1.148,284,2.706,285,2.771,286,2.84,289,2.99,290,1.177,291,1.409,292,3.531,293,2.011,297,1.594,298,1.638,301,1.348,302,1.266,308,1.735,309,1.638,317,0.492,318,1.275,319,1.296,320,0.945,321,1.99,322,0.945,323,1.454,324,0.884,325,1.383,326,1.454,327,0.899,328,0.945,329,0.899,330,0.945,331,0.899,332,1.354,333,0.945,334,0.899,335,0.914,336,0.945,337,0.899,338,0.945,339,0.899,340,0.945,341,1.36,342,1.454,343,1.605,344,2.149,345,1.454,346,0.899,347,1.454,348,0.899,349,0.929,350,1.454,351,0.899,352,1.36,353,1.454,354,1.36,355,1.454,356,0.899,357,0.945,358,0.899,359,0.899,360,0.945,361,0.899,362,0.945,363,0.899,364,1.772,365,1.893,366,0.945,367,0.899,368,1.454,369,0.899,370,0.945,371,0.899,372,0.945,373,0.914,374,0.945,375,0.899,376,0.945,377,0.899,378,0.945,379,0.899,380,0.884,381,0.842,382,0.899,383,0.884,384,0.914,385,0.899,386,0.945,387,0.899,388,0.914,389,0.945,390,1.36,391,0.899,392,0.945,393,0.945,436,5.178,461,0.568,475,1.702,495,0.753,517,1.735,518,1.79,523,2.969,566,1.43,588,1.514,644,2.671,645,1.292,688,2.246,848,2.593,849,3.062,891,4.977,900,3.062,941,2.281,972,5.691,973,3.334,1159,3.962,1220,3.45,1282,3.062,1371,3.962,1375,4.445,1400,2.574,1562,3.503,1597,5.423,1720,6.159,1785,2.072,1787,2.796,1822,3.503,1833,4.779,2162,5.89,2257,3.503,2317,5.353,2321,2.276,2547,3.334,2694,2.796,2879,2.276,2936,3.962,3010,4.303,3083,5.479,3085,6.65,3093,7.911,3097,2.574,3106,3.133,3107,4.821,3108,3.334,3109,4.821,3110,4.821,3111,5.877,3112,4.821,3113,7.125,3114,3.133,3115,7.125,3116,3.133,3117,5.877,3118,5.245,3119,5.877,3120,3.133,3121,4.821,3122,3.133,3123,3.133,3124,1.79,3125,3.133,3126,3.133,3127,8.092,3128,6.6,3129,7.525,3130,4.821,3131,4.821,3132,4.821,3133,4.821,3134,4.821,3135,4.821,3136,4.821,3137,4.821,3138,3.062,3139,4.821,3140,4.821,3141,4.303,3142,4.821,3143,4.821,3144,4.821,3145,4.821,3146,4.821,3147,6.184,3148,6.184,3149,5.423,3150,4.821,3151,4.821,3152,4.821,3153,4.821,3154,4.821,3155,4.303,3156,5.89,3157,4.821,3158,6.6,3159,6.6,3160,6.6,3161,5.89,3162,4.821,3163,6.6,3164,4.821,3165,3.962,3166,4.303,3167,4.821,3168,4.821,3169,4.821,3170,5.423,3171,6.65,3172,3.707,3173,6.6,3174,4.821,3175,4.821,3176,4.303,3177,4.821,3178,3.962,3179,4.821,3180,3.189,3181,4.821,3182,4.821,3183,4.821,3184,4.821,3185,4.821,3186,3.707,3187,4.821,3188,4.821,3189,4.821,3190,4.821,3191,4.303,3192,4.303,3193,4.303,3194,4.821,3195,4.821,3196,4.821,3197,4.821,3198,4.821,3199,4.821,3200,4.303,3201,6.997,3202,4.821,3203,3.962,3204,4.821,3205,4.821,3206,4.821,3207,4.821,3208,4.303,3209,4.303,3210,4.821,3211,4.821,3212,4.821,3213,4.821,3214,4.821,3215,4.821,3216,4.821,3217,4.821,3218,4.821,3219,4.821,3220,4.821,3221,4.821,3222,4.821,3223,6.6,3224,4.821,3225,4.303,3226,4.303,3227,4.821,3228,3.133,3229,4.821,3230,3.133,3231,3.133,3232,3.133,3233,3.133]],["title/modules/InfoDialogModule.html",[397,0.746,415,3.395]],["body/modules/InfoDialogModule.html",[3,0.089,4,0.074,5,0.074,6,0.057,11,0.004,17,0.006,23,0.074,99,0.005,100,0.004,150,0.291,151,0.635,179,0.148,204,2.026,317,1.109,365,2.884,397,1.073,399,2.026,400,2.026,401,2.718,402,2.06,403,2.06,404,2.718,415,6.767,419,2.379,420,1.868,422,2.166,423,2.542,424,4.407,425,3.33,436,5.132,534,2.819,535,2.32,3083,5.43,3097,5.804,3098,6.303,3234,6.303,3235,6.303,3236,6.303,3237,7.062,3238,8.431]],["title/classes/InitializationState.html",[179,0.103,3239,3.774]],["body/classes/InitializationState.html",[3,0.027,4,0.027,5,0.027,6,0.059,8,0.358,11,0.002,12,0.179,13,0.472,17,0.006,18,0.743,19,0.562,20,1.319,23,0.027,46,1.69,53,0.58,68,2.95,82,1.963,95,3.248,99,0.003,100,0.002,101,0.832,103,0.625,105,0.746,114,2.415,117,0.722,118,0.926,120,0.722,122,0.746,125,1.681,127,1.187,129,1.343,131,1.067,141,2.739,145,2.101,146,1.59,150,0.199,151,0.234,153,1.009,177,1.47,179,0.109,180,0.797,181,0.869,183,1.623,193,1.137,194,3.059,197,0.926,199,1.119,205,1.535,215,4.262,216,1.712,219,1.181,223,3.026,225,2.548,233,0.952,236,1.418,247,1.869,252,1.886,277,2.407,281,2.312,284,2.876,290,0.635,299,1.197,312,2.645,318,1.101,319,1.963,420,1.101,456,1.289,461,1.261,475,2.103,483,0.971,495,1.001,496,1.44,497,1.039,505,2.727,520,1.486,551,2.601,596,2.743,643,3.518,645,3.445,662,2.538,688,0.885,701,2.105,748,4.337,749,2.809,752,2.517,814,1.009,815,2.645,820,1.651,832,2.063,836,2.645,857,1.486,859,1.359,880,2.38,904,3.026,941,1.616,965,2.456,969,0.771,1209,1.256,1388,3.405,1456,2.137,1550,3.62,1566,1.226,1567,1.226,1579,1.226,1691,1.874,1714,1.798,1715,1.009,1727,1.798,1728,2.582,1822,1.889,1833,2.645,1836,1.798,1858,1.964,1859,1.999,1861,2.022,1864,2.105,1867,3.309,1869,1.226,1873,1.798,1874,2.548,1875,2.548,1878,1.682,1879,1.59,1882,2.022,1884,1.999,1886,1.651,1888,1.651,1890,2.548,1894,1.59,1897,1.754,1899,1.44,1912,2.645,1913,1.651,1916,3.026,1920,1.536,1934,4.082,1935,4.082,1939,1.536,1940,1.59,1944,1.44,1945,1.798,1946,1.999,1947,1.798,1948,1.651,1951,3.202,1956,1.651,1990,1.999,2007,1.798,2010,1.798,2016,4.173,2019,1.651,2020,1.999,2021,2.24,2022,1.999,2023,1.889,2038,1.798,2042,3.316,2044,2.119,2045,1.44,2062,2.88,2090,4.317,2095,3.077,2259,1.889,2263,1.398,2264,2.645,2274,2.307,2370,5.012,2437,1.798,2469,1.999,3048,6.02,3108,3.603,3239,4.006,3240,2.321,3241,3.717,3242,4.65,3243,6.519,3244,5.317,3245,5.317,3246,3.717,3247,4.65,3248,2.6,3249,2.6,3250,2.6,3251,2.6,3252,2.6,3253,2.6,3254,4.65,3255,2.321,3256,2.321,3257,2.137,3258,4.281,3259,6.002,3260,4.281,3261,4.281,3262,5.715,3263,4.281,3264,5.356,3265,3.422,3266,4.281,3267,5.317,3268,3.717,3269,5.317,3270,3.717,3271,2.321,3272,1.999,3273,2.321,3274,2.321,3275,2.321,3276,2.321,3277,2.321,3278,2.321,3279,2.321,3280,3.717,3281,2.321,3282,3.717,3283,2.321,3284,2.321,3285,2.321,3286,1.999,3287,5.818,3288,2.321,3289,2.321,3290,2.321,3291,4.006,3292,1.999,3293,3.202,3294,3.717,3295,2.321,3296,6.207,3297,2.321,3298,3.717,3299,2.321,3300,2.321,3301,2.321,3302,4.65,3303,2.321,3304,2.321,3305,2.321,3306,2.321,3307,4.65,3308,2.321,3309,2.321,3310,3.202,3311,2.321,3312,2.321,3313,2.321,3314,6.207,3315,3.717,3316,5.317,3317,3.717,3318,3.717,3319,2.321,3320,4.65,3321,3.717,3322,2.321,3323,2.321,3324,2.321,3325,3.717,3326,3.717,3327,2.321,3328,2.321,3329,4.65,3330,2.321,3331,2.321,3332,2.321,3333,2.321,3334,2.321,3335,2.321,3336,1.999,3337,2.321,3338,2.321,3339,2.321,3340,4.58,3341,4.65,3342,5.317,3343,3.717,3344,3.717,3345,2.321,3346,2.321,3347,2.321,3348,2.321,3349,2.321,3350,2.321,3351,1.999,3352,1.999,3353,2.321,3354,6.207,3355,3.717,3356,2.321,3357,2.321,3358,2.321,3359,2.321,3360,2.321,3361,2.321,3362,2.321,3363,2.321,3364,1.536,3365,2.321,3366,2.321,3367,3.717,3368,2.321,3369,2.321,3370,2.321,3371,2.321,3372,2.321,3373,2.321,3374,3.717,3375,4.65,3376,2.321,3377,2.321,3378,3.717,3379,2.321,3380,2.321,3381,4.65,3382,4.65,3383,4.65,3384,4.281,3385,2.321,3386,4.65,3387,4.65,3388,2.321,3389,2.321]],["title/classes/InitializationState-1.html",[179,0.086,253,0.885,3239,3.159]],["body/classes/InitializationState-1.html",[3,0.027,4,0.027,5,0.027,6,0.059,8,0.358,11,0.002,12,0.179,13,0.472,17,0.006,18,0.743,19,0.562,20,1.319,23,0.027,46,1.69,53,0.58,68,2.95,82,1.963,95,3.248,99,0.003,100,0.002,101,0.832,103,0.625,105,0.746,114,2.415,117,0.722,118,0.926,120,0.722,122,0.746,125,1.681,127,1.187,129,1.343,131,1.067,141,2.739,145,2.101,146,1.59,150,0.199,151,0.234,153,1.009,177,1.47,179,0.109,180,0.797,181,0.869,183,1.623,193,1.137,194,3.059,197,0.926,199,1.119,205,1.535,215,4.262,216,1.712,219,1.181,223,3.026,225,2.548,233,0.952,236,1.418,247,1.869,252,1.886,277,2.407,281,2.312,284,2.876,290,0.635,299,1.197,312,2.645,318,1.101,319,1.963,420,1.101,456,1.289,461,1.261,475,2.103,483,0.971,495,1.001,496,1.44,497,1.039,505,2.727,520,1.486,551,2.601,596,2.743,643,3.518,645,3.445,662,2.538,688,0.885,701,2.105,748,4.337,749,2.809,752,2.517,814,1.009,815,2.645,820,1.651,832,2.063,836,2.645,857,1.486,859,1.359,880,2.38,904,3.026,941,1.616,965,2.456,969,0.771,1209,1.256,1388,3.405,1456,2.137,1550,3.62,1566,1.226,1567,1.226,1579,1.226,1691,1.874,1714,1.798,1715,1.009,1727,1.798,1728,2.582,1822,1.889,1833,2.645,1836,1.798,1858,1.964,1859,1.999,1861,2.022,1864,2.105,1867,3.309,1869,1.226,1873,1.798,1874,2.548,1875,2.548,1878,1.682,1879,1.59,1882,2.022,1884,1.999,1886,1.651,1888,1.651,1890,2.548,1894,1.59,1897,1.754,1899,1.44,1912,2.645,1913,1.651,1916,3.026,1920,1.536,1934,4.082,1935,4.082,1939,1.536,1940,1.59,1944,1.44,1945,1.798,1946,1.999,1947,1.798,1948,1.651,1951,3.202,1956,1.651,1990,1.999,2007,1.798,2010,1.798,2016,4.173,2019,1.651,2020,1.999,2021,2.24,2022,1.999,2023,1.889,2038,1.798,2042,3.316,2044,2.119,2045,1.44,2062,2.88,2090,4.317,2095,3.077,2259,1.889,2263,1.398,2264,2.645,2274,2.307,2370,5.012,2437,1.798,2469,1.999,3048,6.02,3108,3.603,3239,4.006,3241,3.717,3242,4.65,3243,6.519,3244,5.317,3245,5.317,3246,3.717,3247,4.65,3254,4.65,3255,2.321,3256,2.321,3257,2.137,3258,4.281,3259,6.002,3260,4.281,3261,4.281,3262,5.715,3263,4.281,3264,5.356,3265,3.422,3266,4.281,3267,5.317,3268,3.717,3269,5.317,3270,3.717,3271,2.321,3272,1.999,3273,2.321,3274,2.321,3275,2.321,3276,2.321,3277,2.321,3278,2.321,3279,2.321,3280,3.717,3281,2.321,3282,3.717,3283,2.321,3284,2.321,3285,2.321,3286,1.999,3287,5.818,3288,2.321,3289,2.321,3290,2.321,3291,4.006,3292,1.999,3293,3.202,3294,3.717,3295,2.321,3296,6.207,3297,2.321,3298,3.717,3299,2.321,3300,2.321,3301,2.321,3302,4.65,3303,2.321,3304,2.321,3305,2.321,3306,2.321,3307,4.65,3308,2.321,3309,2.321,3310,3.202,3311,2.321,3312,2.321,3313,2.321,3314,6.207,3315,3.717,3316,5.317,3317,3.717,3318,3.717,3319,2.321,3320,4.65,3321,3.717,3322,2.321,3323,2.321,3324,2.321,3325,3.717,3326,3.717,3327,2.321,3328,2.321,3329,4.65,3330,2.321,3331,2.321,3332,2.321,3333,2.321,3334,2.321,3335,2.321,3336,1.999,3337,2.321,3338,2.321,3339,2.321,3340,4.58,3341,4.65,3342,5.317,3343,3.717,3344,3.717,3345,2.321,3346,2.321,3347,2.321,3348,2.321,3349,2.321,3350,2.321,3351,1.999,3352,1.999,3353,2.321,3354,6.207,3355,3.717,3356,2.321,3357,2.321,3358,2.321,3359,2.321,3360,2.321,3361,2.321,3362,2.321,3363,2.321,3364,1.536,3365,2.321,3366,2.321,3367,3.717,3368,2.321,3369,2.321,3370,2.321,3371,2.321,3372,2.321,3373,2.321,3374,3.717,3375,4.65,3376,2.321,3377,2.321,3378,3.717,3379,2.321,3380,2.321,3381,4.65,3382,4.65,3383,4.65,3384,4.281,3385,2.321,3386,4.65,3387,4.65,3388,2.321,3389,2.321,3390,2.321,3391,2.6,3392,2.6,3393,2.6,3394,2.6,3395,2.6,3396,2.6]],["title/interfaces/JsonOntologyNode.html",[0,0.243,2778,3.395]],["body/interfaces/JsonOntologyNode.html",[0,0.434,2,1.2,3,0.056,4,0.056,5,0.056,6,0.043,8,0.731,11,0.003,12,0.365,13,0.799,15,2.93,16,1.242,17,0.006,19,0.639,20,1.822,22,4.035,23,0.089,28,2.209,51,2.683,53,0.976,65,1.794,87,1.125,99,0.004,100,0.003,150,0.215,154,2.859,183,1.182,216,2.959,219,1.402,247,1.11,461,0.964,568,2.907,601,4.332,614,2.736,620,4.195,848,4.529,1388,5.636,2624,3.791,2637,3.517,2770,6.925,2771,4.369,2772,4.369,2773,7.316,2774,6.921,2775,3.517,2776,7.065,2777,5.793,2778,5.469,2779,7.201,2780,7.201,2781,6.12,2782,7.201,2783,4.369,2784,7.201,2785,7.201,2786,5.793,2787,4.369,2788,4.369,2789,6.499,2790,4.369,2791,4.369,2792,4.369,2793,4.369,2794,5.793,2795,4.369,2796,4.369,2797,4.369,2798,4.369,2799,4.369,2800,4.369,2801,4.369,2802,3.863,2803,3.863,2804,5.793,2805,4.369,2806,4.369,2807,4.369,2808,4.369,2809,4.369,2810,3.677,2811,4.369]],["title/components/LeftSidebarComponent.html",[101,0.588,367,1.408]],["body/components/LeftSidebarComponent.html",[3,0.082,4,0.055,5,0.055,6,0.063,11,0.003,12,0.357,17,0.006,23,0.055,47,1.653,48,1.674,53,0.773,55,1.396,65,1.557,99,0.004,100,0.005,101,0.936,102,1.959,103,1.669,104,1.374,105,1.49,106,1.567,107,1.396,114,2.255,117,2.841,118,2.274,120,1.927,122,1.991,128,1.229,129,1.34,136,1.269,148,1.541,150,0.159,151,0.467,169,1.49,173,1.49,177,1.959,179,0.109,193,2.594,197,1.543,199,1.396,205,1.239,224,1.971,290,1.695,293,1.466,317,0.816,318,1.836,319,1.866,320,1.567,321,2.516,322,1.567,323,2.093,324,1.466,325,1.49,326,2.093,327,1.49,328,1.567,329,1.49,330,1.567,331,1.49,332,1.586,333,1.567,334,1.49,335,1.515,336,1.567,337,1.49,338,1.567,339,1.49,340,1.567,341,1.959,342,2.093,343,2.135,344,2.622,345,2.093,346,1.49,347,2.093,348,1.49,349,1.541,350,2.093,351,1.49,352,1.959,353,2.093,354,1.959,355,2.093,356,1.49,357,1.567,358,1.49,359,1.49,360,1.567,361,1.49,362,1.567,363,1.49,364,2.358,365,1.49,366,1.567,367,2.394,368,2.093,369,1.49,370,1.567,371,1.49,372,1.567,373,1.515,374,1.567,375,1.49,376,1.567,377,1.49,378,1.567,379,1.49,380,1.466,381,1.396,382,1.49,383,1.466,384,1.515,385,1.49,386,1.567,387,1.49,388,1.515,389,1.567,390,1.959,391,1.49,392,1.567,393,1.567,461,0.942,566,2.318,814,2.694,1566,3.273,1567,3.273,1579,2.45,2896,6.858,3397,6.978,3398,6.978,3399,4.638,3400,6.012,3401,6.978,3402,6.196,3403,6.416,3404,4.638,3405,5.196,3406,6.942]],["title/modules/LeftSidebarModule.html",[397,0.746,3407,3.774]],["body/modules/LeftSidebarModule.html",[3,0.076,4,0.076,5,0.076,6,0.057,11,0.004,17,0.006,23,0.076,99,0.005,100,0.004,150,0.277,151,0.645,179,0.15,193,1.959,204,2.058,317,1.126,367,2.89,397,1.09,399,2.058,400,2.058,401,2.736,402,2.092,403,2.092,404,2.736,419,2.401,420,1.897,422,2.2,423,2.566,534,2.845,535,2.357,3397,6.402,3398,6.402,3407,7.547,3408,6.402,3409,6.402,3410,6.402,3411,6.402,3412,6.402]],["title/interfaces/ListResult.html",[0,0.243,26,2.433]],["body/interfaces/ListResult.html",[0,0.442,1,2.559,2,1.074,3,0.05,4,0.05,5,0.05,6,0.038,7,3.291,8,1.16,9,3.738,10,4.923,11,0.006,12,0.327,13,0.742,14,3.291,15,3.123,16,1.595,17,0.006,18,1.594,19,0.797,20,1.324,21,3.291,22,2.191,23,0.092,24,3.363,25,4.001,26,3.704,27,3.683,28,2.267,29,3.327,30,4.523,31,5.566,32,4.154,33,2.642,34,4.188,35,5.566,36,2.093,37,4.923,38,5.566,39,5.566,40,5.323,41,5.111,42,4.944,43,4.944,44,4.747,45,4.947,46,1.707,47,1.42,48,0.89,49,1.484,50,3.623,51,1.811,52,2.811,53,0.53,54,3.147,55,1.758,56,2.811,57,2.911,58,3.147,59,4.326,60,4.001,61,4.154,62,4.154,63,4.572,64,4.944,65,1.303,66,3.518,67,4.001,68,1.711,69,1.811,70,2.559,71,2.72,72,2.636,73,2.59,74,2.811,75,4.154,76,3.022,77,3.022,78,4.001,79,3.863,80,2.72,81,3.147,82,1.279,83,2.299,84,2.811,85,3.022,86,3.147,87,1.545,88,3.291,89,2.421,90,3.022,91,3.147,92,2.244,93,2.943,94,2.911,95,2.959,96,2.911,97,1.962,98,3.147,99,0.004,100,0.003]],["title/interfaces/Message.html",[0,0.243,1882,1.905]],["body/interfaces/Message.html",[0,0.311,2,1.012,3,0.047,4,0.102,5,0.047,6,0.036,8,0.617,11,0.003,12,0.308,13,0.712,17,0.006,18,1.473,19,0.692,23,0.09,27,3.235,28,2.057,36,1.557,46,0.907,69,1.706,73,1.554,82,1.205,87,1.001,97,1.849,99,0.004,100,0.003,104,1.915,119,2.761,125,2.043,127,0.893,131,1.148,137,4.825,145,1.148,150,0.221,151,0.403,153,1.74,156,1.811,179,0.132,180,2.221,181,1.499,183,2.024,194,3.185,205,1.12,219,0.923,247,1.724,252,0.996,461,1.497,497,1.174,551,2.375,566,1.329,577,4.101,620,3.632,688,2.99,701,1.811,814,1.74,848,2.411,916,2.648,931,3.375,969,2.658,978,2.483,1016,1.929,1080,4.142,1248,3.684,1308,3.375,1715,1.74,1728,3.588,1858,2.959,1861,2.436,1864,3.728,1869,2.114,1877,1.849,1878,3.768,1882,3.896,1897,2.643,1899,2.483,1926,2.483,1944,3.477,1999,2.483,2045,3.477,2077,4.135,2084,4.507,2115,3.839,2127,2.026,2149,3.587,2263,2.411,2274,2.483,2332,2.742,2333,3.839,2986,4.633,3051,2.742,3124,2.562,3364,2.648,3413,3.447,3414,3.986,3415,3.707,3416,2.847,3417,2.847,3418,5.244,3419,4.277,3420,2.847,3421,3.986,3422,2.648,3423,2.847,3424,2.847,3425,3.986,3426,2.847,3427,2.648,3428,2.847,3429,2.847,3430,2.847,3431,3.986,3432,2.847,3433,2.847,3434,2.847,3435,2.847,3436,3.839,3437,2.847,3438,3.986,3439,2.648,3440,2.847,3441,2.847,3442,2.847,3443,2.847,3444,2.847,3445,2.847,3446,4.599,3447,2.847,3448,2.847,3449,2.847,3450,2.847,3451,2.847,3452,2.847,3453,2.847,3454,2.847]],["title/interfaces/Message-1.html",[0,0.203,253,0.885,1882,1.594]],["body/interfaces/Message-1.html",[0,0.311,2,1.012,3,0.047,4,0.102,5,0.047,6,0.036,8,0.617,11,0.003,12,0.308,13,0.712,17,0.006,18,1.473,19,0.692,23,0.09,27,3.235,28,2.057,36,1.557,46,0.907,69,1.706,73,1.554,82,1.205,87,1.001,97,1.849,99,0.004,100,0.003,104,1.915,119,2.761,125,2.043,127,0.893,131,1.148,137,4.825,145,1.148,150,0.221,151,0.403,153,1.74,156,1.811,179,0.132,180,2.221,181,1.499,183,2.024,194,3.185,205,1.12,219,0.923,247,1.724,252,0.996,461,1.497,497,1.174,551,2.375,566,1.329,577,4.101,620,3.632,688,2.99,701,1.811,814,1.74,848,2.411,916,2.648,931,3.375,969,2.658,978,2.483,1016,1.929,1080,4.142,1248,3.684,1308,3.375,1715,1.74,1728,3.588,1858,2.959,1861,2.436,1864,3.728,1869,2.114,1877,1.849,1878,3.768,1882,3.896,1897,2.643,1899,2.483,1926,2.483,1944,3.477,1999,2.483,2045,3.477,2077,4.135,2084,4.507,2115,3.839,2127,2.026,2149,3.587,2263,2.411,2274,2.483,2332,2.742,2333,3.839,2986,4.633,3051,2.742,3124,2.562,3364,2.648,3414,3.986,3415,3.707,3416,2.847,3417,2.847,3418,5.244,3419,4.277,3420,2.847,3421,3.986,3422,2.648,3423,2.847,3424,2.847,3425,3.986,3426,2.847,3427,2.648,3428,2.847,3429,2.847,3430,2.847,3431,3.986,3432,2.847,3433,2.847,3434,2.847,3435,2.847,3436,3.839,3437,2.847,3438,3.986,3439,2.648,3440,2.847,3441,2.847,3442,2.847,3443,2.847,3444,2.847,3445,2.847,3446,4.599,3447,2.847,3448,2.847,3449,2.847,3450,2.847,3451,2.847,3452,2.847,3453,2.847,3454,2.847,3455,3.447]],["title/classes/MessageChannel.html",[179,0.103,1897,2.067]],["body/classes/MessageChannel.html",[0,0.284,3,0.042,4,0.101,5,0.042,6,0.069,8,1.082,11,0.002,12,0.272,13,0.65,17,0.006,18,1.464,19,0.701,20,0.8,23,0.086,27,3.244,28,1.781,36,0.98,46,0.8,53,0.825,69,1.504,73,1.37,82,1.062,87,1.309,97,2.365,99,0.003,100,0.002,104,1.786,119,2.523,125,1.905,127,1.143,129,1.635,131,1.469,137,4.991,145,1.012,150,0.206,151,0.355,153,1.534,156,1.596,179,0.12,180,2.413,181,1.321,183,1.965,194,3.61,197,1.275,205,1.205,219,0.843,247,1.642,252,1.275,456,1.958,461,1.628,495,1.781,497,1.167,551,2.493,566,1.701,577,4.426,620,3.461,688,3.096,701,2.728,814,1.534,848,3.085,916,2.334,931,2.125,969,2.572,978,2.189,1016,1.7,1080,3.992,1248,4.175,1308,3.085,1715,1.534,1728,4.067,1858,2.704,1861,2.226,1864,3.75,1869,1.863,1877,2.365,1878,3.888,1882,3.886,1897,2.844,1899,2.189,1926,2.189,1944,3.177,1999,3.177,2045,3.177,2077,4.191,2084,4.395,2115,3.509,2127,1.852,2149,3.278,2189,3.247,2263,3.085,2274,2.189,2332,2.417,2333,3.509,2986,4.647,3051,2.417,3124,2.258,3364,3.388,3413,3.038,3414,2.51,3415,3.388,3416,2.51,3417,2.51,3418,4.996,3419,3.988,3420,2.51,3421,3.643,3422,2.334,3423,2.51,3424,3.643,3425,4.996,3426,3.643,3427,3.388,3428,3.643,3429,2.51,3430,2.51,3431,3.643,3432,3.643,3433,3.643,3434,4.705,3435,2.51,3436,4.532,3437,3.643,3438,3.643,3439,3.388,3440,3.643,3441,2.51,3442,4.705,3443,2.51,3444,2.51,3445,2.51,3446,4.288,3447,2.51,3448,2.51,3449,2.51,3450,2.51,3451,2.51,3452,2.51,3453,2.51,3454,2.51,3456,3.038,3457,5.119,3458,5.119,3459,5.119,3460,5.736,3461,3.952,3462,3.952,3463,3.952,3464,3.952,3465,3.952]],["title/classes/MessageChannel-1.html",[179,0.086,253,0.885,1897,1.73]],["body/classes/MessageChannel-1.html",[0,0.284,3,0.042,4,0.101,5,0.042,6,0.069,8,1.082,11,0.002,12,0.272,13,0.65,17,0.006,18,1.464,19,0.701,20,0.8,23,0.086,27,3.244,28,1.781,36,0.98,46,0.8,53,0.825,69,1.504,73,1.37,82,1.062,87,1.309,97,2.365,99,0.003,100,0.002,104,1.786,119,2.523,125,1.905,127,1.143,129,1.635,131,1.469,137,4.991,145,1.012,150,0.206,151,0.355,153,1.534,156,1.596,179,0.12,180,2.413,181,1.321,183,1.965,194,3.61,197,1.275,205,1.205,219,0.843,247,1.642,252,1.275,456,1.958,461,1.628,495,1.781,497,1.167,551,2.493,566,1.701,577,4.426,620,3.461,688,3.096,701,2.728,814,1.534,848,3.085,916,2.334,931,2.125,969,2.572,978,2.189,1016,1.7,1080,3.992,1248,4.175,1308,3.085,1715,1.534,1728,4.067,1858,2.704,1861,2.226,1864,3.75,1869,1.863,1877,2.365,1878,3.888,1882,3.886,1897,2.844,1899,2.189,1926,2.189,1944,3.177,1999,3.177,2045,3.177,2077,4.191,2084,4.395,2115,3.509,2127,1.852,2149,3.278,2189,3.247,2263,3.085,2274,2.189,2332,2.417,2333,3.509,2986,4.647,3051,2.417,3124,2.258,3364,3.388,3414,2.51,3415,3.388,3416,2.51,3417,2.51,3418,4.996,3419,3.988,3420,2.51,3421,3.643,3422,2.334,3423,2.51,3424,3.643,3425,4.996,3426,3.643,3427,3.388,3428,3.643,3429,2.51,3430,2.51,3431,3.643,3432,3.643,3433,3.643,3434,4.705,3435,2.51,3436,4.532,3437,3.643,3438,3.643,3439,3.388,3440,3.643,3441,2.51,3442,4.705,3443,2.51,3444,2.51,3445,2.51,3446,4.288,3447,2.51,3448,2.51,3449,2.51,3450,2.51,3451,2.51,3452,2.51,3453,2.51,3454,2.51,3455,3.038,3456,3.038,3457,5.119,3458,5.119,3459,5.119,3466,5.736,3467,3.952,3468,3.952,3469,3.952,3470,3.952,3471,3.952]],["title/injectables/MessageService.html",[1861,1.905,2127,1.585]],["body/injectables/MessageService.html",[0,0.298,3,0.044,4,0.1,5,0.044,6,0.067,8,0.963,11,0.003,12,0.29,13,0.681,17,0.006,18,1.25,19,0.678,20,0.853,23,0.088,27,2.888,28,1.683,36,1.046,46,0.853,53,0.669,69,1.605,73,1.461,82,1.133,87,1.218,97,1.739,99,0.004,100,0.003,104,1.852,119,2.644,125,1.976,127,1.197,129,1.558,131,1.08,137,4.811,145,1.08,150,0.214,151,0.379,153,1.636,156,1.703,179,0.126,180,2.341,181,2.01,183,1.996,194,3.08,197,1.336,205,1.25,219,0.884,247,1.685,252,0.937,461,1.565,495,1.445,497,1.228,551,2.529,566,1.782,577,4.218,620,3.882,688,2.938,701,1.703,814,1.636,848,2.267,892,4.939,916,3.55,931,2.267,969,2.76,978,2.336,1016,3.013,1080,3.804,1248,3.562,1308,3.766,1715,2.332,1728,3.47,1858,2.834,1861,3.132,1864,3.821,1869,3.599,1877,1.739,1878,3.821,1882,3.889,1897,2.949,1899,3.329,1926,3.329,1944,3.329,1999,2.336,2045,3.329,2077,4.053,2084,4.264,2115,3.676,2127,1.94,2128,2.267,2149,3.435,2263,2.267,2274,3.329,2332,2.579,2333,3.676,2986,4.136,3051,3.676,3124,2.41,3364,2.49,3413,3.242,3414,2.678,3415,3.55,3416,2.678,3417,2.678,3418,5.327,3419,4.766,3420,2.678,3421,3.817,3422,2.49,3423,2.678,3424,2.678,3425,3.817,3426,2.678,3427,2.49,3428,2.678,3429,2.678,3430,2.678,3431,3.817,3432,2.678,3433,2.678,3434,2.678,3435,2.678,3436,3.676,3437,2.678,3438,3.817,3439,2.49,3440,2.678,3441,2.678,3442,2.678,3443,2.678,3444,2.678,3445,2.678,3446,4.447,3447,2.678,3448,2.678,3449,2.678,3450,2.678,3451,3.817,3452,2.678,3453,3.817,3454,2.678,3456,3.242,3472,3.763,3473,6.01,3474,4.216,3475,4.216,3476,4.216]],["title/injectables/MessageService-1.html",[253,0.885,1861,1.594,2127,1.326]],["body/injectables/MessageService-1.html",[0,0.298,3,0.044,4,0.1,5,0.044,6,0.067,8,0.963,11,0.003,12,0.29,13,0.681,17,0.006,18,1.25,19,0.678,20,0.853,23,0.088,27,2.888,28,1.683,36,1.046,46,0.853,53,0.669,69,1.605,73,1.461,82,1.133,87,1.218,97,1.739,99,0.004,100,0.003,104,1.852,119,2.644,125,1.976,127,1.197,129,1.558,131,1.08,137,4.811,145,1.08,150,0.214,151,0.379,153,1.636,156,1.703,179,0.126,180,2.341,181,2.01,183,1.996,194,3.08,197,1.336,205,1.25,219,0.884,247,1.685,252,0.937,461,1.565,495,1.445,497,1.228,551,2.529,566,1.782,577,4.218,620,3.882,688,2.938,701,1.703,814,1.636,848,2.267,892,4.939,916,3.55,931,2.267,969,2.76,978,2.336,1016,3.013,1080,3.804,1248,3.562,1308,3.766,1715,2.332,1728,3.47,1858,2.834,1861,3.132,1864,3.821,1869,3.599,1877,1.739,1878,3.821,1882,3.889,1897,2.949,1899,3.329,1926,3.329,1944,3.329,1999,2.336,2045,3.329,2077,4.053,2084,4.264,2115,3.676,2127,1.94,2128,2.267,2149,3.435,2263,2.267,2274,3.329,2332,2.579,2333,3.676,2986,4.136,3051,3.676,3124,2.41,3364,2.49,3414,2.678,3415,3.55,3416,2.678,3417,2.678,3418,5.327,3419,4.766,3420,2.678,3421,3.817,3422,2.49,3423,2.678,3424,2.678,3425,3.817,3426,2.678,3427,2.49,3428,2.678,3429,2.678,3430,2.678,3431,3.817,3432,2.678,3433,2.678,3434,2.678,3435,2.678,3436,3.676,3437,2.678,3438,3.817,3439,2.49,3440,2.678,3441,2.678,3442,2.678,3443,2.678,3444,2.678,3445,2.678,3446,4.447,3447,2.678,3448,2.678,3449,2.678,3450,2.678,3451,3.817,3452,2.678,3453,3.817,3454,2.678,3455,3.242,3456,3.242,3472,3.763,3477,6.01,3478,4.216,3479,4.216,3480,4.216]],["title/interfaces/MessageServiceConfig.html",[0,0.243,3419,2.899]],["body/interfaces/MessageServiceConfig.html",[0,0.314,2,1.028,3,0.048,4,0.1,5,0.048,6,0.036,8,0.626,11,0.003,12,0.313,13,0.719,17,0.006,18,1.303,19,0.638,23,0.091,27,3.011,28,1.755,36,1.129,46,1.477,69,2.414,73,1.578,82,1.705,87,1.012,97,1.877,99,0.004,100,0.003,104,1.931,119,2.79,125,2.06,127,0.907,131,1.166,137,4.837,145,1.166,150,0.223,151,0.409,153,1.767,156,1.839,179,0.133,180,2.239,181,1.522,183,2.031,194,3.211,205,1.132,219,0.933,247,1.733,252,1.012,461,1.505,497,1.181,551,2.387,566,1.35,577,4.128,620,3.782,688,2.826,701,1.839,814,1.767,848,2.448,916,2.689,931,2.448,969,2.71,978,2.522,1016,1.959,1080,3.915,1248,3.714,1308,3.411,1715,1.767,1728,3.618,1858,2.991,1861,2.462,1864,3.693,1869,2.146,1877,1.877,1878,3.813,1882,3.879,1897,2.672,1899,2.522,1926,2.522,1944,3.514,1999,2.522,2045,3.514,2077,4.012,2084,4.348,2115,3.88,2127,2.048,2149,3.625,2263,2.448,2274,2.522,2332,2.784,2333,3.88,2986,4.312,3051,2.784,3124,2.602,3364,2.689,3413,3.5,3414,2.891,3415,3.747,3416,2.891,3417,2.891,3418,5.461,3419,4.664,3420,4.028,3421,5.273,3422,2.689,3423,2.891,3424,2.891,3425,4.028,3426,2.891,3427,2.689,3428,2.891,3429,2.891,3430,2.891,3431,4.028,3432,2.891,3433,2.891,3434,2.891,3435,2.891,3436,3.88,3437,2.891,3438,4.028,3439,2.689,3440,2.891,3441,2.891,3442,2.891,3443,2.891,3444,2.891,3445,2.891,3446,4.637,3447,2.891,3448,2.891,3449,2.891,3450,2.891,3451,2.891,3452,2.891,3453,2.891,3454,2.891]],["title/interfaces/MessageServiceConfig-1.html",[0,0.203,253,0.885,3419,2.426]],["body/interfaces/MessageServiceConfig-1.html",[0,0.314,2,1.028,3,0.048,4,0.1,5,0.048,6,0.036,8,0.626,11,0.003,12,0.313,13,0.719,17,0.006,18,1.303,19,0.638,23,0.091,27,3.011,28,1.755,36,1.129,46,1.477,69,2.414,73,1.578,82,1.705,87,1.012,97,1.877,99,0.004,100,0.003,104,1.931,119,2.79,125,2.06,127,0.907,131,1.166,137,4.837,145,1.166,150,0.223,151,0.409,153,1.767,156,1.839,179,0.133,180,2.239,181,1.522,183,2.031,194,3.211,205,1.132,219,0.933,247,1.733,252,1.012,461,1.505,497,1.181,551,2.387,566,1.35,577,4.128,620,3.782,688,2.826,701,1.839,814,1.767,848,2.448,916,2.689,931,2.448,969,2.71,978,2.522,1016,1.959,1080,3.915,1248,3.714,1308,3.411,1715,1.767,1728,3.618,1858,2.991,1861,2.462,1864,3.693,1869,2.146,1877,1.877,1878,3.813,1882,3.879,1897,2.672,1899,2.522,1926,2.522,1944,3.514,1999,2.522,2045,3.514,2077,4.012,2084,4.348,2115,3.88,2127,2.048,2149,3.625,2263,2.448,2274,2.522,2332,2.784,2333,3.88,2986,4.312,3051,2.784,3124,2.602,3364,2.689,3414,2.891,3415,3.747,3416,2.891,3417,2.891,3418,5.461,3419,4.664,3420,4.028,3421,5.273,3422,2.689,3423,2.891,3424,2.891,3425,4.028,3426,2.891,3427,2.689,3428,2.891,3429,2.891,3430,2.891,3431,4.028,3432,2.891,3433,2.891,3434,2.891,3435,2.891,3436,3.88,3437,2.891,3438,4.028,3439,2.689,3440,2.891,3441,2.891,3442,2.891,3443,2.891,3444,2.891,3445,2.891,3446,4.637,3447,2.891,3448,2.891,3449,2.891,3450,2.891,3451,2.891,3452,2.891,3453,2.891,3454,2.891,3455,3.5]],["title/interfaces/OMEZarrInfo.html",[0,0.243,1229,3.118]],["body/interfaces/OMEZarrInfo.html",[0,0.375,2,1.34,3,0.096,4,0.08,5,0.063,6,0.048,11,0.004,12,0.408,13,0.859,16,1.481,17,0.006,18,1.488,19,0.75,23,0.096,34,4.474,47,1.585,48,1.417,95,2.999,99,0.005,100,0.004,127,1.183,150,0.181,216,2.489,219,1.334,247,1.895,701,3.06,749,3.571,752,4.385,857,3.393,859,4.992,965,2.8,1209,2.869,1224,5.102,1226,3.507,1227,5.01,1228,4.633,1229,5.58,1230,5.102,1231,5.297,1329,3.632,1937,3.927,2255,4.565,2758,4.106,3186,4.565,3481,4.565,3482,5.3,3483,5.3,3484,6.761,3485,6.854,3486,4.879,3487,4.879,3488,4.879,3489,7.136,3490,4.879,3491,4.879,3492,4.879,3493,4.879,3494,4.879,3495,4.879,3496,5.3,3497,7.445,3498,5.3,3499,4.879,3500,5.3,3501,5.3,3502,5.3,3503,5.3,3504,5.3,3505,5.3,3506,5.3,3507,4.879,3508,5.3,3509,5.3,3510,5.3,3511,5.3,3512,5.3,3513,5.3,3514,5.3,3515,5.3,3516,5.3,3517,5.3,3518,5.3,3519,5.3,3520,5.3]],["title/interfaces/OldRuiData.html",[0,0.243,3521,4.381]],["body/interfaces/OldRuiData.html",[0,0.237,2,1.079,3,0.05,4,0.05,5,0.05,6,0.038,8,0.658,11,0.003,12,0.329,13,0.744,15,2.697,16,1.54,17,0.006,18,1.649,19,0.79,23,0.069,27,3.326,28,1.801,29,4.441,36,2.319,52,4.425,53,0.898,87,0.763,99,0.004,100,0.003,118,1.063,150,0.146,183,1.792,216,2.156,219,1.102,236,2.877,247,1.37,253,1.614,261,4.538,272,1.972,277,2.651,278,3.676,293,1.852,381,1.764,461,1.19,497,0.68,500,5.122,501,4.467,502,3.897,586,5.34,616,2.499,673,2.598,688,2.55,777,3.929,910,2.824,941,2.547,967,5.393,982,5.393,1050,3.306,1052,3.474,1068,3.676,1077,5.046,1080,2.254,1088,4.267,1143,6.875,1209,3.62,1377,5.857,2628,3.676,2803,3.474,2924,5.393,3094,4.769,3180,4.34,3521,7.543,3522,4.781,3523,4.781,3524,6.562,3525,5.761,3526,8.064,3527,8.064,3528,8.064,3529,8.064,3530,8.064,3531,8.064,3532,8.064,3533,8.451,3534,8.064,3535,6.498,3536,6.562,3537,6.562,3538,6.562,3539,4.267,3540,6.562,3541,4.267,3542,6.562,3543,4.781,3544,4.781,3545,4.781,3546,4.267,3547,3.929,3548,5.857,3549,4.781,3550,8.064,3551,4.781,3552,4.781,3553,8.451,3554,6.562,3555,4.781,3556,4.781,3557,4.781,3558,4.781,3559,4.781,3560,4.781,3561,4.781,3562,4.781,3563,4.781,3564,6.562,3565,6.562,3566,6.562,3567,6.562,3568,6.562,3569,6.562,3570,3.676,3571,3.676,3572,3.676,3573,4.781,3574,3.676,3575,6.562,3576,4.781,3577,3.676,3578,4.781,3579,3.676,3580,4.781,3581,3.676,3582,4.781,3583,3.676,3584,4.781,3585,3.676,3586,3.676,3587,3.676,3588,3.676,3589,3.676,3590,4.781,3591,3.676,3592,4.781,3593,3.676,3594,4.781,3595,3.676,3596,4.781,3597,3.676,3598,4.781,3599,3.676,3600,4.781,3601,3.676,3602,4.781,3603,3.676,3604,4.781,3605,3.676,3606,4.781,3607,3.676]],["title/modules/OntologyExplorationModule.html",[397,0.746,416,3.567]],["body/modules/OntologyExplorationModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,65,1.757,99,0.005,100,0.004,150,0.287,151,0.603,179,0.141,204,1.926,317,1.054,397,1.02,399,1.926,400,1.926,401,2.024,402,1.958,403,1.958,404,2.659,416,7.287,419,2.308,420,1.775,422,2.508,423,2.466,439,4.441,534,2.734,535,2.206,3608,5.992,3609,5.992,3610,5.992,3611,6.911,3612,7.262,3613,6.911,3614,4.643,3615,6.714,3616,4.264,3617,5.992,3618,5.517,3619,6.714,3620,5.162,3621,5.992]],["title/interfaces/OntologyNode.html",[0,0.243,2624,2.64]],["body/interfaces/OntologyNode.html",[0,0.333,2,1.516,3,0.071,4,0.071,5,0.071,6,0.054,8,0.923,11,0.004,12,0.461,13,0.927,15,3.269,16,1.583,17,0.006,19,0.76,23,0.071,27,3.785,28,2.206,65,1.757,99,0.005,100,0.004,107,1.804,119,3.597,249,4.275,601,4.693,620,4.209,673,3.237,1373,6.288,1424,4.674,2621,5.992,2624,4.398,2637,6.071,2781,5.943,2810,6.347,2986,4.83,3622,5.992,3623,6.72]],["title/components/OntologySearchComponent.html",[101,0.588,369,1.408]],["body/components/OntologySearchComponent.html",[3,0.059,4,0.03,5,0.03,6,0.069,8,1.001,11,0.005,12,0.311,13,0.513,15,2.113,16,1.077,17,0.006,18,0.808,19,0.637,20,1.818,22,3.889,23,0.03,28,1.088,47,1.304,48,1.362,49,1.971,53,0.847,55,0.777,57,2.77,65,1.79,73,1.935,87,1.095,99,0.003,100,0.005,101,0.911,102,1.278,103,1.088,104,0.764,105,0.829,106,0.871,107,0.777,114,1.835,117,2.747,118,2.204,120,1.257,122,1.299,127,0.902,128,0.684,129,1.631,136,0.706,137,3.704,144,2.188,148,0.857,150,0.24,151,0.26,153,1.122,154,1.554,156,1.167,158,2.375,169,0.829,173,0.829,177,1.278,179,0.061,180,1.389,181,2.709,183,1.525,193,1.525,194,2.78,197,1.006,198,4.042,199,0.777,205,1.479,215,2.767,216,2.392,219,0.666,224,1.407,239,3.677,240,2.367,247,1.166,252,1.958,253,1.568,268,1.192,271,2.005,272,1.192,273,1.652,275,1.1,279,2.352,280,1.768,281,1.956,284,2.434,285,2.633,286,2.403,290,1.106,291,3.8,293,0.815,297,1.47,299,3.16,300,3.558,303,4.815,308,3.093,309,2.919,315,2.222,317,0.454,318,1.197,319,1.217,320,0.871,321,1.906,322,0.871,323,1.365,324,0.815,325,0.829,326,1.365,327,0.829,328,0.871,329,0.829,330,0.871,331,0.829,332,1.201,333,0.871,334,0.829,335,0.843,336,0.871,337,0.829,338,0.871,339,0.829,340,0.871,341,1.278,342,1.365,343,1.525,344,2.069,345,1.365,346,0.829,347,1.365,348,0.829,349,0.857,350,1.365,351,0.829,352,1.278,353,1.365,354,1.278,355,1.365,356,0.829,357,0.871,358,0.829,359,0.829,360,0.871,361,0.829,362,0.871,363,0.829,364,1.684,365,0.829,366,0.871,367,0.829,368,1.365,369,1.813,370,0.871,371,0.829,372,0.871,373,0.843,374,0.871,375,0.829,376,0.871,377,0.829,378,0.871,379,0.829,380,0.815,381,0.777,382,0.829,383,0.815,384,0.843,385,0.829,386,0.871,387,0.829,388,0.843,389,0.871,390,1.278,391,0.829,392,0.871,393,0.871,439,5.678,461,1.428,475,1.02,481,1.867,483,2.085,485,3.131,495,1.65,497,0.794,505,2.359,522,5.07,523,2.843,524,6.91,526,1.47,527,1.768,566,0.857,596,2.91,601,3.433,662,1.514,814,1.757,859,2.367,891,2.995,900,6.054,917,1.998,936,1.835,969,1.343,985,2.375,1222,2.508,1329,1.768,1372,3.721,1375,3.733,1382,4.859,1519,2.588,1521,2.876,1547,3.691,1551,1.601,1785,1.911,1788,2.222,1833,2.876,1922,3.721,1934,2.435,1935,2.435,2213,3.721,2247,2.375,2263,2.435,2273,4.588,2363,2.222,2367,2.375,2369,2.1,2378,3.291,2383,2.375,2428,3.482,2444,4.042,2533,2.375,2624,3.399,2670,2.375,2750,3.131,2775,1.911,2781,3.291,2881,2.375,2882,2.375,3193,4.042,3384,3.721,3400,4.293,3403,4.859,3436,2.77,3614,5.936,3616,5.528,3624,2.89,3625,4.528,3626,4.042,3627,5.584,3628,4.528,3629,5.584,3630,5.584,3631,7.879,3632,7.611,3633,4.528,3634,4.528,3635,4.528,3636,4.528,3637,2.89,3638,4.987,3639,4.528,3640,5.584,3641,5.64,3642,2.89,3643,3.721,3644,4.528,3645,6.372,3646,2.89,3647,4.528,3648,4.528,3649,2.89,3650,4.528,3651,4.528,3652,4.528,3653,7.28,3654,2.89,3655,4.528,3656,4.528,3657,4.528,3658,2.89,3659,6.32,3660,4.528,3661,2.89,3662,4.528,3663,2.89,3664,5.584,3665,2.89,3666,4.528,3667,4.528,3668,2.89,3669,2.375,3670,2.579,3671,2.89,3672,2.579,3673,2.579,3674,2.89,3675,2.89,3676,2.89,3677,2.89,3678,2.89,3679,2.375,3680,2.89,3681,2.89,3682,2.89,3683,2.89,3684,2.89,3685,2.89,3686,2.89,3687,2.89,3688,2.89,3689,2.89,3690,2.89,3691,2.89,3692,2.89,3693,4.528,3694,4.528,3695,4.528,3696,4.042,3697,6.32,3698,2.375,3699,2.89,3700,2.89,3701,2.89,3702,4.528,3703,2.579]],["title/modules/OntologySearchModule.html",[397,0.746,3611,3.395]],["body/modules/OntologySearchModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,22,3.146,23,0.072,65,1.361,99,0.005,100,0.004,150,0.299,151,0.614,179,0.143,204,1.96,317,1.073,369,2.873,397,1.038,399,1.96,400,1.96,401,2.679,402,1.993,403,1.993,404,2.679,419,2.332,420,1.807,422,2.095,423,2.492,424,4.32,425,3.221,439,4.519,534,2.764,535,2.245,536,6.792,537,5.615,2392,6.355,2393,5.253,3611,6.722,3614,4.725,3616,4.339,3669,5.615,3670,6.098,3704,6.098,3705,6.098,3706,6.098,3707,6.832,3708,8.265,3709,8.265,3710,8.265,3711,6.832]],["title/injectables/OntologySearchService.html",[2127,1.585,3638,3.567]],["body/injectables/OntologySearchService.html",[0,0.233,3,0.032,4,0.032,5,0.032,6,0.066,8,1.067,11,0.004,12,0.578,13,0.534,15,3.117,16,1.506,17,0.006,18,1.029,19,0.679,20,0.954,23,0.078,28,1.927,36,1.431,53,0.828,57,2.883,65,1.898,73,1.633,87,1.186,99,0.003,100,0.005,107,1.889,119,3.526,128,1.365,129,1.547,131,0.779,132,2.5,137,3.576,141,1.959,150,0.261,151,0.273,153,1.18,154,3.102,156,1.229,179,0.064,180,1.993,181,1.929,183,2.047,194,2.073,197,1.047,205,1.159,212,3.873,216,2.31,219,1.259,236,1.035,237,4.658,240,4.815,247,1.619,248,2.611,249,3.887,259,1.685,461,1.596,495,1.787,497,0.82,522,2.784,526,3.305,551,1.951,566,0.902,568,1.254,601,4.493,620,2.858,688,1.035,731,3.425,802,3.664,832,2.284,849,2.993,850,1.47,859,3.675,900,6.11,931,1.636,936,5.52,941,1.829,942,3.259,969,1.927,1097,1.738,1222,1.685,1387,2.21,1424,1.738,1519,1.738,1715,1.829,1726,2.21,1811,1.932,1908,3.425,2114,2.5,2127,2.098,2128,1.636,2147,2.339,2148,2.339,2149,1.738,2159,4.996,2241,1.47,2248,2.339,2254,2.339,2264,2.993,2276,2.339,2428,4.996,2624,5.063,2628,2.339,2637,5.561,2666,6.586,2773,2.21,2775,2.012,2778,2.103,2802,2.21,2810,2.103,3108,2.103,3138,1.932,3180,3.117,3272,2.339,3439,1.797,3616,5.226,3623,2.5,3638,4.721,3641,2.5,3643,2.5,3645,4.436,3679,3.873,3698,3.873,3712,6.762,3713,2.5,3714,4.206,3715,4.206,3716,4.436,3717,4.713,3718,4.713,3719,4.713,3720,5.799,3721,4.713,3722,3.042,3723,5.799,3724,5.301,3725,4.713,3726,6.274,3727,4.206,3728,3.042,3729,4.206,3730,4.206,3731,8.163,3732,3.042,3733,4.206,3734,4.206,3735,5.799,3736,4.206,3737,4.206,3738,3.042,3739,3.873,3740,4.206,3741,3.042,3742,3.042,3743,4.206,3744,4.206,3745,5.799,3746,3.042,3747,4.206,3748,4.206,3749,2.339,3750,4.206,3751,2.715,3752,2.715,3753,2.715,3754,4.206,3755,2.715,3756,2.339,3757,4.493,3758,2.715,3759,2.715,3760,5.149,3761,2.103,3762,3.873,3763,2.5,3764,2.715,3765,6.274,3766,3.624,3767,3.624,3768,2.715,3769,2.715,3770,4.206,3771,2.715,3772,2.715,3773,2.715,3774,2.715,3775,2.715,3776,2.715,3777,2.715,3778,2.715,3779,2.715,3780,2.715,3781,2.715,3782,2.715,3783,5.799,3784,2.715,3785,2.715,3786,2.715,3787,5.149,3788,5.149,3789,4.206,3790,2.715,3791,2.715,3792,4.206,3793,2.715,3794,5.149,3795,2.715,3796,2.5,3797,2.715,3798,2.715,3799,2.715,3800,2.715,3801,2.715,3802,2.715,3803,2.715,3804,2.715,3805,2.715,3806,2.715,3807,2.715,3808,2.715,3809,2.715,3810,2.715,3811,2.715,3812,4.206,3813,2.715,3814,2.715,3815,2.715,3816,2.715,3817,2.715,3818,2.715,3819,2.715,3820,2.715,3821,2.715,3822,2.715,3823,2.715,3824,2.715,3825,4.206,3826,2.715,3827,4.206,3828,4.206,3829,4.206,3830,4.206,3831,2.715,3832,2.715,3833,2.715,3834,2.715,3835,2.715,3836,2.715,3837,4.206,3838,4.206,3839,2.715,3840,2.5,3841,2.715,3842,2.715]],["title/interfaces/OntologySelection.html",[0,0.243,157,3.774]],["body/interfaces/OntologySelection.html",[0,0.363,2,1.655,3,0.077,4,0.077,5,0.077,6,0.059,11,0.004,12,0.504,13,0.977,15,3.16,16,1.533,17,0.006,19,0.74,23,0.077,28,2.272,65,1.46,99,0.005,100,0.004,150,0.224,157,6.627,601,3.456,673,3.625,2624,5.082,3622,6.542,3843,7.33,3844,9.45]],["title/components/OntologySelectionComponent.html",[101,0.588,371,1.408]],["body/components/OntologySelectionComponent.html",[3,0.07,4,0.04,5,0.04,6,0.07,8,0.909,11,0.002,12,0.262,13,0.633,16,0.876,17,0.006,19,0.694,23,0.04,24,2.512,36,1.385,47,1.473,48,1.516,49,1.742,53,0.81,55,1.023,65,1.981,66,4.356,73,1.935,87,0.891,99,0.003,100,0.005,101,1.08,102,1.575,103,1.75,104,1.007,105,1.092,106,1.148,107,2.499,114,2.042,117,2.797,118,2.239,120,1.55,122,1.602,125,1.075,128,0.901,129,1.657,131,1.43,134,5.602,135,4.588,136,0.93,141,1.683,148,1.129,150,0.255,151,0.342,157,5.597,158,4.588,159,5.969,169,1.092,173,1.092,177,1.575,179,0.08,180,1.712,181,1.867,182,4.057,183,1.469,193,1.04,197,1.241,199,1.023,205,0.996,219,0.56,224,1.666,232,4.293,237,4.932,238,3.093,239,4.148,240,1.991,290,1.363,293,1.075,317,0.598,318,1.476,319,1.5,320,1.148,321,2.195,322,1.148,323,1.683,324,1.075,325,1.092,326,1.683,327,1.092,328,1.148,329,1.092,330,1.148,331,1.092,332,1.384,333,1.148,334,1.092,335,1.111,336,1.148,337,1.092,338,1.148,339,1.092,340,1.148,341,1.575,342,1.683,343,1.805,344,2.337,345,1.683,346,1.092,347,1.683,348,1.092,349,1.129,350,1.683,351,1.092,352,1.575,353,1.683,354,1.575,355,1.683,356,1.092,357,1.148,358,1.092,359,1.092,360,1.148,361,1.092,362,1.148,363,1.092,364,1.993,365,1.092,366,1.148,367,1.092,368,1.683,369,1.092,370,1.148,371,2.088,372,1.148,373,2.123,374,1.148,375,1.092,376,1.148,377,1.092,378,1.148,379,1.092,380,1.075,381,1.023,382,1.092,383,1.075,384,1.111,385,1.092,386,1.148,387,1.092,388,1.111,389,1.148,390,1.575,391,1.092,392,1.148,393,1.148,439,5.793,461,0.69,475,2.859,481,2.302,483,2.468,495,1.342,497,0.542,505,2.084,551,1.057,566,1.656,588,1.84,596,2.571,601,3.819,662,1.867,701,2.256,821,2.351,827,3.298,832,2.21,840,2.519,891,4.372,900,5.145,969,1.96,1222,3.093,1244,4.755,1424,3.191,1575,4.983,1576,4.293,1577,3.002,1691,3.275,2159,4.293,2241,1.84,2624,4.356,3614,6.057,3616,2.418,3618,7.197,3620,2.928,3626,5.9,3638,6.47,3672,3.399,3673,3.399,3724,2.519,3757,2.633,3840,3.129,3845,3.808,3846,5.583,3847,6.61,3848,5.583,3849,6.61,3850,6.61,3851,6.61,3852,3.808,3853,5.583,3854,3.808,3855,4.588,3856,3.808,3857,3.808,3858,5.583,3859,5.583,3860,3.808,3861,3.808,3862,5.583,3863,3.808,3864,3.808,3865,3.399,3866,3.808,3867,3.808]],["title/modules/OntologySelectionModule.html",[397,0.746,3612,3.567]],["body/modules/OntologySelectionModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.072,65,1.77,99,0.005,100,0.004,150,0.289,151,0.614,179,0.143,204,1.96,317,1.073,371,2.873,397,1.038,399,1.96,400,1.96,401,2.679,402,1.993,403,1.993,404,2.679,419,2.332,420,1.807,422,2.535,423,2.492,439,4.519,534,2.764,535,2.245,3611,6.644,3612,7.25,3613,6.644,3614,4.725,3616,4.339,3617,6.098,3618,5.615,3620,5.253,3621,6.098,3868,6.098,3869,6.098,3870,6.832,3871,6.098,3872,6.832,3873,6.832]],["title/injectables/OntologyState.html",[2127,1.585,3724,3.247]],["body/injectables/OntologyState.html",[0,0.294,3,0.062,4,0.062,5,0.062,6,0.07,8,1.041,11,0.004,12,0.408,13,0.858,16,1.188,17,0.006,19,0.479,20,1.532,23,0.08,27,2.446,28,1.426,36,1.471,53,0.843,65,1.959,87,0.946,99,0.005,100,0.004,107,2.493,119,3.991,125,2.618,127,1.508,129,1.609,141,2.907,150,0.283,151,0.533,154,3.189,156,2.396,179,0.124,183,1.318,197,1.682,205,1.351,240,4.991,461,1.075,495,1.426,497,1.076,588,2.866,601,4.141,614,2.937,802,3.767,850,3.657,891,6.136,1890,4.63,2127,2.444,2128,3.189,2176,4.924,2199,4.924,2238,4.193,2239,3.285,2240,3.285,2241,2.866,2282,3.767,2624,4.07,3716,6.41,3724,5.006,3756,4.56,3757,6.073,3766,4.56,3767,4.56,3874,5.293,3875,7.569,3876,6.756,3877,5.931,3878,7.838,3879,6.756,3880,5.931,3881,6.756,3882,5.931,3883,5.293]],["title/interfaces/OntologyStateModel.html",[0,0.243,3757,3.395]],["body/interfaces/OntologyStateModel.html",[0,0.31,2,1.412,3,0.066,4,0.066,5,0.066,6,0.05,8,0.86,11,0.004,12,0.43,13,0.888,16,1.406,17,0.006,19,0.724,23,0.082,27,3.228,28,1.504,36,1.942,53,0.696,65,1.922,99,0.005,100,0.004,107,2.296,119,4.244,125,2.209,141,2.877,150,0.287,151,0.562,154,3.364,156,2.527,179,0.131,183,1.39,205,1.116,240,5.087,497,0.89,586,4.788,601,4.222,614,2.428,802,4.971,850,3.782,891,5.178,1890,3.826,2127,2.527,2176,4.624,2199,4.624,2238,4.336,2239,3.465,2240,3.465,2241,3.022,2282,3.972,2624,4.21,3716,4.809,3724,4.137,3756,4.809,3757,5.909,3766,6.019,3767,6.019,3874,5.583,3876,5.583,3878,6.987,3879,5.583,3881,5.583,3883,5.583]],["title/modules/OntologyTreeModule.html",[397,0.746,3613,3.395]],["body/modules/OntologyTreeModule.html",[3,0.073,4,0.073,5,0.073,6,0.055,11,0.004,17,0.006,23,0.073,65,1.376,99,0.005,100,0.004,150,0.297,151,0.621,179,0.145,204,1.981,317,1.084,373,2.925,397,1.05,399,1.981,400,1.981,401,2.692,402,2.014,403,2.014,404,2.692,419,2.348,420,1.827,422,2.118,423,2.509,424,4.349,425,3.257,439,4.569,534,2.782,535,2.269,2703,7.426,2704,6.165,2707,7.426,2708,6.165,3613,6.737,3614,4.777,3620,5.311,3865,6.165,3884,6.165,3885,6.165,3886,6.165,3887,6.907,3888,8.32,3889,6.907]],["title/injectables/PageState.html",[2127,1.585,2680,3.774]],["body/injectables/PageState.html",[0,0.342,3,0.073,4,0.073,5,0.073,6,0.071,11,0.004,12,0.474,13,0.943,16,1.083,17,0.006,20,1.682,23,0.088,46,1.396,53,0.768,99,0.005,100,0.004,125,2.717,127,1.656,129,1.605,141,2.507,150,0.289,151,0.62,155,5.012,156,2.787,179,0.145,614,3.226,662,2.307,850,4.017,2127,2.684,2128,3.71,2176,5.27,2238,4.605,2239,3.821,2240,3.821,2241,3.333,2282,4.381,2644,5.304,2680,6.392,3890,6.157,3891,8.461,3892,8.461,3893,7.419,3894,6.898,3895,7.419,3896,6.898,3897,5.668]],["title/interfaces/PageStateModel.html",[0,0.243,3897,4.034]],["body/interfaces/PageStateModel.html",[0,0.346,2,1.579,3,0.074,4,0.074,5,0.074,6,0.056,11,0.004,12,0.481,13,0.95,16,1.409,17,0.006,19,0.677,23,0.088,46,1.816,53,0.779,99,0.005,100,0.004,125,2.365,141,2.527,150,0.29,151,0.629,155,5.082,156,2.825,179,0.147,614,2.714,662,2.339,850,4.05,2127,2.706,2176,4.951,2238,4.643,2239,3.874,2240,3.874,2241,3.379,2282,4.442,2644,5.377,2680,5.377,3890,6.242,3891,8.622,3892,8.622,3893,6.242,3895,6.242,3897,6.888]],["title/classes/PictureInPictureViewer.html",[179,0.103,3898,3.774]],["body/classes/PictureInPictureViewer.html",[0,0.184,3,0.039,4,0.039,5,0.039,6,0.058,11,0.002,12,0.255,13,0.621,16,0.582,17,0.006,18,1.601,19,0.775,20,1.724,23,0.069,28,1.317,46,1.108,47,1.525,48,1.025,53,0.968,87,1.388,92,3.07,95,3.444,99,0.003,100,0.002,125,1.545,127,1.697,129,1.907,145,1.667,150,0.167,179,0.078,193,1.013,197,1.217,205,1.552,219,1.319,235,3.721,247,1.501,252,1.994,271,2.433,277,1.499,281,1.932,284,1.241,286,1.596,332,0.705,456,1.838,461,1.722,492,2.786,495,2.091,497,0.779,551,2.661,553,4.397,566,1.1,568,2.685,588,2.646,589,3.034,612,1.669,614,2.527,622,4.903,624,4.082,627,3.235,629,2.409,635,3.35,749,4.427,1201,2.696,1219,2.356,1220,1.939,1221,1.793,1222,2.055,1224,3.982,1225,3.623,1226,2.191,1234,3.623,1235,2.191,1241,3.623,1242,3.623,1244,3.982,1245,3.478,1246,3.478,1247,4.87,1248,1.887,1256,4.971,1257,5.835,1260,3.787,1261,3.787,1263,3.623,1265,3.623,1266,3.787,1268,2.454,1270,3.787,1271,6.522,1272,3.787,1273,3.787,1274,3.13,1275,3.623,1282,4.135,1288,4.502,1290,2.565,1295,2.565,1305,2.565,1311,5.49,1312,5.49,1317,4.502,1320,4.306,1327,3.787,1335,2.565,1337,2.565,1338,3.787,1343,4.502,1349,2.454,1864,2.213,2283,2.356,2812,4.888,2813,4.888,2814,4.888,2815,4.888,2816,4.888,2834,3.311,2836,3.311,2845,3.311,3898,4.211,3899,5.907,3900,5.907,3901,5.907,3902,3.71,3903,9.82,3904,3.71,3905,3.71,3906,3.71,3907,3.71,3908,3.71,3909,3.71,3910,3.71,3911,3.71,3912,3.71,3913,3.71,3914,3.71,3915,3.71,3916,3.71,3917,3.71,3918,3.71,3919,3.71,3920,3.71,3921,3.71,3922,3.71,3923,3.71,3924,3.71,3925,3.71,3926,3.71,3927,3.71,3928,3.71,3929,3.71,3930,3.71,3931,3.71,3932,3.71,3933,3.71,3934,6.416,3935,6.416,3936,3.311,3937,4.501,3938,3.049,3939,5.572,3940,4.888,3941,3.311,3942,3.311,3943,3.311,3944,4.888,3945,3.311,3946,3.311,3947,4.888,3948,5.811,3949,5.811,3950,5.811,3951,3.311,3952,3.311,3953,3.311,3954,3.311,3955,3.311,3956,5.907,3957,3.311,3958,3.311]],["title/interfaces/PictureInPictureViewerProps.html",[0,0.243,3901,4.034]],["body/interfaces/PictureInPictureViewerProps.html",[0,0.282,2,1.286,3,0.06,4,0.06,5,0.06,6,0.046,11,0.003,12,0.392,13,0.836,16,0.894,17,0.006,18,1.599,19,0.596,23,0.086,28,1.773,46,1.152,47,1.554,48,1.38,95,2.92,99,0.004,100,0.003,145,2.095,150,0.225,179,0.119,193,1.556,219,1.429,247,1.806,252,2.16,271,2.595,277,2.301,281,2.198,284,1.905,286,2.451,332,1.082,492,3.752,497,1.049,568,2.349,614,3.174,622,4.356,624,4.669,749,3.477,1201,4.139,1219,3.617,1220,2.977,1221,2.752,1224,4.511,1225,3.767,1226,3.364,1245,3.617,1246,5.194,1247,5.69,1257,4.356,1263,4.878,1268,3.767,1271,4.878,1275,3.767,1311,3.767,1312,3.767,1864,2.979,2283,3.617,3898,4.379,3899,4.68,3900,4.68,3901,6.721,3934,7.72,3935,7.72,3936,5.084,3937,7.108,3938,4.68,3939,6.88,3940,6.582,3941,5.084,3942,5.084,3943,5.084,3944,6.582,3945,5.084,3946,5.084,3947,6.582,3948,7.3,3949,7.3,3950,7.3,3951,5.084,3952,5.084,3953,5.084,3954,5.084,3955,5.084,3956,7.108,3957,5.084,3958,5.084]],["title/interfaces/PureImageViewerLayer.html",[0,0.243,2915,3.567]],["body/interfaces/PureImageViewerLayer.html",[0,0.283,2,1.292,3,0.06,4,0.06,5,0.06,6,0.046,11,0.003,12,0.563,13,0.839,15,3.073,16,1.543,17,0.006,18,1.78,19,0.791,23,0.091,28,2.209,33,2.311,36,1.42,46,1.892,48,1.07,82,1.538,99,0.004,100,0.003,145,1.465,150,0.175,179,0.12,180,1.755,199,1.538,219,1.087,224,1.864,227,6.078,228,3.957,239,4.335,247,1.544,248,3.17,252,1.272,253,1.232,272,3.05,298,3.866,300,2.41,332,1.848,568,2.36,662,2.741,699,4.158,814,2.221,823,4.702,1512,4.699,1521,3.634,1522,3.5,1533,4.892,1543,3.634,1546,3.784,1550,2.835,1561,4.702,1572,3.077,1578,4.399,1710,6.52,1723,6.52,1771,6.52,2914,4.702,2915,5.956,2916,6.899,2917,6.52,2919,5.107,2921,6.078,2923,5.107,2924,4.702,2939,5.107,2940,5.107,2944,4.702,2945,5.107,2946,5.107,2947,5.107,2948,5.107,2949,5.107,2950,5.107,2951,5.107,2952,5.107,2953,5.107,2954,5.107,2955,5.107,2956,5.107,2957,5.107,2958,5.107]],["title/components/ResultsBrowserComponent.html",[101,0.588,375,1.408]],["body/components/ResultsBrowserComponent.html",[1,3.432,3,0.067,4,0.038,5,0.038,6,0.069,8,0.734,11,0.005,12,0.246,13,0.606,15,1.786,16,0.838,17,0.006,19,0.663,20,1.081,23,0.038,24,3.401,26,3.746,36,1.876,46,1.081,47,1.437,48,1.578,49,2.205,53,0.71,55,0.964,65,1.271,68,1.92,82,2.13,87,0.572,89,2.717,93,2.403,99,0.003,100,0.006,101,0.983,102,1.507,103,1.284,104,0.948,105,1.029,106,1.081,107,0.964,112,3.881,114,1.998,117,2.787,118,2.233,120,1.482,122,1.532,127,0.714,128,0.848,129,1.629,131,2.161,133,4.676,136,2.175,141,1.61,148,1.063,150,0.163,151,0.322,152,1.824,169,1.029,173,1.029,177,1.507,179,0.075,183,0.797,193,0.979,197,1.187,199,1.715,205,0.953,213,4.388,219,0.785,224,1.608,238,2.958,239,2.58,247,0.749,249,2.792,252,0.797,259,2.958,268,3.386,269,3.083,270,1.986,271,2.025,273,2.049,274,1.874,275,2.429,277,1.449,279,2.249,281,1.715,284,2.134,285,3.334,286,3.71,289,1.824,290,1.304,292,1.777,293,1.012,299,2.459,302,1.449,305,1.874,312,2.277,313,3.2,315,2.757,317,0.563,318,1.412,319,1.715,320,1.081,321,2.132,322,1.081,323,1.61,324,1.012,325,1.029,326,1.61,327,1.029,328,1.081,329,1.029,330,1.081,331,1.029,332,1.344,333,1.081,334,1.029,335,1.046,336,1.081,337,1.029,338,1.081,339,1.029,340,1.081,341,1.507,342,1.61,343,1.743,344,2.28,345,1.61,346,1.029,347,1.61,348,1.029,349,1.063,350,1.61,351,1.029,352,1.507,353,1.61,354,1.507,355,1.61,356,1.029,357,1.081,358,1.029,359,1.029,360,1.081,361,1.029,362,1.081,363,1.029,364,1.924,365,1.029,366,1.081,367,1.029,368,1.61,369,1.029,370,1.081,371,1.029,372,1.081,373,1.046,374,1.081,375,2.028,376,1.081,377,1.029,378,1.081,379,1.029,380,1.012,381,0.964,382,1.029,383,1.012,384,1.046,385,1.029,386,1.081,387,1.029,388,1.046,389,1.081,390,1.507,391,1.029,392,1.081,393,1.081,446,6.868,461,0.65,475,3.143,481,2.202,483,2.382,495,0.862,497,0.51,501,1.986,505,2.64,517,1.986,518,2.049,523,1.613,526,1.824,596,3.649,645,1.479,662,1.786,821,2.249,827,3.154,829,3.532,1223,3.693,1371,4.388,1385,2.757,1402,4.413,1403,3.881,1533,4.221,1534,4.766,1545,2.48,1717,5.138,1728,2.646,1775,2.277,1783,2.049,1789,3.693,1816,4.106,1821,3.693,1832,3.392,1969,4.388,2180,5.244,2423,3.532,2491,4.766,2547,3.693,2591,5.436,2879,4.637,2978,4.766,3059,4.766,3703,3.2,3959,6.629,3960,3.586,3961,5.34,3962,7.07,3963,7.07,3964,5.34,3965,5.34,3966,6.381,3967,5.34,3968,6.381,3969,6.381,3970,5.34,3971,6.381,3972,7.56,3973,6.381,3974,3.586,3975,3.586,3976,3.586,3977,3.586,3978,5.34,3979,3.586,3980,5.34,3981,5.34,3982,6.381,3983,3.586,3984,8.776,3985,3.586,3986,5.34,3987,5.34,3988,4.388,3989,3.586,3990,4.766,3991,5.34,3992,5.34,3993,5.34,3994,3.586,3995,5.34,3996,5.34,3997,6.381,3998,3.2,3999,3.2,4000,3.2]],["title/components/ResultsBrowserItemComponent.html",[101,0.588,377,1.408]],["body/components/ResultsBrowserItemComponent.html",[3,0.083,4,0.042,5,0.042,6,0.06,8,1.024,11,0.006,12,0.274,15,2.271,17,0.006,19,0.467,23,0.042,26,3.366,36,1.847,37,4.553,41,4.313,42,2.641,43,2.641,44,2.536,47,1.733,48,1.627,49,1.802,51,2.199,53,0.643,55,1.073,56,4.397,65,1.353,68,1.435,89,2.94,93,2.6,99,0.003,100,0.005,101,1.017,102,1.631,103,1.389,104,1.056,105,1.145,106,1.204,107,1.073,112,4.199,114,2.076,117,2.804,118,2.247,120,1.604,122,1.658,127,1.151,128,0.945,129,1.311,131,1.907,136,2.343,148,1.184,150,0.176,151,0.359,152,2.031,169,1.145,173,1.145,177,1.631,179,0.084,183,0.887,193,1.578,197,1.284,199,1.553,205,1.031,215,3.915,224,1.712,236,2.312,248,3.201,268,2.801,269,1.929,271,2.155,272,1.646,273,3.303,274,2.087,279,1.681,280,2.442,281,2.123,284,1.932,285,1.882,289,2.031,290,1.411,292,3.366,293,1.631,295,2.147,300,1.681,301,2.487,302,2.334,317,0.627,318,1.528,319,1.553,320,1.204,321,2.245,322,1.204,323,1.742,324,1.127,325,1.145,326,1.742,327,1.145,328,1.204,329,1.145,330,1.204,331,1.145,332,1.415,333,1.204,334,1.145,335,1.164,336,1.204,337,1.145,338,1.204,339,1.145,340,1.204,341,1.631,342,1.742,343,1.855,344,2.382,345,1.742,346,1.145,347,1.742,348,1.145,349,1.184,350,1.742,351,1.145,352,1.631,353,1.742,354,1.631,355,1.742,356,1.145,357,1.204,358,1.145,359,1.145,360,1.204,361,1.145,362,1.204,363,1.145,364,2.048,365,1.145,366,1.204,367,1.145,368,1.742,369,1.145,370,1.204,371,1.145,372,1.204,373,1.164,374,1.204,375,1.948,376,1.204,377,2.135,378,1.204,379,1.145,380,1.127,381,1.073,382,1.145,383,1.127,384,1.164,385,1.145,386,1.204,387,1.145,388,1.164,389,1.204,390,1.631,391,1.145,392,1.204,393,1.204,446,5.409,461,0.724,475,2.627,481,2.383,483,2.536,497,0.822,505,2.779,517,3.201,518,2.282,519,2.761,523,2.6,526,2.031,645,1.646,821,2.434,832,1.581,857,2.282,859,3.55,863,5.409,1257,3.413,1372,4.749,1388,3.303,1400,3.281,1402,2.761,1549,2.147,1551,2.212,1563,3.563,1715,2.243,1717,4.199,1782,3.281,1788,5.222,1810,2.442,1821,4.697,1832,2.536,2533,3.281,2643,4.749,2661,6.644,2687,3.563,2873,4.749,2880,3.563,2905,5.158,2997,3.281,3959,5.724,3998,3.563,4001,6.117,4002,3.992,4003,6.792,4004,5.779,4005,7.444,4006,6.792,4007,3.992,4008,6.644,4009,3.992,4010,5.779,4011,3.992,4012,5.779,4013,5.779,4014,5.779,4015,3.992,4016,5.779,4017,5.779,4018,5.779,4019,3.992,4020,3.992,4021,3.992,4022,3.992,4023,3.992,4024,3.992,4025,3.992,4026,3.992]],["title/modules/ResultsBrowserItemModule.html",[397,0.746,4027,3.567]],["body/modules/ResultsBrowserItemModule.html",[3,0.074,4,0.074,5,0.074,6,0.056,11,0.004,17,0.006,23,0.074,99,0.005,100,0.005,136,2.2,150,0.285,151,0.634,179,0.148,204,2.023,317,1.107,377,2.884,397,1.072,399,2.023,400,2.023,401,2.716,402,2.057,403,2.057,404,2.716,419,2.377,420,1.865,422,2.163,423,2.54,424,4.404,425,3.325,446,5.125,534,2.817,535,2.317,3959,5.423,4001,5.795,4027,7.109,4028,6.295,4029,6.295,4030,6.295,4031,7.053,4032,7.053]],["title/modules/ResultsBrowserModule.html",[397,0.746,417,3.567]],["body/modules/ResultsBrowserModule.html",[3,0.073,4,0.073,5,0.073,6,0.055,11,0.004,17,0.006,23,0.073,99,0.005,100,0.005,136,2.033,150,0.29,151,0.622,179,0.145,204,1.984,317,1.086,375,2.877,397,1.051,399,1.984,400,1.984,401,2.694,402,2.017,403,2.017,404,2.694,417,7.19,419,2.35,420,1.829,422,2.553,423,2.511,446,6.051,534,2.784,535,2.272,3959,5.318,4001,5.684,4027,7.002,4033,6.174,4034,6.174,4035,6.917,4036,6.174,4037,6.917,4038,6.917,4039,6.917,4040,8.327,4041,6.917]],["title/components/RightSidebarComponent.html",[101,0.588,379,1.408]],["body/components/RightSidebarComponent.html",[3,0.083,4,0.055,5,0.055,6,0.063,11,0.003,12,0.359,17,0.006,23,0.055,47,1.656,48,1.677,53,0.776,55,1.404,65,1.562,99,0.004,100,0.005,101,0.938,102,1.966,103,1.675,104,1.381,105,1.498,106,1.575,107,1.404,114,2.259,117,2.841,118,2.275,120,1.934,122,1.998,128,1.236,129,1.345,136,1.275,148,1.549,150,0.159,151,0.469,169,1.498,173,1.498,177,1.966,179,0.109,193,1.426,197,1.548,199,2.498,205,1.243,224,1.976,290,1.701,293,1.474,317,0.82,318,1.842,319,1.872,320,1.575,321,2.522,322,1.575,323,2.101,324,1.474,325,1.498,326,2.101,327,1.498,328,1.575,329,1.498,330,1.575,331,1.498,332,1.589,333,1.575,334,1.498,335,1.523,336,1.575,337,1.498,338,1.575,339,1.498,340,1.575,341,1.966,342,2.101,343,2.141,344,2.627,345,2.101,346,1.498,347,2.101,348,1.498,349,1.549,350,2.101,351,1.498,352,1.966,353,2.101,354,1.966,355,2.101,356,1.498,357,1.575,358,1.498,359,1.498,360,1.575,361,1.498,362,1.575,363,1.498,364,2.364,365,1.498,366,1.575,367,1.498,368,2.101,369,1.498,370,1.575,371,1.498,372,1.575,373,1.523,374,1.575,375,1.498,376,1.575,377,1.498,378,1.575,379,2.399,380,1.474,381,1.404,382,1.498,383,1.474,384,1.523,385,1.498,386,1.575,387,1.498,388,1.523,389,1.575,390,1.966,391,1.498,392,1.575,393,1.575,461,0.947,566,2.324,814,2.704,1566,3.285,1567,3.285,1579,2.463,2896,5.725,3399,4.662,3400,6.027,3401,6.996,3402,6.218,3403,6.43,3404,4.662,4042,6.996,4043,6.996,4044,5.223]],["title/modules/RightSidebarModule.html",[397,0.746,4045,3.774]],["body/modules/RightSidebarModule.html",[3,0.071,4,0.071,5,0.071,6,0.054,11,0.004,17,0.006,23,0.071,99,0.005,100,0.004,150,0.292,151,0.603,179,0.141,199,1.802,204,1.923,293,2.306,317,1.053,379,2.866,397,1.019,399,1.923,400,1.923,401,2.658,402,1.955,403,1.955,404,2.658,419,2.306,420,1.773,422,2.506,423,2.464,444,5.155,471,5.155,529,6.951,534,2.732,535,2.203,3411,5.984,3412,5.984,4042,5.984,4043,5.984,4045,7.709,4046,5.984,4047,5.984,4048,5.984,4049,5.984,4050,6.951,4051,6.951,4052,6.705,4053,8.171,4054,6.705,4055,5.155,4056,6.705,4057,5.155]],["title/interfaces/Rotation.html",[0,0.243,381,1.319]],["body/interfaces/Rotation.html",[0,0.302,2,1.374,3,0.064,4,0.064,5,0.064,6,0.049,11,0.004,12,0.419,13,0.873,16,1.208,17,0.006,18,1.741,19,0.682,20,1.557,23,0.081,68,2.189,99,0.005,100,0.004,101,1.095,117,1.69,118,1.353,120,1.69,122,1.746,144,2.942,146,3.724,150,0.186,151,0.547,179,0.128,183,1.71,204,1.746,205,1.373,216,2.529,219,1.132,235,3.48,236,2.072,252,2.108,380,1.718,381,2.652,475,3.13,483,2.873,497,1.261,500,5.932,501,5.174,502,4.513,505,3.151,692,3.867,826,4.21,827,3.596,1221,2.942,1379,4.424,1384,3.596,1538,5.003,1691,2.739,1698,5.003,1728,3.017,1729,3.385,2256,4.681,2398,5.003,2400,5.003,2401,5.003,2547,4.21,2979,4.681,3203,5.003,3855,5.003,4055,4.681,4058,5.003,4059,5.003,4060,5.003,4061,5.434,4062,5.434,4063,6.869,4064,7.914,4065,5.434,4066,6.869,4067,7.532,4068,5.434,4069,6.869,4070,5.434,4071,4.424,4072,5.434,4073,6.869]],["title/components/RotationSliderComponent.html",[101,0.588,380,1.385]],["body/components/RotationSliderComponent.html",[0,0.171,3,0.066,4,0.036,5,0.036,6,0.06,8,0.714,11,0.002,12,0.237,16,1.227,17,0.006,18,1.395,19,0.504,20,1.506,23,0.055,29,2.642,47,1.414,48,1.463,49,1.947,53,0.695,55,0.929,65,1.243,68,1.867,75,4.408,87,0.551,93,1.554,99,0.003,100,0.004,101,1.022,102,1.466,103,1.249,104,0.914,105,0.991,106,1.042,107,0.929,113,2.194,114,1.971,117,2.781,118,2.226,120,1.442,122,1.49,127,0.688,128,0.818,129,1.34,136,0.844,144,2.51,146,3.177,148,1.025,150,0.105,151,0.311,169,0.991,173,0.991,177,1.466,179,0.072,183,1.154,193,1.419,197,1.154,199,1.396,204,1.79,205,1.239,216,2.28,219,0.764,224,1.573,225,3.177,235,2.969,236,1.768,252,1.963,253,0.744,268,2.142,271,2.361,272,2.142,275,1.977,279,1.455,280,2.114,281,2,282,3.457,283,1.903,284,1.155,285,2.449,286,2.235,289,3.786,290,1.268,292,1.712,293,0.975,295,4.59,297,3.175,298,4.677,299,3.196,300,2.629,301,2.686,302,2.521,303,2.285,305,1.806,306,1.629,307,2.969,314,5.893,317,0.542,318,1.374,319,1.396,320,1.042,321,2.093,322,1.042,323,1.566,324,0.975,325,1.79,326,1.566,327,0.991,328,1.042,329,0.991,330,1.042,331,0.991,332,1.586,333,1.042,334,0.991,335,1.008,336,1.042,337,0.991,338,1.042,339,0.991,340,1.042,341,1.466,342,1.566,343,1.705,344,2.244,345,1.566,346,0.991,347,1.566,348,0.991,349,1.025,350,1.566,351,0.991,352,1.466,353,1.566,354,1.466,355,1.566,356,0.991,357,1.042,358,0.991,359,0.991,360,1.042,361,0.991,362,1.042,363,0.991,364,1.882,365,0.991,366,1.042,367,0.991,368,1.566,369,0.991,370,1.042,371,0.991,372,1.042,373,1.008,374,1.042,375,0.991,376,1.042,377,0.991,378,1.042,379,0.991,380,1.959,381,2.6,382,0.991,383,0.975,384,1.008,385,0.991,386,1.042,387,0.991,388,1.008,389,1.042,390,1.466,391,0.991,392,1.042,393,1.042,461,0.942,475,2.759,481,2.142,483,2.33,495,0.831,497,1.153,500,4.965,501,4.33,502,3.777,505,2.591,516,3.994,517,1.914,518,1.975,519,3.592,692,3.299,821,2.188,826,3.592,827,3.068,1221,4.608,1379,3.774,1384,3.068,1402,2.389,1538,4.268,1547,3.356,1552,2.511,1691,2.337,1698,5.129,1728,2.574,1729,3.053,1788,2.657,1789,2.389,2021,2.793,2256,3.994,2369,2.511,2398,2.839,2400,5.129,2401,4.268,2530,3.084,2532,5.571,2547,3.592,2879,2.511,2882,4.268,2979,3.994,3075,3.084,3203,4.268,3696,5.571,3855,4.268,4055,5.722,4058,6.115,4059,4.268,4060,4.268,4061,4.636,4062,5.571,4063,5.571,4064,7.447,4065,4.636,4066,4.636,4067,5.571,4068,3.084,4069,4.636,4070,4.636,4071,3.774,4072,6.195,4073,4.636,4074,5.194,4075,3.455,4076,3.455,4077,3.455,4078,3.455,4079,5.194,4080,5.194,4081,5.194,4082,3.455,4083,3.455,4084,3.455,4085,5.194,4086,3.455,4087,8.344,4088,5.194,4089,6.941,4090,3.455,4091,3.084,4092,6.941,4093,3.084,4094,6.941,4095,3.084,4096,6.941]],["title/modules/RotationSliderModule.html",[397,0.746,4050,3.567]],["body/modules/RotationSliderModule.html",[3,0.075,4,0.075,5,0.075,6,0.057,11,0.004,17,0.006,23,0.075,99,0.005,100,0.004,150,0.285,151,0.637,179,0.149,204,2.034,317,1.113,380,2.839,381,1.906,397,1.078,399,2.034,400,2.034,401,2.723,402,2.068,403,2.068,404,2.723,419,2.385,420,1.876,422,2.175,423,2.549,424,4.418,425,3.344,534,2.826,535,2.33,2540,6.33,2543,6.33,4050,7.117,4055,5.453,4058,5.828,4097,6.33,4098,6.33,4099,6.33]],["title/components/SchemeDropdownComponent.html",[101,0.588,382,1.408]],["body/components/SchemeDropdownComponent.html",[3,0.068,4,0.038,5,0.038,6,0.066,8,0.501,11,0.002,12,0.523,13,0.613,15,2.545,17,0.006,18,1.271,19,0.644,20,1.303,22,3.504,23,0.038,47,1.446,48,1.492,49,2.223,53,0.717,55,0.979,65,1.283,69,2.712,86,3.574,87,0.581,99,0.003,100,0.004,101,0.771,102,1.525,103,1.299,104,0.963,105,1.045,106,1.098,107,0.979,114,2.01,117,2.79,118,2.233,120,1.5,122,1.55,127,1.283,128,0.862,129,1.539,136,0.89,144,3.443,148,1.08,150,0.165,151,0.327,169,1.045,173,1.045,177,1.525,179,0.076,193,1.476,197,1.201,199,1.452,205,1.271,224,2.471,238,3.947,239,3.852,252,1.431,268,3.403,269,1.76,270,2.018,271,2.53,275,2.451,277,1.472,279,2.276,281,2.368,283,2.359,284,1.807,286,1.568,289,1.853,290,1.32,291,4.262,293,1.028,295,2.906,296,1.602,297,1.853,299,2.488,300,3.358,301,1.568,302,1.472,306,1.718,307,3.088,308,3.568,309,3.367,311,2.993,317,0.572,318,1.429,319,1.452,320,1.098,321,2.148,322,1.098,323,1.629,324,1.028,325,1.045,326,1.629,327,1.045,328,1.098,329,1.045,330,1.098,331,1.045,332,1.515,333,1.098,334,1.045,335,1.062,336,1.098,337,1.045,338,1.098,339,1.045,340,1.098,341,1.525,342,1.629,343,1.759,344,2.295,345,1.629,346,1.045,347,1.629,348,1.045,349,1.08,350,1.629,351,1.045,352,2.011,353,1.629,354,1.525,355,1.629,356,1.045,357,1.098,358,1.045,359,1.045,360,1.098,361,1.045,362,1.098,363,1.045,364,1.942,365,1.045,366,1.098,367,1.045,368,1.629,369,1.045,370,1.098,371,1.045,372,1.098,373,1.062,374,1.098,375,1.045,376,1.098,377,1.045,378,1.098,379,1.045,380,1.028,381,0.979,382,2.044,383,1.028,384,1.062,385,1.045,386,1.098,387,1.045,388,1.062,389,1.098,390,1.525,391,1.045,392,1.098,393,1.098,420,1.429,461,0.98,475,2.273,481,2.228,483,2.405,494,2.548,495,0.876,497,0.518,505,2.017,520,2.082,522,4.495,523,3.895,526,1.853,527,2.228,629,2.377,732,2.993,814,2.097,821,2.276,832,2.821,1376,3.251,1382,4.952,1424,2.082,1503,1.76,1512,4.095,1542,3.94,1544,3.251,1545,2.519,1546,4.26,1549,2.906,1550,2.678,1551,2.993,1552,2.647,1582,5.293,1690,4.26,1692,4.155,1696,4.44,1707,5.293,1720,3.926,1775,2.313,1776,2.519,1777,3.926,1778,2.647,1779,2.519,1780,2.519,1782,2.993,1783,2.082,1786,3.251,1789,3.737,1935,1.959,2338,5.855,2339,5.749,2340,4.823,2354,2.993,2363,2.801,2373,2.993,2867,4.952,3005,6.781,3400,4.952,3403,5.478,3999,4.823,4100,7.365,4101,3.643,4102,5.403,4103,6.441,4104,5.403,4105,4.44,4106,3.643,4107,3.643,4108,3.643,4109,3.643,4110,5.403,4111,3.643,4112,5.403,4113,3.643,4114,2.801,4115,3.643,4116,3.643,4117,3.643,4118,3.643,4119,3.643,4120,3.643,4121,3.643,4122,3.643,4123,3.643,4124,3.643,4125,3.643,4126,3.643,4127,8.81,4128,5.403]],["title/modules/SchemeDropdownModule.html",[397,0.746,3002,3.567]],["body/modules/SchemeDropdownModule.html",[3,0.072,4,0.072,5,0.072,6,0.054,11,0.004,17,0.006,22,3.129,23,0.072,99,0.005,100,0.004,150,0.296,151,0.611,179,0.142,204,1.949,224,1.713,317,1.067,382,2.871,397,1.033,399,1.949,400,1.949,401,2.673,402,1.982,403,1.982,404,2.673,419,2.325,420,1.797,422,2.526,423,2.484,534,2.755,535,2.233,1503,3.283,1504,5.225,1553,6.636,1800,6.065,2392,6.334,2393,5.225,2394,6.77,2395,5.584,2396,6.065,3002,7.17,3005,5.584,4100,6.065,4114,5.225,4129,6.065,4130,6.065,4131,6.795,4132,6.065,4133,6.795,4134,7.353,4135,6.065]],["title/interfaces/SearchResult.html",[0,0.243,3645,3.774]],["body/interfaces/SearchResult.html",[0,0.312,2,0.794,3,0.037,4,0.037,5,0.037,6,0.028,8,0.484,11,0.005,12,0.61,13,0.597,15,3.003,16,1.462,17,0.006,18,1.25,19,0.659,20,0.712,23,0.083,28,2.017,36,1.565,57,2.152,65,1.841,99,0.003,100,0.005,107,2.015,119,3.589,128,1.493,131,0.901,132,2.891,137,3.21,141,1.902,150,0.271,151,0.316,153,1.365,154,3.393,156,1.421,179,0.074,180,1.935,181,2.11,183,2.095,194,1.547,205,1.126,212,2.891,216,2.464,219,1.304,236,1.197,237,4.154,240,4.831,247,1.703,248,1.949,249,3.298,259,1.949,461,1.479,497,0.897,522,2.078,526,2.678,551,1.751,568,1.451,601,4.525,620,3.081,688,1.197,731,2.556,802,4.007,832,2.498,849,2.234,850,1.7,859,3.298,900,6.045,931,2.831,936,4.998,941,1.365,942,3.641,969,1.561,1097,2.011,1222,2.917,1387,2.556,1424,2.011,1519,3.009,1715,1.365,1726,2.556,1811,2.234,1908,2.556,2114,2.891,2127,2.037,2147,2.705,2148,2.705,2149,2.011,2159,4.048,2241,1.7,2248,2.705,2254,2.705,2264,2.234,2276,2.705,2428,4.048,2624,5.119,2628,2.705,2637,5.206,2666,6.467,2773,2.556,2775,2.327,2778,2.433,2802,2.556,2810,2.433,3108,2.433,3138,3.344,3180,2.327,3272,2.705,3439,2.078,3616,2.234,3623,2.891,3638,3.826,3641,4.326,3643,2.891,3645,4.851,3679,2.891,3698,2.891,3712,2.891,3713,2.891,3714,3.14,3715,3.14,3716,2.705,3720,3.14,3723,4.699,3724,4.632,3726,5.631,3727,3.14,3729,3.14,3730,3.14,3731,7.915,3733,3.14,3734,3.14,3735,4.699,3736,3.14,3737,3.14,3739,2.891,3740,3.14,3743,3.14,3744,3.14,3745,4.699,3747,3.14,3748,3.14,3749,2.705,3750,4.699,3751,3.14,3752,3.14,3753,3.14,3754,4.699,3755,3.14,3756,2.705,3757,4.843,3758,3.14,3759,4.699,3760,7.024,3761,2.433,3762,4.326,3763,2.891,3764,3.14,3765,6.693,3766,4.048,3767,4.048,3768,3.14,3769,3.14,3770,4.699,3771,3.14,3772,3.14,3773,3.14,3774,3.14,3775,3.14,3776,3.14,3777,3.14,3778,3.14,3779,3.14,3780,3.14,3781,3.14,3782,3.14,3783,6.251,3784,3.14,3785,3.14,3786,3.14,3787,5.631,3788,5.631,3789,4.699,3790,3.14,3791,3.14,3792,4.699,3793,3.14,3794,5.631,3795,3.14,3796,2.891,3797,3.14,3798,3.14,3799,3.14,3800,3.14,3801,3.14,3802,3.14,3803,3.14,3804,3.14,3805,3.14,3806,3.14,3807,3.14,3808,3.14,3809,3.14,3810,3.14,3811,3.14,3812,4.699,3813,3.14,3814,3.14,3815,3.14,3816,3.14,3817,3.14,3818,3.14,3819,3.14,3820,3.14,3821,3.14,3822,3.14,3823,3.14,3824,3.14,3825,4.699,3826,3.14,3827,4.699,3828,4.699,3829,4.699,3830,4.699,3831,3.14,3832,3.14,3833,3.14,3834,3.14,3835,3.14,3836,3.14,3837,4.699,3838,4.699,3839,3.14,3840,2.891,3841,3.14,3842,3.14]],["title/interfaces/SearchableItem.html",[0,0.243,58,3.247]],["body/interfaces/SearchableItem.html",[0,0.45,1,2.732,2,1.147,3,0.054,4,0.054,5,0.054,6,0.041,7,3.513,8,1.063,9,3.908,10,5.059,11,0.005,12,0.349,13,0.775,14,3.513,15,2.973,16,1.578,17,0.006,18,1.702,19,0.764,20,1.384,21,3.513,22,2.339,23,0.094,24,3.077,25,3.108,26,3.389,27,3.666,28,2.22,29,2.585,30,3.513,31,3.513,32,3.227,33,2.052,34,3.807,35,3.513,36,1.918,37,4.183,38,3.513,39,3.513,40,3.36,41,3.227,42,3.36,43,3.36,44,3.227,45,4.282,46,1.564,47,1.469,48,0.951,49,1.585,50,3.788,51,1.934,52,3.001,53,0.566,54,3.36,55,1.838,56,4.039,57,4.183,58,4.523,59,5.113,60,5.279,61,5.252,62,5.252,63,5.557,64,6.009,65,1.54,66,4.157,67,5.279,68,2.779,69,1.934,70,2.732,71,2.904,72,2.814,73,2.679,74,3.001,75,4.343,76,3.227,77,3.227,78,4.183,79,4.039,80,2.904,81,3.36,82,1.365,83,2.455,84,3.001,85,3.227,86,3.36,87,1.493,88,3.513,89,2.585,90,3.227,91,3.36,92,2.395,93,3.077,94,3.108,95,3.06,96,3.108,97,2.095,98,3.36,99,0.004,100,0.003]],["title/interfaces/SlicesData.html",[0,0.243,4136,4.034]],["body/interfaces/SlicesData.html",[0,0.414,2,1.348,3,0.063,4,0.063,5,0.063,6,0.048,8,0.821,11,0.004,12,0.411,13,0.862,16,0.938,17,0.006,18,1.706,19,0.614,20,1.209,23,0.08,29,4.479,36,2.185,51,2.894,53,0.665,99,0.005,100,0.004,101,1.001,117,1.658,118,1.327,120,1.658,122,1.713,145,1.53,150,0.182,151,0.537,179,0.125,183,1.69,205,1.066,219,1.337,233,2.188,253,1.287,319,2.043,325,2.666,383,1.685,384,2.788,472,4.592,473,4.592,474,3.654,475,3.334,476,4.592,477,4.592,482,4.592,483,2.839,485,4.13,486,3.944,489,3.793,491,5.846,492,3.868,494,2.816,496,3.309,497,1.081,498,3.951,499,3.654,504,3.654,505,2.839,508,4.592,509,4.592,510,4.592,511,4.592,512,4.592,662,1.997,701,2.413,836,5.312,838,4.13,840,3.951,1202,3.528,1321,3.654,1836,4.13,2378,4.34,2971,4.908,3427,4.491,3988,4.908,4057,4.592,4136,7.236,4137,4.908,4138,8.115,4139,8.533,4140,7.465,4141,4.34,4142,5.331,4143,6.786,4144,5.331,4145,5.331,4146,5.331,4147,5.331,4148,5.331,4149,5.331,4150,5.331,4151,5.331,4152,5.331]],["title/components/SlicesInputComponent.html",[101,0.588,383,1.385]],["body/components/SlicesInputComponent.html",[0,0.265,3,0.067,4,0.038,5,0.038,6,0.068,8,0.736,11,0.002,12,0.247,13,0.607,15,2.137,16,1.003,17,0.006,18,1.141,19,0.572,20,1.433,22,2.464,23,0.056,29,3.602,36,2.039,47,1.439,48,1.484,49,2.563,51,1.369,53,0.843,55,0.966,65,1.273,87,0.574,93,1.618,99,0.003,100,0.004,101,0.906,102,1.51,103,1.286,104,0.951,105,1.031,106,1.084,107,0.966,113,2.284,114,2,117,2.787,118,2.232,120,1.486,122,1.535,127,1.066,128,0.851,129,1.586,136,0.878,145,1.371,148,1.066,150,0.11,151,0.323,169,1.031,173,1.031,177,1.51,179,0.075,183,1.189,193,0.982,197,1.189,199,1.903,205,1.141,219,1.113,224,1.611,225,2.2,233,1.96,252,1.573,253,1.153,268,3.482,269,2.586,270,2.965,271,1.698,274,1.88,275,1.369,279,2.254,281,1.718,283,1.96,284,2.748,285,2.523,286,1.547,290,1.307,291,2.408,292,1.782,293,1.015,294,2.765,297,2.722,299,1.656,301,1.547,302,1.453,305,3.341,306,3.014,307,3.058,308,1.992,309,1.88,317,0.565,318,1.415,319,2.208,320,1.084,321,2.135,322,1.084,323,1.614,324,1.015,325,2.357,326,1.614,327,1.031,328,1.084,329,1.031,330,1.084,331,1.031,332,1.346,333,1.084,334,1.031,335,1.049,336,1.084,337,1.031,338,1.084,339,1.031,340,1.084,341,1.51,342,1.614,343,1.746,344,2.282,345,1.614,346,1.031,347,1.614,348,1.031,349,1.066,350,1.614,351,1.031,352,1.51,353,1.614,354,1.51,355,1.614,356,1.031,357,1.084,358,1.031,359,1.031,360,1.084,361,1.031,362,1.084,363,1.031,364,1.927,365,1.031,366,1.084,367,1.031,368,1.614,369,1.031,370,1.084,371,1.031,372,1.084,373,1.049,374,1.084,375,1.031,376,1.084,377,1.031,378,1.084,379,1.031,380,1.015,381,0.966,382,1.031,383,1.998,384,2.796,385,1.031,386,1.084,387,1.031,388,1.049,389,1.084,390,1.51,391,1.031,392,1.084,393,1.084,461,0.97,472,2.765,473,4.115,474,3.274,475,3.384,476,4.915,477,4.115,481,2.207,482,4.915,483,2.386,485,3.701,486,3.981,488,2.955,489,2.284,491,5.82,492,3.602,494,2.523,495,0.864,496,2.965,497,0.909,498,3.54,499,3.274,504,3.274,505,1.998,508,2.765,509,2.765,510,2.765,511,2.765,512,2.765,516,4.915,517,1.992,518,2.055,519,2.487,520,2.055,521,3.209,522,4.987,523,2.408,524,2.765,525,2.765,526,2.722,527,2.2,588,1.737,596,1.656,621,1.934,662,1.789,701,2.162,836,4.807,838,3.701,840,2.378,1202,3.161,1321,3.274,1785,2.378,1807,4.398,1808,4.398,1815,2.378,1816,2.765,1817,2.955,1819,2.955,1820,2.955,1821,2.487,1832,2.284,1836,2.487,2378,2.613,2881,2.955,2971,4.398,3427,2.124,3739,2.955,3988,4.398,4057,6.492,4136,6.52,4137,6.939,4138,5.705,4139,7.838,4140,6.319,4141,5.145,4142,5.705,4143,6.319,4144,4.777,4145,5.705,4146,4.777,4147,4.777,4148,3.209,4149,3.209,4150,3.209,4151,3.209,4152,3.209,4153,6.392,4154,5.352,4155,3.596,4156,3.596,4157,3.209,4158,3.596,4159,3.596,4160,3.596,4161,3.596,4162,3.596,4163,3.596,4164,5.352]],["title/modules/SlicesInputModule.html",[397,0.746,4051,3.567]],["body/modules/SlicesInputModule.html",[3,0.074,4,0.074,5,0.074,6,0.056,11,0.004,17,0.006,23,0.074,99,0.005,100,0.004,150,0.291,151,0.634,179,0.148,204,2.023,317,1.107,383,2.837,384,2.057,397,1.072,399,2.023,400,2.023,401,2.716,402,2.057,403,2.057,404,2.716,419,2.377,420,1.865,422,2.163,423,2.54,424,4.404,425,3.325,533,6.295,534,2.817,535,2.317,536,6.923,537,5.795,538,6.295,4051,7.109,4057,5.423,4137,5.795,4165,6.295,4166,6.295,4167,6.295]],["title/interfaces/SpatialEntity.html",[0,0.243,910,2.899]],["body/interfaces/SpatialEntity.html",[0,0.366,2,1.049,3,0.049,4,0.078,5,0.084,6,0.037,8,0.639,11,0.003,12,0.32,13,0.73,15,2.894,16,1.588,17,0.006,18,1.794,19,0.803,23,0.078,27,3.569,28,2.081,36,1.977,53,1.022,70,2.5,83,3.85,84,5.547,87,1.56,99,0.004,100,0.003,217,4.451,236,2.848,261,4.451,332,1.514,381,2.249,474,3.937,498,6.416,500,5.314,501,4.635,502,4.043,616,3.365,739,5.061,910,4.942,1046,6.29,1050,4.451,1052,4.677,1100,3.365,1577,2.5,3094,4.677,3138,2.952,3172,4.949,3180,4.257,3525,3.574,3535,7.283,3570,6.127,3571,6.127,3572,6.127,3574,6.127,3577,6.127,3579,6.127,3581,6.127,3583,6.127,3585,3.574,3586,3.574,3587,3.574,3588,3.574,3589,3.574,3591,3.574,3593,3.574,3595,3.574,3597,3.574,3599,3.574,3601,3.574,3603,3.574,3605,3.574,3607,3.574,4071,3.378,4141,6.08,4168,3.82,4169,3.82,4170,5.289,4171,6.067,4172,3.82,4173,3.82,4174,3.82,4175,3.82,4176,6.548,4177,6.067,4178,3.82,4179,3.82,4180,6.548]],["title/interfaces/SpatialObjectReference.html",[0,0.243,1046,3.567]],["body/interfaces/SpatialObjectReference.html",[0,0.387,2,1.172,3,0.055,4,0.082,5,0.099,6,0.042,8,0.714,11,0.003,12,0.357,13,0.787,15,2.32,16,1.582,17,0.006,18,1.761,19,0.788,23,0.082,27,3.585,28,2.15,36,2.157,53,1.033,70,2.791,83,3.776,84,5.395,87,1.107,99,0.004,100,0.003,217,3.589,236,2.66,261,3.589,332,0.986,381,2.336,474,3.175,498,6.416,500,5.298,501,4.621,502,4.031,616,3.627,739,3.296,910,4.927,941,2.014,1046,6.317,1050,4.798,1052,5.041,1100,2.713,1577,2.791,3094,3.772,3138,3.296,3172,3.991,3180,3.433,3525,5.334,3535,6.684,3570,3.991,3571,3.991,3572,3.991,3574,3.991,3577,3.991,3579,3.991,3581,3.991,3583,3.991,3585,3.991,3586,3.991,3587,3.991,3588,3.991,3589,3.991,3591,3.991,3593,3.991,3595,3.991,3597,3.991,3599,3.991,3601,3.991,3603,3.991,3605,3.991,3607,3.991,4071,3.772,4141,6.062,4168,4.265,4169,4.265,4170,4.265,4171,5.701,4172,6.855,4173,5.701,4174,6.855,4175,4.265,4176,6.855,4177,6.422,4178,4.265,4179,4.265,4180,6.855]],["title/interfaces/SpatialPlacement.html",[0,0.243,1050,3.395]],["body/interfaces/SpatialPlacement.html",[0,0.36,2,1.017,3,0.047,4,0.093,5,0.083,6,0.036,8,0.62,11,0.003,12,0.31,13,0.714,15,2.106,16,1.575,17,0.006,18,1.802,19,0.807,23,0.077,27,3.412,28,2.06,36,1.802,53,0.979,70,3.388,83,3.044,84,5.456,87,1.255,99,0.004,100,0.003,217,3.117,236,2.472,261,3.117,332,0.857,381,2.483,474,2.757,498,6.542,500,5.588,501,4.874,502,4.251,616,4.481,739,2.863,910,5.302,1046,6.229,1050,5.022,1052,5.714,1100,2.356,1577,3.388,3094,3.275,3138,4.001,3172,3.466,3180,2.981,3525,3.466,3535,6.361,3570,3.466,3571,3.466,3572,3.466,3574,3.466,3577,3.466,3579,3.466,3581,3.466,3583,3.466,3585,6.046,3586,6.046,3587,6.046,3588,6.046,3589,6.046,3591,6.046,3593,6.046,3595,6.046,3597,6.046,3599,6.046,3601,6.046,3603,6.046,3605,6.046,3607,6.046,4071,4.578,4141,6.394,4168,3.704,4169,3.704,4170,3.704,4171,5.968,4172,3.704,4173,3.704,4174,3.704,4175,5.177,4176,7.376,4177,7.044,4178,5.177,4179,6.461,4180,7.376]],["title/interfaces/SpatialSceneNode.html",[0,0.243,574,2.719]],["body/interfaces/SpatialSceneNode.html",[0,0.217,2,0.99,3,0.065,4,0.046,5,0.046,6,0.035,11,0.003,12,0.301,13,0.701,16,1.552,17,0.006,18,1.726,19,0.781,23,0.065,28,2.099,36,2.166,46,1.912,53,0.488,69,2.352,83,2.119,87,1.549,95,2.446,99,0.004,100,0.003,125,1.237,128,1.038,141,1.322,145,2.098,150,0.277,179,0.092,205,0.783,216,2.03,219,1.284,236,1.493,240,2.292,247,1.71,252,1.726,253,0.945,282,2.429,332,1.557,492,2.231,497,1.018,525,3.372,547,3.187,550,2.785,552,4.273,574,4.537,605,2.506,608,4.752,609,2.59,614,1.702,624,4.166,629,1.929,643,3.014,644,3.423,645,2.548,658,4.491,662,2.598,673,3.076,688,2.788,694,3.187,699,3.187,700,5.515,701,1.772,702,3.914,704,3.914,705,3.914,707,3.914,711,3.914,712,5.515,713,6.386,714,3.604,715,3.033,716,3.914,717,3.372,718,5.078,719,3.914,720,3.372,721,5.88,722,3.372,723,5.515,724,3.604,725,6.969,726,3.914,727,6.386,728,4.948,729,3.914,730,3.914,731,3.187,732,3.604,733,3.914,734,3.914,735,3.914,736,3.914,737,3.914,738,3.914,739,4.934,740,5.973,741,6.713,742,6.297,743,6.297,744,5.973,745,5.973,746,6.297,747,5.973,748,4.304,749,2.068,750,5.515,751,5.078,752,2.119,753,3.604,754,3.604,755,3.604,756,6.386,757,3.914,758,3.914,759,5.515,760,3.914,761,3.914,762,3.914,763,5.515,764,5.078,765,3.372,766,3.914,767,3.914,768,6.386,769,3.914,770,3.914,771,3.914,772,3.372,773,5.515,774,5.515,775,3.914,776,5.515,777,6.384,778,3.914,779,5.515,780,3.914,781,3.372,782,2.901,783,3.914,784,3.914,785,3.914,786,3.914,787,5.515,788,6.386,789,5.88,790,5.078,791,5.515,792,5.515,793,3.914,794,3.914,795,3.914,796,3.914,797,3.914,798,3.604,799,3.914,800,3.914,801,3.914,802,2.785,803,3.914,804,3.914,805,3.372,806,3.914,807,3.914,808,3.372,809,3.914,810,3.914,811,3.914]],["title/interfaces/SpatialSceneNode-1.html",[0,0.203,253,0.885,574,2.276]],["body/interfaces/SpatialSceneNode-1.html",[0,0.196,2,1.297,3,0.042,4,0.042,5,0.042,6,0.032,11,0.003,12,0.272,13,0.651,16,1.523,17,0.006,18,1.657,19,0.771,23,0.061,28,1.893,45,2.194,46,1.862,61,3.649,62,3.649,66,2.13,73,2.846,74,3.394,83,2.776,87,1.529,90,2.516,99,0.003,100,0.002,118,1.277,127,1.347,128,2.054,145,2.223,150,0.251,152,2.015,179,0.083,219,1.338,237,2.194,240,3.004,247,1.769,252,2.12,253,1.769,272,1.633,332,1.792,474,2.423,489,3.649,497,0.817,520,4.239,568,1.633,574,5.097,608,4.537,609,2.339,616,2.071,624,4.935,673,3.436,725,6.055,739,5.001,740,6.801,741,6.801,742,6.055,743,6.055,744,6.055,745,6.514,746,6.055,747,6.055,772,3.046,781,4.418,805,3.046,808,6.055,857,3.864,859,4.624,863,6.428,886,3.8,887,2.878,909,2.878,910,4.651,938,3.046,942,2.739,955,2.739,964,2.878,965,1.868,1020,4.175,1041,3.046,1058,3.255,1068,3.046,1069,3.255,1074,6.471,1076,3.255,1077,3.046,1078,3.046,1079,3.255,1097,2.264,1099,3.255,1124,3.535,1131,3.535,1133,3.535,1135,3.535,1137,3.535,1140,3.535,1141,5.128,1143,3.046,1144,7.028,1145,5.128,1146,3.535,1147,3.535,1148,3.535,1149,6.62,1150,7.028,1151,5.128,1152,5.128,1153,7.562,1154,3.535,1155,5.128,1156,3.535,1157,3.535,1158,3.535,1159,3.255,1160,3.535,1161,3.535,1162,3.535,1163,3.535,1164,3.535,1165,3.535,1166,3.535,1167,3.535,1168,5.128,1169,3.535,1170,3.535,1171,7.746,1172,5.128,1173,5.128,1174,5.128,1175,5.128,1176,5.128,1177,3.535,1178,5.128,1179,3.535,1180,5.128,1181,5.128,1182,3.535,1183,3.535,1184,3.535,1185,3.535,1186,3.535,1187,3.535,1188,3.535,1189,3.535,1190,3.535,1191,3.535,1192,7.028,1193,5.128,1194,3.535,1195,3.535,1196,3.535,1197,5.128,1198,3.535,1199,3.255,1200,3.535,1201,4.175,1202,2.339,1203,3.535,1204,3.535,1205,3.535,1206,3.535,1207,3.535,1208,3.535,1209,1.914,1210,3.535,1211,3.535,1212,3.535,1213,3.535,1214,3.535,1215,3.535,1216,3.535]],["title/components/SpinnerOverlayComponent.html",[101,0.588,385,1.408]],["body/components/SpinnerOverlayComponent.html",[3,0.077,4,0.048,5,0.048,6,0.063,8,1.14,11,0.003,12,0.434,16,0.992,17,0.006,19,0.366,20,1.279,23,0.048,47,1.575,48,1.606,49,1.412,53,0.703,55,1.217,65,1.45,82,1.698,87,1.257,93,2.037,99,0.004,100,0.004,101,0.992,102,1.783,103,1.519,104,1.197,105,1.299,106,1.365,107,1.217,114,2.164,117,2.823,118,2.262,120,1.754,122,1.813,125,1.278,127,1.259,128,1.071,129,1.405,136,1.106,147,5.944,148,2.866,150,0.138,151,0.407,169,1.299,173,1.299,177,1.783,179,0.174,193,1.237,199,1.217,224,1.835,252,1.404,253,1.361,268,2.606,269,2.188,270,2.508,271,1.437,272,2.606,274,2.367,277,1.829,279,1.907,280,3.865,281,1.217,282,4.755,283,1.658,284,1.514,286,1.948,290,1.543,291,2.843,293,1.278,299,2.085,302,2.553,305,2.367,306,2.979,307,2.587,312,2.875,317,0.711,318,2.083,319,1.698,320,1.365,321,2.375,322,1.365,323,1.905,324,1.278,325,1.299,326,1.905,327,1.299,328,1.365,329,1.299,330,1.365,331,1.299,332,1.497,333,1.365,334,1.299,335,1.32,336,1.365,337,1.299,338,1.365,339,1.299,340,1.365,341,1.783,342,1.905,343,1.988,344,2.499,345,1.905,346,1.299,347,1.905,348,1.299,349,1.343,350,1.905,351,1.299,352,1.783,353,1.905,354,1.783,355,1.905,356,1.299,357,1.365,358,1.299,359,1.299,360,1.365,361,1.299,362,1.365,363,1.299,364,2.195,365,1.299,366,1.365,367,1.299,368,1.905,369,1.299,370,1.365,371,1.299,372,1.365,373,1.32,374,1.365,375,1.299,376,1.365,377,1.299,378,1.365,379,1.299,380,1.278,381,1.217,382,1.299,383,1.278,384,1.32,385,2.26,386,1.365,387,1.299,388,1.32,389,1.365,390,1.783,391,1.299,392,1.365,393,1.365,395,2.587,420,1.671,449,6.474,475,2.569,502,2.188,523,2.037,526,4.644,662,2.113,821,2.661,1202,2.674,1220,4.118,1385,4.859,1519,3.611,1562,4.592,1566,2.979,1567,2.979,1579,2.135,1783,2.587,1785,2.995,1835,5.597,1871,4.013,1920,2.674,1939,2.674,1940,2.769,2021,3.398,2062,4.37,2371,4.859,4181,7.031,4182,4.527,4183,6.319,4184,7.279,4185,6.319,4186,4.527,4187,6.319,4188,4.527,4189,6.319,4190,4.527,4191,4.527,4192,4.527,4193,4.527]],["title/modules/SpinnerOverlayModule.html",[397,0.746,418,3.567]],["body/modules/SpinnerOverlayModule.html",[3,0.075,4,0.075,5,0.075,6,0.057,11,0.004,17,0.006,23,0.075,99,0.005,100,0.004,148,2.508,150,0.285,151,0.638,179,0.149,204,2.037,317,1.115,385,2.886,397,1.079,399,2.037,400,2.037,401,2.724,402,2.071,403,2.071,404,2.724,418,7.119,419,2.387,420,1.878,422,2.178,423,2.551,449,5.836,534,2.829,535,2.333,4181,6.339,4194,6.339,4195,6.339,4196,6.339,4197,7.102,4198,8.459,4199,7.102,4200,7.102]],["title/components/StageNavComponent.html",[101,0.588,387,1.408]],["body/components/StageNavComponent.html",[3,0.071,4,0.041,5,0.041,6,0.067,8,0.92,11,0.002,12,0.267,17,0.006,19,0.66,20,1.148,23,0.06,45,2.155,46,1.582,47,1.486,48,1.527,49,1.214,53,0.819,55,1.046,65,1.333,87,0.905,93,1.75,99,0.003,100,0.004,101,1.054,102,1.6,103,1.363,104,1.029,105,1.116,106,1.173,107,1.046,114,2.057,117,2.8,118,2.242,120,1.574,122,1.627,127,1.13,128,0.921,129,1.576,133,3.751,136,0.95,144,3.553,145,1.452,146,4.499,148,1.154,150,0.119,151,0.35,159,5.918,169,1.116,173,1.116,177,1.6,179,0.082,183,1.26,193,2.229,197,1.26,199,2.264,205,1.312,224,1.687,228,3.922,233,2.077,239,2.74,268,1.604,271,1.8,275,2.158,284,2.459,285,3.467,286,1.674,289,2.885,290,1.385,293,1.098,305,2.034,306,1.834,317,0.611,318,1.5,319,1.524,320,1.173,321,2.218,322,1.173,323,1.71,324,1.098,325,1.116,326,1.71,327,1.116,328,1.173,329,1.116,330,1.173,331,1.116,332,1.486,333,1.173,334,1.116,335,1.135,336,1.173,337,1.116,338,1.173,339,1.116,340,1.173,341,1.6,342,1.71,343,1.828,344,2.357,345,1.71,346,1.116,347,1.71,348,1.116,349,1.154,350,1.71,351,1.116,352,1.6,353,1.71,354,1.6,355,1.71,356,1.116,357,1.173,358,1.116,359,1.116,360,1.173,361,1.116,362,1.173,363,1.116,364,2.018,365,1.116,366,1.173,367,1.116,368,1.71,369,1.116,370,1.173,371,1.116,372,1.173,373,1.135,374,1.173,375,1.116,376,1.173,377,1.116,378,1.173,379,1.116,380,1.098,381,1.046,382,1.116,383,1.098,384,1.135,385,1.116,386,1.173,387,2.11,388,2.609,389,1.173,390,1.6,391,1.116,392,1.173,393,1.173,461,1.028,475,3.108,481,2.339,483,2.919,485,5.086,486,1.834,495,1.363,497,1.046,505,3.146,596,3.386,662,2.459,821,2.389,826,5.644,827,4.344,832,3.231,940,6.64,1221,2.74,1222,4.668,1357,3.472,1375,3.35,1691,2.551,1717,4.121,1789,3.922,2019,6.072,2044,2.885,2104,6.479,2316,4.864,2547,5.086,2591,4.361,2695,3.472,2979,5.655,3039,5.062,4201,6.924,4202,3.472,4203,5.671,4204,7.354,4205,6.692,4206,5.671,4207,5.671,4208,5.671,4209,6.692,4210,6.692,4211,6.692,4212,6.978,4213,3.89,4214,5.671,4215,3.89,4216,5.671,4217,3.89,4218,3.89,4219,5.671,4220,3.89,4221,7.354,4222,5.671,4223,3.89,4224,3.472,4225,5.973,4226,3.89,4227,3.89,4228,3.89,4229,3.89,4230,5.671,4231,3.89,4232,3.89]],["title/modules/StageNavModule.html",[397,0.746,2102,3.567]],["body/modules/StageNavModule.html",[3,0.074,4,0.074,5,0.074,6,0.056,11,0.004,17,0.006,23,0.074,99,0.005,100,0.004,150,0.291,151,0.633,179,0.148,204,2.02,290,1.72,317,1.106,387,2.883,388,2.054,397,1.07,399,2.02,400,2.02,401,2.715,402,2.054,403,2.054,404,2.715,419,2.375,420,1.862,422,2.16,423,2.538,534,2.815,535,2.314,2102,7.107,2104,5.415,4134,7.513,4135,6.286,4201,5.787,4233,6.286,4234,6.286,4235,6.286,4236,7.043,4237,8.417,4238,7.043,4239,7.043]],["title/modules/StoreModule.html",[397,0.746,2110,3.567]],["body/modules/StoreModule.html",[3,0.072,4,0.072,5,0.072,6,0.055,11,0.004,17,0.006,23,0.087,33,2.779,36,1.707,99,0.005,100,0.004,150,0.3,151,0.618,167,5.739,179,0.144,182,4.999,219,1.011,237,3.811,397,1.045,399,1.973,422,2.11,423,2.502,850,3.324,1274,3.931,2110,6.031,2147,5.289,2148,5.289,2166,6.14,2241,3.324,2713,4.999,2721,5.489,3045,6.031,3118,6.14,3724,5.489,4059,5.653,4240,6.879,4241,6.879,4242,6.14,4243,6.879,4244,6.879,4245,6.879,4246,6.879,4247,6.879,4248,6.879,4249,6.879,4250,6.879,4251,6.879,4252,6.879,4253,6.879,4254,6.879,4255,6.879,4256,6.879,4257,6.879,4258,6.879,4259,6.879,4260,6.879,4261,6.879,4262,6.879]],["title/modules/ThemingModule.html",[397,0.746,2111,3.567]],["body/modules/ThemingModule.html",[3,0.077,4,0.077,5,0.077,6,0.058,11,0.004,17,0.006,23,0.077,99,0.005,100,0.004,145,1.864,150,0.262,151,0.654,164,6.447,179,0.153,204,2.087,317,1.142,397,1.106,399,2.087,400,2.087,401,2.194,402,2.122,403,2.662,404,2.194,419,2.422,420,1.924,423,2.588,453,5.98,454,5.98,2111,7.083,4263,6.495,4264,6.495,4265,7.277,4266,8.582,4267,7.277,4268,7.277,4269,7.277]],["title/injectables/ThemingService.html",[164,3.247,2127,1.585]],["body/injectables/ThemingService.html",[3,0.046,4,0.046,5,0.046,6,0.074,8,1.126,11,0.003,12,0.301,13,0.7,16,1.503,17,0.006,19,0.72,20,0.886,23,0.065,53,0.911,68,2.219,70,3.319,71,3.527,82,1.659,87,1.465,99,0.004,100,0.003,101,1.131,103,1.484,119,1.926,127,1.775,129,1.773,147,4.082,150,0.188,151,0.393,164,4.082,179,0.198,180,1.893,183,1.819,185,6.726,191,4.746,197,1.372,205,1.639,219,1.283,231,7.696,238,4.936,247,1.621,259,4.936,279,3.269,402,1.8,451,3.597,461,1.54,495,1.967,497,1.104,551,2.657,566,1.298,621,2.354,701,2.888,918,5.969,969,2.427,978,2.425,1016,3.34,1220,4.658,1384,4.834,1387,6.171,1715,2.395,1726,4.485,1890,3.775,1904,4.746,1928,3.366,1929,3.366,1937,2.896,2042,3.14,2119,2.896,2127,1.993,2128,2.354,2203,3.92,2264,3.92,2454,5.072,2477,3.366,2625,5.969,2742,3.027,3124,2.502,3415,2.586,3422,2.586,4270,4.378,4271,5.509,4272,7.789,4273,5.509,4274,6.928,4275,5.509,4276,6.928,4277,5.509,4278,3.907,4279,4.378,4280,5.509,4281,4.378,4282,5.509,4283,7.305,4284,4.378,4285,5.509,4286,8.086,4287,4.378,4288,5.509,4289,5.509,4290,4.378,4291,4.378,4292,5.509,4293,4.378,4294,4.378,4295,5.509,4296,4.378,4297,4.378,4298,3.907,4299,3.907,4300,3.907,4301,3.907,4302,3.907,4303,3.907,4304,3.907,4305,6.928,4306,5.509,4307,3.907,4308,3.907,4309,6.38,4310,3.907,4311,5.509,4312,3.907,4313,3.907,4314,3.907,4315,3.907,4316,3.907,4317,3.907,4318,3.907,4319,3.907]],["title/injectables/ThemingService-1.html",[164,2.717,253,0.885,2127,1.326]],["body/injectables/ThemingService-1.html",[3,0.046,4,0.046,5,0.046,6,0.074,8,1.126,11,0.003,12,0.301,13,0.7,16,1.503,17,0.006,19,0.72,20,0.886,23,0.065,53,0.911,68,2.219,70,3.319,71,3.527,82,1.659,87,1.465,99,0.004,100,0.003,101,1.131,103,1.484,119,1.926,127,1.775,129,1.773,147,4.082,150,0.188,151,0.393,164,4.082,179,0.198,180,1.893,183,1.819,185,6.726,191,4.746,197,1.372,205,1.639,219,1.283,231,7.696,238,4.936,247,1.621,259,4.936,279,3.269,402,1.8,451,3.597,461,1.54,495,1.967,497,1.104,551,2.657,566,1.298,621,2.354,701,2.888,918,5.969,969,2.427,978,2.425,1016,3.34,1220,4.658,1384,4.834,1387,6.171,1715,2.395,1726,4.485,1890,3.775,1904,4.746,1928,3.366,1929,3.366,1937,2.896,2042,3.14,2119,2.896,2127,1.993,2128,2.354,2203,3.92,2264,3.92,2454,5.072,2477,3.366,2625,5.969,2742,3.027,3124,2.502,3415,2.586,3422,2.586,4271,5.509,4272,7.789,4273,5.509,4274,6.928,4275,5.509,4276,6.928,4277,5.509,4278,3.907,4280,5.509,4282,5.509,4283,7.305,4285,5.509,4286,8.086,4288,5.509,4289,5.509,4292,5.509,4295,5.509,4298,3.907,4299,3.907,4300,3.907,4301,3.907,4302,3.907,4303,3.907,4304,3.907,4305,6.928,4306,5.509,4307,3.907,4308,3.907,4309,6.38,4310,3.907,4311,5.509,4312,3.907,4313,3.907,4314,3.907,4315,3.907,4316,3.907,4317,3.907,4318,3.907,4319,3.907,4320,4.378,4321,4.378,4322,4.378,4323,4.378,4324,4.378,4325,4.378,4326,4.378,4327,4.378,4328,4.378,4329,4.378,4330,4.378]],["title/interfaces/TiffInfo.html",[0,0.243,1230,3.003]],["body/interfaces/TiffInfo.html",[0,0.372,2,1.32,3,0.095,4,0.079,5,0.062,6,0.047,11,0.004,12,0.402,13,0.851,16,1.51,17,0.006,18,1.612,19,0.76,23,0.095,34,4.463,47,1.574,48,1.403,87,1.197,95,2.97,99,0.005,100,0.004,127,1.165,150,0.178,216,2.464,219,1.328,247,1.886,701,3.03,749,3.537,752,4.365,857,3.342,859,4.976,965,2.757,1209,2.826,1224,5.066,1226,3.454,1227,4.962,1228,4.588,1229,5.26,1230,5.344,1231,5.26,1329,3.577,1937,3.868,2255,4.496,2758,4.044,3186,4.496,3481,4.496,3482,5.219,3483,5.219,3484,6.695,3485,6.806,3486,4.806,3487,4.806,3488,4.806,3489,7.107,3490,4.806,3491,4.806,3492,4.806,3493,4.806,3494,4.806,3495,4.806,3496,5.219,3497,8.25,3498,5.219,3499,4.806,3500,5.219,3501,5.219,3502,5.219,3503,5.219,3504,5.219,3505,5.219,3506,5.219,3507,4.806,3508,5.219,3509,5.219,3510,5.219,3511,5.219,3512,5.219,3513,5.219,3514,5.219,3515,5.219,3516,5.219,3517,5.219,3518,5.219,3519,5.219,3520,5.219]],["title/interfaces/TissueData.html",[0,0.243,478,4.034]],["body/interfaces/TissueData.html",[0,0.414,2,1.347,3,0.063,4,0.063,5,0.063,6,0.048,8,0.82,11,0.004,12,0.41,13,0.861,16,0.937,17,0.006,18,1.722,19,0.676,20,1.207,23,0.08,29,4.253,51,2.891,53,0.664,99,0.005,100,0.004,101,1.001,117,1.656,118,1.326,120,1.656,122,1.711,150,0.182,151,0.536,179,0.125,183,1.688,205,1.356,219,1.117,233,2.185,271,2.411,281,2.042,293,2.622,319,1.603,324,1.683,325,2.847,470,4.902,471,4.587,472,4.587,473,4.587,474,5.384,475,3.106,476,4.587,477,4.587,478,7.232,479,5.325,482,4.587,483,2.836,485,4.125,486,4.15,488,4.902,489,5.997,490,5.325,491,5.842,492,4.253,494,2.813,496,3.305,497,1.081,498,3.946,499,3.649,500,5.901,501,5.147,502,4.49,504,3.649,505,2.836,506,5.842,507,6.781,508,4.587,509,4.587,510,4.587,511,5.842,512,4.587,513,7.461,514,6.781]],["title/components/ToggleButtonComponent.html",[101,0.588,390,1.385]],["body/components/ToggleButtonComponent.html",[3,0.064,4,0.035,5,0.035,6,0.071,8,0.832,11,0.002,12,0.226,13,0.566,16,0.784,17,0.006,19,0.546,20,1.368,23,0.035,33,3.467,46,1.368,47,1.383,48,1.434,49,1.558,53,0.853,55,0.882,65,1.205,82,1.817,87,0.797,99,0.003,100,0.004,101,1.007,102,1.41,103,1.201,104,0.868,105,0.941,106,0.99,107,0.882,114,2.462,117,2.771,118,2.227,120,1.387,122,1.433,125,0.926,127,1.347,128,0.777,129,1.684,131,1.279,136,0.801,141,1.506,145,1.549,148,0.973,150,0.206,151,0.295,153,1.274,169,0.941,173,0.941,177,2.163,179,0.152,180,1.532,181,1.67,183,1.503,192,2.476,193,1.652,194,2.197,197,1.11,199,1.955,205,1.368,219,0.889,224,1.525,247,1.412,271,1.041,277,3.399,279,2.104,281,0.882,290,2.323,291,1.476,293,0.926,296,4.015,297,1.669,300,2.104,301,1.412,302,1.326,317,0.515,318,1.788,319,1.343,320,0.99,321,2.039,322,0.99,323,1.506,324,0.926,325,0.941,326,1.506,327,0.941,328,0.99,329,0.941,330,0.99,331,0.941,332,1.285,333,0.99,334,0.941,335,0.957,336,0.99,337,0.941,338,0.99,339,0.941,340,0.99,341,1.41,342,1.506,343,1.652,344,2.194,345,1.506,346,0.941,347,1.506,348,0.941,349,0.973,350,1.506,351,0.941,352,1.41,353,1.506,354,1.41,355,1.506,356,0.941,357,0.99,358,0.941,359,0.941,360,0.99,361,0.941,362,0.99,363,0.941,364,1.824,365,0.941,366,0.99,367,0.941,368,1.506,369,0.941,370,0.99,371,0.941,372,0.99,373,0.957,374,0.99,375,0.941,376,0.99,377,0.941,378,0.99,379,0.941,380,0.926,381,0.882,382,0.941,383,0.926,384,0.957,385,0.941,386,0.99,387,0.941,388,0.957,389,0.99,390,2.053,391,0.941,392,0.99,393,0.99,395,1.875,461,1.389,494,2.355,495,1.201,497,0.71,520,1.875,523,1.476,551,2.382,566,0.973,596,3.529,643,1.382,645,1.353,662,2.023,748,1.818,814,2.624,815,3.842,820,4.294,880,1.875,941,1.939,969,1.481,1097,1.875,1516,2.767,1547,2.687,1549,1.765,1566,2.355,1567,2.355,1579,1.547,1691,3.042,1715,1.939,1781,5.199,1783,1.875,1858,2.852,1861,3.187,1864,1.326,1867,5.061,1868,3.455,1869,3.188,1871,3.173,1874,4.136,1875,4.136,1877,2.06,1878,2.444,1879,3.056,1882,2.975,1886,3.173,1887,3.304,1888,3.173,1894,3.056,1912,3.842,1913,3.173,1920,1.938,1924,2.171,1934,3.636,1935,4.691,1939,1.938,1940,2.007,1945,2.269,1947,2.269,1948,2.084,1953,2.385,1956,2.084,1999,2.767,2007,3.455,2009,3.63,2010,3.455,2016,4.054,2019,4.868,2038,2.269,2044,1.669,2090,2.541,2335,7.269,2380,5.199,2437,3.455,2664,2.697,2878,4.105,3084,2.697,3087,4.971,3088,4.105,3286,2.523,3291,2.523,3292,2.523,3293,4.651,3310,3.841,3336,2.523,3340,3.841,3351,5.893,3352,5.893,4331,8.846,4332,4.459,4333,2.929,4334,4.459,4335,6.841,4336,2.929,4337,2.929,4338,4.459,4339,2.929,4340,2.929,4341,2.929,4342,2.929,4343,2.929,4344,2.929,4345,2.929,4346,2.929,4347,2.929,4348,2.929,4349,2.929,4350,2.929,4351,2.929,4352,2.929,4353,2.929,4354,2.929,4355,2.929,4356,2.929,4357,4.459,4358,2.929,4359,4.459,4360,2.929]],["title/components/ToggleButtonComponent-1.html",[101,0.492,253,0.885,390,1.159]],["body/components/ToggleButtonComponent-1.html",[3,0.064,4,0.035,5,0.035,6,0.071,8,0.831,11,0.002,12,0.225,13,0.566,16,0.784,17,0.006,19,0.546,20,1.368,23,0.035,33,3.466,46,1.368,47,1.382,48,1.434,49,1.557,53,0.853,55,0.881,65,1.204,82,1.816,87,0.797,99,0.003,100,0.004,101,1.007,102,1.409,103,1.2,104,0.867,105,0.941,106,0.989,107,0.881,114,2.462,117,2.771,118,2.227,120,1.386,122,1.432,125,0.925,127,1.346,128,0.776,129,1.684,131,1.279,136,0.801,141,1.506,145,1.549,148,0.972,150,0.206,151,0.295,153,1.273,169,0.941,173,0.941,177,2.162,179,0.152,180,1.531,181,1.67,183,1.502,192,2.474,193,1.651,194,2.196,197,1.11,199,1.955,205,1.367,219,0.889,224,1.524,247,1.411,253,0.706,271,1.041,277,3.398,279,2.103,281,0.881,290,2.323,291,1.475,293,0.925,296,4.014,297,1.668,300,2.103,301,1.411,302,1.325,317,0.515,318,1.787,319,1.342,320,0.989,321,2.038,322,0.989,323,1.506,324,0.925,325,0.941,326,1.506,327,0.941,328,0.989,329,0.941,330,0.989,331,0.941,332,1.285,333,0.989,334,0.941,335,0.956,336,0.989,337,0.941,338,0.989,339,0.941,340,0.989,341,1.409,342,1.506,343,1.651,344,2.193,345,1.506,346,0.941,347,1.506,348,0.941,349,0.972,350,1.506,351,0.941,352,1.409,353,1.506,354,1.409,355,1.506,356,0.941,357,0.989,358,0.941,359,0.941,360,0.989,361,0.941,362,0.989,363,0.941,364,1.823,365,0.941,366,0.989,367,0.941,368,1.506,369,0.941,370,0.989,371,0.941,372,0.989,373,0.956,374,0.989,375,0.941,376,0.989,377,0.941,378,0.989,379,0.941,380,0.925,381,0.881,382,0.941,383,0.925,384,0.956,385,0.941,386,0.989,387,0.941,388,0.956,389,0.989,390,2.052,391,0.941,392,0.989,393,0.989,395,1.874,461,1.389,494,2.354,495,1.2,497,0.71,520,1.874,523,1.475,551,2.382,566,0.972,596,3.528,643,1.381,645,1.352,662,2.022,748,1.817,814,2.623,815,3.84,820,4.293,880,1.874,941,1.938,969,1.481,1097,1.874,1516,2.766,1547,2.685,1549,1.764,1566,2.354,1567,2.354,1579,1.546,1691,3.041,1715,1.938,1781,5.197,1783,1.874,1858,2.851,1861,3.187,1864,1.325,1867,5.06,1868,3.453,1869,3.187,1871,3.171,1874,4.135,1875,4.135,1877,2.059,1878,2.443,1879,3.054,1882,2.974,1886,3.171,1887,3.303,1888,3.171,1894,3.054,1912,3.84,1913,3.171,1920,1.937,1924,2.169,1934,3.635,1935,4.691,1939,1.937,1940,2.006,1945,2.268,1947,2.268,1948,2.083,1953,2.383,1956,2.083,1999,2.766,2007,3.453,2009,3.628,2010,3.453,2016,4.053,2019,4.866,2038,2.268,2044,1.668,2090,2.54,2335,7.268,2380,5.197,2437,3.453,2664,2.695,2878,4.103,3084,2.695,3087,4.969,3088,4.103,3286,2.522,3291,2.522,3292,2.522,3293,4.649,3310,3.839,3336,2.522,3340,3.839,3351,5.892,3352,5.892,4332,4.457,4333,2.927,4334,4.457,4335,6.839,4336,2.927,4337,2.927,4338,4.457,4339,2.927,4340,2.927,4341,2.927,4342,2.927,4343,2.927,4344,2.927,4345,2.927,4346,2.927,4347,2.927,4348,2.927,4349,2.927,4350,2.927,4351,2.927,4352,2.927,4353,2.927,4354,2.927,4355,2.927,4356,2.927,4357,4.457,4358,2.927,4359,4.457,4360,2.927,4361,8.845]],["title/interfaces/ValueObject.html",[0,0.243,2776,3.774]],["body/interfaces/ValueObject.html",[0,0.45,2,1.234,3,0.058,4,0.058,5,0.058,6,0.044,8,0.752,11,0.003,12,0.376,13,0.814,15,2.847,16,1.388,17,0.006,19,0.442,20,1.954,22,4.072,23,0.09,28,2.224,51,3.051,53,0.984,65,1.762,99,0.004,100,0.003,150,0.219,154,2.94,183,1.215,216,2.982,219,1.409,247,1.141,461,0.991,568,2.961,601,4.28,614,2.122,620,3.993,848,4.579,1388,5.634,2624,3.861,2637,3.616,2770,6.165,2771,4.492,2772,4.492,2773,7.309,2774,6.997,2775,3.616,2776,6.547,2777,4.492,2778,4.965,2779,5.9,2780,5.9,2781,5.826,2782,5.9,2783,4.492,2784,7.267,2785,7.267,2786,5.9,2787,4.492,2788,4.492,2789,6.589,2790,4.492,2791,4.492,2792,4.492,2793,4.492,2794,5.9,2795,4.492,2796,4.492,2797,4.492,2798,4.492,2799,4.492,2800,4.492,2801,4.492,2802,3.973,2803,3.973,2804,5.9,2805,4.492,2806,4.492,2807,4.492,2808,4.492,2809,4.492,2810,3.78,2811,4.492]],["title/components/ViewerComponent.html",[101,0.588,391,1.408]],["body/components/ViewerComponent.html",[3,0.074,4,0.032,5,0.032,6,0.075,11,0.003,12,0.322,13,0.531,16,1.163,17,0.006,18,1.38,19,0.718,20,1.565,23,0.032,28,0.725,34,2.156,46,0.61,47,1.623,48,1.721,53,0.825,55,0.811,65,1.143,68,1.683,72,1.671,87,1.032,92,3.494,95,2.561,99,0.003,100,0.003,101,0.687,102,1.321,103,1.125,104,0.798,105,0.865,106,0.909,107,0.811,114,1.868,117,2.755,118,2.208,120,1.3,122,1.343,125,0.851,127,1.143,128,0.714,129,1.797,136,0.737,145,1.47,148,0.894,150,0.197,151,0.271,169,0.865,173,0.865,177,1.321,179,0.063,193,1.279,197,1.04,199,1.258,205,1.426,216,1.538,219,1.275,224,1.446,247,1.714,252,1.647,253,1.008,271,2.052,272,2.667,275,2.462,277,1.891,279,1.27,281,1.542,290,1.143,293,0.851,295,1.622,305,2.447,306,1.422,317,0.474,318,1.238,319,1.992,320,0.909,321,1.95,322,0.909,323,1.412,324,0.851,325,0.865,326,1.412,327,0.865,328,0.909,329,0.865,330,0.909,331,0.865,332,1.331,333,0.909,334,0.865,335,0.88,336,0.909,337,0.865,338,0.909,339,0.865,340,0.909,341,1.321,342,1.412,343,1.567,344,2.111,345,1.412,346,0.865,347,1.412,348,0.865,349,0.894,350,1.412,351,0.865,352,1.321,353,1.412,354,1.321,355,1.412,356,0.865,357,0.909,358,0.865,359,0.865,360,0.909,361,0.865,362,0.909,363,0.865,364,1.73,365,0.865,366,0.909,367,0.865,368,1.412,369,0.865,370,0.909,371,0.865,372,0.909,373,0.88,374,0.909,375,0.865,376,0.909,377,0.865,378,0.909,379,0.865,380,0.851,381,0.811,382,0.865,383,0.851,384,0.88,385,0.865,386,0.909,387,0.865,388,0.88,389,0.909,390,1.321,391,1.855,392,0.909,393,0.909,395,1.724,419,0.851,461,1.449,475,2.025,481,1.931,483,2.142,495,1.555,497,0.816,502,1.457,505,1.748,526,2.382,551,2.632,566,0.894,588,1.457,612,2.106,616,1.577,618,4.377,624,3.77,629,3.516,643,2.417,644,2.594,645,1.931,662,1.566,673,1.194,748,2.594,749,3.646,752,3.125,765,2.319,814,1.817,815,3.644,820,4.108,821,1.972,836,5.076,838,3.238,840,1.995,880,1.724,1097,1.724,1209,1.457,1217,1.995,1220,2.447,1221,1.457,1228,1.845,1230,1.845,1244,1.671,1247,1.916,1248,3.77,1250,2.086,1257,3.389,1262,3.238,1265,4.278,1282,4.108,1299,2.086,1314,3.238,1320,4.278,1349,1.995,1516,2.594,1566,2.208,1567,2.208,1572,3.766,1579,1.422,1580,1.916,1783,1.724,1841,4.179,1858,2.706,1869,3.05,2725,3.238,2852,2.692,2860,5.033,2935,2.692,2987,2.692,2990,2.319,3013,5.122,3016,2.692,3018,2.692,3019,2.692,3020,4.179,3186,5.698,3507,3.847,3898,3.6,3939,2.192,3956,3.847,3990,5.122,4060,3.847,4091,4.179,4093,4.179,4095,4.179,4362,3.016,4363,5.738,4364,4.682,4365,5.738,4366,5.738,4367,4.682,4368,6.468,4369,6.468,4370,3.016,4371,4.682,4372,4.682,4373,4.682,4374,3.016,4375,3.016,4376,3.016,4377,3.016,4378,4.682,4379,3.016,4380,3.016,4381,3.016,4382,3.016,4383,3.016,4384,4.682,4385,3.016,4386,3.016,4387,5.738,4388,3.016,4389,3.016,4390,3.016,4391,3.016,4392,2.692,4393,5.738,4394,3.016,4395,3.016,4396,3.016,4397,3.016,4398,4.682,4399,3.016,4400,3.016,4401,3.016,4402,5.122,4403,3.016,4404,5.738,4405,2.692,4406,3.016,4407,3.016,4408,4.682,4409,3.016,4410,3.016,4411,3.016,4412,3.016,4413,4.682,4414,3.016,4415,4.682,4416,4.179,4417,3.016,4418,4.682,4419,3.016,4420,3.016,4421,5.738,4422,3.016,4423,2.479,4424,3.016,4425,3.016,4426,3.016,4427,3.016,4428,3.016,4429,3.016,4430,3.016,4431,3.016,4432,3.016,4433,3.016,4434,3.016,4435,3.016,4436,3.016,4437,3.016,4438,3.016,4439,3.016,4440,3.016,4441,3.016,4442,3.016,4443,3.016,4444,3.016,4445,3.016,4446,5.122,4447,3.016]],["title/modules/ViewerModule.html",[397,0.746,3035,3.395]],["body/modules/ViewerModule.html",[3,0.075,4,0.075,5,0.075,6,0.057,11,0.004,17,0.006,23,0.075,99,0.005,100,0.004,150,0.286,151,0.641,179,0.149,204,2.046,317,1.12,391,2.888,397,1.084,399,2.046,400,2.046,401,2.729,402,2.08,403,2.08,404,2.729,419,2.393,420,1.886,422,2.187,423,2.557,424,4.433,425,3.363,534,2.836,535,2.343,2860,3.836,3035,6.78,4448,6.366,4449,6.366,4450,6.366,4451,7.132,4452,7.132]],["title/injectables/ViewerState.html",[2127,1.585,3045,3.567]],["body/injectables/ViewerState.html",[0,0.232,3,0.049,4,0.049,5,0.049,6,0.071,11,0.003,12,0.576,13,0.733,15,1.565,16,1.396,17,0.006,18,1.586,19,0.646,20,1.308,23,0.068,28,2.085,48,1.21,53,0.934,80,2.674,87,1.275,99,0.004,100,0.003,125,2.447,127,1.288,129,1.674,141,1.95,150,0.284,151,0.421,154,2.516,156,1.89,179,0.098,197,1.437,205,1.548,219,1.404,224,2.014,233,3.177,247,0.977,252,1.646,253,1.806,272,1.93,332,1.594,461,1.449,495,1.921,497,0.919,551,2.056,568,2.666,588,3.579,612,3.333,614,2.875,629,3.259,662,1.565,692,4.106,850,3.861,928,3.845,1209,3.124,1321,2.862,1503,2.261,1512,4.295,1522,2.862,1542,2.862,1572,2.516,1611,3.4,1690,3.095,1706,5.771,1710,3.4,1723,3.4,1771,3.4,2127,2.087,2128,2.516,2199,5.122,2238,3.582,2239,2.592,2240,2.592,2241,2.261,2282,2.972,2915,3.4,2916,6.144,2917,3.4,2990,4.971,3045,4.698,3138,2.972,3749,3.598,4105,3.845,4114,3.598,4423,3.845,4453,4.176,4454,6.612,4455,6.612,4456,6.465,4457,6.465,4458,6.465,4459,5.771,4460,4.679,4461,5.771,4462,4.679,4463,5.771,4464,4.679,4465,4.679,4466,4.679,4467,5.771,4468,7.132,4469,5.771,4470,4.679,4471,5.771,4472,5.771,4473,5.771,4474,5.771,4475,5.771,4476,4.679,4477,5.771,4478,5.771,4479,5.771,4480,4.176,4481,4.176,4482,4.176,4483,5.771,4484,4.176,4485,3.845,4486,3.845,4487,7.741,4488,7.741,4489,7.741,4490,4.176,4491,6.612,4492,4.176,4493,4.176,4494,4.176,4495,4.176,4496,4.176,4497,4.176,4498,5.771,4499,5.771,4500,4.176,4501,4.176,4502,4.176,4503,6.612,4504,4.176,4505,4.176,4506,4.176,4507,4.176,4508,4.176,4509,4.176,4510,4.176,4511,4.176,4512,4.176]],["title/interfaces/ViewerStateModel.html",[0,0.243,4486,4.034]],["body/interfaces/ViewerStateModel.html",[0,0.256,2,1.167,3,0.054,4,0.054,5,0.054,6,0.041,11,0.003,12,0.572,13,0.784,15,1.728,16,1.086,17,0.006,18,1.676,19,0.63,23,0.073,28,2.087,48,1.294,53,0.575,80,2.954,99,0.004,100,0.003,125,1.952,141,2.086,150,0.29,151,0.465,154,2.78,156,2.088,179,0.108,205,1.392,219,1.425,224,1.966,233,3.051,247,1.079,252,1.733,253,1.87,272,2.132,332,1.65,497,0.735,551,1.435,612,3.508,614,3.027,629,2.274,662,1.728,692,4.394,850,4.024,1209,3.343,1321,3.162,1503,2.498,1512,4.409,1522,3.162,1542,3.162,1572,2.78,1611,3.756,1690,3.419,1710,3.756,1723,3.756,1771,3.756,2127,2.234,2199,4.606,2238,3.833,2239,2.864,2240,2.864,2241,2.498,2282,3.283,2915,3.756,2916,6.403,2917,3.756,2990,3.975,3045,3.756,3138,3.283,3749,3.975,4105,4.248,4114,3.975,4423,4.248,4453,4.614,4454,6.175,4455,4.614,4459,4.614,4461,4.614,4463,4.614,4467,4.614,4468,6.175,4469,4.614,4471,4.614,4472,4.614,4473,4.614,4474,4.614,4475,4.614,4477,6.175,4478,6.96,4479,6.175,4480,4.614,4481,4.614,4482,4.614,4483,6.175,4484,4.614,4485,4.248,4486,5.685,4487,8.381,4488,8.381,4489,8.381,4490,4.614,4491,6.96,4492,4.614,4493,4.614,4494,4.614,4495,4.614,4496,4.614,4497,4.614,4498,6.175,4499,6.175,4500,4.614,4501,4.614,4502,4.614,4503,6.96,4504,4.614,4505,4.614,4506,4.614,4507,4.614,4508,4.614,4509,4.614,4510,4.614,4511,4.614,4512,4.614]],["title/changelog.html",[3761,2.841,4513,3.159,4514,3.376]],["body/changelog.html",[0,0.369,10,2.897,11,0.003,17,0.005,25,3.988,29,4.622,33,1.913,36,2.288,37,3.988,47,1.654,48,1.629,49,2.034,52,4.975,55,2.159,56,2.797,59,3.133,63,2.897,65,1.485,68,1.703,73,2.584,78,2.897,79,2.797,99,0.004,100,0.004,105,1.359,107,1.273,110,4.227,118,2.049,128,2.06,129,0.914,131,1.213,136,1.592,152,2.409,199,1.273,225,2.897,238,3.612,253,1.404,264,4.227,274,2.476,290,1.157,296,2.868,298,2.476,332,1.417,400,1.359,494,3.515,497,0.674,499,2.897,550,5.529,627,3.851,644,3.612,692,3.008,849,3.008,891,3.133,900,5.856,920,3.008,940,5.733,971,3.892,972,5.101,973,3.275,1073,4.227,1143,3.642,1209,3.15,1222,2.624,1375,4.404,1507,3.133,1519,3.726,1542,2.897,1598,3.892,1715,2.53,1729,2.868,1775,3.008,2009,3.442,2210,3.642,2257,5.418,2260,6.6,2261,3.892,2463,6.654,2469,3.642,2555,4.227,2572,4.227,2625,5.013,2750,3.275,2906,4.227,2936,3.892,2995,7.169,2997,3.892,3085,6.127,3086,4.227,3141,5.819,3147,3.892,3148,3.892,3149,3.892,3155,4.227,3156,4.227,3161,5.819,3165,6.6,3170,3.892,3171,5.358,3176,4.227,3178,3.892,3489,6.176,3499,3.892,3539,5.819,3541,4.227,3546,5.819,3547,5.358,3763,3.892,3796,8.126,4000,4.227,4157,4.227,4405,4.227,4416,5.819,4446,5.819,4485,3.892,4513,5.733,4514,5.358,4515,5.819,4516,4.736,4517,6.52,4518,6.52,4519,6.52,4520,6.52,4521,4.736,4522,4.736,4523,4.736,4524,4.736,4525,4.736,4526,4.736,4527,4.736,4528,4.227,4529,4.736,4530,4.736,4531,4.736,4532,4.736,4533,7.456,4534,4.736,4535,6.52,4536,9.331,4537,7.456,4538,6.52,4539,4.736,4540,8.032,4541,4.736,4542,6.52,4543,8.032,4544,4.736,4545,4.736,4546,4.736,4547,4.736,4548,6.52,4549,4.736,4550,4.736,4551,6.52,4552,4.736,4553,4.736,4554,4.736,4555,4.736,4556,6.52,4557,7.96,4558,7.456,4559,6.52,4560,4.736,4561,4.736,4562,4.736,4563,8.032,4564,4.736,4565,4.736,4566,8.032,4567,4.736,4568,4.736,4569,6.52,4570,7.456,4571,4.736,4572,4.736,4573,4.736,4574,6.52,4575,4.736,4576,6.52,4577,4.736,4578,4.736,4579,6.52,4580,6.52,4581,6.52,4582,6.52,4583,4.736,4584,4.736,4585,4.736,4586,4.736,4587,4.736,4588,4.736,4589,4.736,4590,4.736,4591,4.736,4592,4.736,4593,4.736,4594,4.736,4595,4.227,4596,4.736,4597,4.736,4598,4.736,4599,4.736,4600,4.736,4601,4.736,4602,4.227,4603,4.736,4604,4.736,4605,4.736,4606,4.736,4607,4.736,4608,4.736,4609,4.736,4610,4.736,4611,4.736,4612,4.736,4613,4.736,4614,6.52,4615,8.423,4616,4.736,4617,4.736,4618,4.736,4619,4.736,4620,4.736,4621,4.736,4622,6.52,4623,4.736,4624,4.227,4625,4.736,4626,4.736,4627,4.736,4628,4.736,4629,4.736,4630,4.736,4631,4.736,4632,4.736,4633,4.736]],["title/dependencies.html",[400,1.692,4634,4.108]],["body/dependencies.html",[11,0.004,17,0.006,47,1.233,48,1.214,72,3.595,99,0.005,100,0.004,136,1.956,151,0.583,153,2.518,319,1.744,400,1.861,427,5.297,535,2.132,586,3.969,589,3.595,605,3.708,609,3.833,610,3.708,629,3.523,714,5.332,717,4.989,720,4.989,722,4.989,724,5.332,802,4.121,850,3.135,955,4.487,1059,7.148,1061,5.791,1064,7.148,1066,5.791,1067,5.791,1119,5.332,1221,3.135,1226,3.833,1419,5.791,1420,5.791,1539,5.791,1750,4.715,2023,4.715,2146,5.791,2241,3.135,2775,4.292,3547,5.332,3548,5.791,3669,5.332,4242,5.791,4392,5.791,4515,5.791,4635,9.715,4636,6.489,4637,8.009,4638,6.489,4639,6.489,4640,6.489,4641,9.071,4642,6.489,4643,6.489,4644,6.489,4645,8.687,4646,6.489,4647,6.489,4648,6.489,4649,6.489,4650,6.489,4651,6.489,4652,6.489,4653,6.489,4654,6.489,4655,6.489,4656,6.489,4657,6.489,4658,6.489,4659,6.489,4660,6.489,4661,6.489,4662,6.489,4663,6.489,4664,6.489,4665,6.489,4666,6.489,4667,6.489,4668,6.489,4669,6.489,4670,6.489,4671,6.489,4672,6.489,4673,6.489]],["title/miscellaneous/enumerations.html",[4674,3.159,4675,5.265]],["body/miscellaneous/enumerations.html",[6,0.069,11,0.004,12,0.498,17,0.006,20,2.026,36,1.798,47,1.377,72,4.014,99,0.005,100,0.004,141,2.185,166,6.582,701,3.458,832,2.868,1209,3.501,1228,5.236,2174,5.954,2258,7.034,2259,6.22,3481,5.571,3485,7.487,3486,5.954,3487,5.954,3488,5.954,3489,7.488,3490,5.954,3491,5.954,3492,5.954,3493,5.954,3494,5.954,3495,5.954,4674,5.571,4675,6.467,4676,7.245,4677,6.467]],["title/index.html",[12,0.282,3761,2.841,4513,3.159]],["body/index.html",[0,0.429,11,0.004,17,0.005,89,4.411,99,0.005,100,0.004,118,2.147,298,3.871,306,3.492,972,4.703,973,5.121,1375,5.121,1691,3.332,2210,5.694,2257,6.301,3147,7.125,3148,7.125,3149,7.125,3166,7.739,3170,7.125,3171,7.791,3191,6.61,3192,6.61,3200,6.61,3201,6.61,3208,6.61,3209,6.61,4514,6.085,4595,6.61,4678,7.405,4679,7.405,4680,7.405,4681,7.405,4682,7.405,4683,7.405,4684,7.405]],["title/license.html",[3761,2.841,4513,3.159,4685,3.667]],["body/license.html",[11,0.004,17,0.005,82,1.867,99,0.005,100,0.004,112,5.047,420,1.837,577,3.631,596,3.198,849,4.411,931,3.735,972,4.411,1810,5.106,1908,6.503,2732,5.047,3165,5.707,3178,6.859,3226,6.199,4008,6.199,4528,6.199,4557,6.199,4602,6.199,4685,6.199,4686,6.945,4687,8.949,4688,6.945,4689,6.945,4690,8.347,4691,6.945,4692,6.945,4693,6.945,4694,6.945,4695,6.945,4696,8.347,4697,9.902,4698,6.945,4699,6.945,4700,6.945,4701,6.945,4702,6.945,4703,6.945,4704,6.945,4705,6.945,4706,6.945,4707,6.945,4708,6.945,4709,6.945,4710,8.347,4711,6.945,4712,6.945,4713,6.945,4714,6.945,4715,6.945,4716,8.347,4717,8.347,4718,6.945,4719,6.945,4720,6.945,4721,6.945,4722,6.945,4723,6.945,4724,6.945,4725,6.945,4726,6.945,4727,6.945,4728,6.945,4729,6.945,4730,6.945,4731,6.945,4732,6.945,4733,6.945,4734,6.945,4735,6.945,4736,6.945,4737,6.945,4738,6.945,4739,6.945,4740,6.945]],["title/modules.html",[399,1.917]],["body/modules.html",[11,0.004,17,0.005,99,0.005,100,0.004,136,2.509,398,5.746,399,1.668,409,4.225,410,5.431,411,5.168,412,3.846,413,4.225,414,4.225,415,4.021,416,4.225,417,4.225,418,4.225,529,4.225,542,4.225,890,5.746,1406,4.225,1553,4.021,1583,4.225,1588,4.225,1720,5.431,1792,4.225,2097,4.47,2102,4.225,2109,5.431,2110,5.431,2111,5.431,2315,6.797,2387,4.225,2574,4.225,2701,4.225,2883,4.225,2888,4.021,2908,4.021,3002,4.225,3025,4.225,3034,4.225,3035,4.021,3225,9.171,3407,4.47,3611,4.021,3612,4.225,3613,4.021,4027,4.225,4045,4.47,4050,4.225,4051,4.225,4741,10.283]],["title/overview.html",[3939,4.855]],["body/overview.html",[2,0.698,11,0.002,17,0.006,99,0.003,100,0.002,102,2.383,103,0.743,164,4.335,169,2.238,173,2.238,177,2.383,204,0.887,317,0.485,324,2.202,327,2.238,329,2.238,331,2.238,334,2.238,337,2.238,339,2.238,341,2.383,343,2.259,346,2.238,348,2.238,351,2.238,354,2.274,356,2.238,358,2.238,359,2.238,361,2.238,363,2.238,365,2.238,367,2.238,369,2.238,371,2.238,373,2.275,375,2.238,377,2.238,379,2.238,380,2.202,382,2.238,383,2.202,385,2.238,387,2.238,390,2.383,391,2.238,397,0.47,398,7.589,399,0.887,400,0.887,401,0.932,402,0.902,403,0.902,404,0.932,405,2.76,406,2.76,407,2.76,408,2.76,409,5.44,410,6.558,411,6.646,412,5.33,413,5.856,414,6.494,415,5.396,416,6.341,417,5.856,418,5.44,419,1.347,420,0.818,456,1.532,529,5.44,530,2.76,531,2.76,532,2.76,539,2.76,540,2.76,541,2.76,542,6.137,881,2.76,882,2.76,883,2.76,1406,5.44,1407,2.76,1408,2.76,1409,2.76,1553,5.396,1554,2.76,1555,2.76,1556,2.76,1583,5.856,1584,2.76,1585,2.76,1586,2.76,1587,2.76,1588,5.856,1792,6.137,1793,2.76,1794,2.76,1796,2.76,1850,2.76,1851,2.76,1853,2.76,2097,6.196,2098,2.76,2099,2.76,2100,2.76,2101,2.76,2102,5.44,2106,2.76,2107,2.76,2108,2.76,2109,6.558,2110,4.763,2111,5.856,2128,1.663,2328,2.76,2329,2.76,2330,2.76,2387,5.44,2388,2.76,2389,2.76,2390,2.76,2537,2.76,2538,2.76,2539,2.76,2574,6.341,2575,2.76,2576,2.76,2578,2.76,2613,2.76,2614,2.76,2616,2.76,2697,2.76,2698,2.76,2699,2.76,2700,2.76,2701,5.856,2883,5.856,2884,2.76,2885,2.76,2886,2.76,2887,2.76,2888,6.241,2908,6.112,2909,2.76,2910,2.76,2912,2.76,2998,2.76,2999,2.76,3000,2.76,3001,2.76,3002,5.856,3025,5.44,3026,2.76,3027,2.76,3028,2.76,3031,2.76,3032,2.76,3033,2.76,3034,6.711,3035,5.396,3078,2.76,3079,2.76,3081,2.76,3101,2.76,3102,2.76,3104,2.76,3234,2.76,3235,2.76,3236,2.76,3407,5.756,3408,2.76,3409,2.76,3410,2.76,3608,2.76,3609,2.76,3610,2.76,3611,5.945,3612,6.494,3613,5.945,3704,2.76,3705,2.76,3706,2.76,3868,2.76,3869,2.76,3871,2.76,3884,2.76,3885,2.76,3886,2.76,3939,2.247,4027,5.44,4028,2.76,4029,2.76,4030,2.76,4033,2.76,4034,2.76,4036,2.76,4045,6.709,4046,2.76,4047,2.76,4048,2.76,4049,2.76,4050,5.44,4051,5.44,4097,2.76,4098,2.76,4099,2.76,4129,2.76,4130,2.76,4132,2.76,4165,2.76,4166,2.76,4167,2.76,4194,2.76,4195,2.76,4196,2.76,4233,2.76,4234,2.76,4235,2.76,4263,2.76,4264,2.76,4402,2.76,4448,2.76,4449,2.76,4450,2.76,4624,2.76,4742,3.092,4743,3.092,4744,3.092]],["title/miscellaneous/typealiases.html",[4674,3.159,4745,5.899]],["body/miscellaneous/typealiases.html",[6,0.077,11,0.003,12,0.367,17,0.006,19,0.777,28,1.282,47,1.505,48,1.482,97,3.718,99,0.004,100,0.003,103,1.698,114,2.272,116,4.172,141,2.815,192,3.501,193,1.457,199,1.433,215,4.627,216,2.321,240,2.788,275,2.689,486,2.515,570,4.321,586,3.263,601,2.515,620,2.346,699,5.756,880,4.037,965,3.976,969,2.095,1080,2.515,1218,3.688,1219,6.06,1231,4.486,1234,4.673,1239,5.478,1241,4.673,1242,4.673,1244,3.913,1245,4.486,1424,3.048,1512,2.577,1861,3.273,1864,2.854,1878,3.407,1882,3.498,1897,3.551,2019,5.031,2075,4.037,2076,3.876,2077,4.074,2078,4.321,2079,4.321,2080,4.321,2082,4.037,2084,4.61,2085,5.514,2088,4.037,2089,4.037,2090,3.594,2093,5.514,2094,4.037,2096,3.876,2104,4.101,2914,4.383,2921,5.805,2944,5.805,3048,6.484,3108,4.885,3240,4.76,3257,5.805,3258,6.929,3259,6.929,3260,5.805,3261,6.929,3262,5.805,3263,6.929,3264,5.805,3265,5.805,3266,5.805,3390,4.76,3481,4.101,3616,3.387,3712,4.383,3713,5.805,3761,3.688,3762,5.805,3899,4.383,3900,5.805,3937,5.805,3938,4.383,4201,4.383,4202,6.305,4212,4.76,4224,4.76,4225,4.76,4674,4.101,4677,4.76,4746,5.334,4747,9.683,4748,9.449,4749,9.014,4750,5.334,4751,7.064,4752,5.334,4753,7.064,4754,5.334,4755,5.334,4756,5.334]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["0.095rem",{"_index":2534,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0.1.0",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":4673,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":3942,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["0.15.1",{"_index":4653,"title":{},"body":{"dependencies.html":{}}}],["0.15rem",{"_index":1790,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["0.17.1",{"_index":4656,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1791,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{}}}],["0.2",{"_index":693,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["0.2.0",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["0.25rem",{"_index":4359,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["0.2rem",{"_index":2567,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.3.2",{"_index":4644,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":2371,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["0.4em",{"_index":2568,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.4rem",{"_index":1777,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.4s",{"_index":4193,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.5",{"_index":653,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["0.5*255",{"_index":808,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["0.5.0",{"_index":3547,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{},"dependencies.html":{}}}],["0.5em",{"_index":1401,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["0.5rem",{"_index":1787,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/InfoDialogComponent.html":{}}}],["0.6.0",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["0.6s",{"_index":4192,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.7",{"_index":4084,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["0.75rem",{"_index":1789,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["0.8",{"_index":784,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["0.875rem",{"_index":3229,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["0.8rem",{"_index":1778,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0.9*255",{"_index":781,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["000000",{"_index":1780,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["00c853",{"_index":4094,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["020202",{"_index":1680,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["03",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4558,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4538,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4559,"title":{},"body":{"changelog.html":{}}}],["0c1687",{"_index":1689,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["0em",{"_index":2606,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["0px",{"_index":2380,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["0rem",{"_index":1779,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["0s",{"_index":2610,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["0xff",{"_index":4404,"title":{},"body":{"components/ViewerComponent.html":{}}}],["1",{"_index":253,"title":{"components/AppComponent-1.html":{},"classes/AppPage-1.html":{},"interfaces/ColorScheme-1.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled-1.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState-1.html":{},"classes/InitializationState-1.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["1*255",{"_index":1168,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["1.0",{"_index":694,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["1.0.0",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":4652,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":4357,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["1.1.0",{"_index":4515,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.1.1",{"_index":4662,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":4651,"title":{},"body":{"dependencies.html":{}}}],["1.125rem",{"_index":1784,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["1.2.3",{"_index":4655,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":4661,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":3998,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["1.3.4",{"_index":4657,"title":{},"body":{"dependencies.html":{}}}],["1.3.6",{"_index":4666,"title":{},"body":{"dependencies.html":{}}}],["1.55rem",{"_index":2377,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1.5em",{"_index":528,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["1.5rem",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["1.5s",{"_index":2060,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["1.6.1",{"_index":4660,"title":{},"body":{"dependencies.html":{}}}],["1.8rem",{"_index":4231,"title":{},"body":{"components/StageNavComponent.html":{}}}],["10",{"_index":489,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/CCFSpatialScene.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TissueData.html":{}}}],["10.0",{"_index":626,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["10.0.7",{"_index":4635,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":4637,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["1000",{"_index":1078,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["10000",{"_index":4425,"title":{},"body":{"components/ViewerComponent.html":{}}}],["104",{"_index":4122,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["10px",{"_index":1548,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["10rem",{"_index":1782,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["10x",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["11.5",{"_index":670,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["110",{"_index":2251,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["12",{"_index":4624,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["1234",{"_index":3556,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["12rem",{"_index":4124,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["13",{"_index":2252,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["136",{"_index":771,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["14px",{"_index":2364,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{}}}],["15",{"_index":651,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["1500",{"_index":1253,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["152px",{"_index":2379,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1565c0",{"_index":1606,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["15px",{"_index":2532,"title":{},"body":{"components/DualSliderComponent.html":{},"components/RotationSliderComponent.html":{}}}],["15rem",{"_index":2533,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["15x",{"_index":4090,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["16",{"_index":4402,"title":{},"body":{"components/ViewerComponent.html":{},"overview.html":{}}}],["16.13.1",{"_index":4668,"title":{},"body":{"dependencies.html":{}}}],["16.5rem",{"_index":2607,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["166",{"_index":1609,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["16px",{"_index":2366,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["16px/20px",{"_index":2674,"title":{},"body":{"components/HeaderComponent.html":{}}}],["18rem",{"_index":3701,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["1].rotation",{"_index":762,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["1a9850",{"_index":1631,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["1e88e5",{"_index":3076,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["1em",{"_index":2362,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["1px",{"_index":1549,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["1rem",{"_index":523,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["1s",{"_index":2669,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoButtonComponent.html":{}}}],["2",{"_index":1209,"title":{"components/ContentComponent-2.html":{}},"body":{"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":4671,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":4356,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["2.2.8",{"_index":4645,"title":{},"body":{"dependencies.html":{}}}],["2.25rem",{"_index":2694,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{}}}],["2.2rem",{"_index":3077,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["2.5rem",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["20",{"_index":2923,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["20000",{"_index":1254,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["2019",{"_index":4557,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3161,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["20em",{"_index":2527,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["2166ac",{"_index":1623,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["21908a",{"_index":1668,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["22",{"_index":4539,"title":{},"body":{"changelog.html":{}}}],["22.5rem",{"_index":2608,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["225",{"_index":2957,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["229",{"_index":772,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["24",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["24rem",{"_index":2609,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["25",{"_index":3941,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["25.5rem",{"_index":396,"title":{},"body":{"components/AppComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["25000",{"_index":4424,"title":{},"body":{"components/ViewerComponent.html":{}}}],["255",{"_index":624,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["25rem",{"_index":2881,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{},"components/SlicesInputComponent.html":{}}}],["27",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["275s",{"_index":2372,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["28.5rem",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["28px",{"_index":2536,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["2979ff",{"_index":4096,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["2d6379",{"_index":1669,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["2em",{"_index":2565,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["2px",{"_index":2369,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["2rem",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/SlicesInputComponent.html":{}}}],["2s",{"_index":4085,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["3",{"_index":692,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["3.0.6",{"_index":4648,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":4658,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4647,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":3074,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["3.6.2",{"_index":4649,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":525,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/BodyUILayer.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["31",{"_index":4485,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["32px",{"_index":2535,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["33",{"_index":2573,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["333",{"_index":1610,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3542b8",{"_index":4232,"title":{},"body":{"components/StageNavComponent.html":{}}}],["35rem",{"_index":2611,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["380px",{"_index":3702,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["393768",{"_index":1670,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3d",{"_index":940,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["3d121f",{"_index":1679,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["3rem",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["3s",{"_index":2374,"title":{},"body":{"components/DropdownComponent.html":{}}}],["4",{"_index":4510,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["4.17.19",{"_index":4659,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":4654,"title":{},"body":{"dependencies.html":{}}}],["4.5rem",{"_index":2695,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/StageNavComponent.html":{}}}],["400",{"_index":2673,"title":{},"body":{"components/HeaderComponent.html":{}}}],["404",{"_index":3519,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["40px",{"_index":3699,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["44",{"_index":4743,"title":{},"body":{"overview.html":{}}}],["450b57",{"_index":1671,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["47",{"_index":4742,"title":{},"body":{"overview.html":{}}}],["4a2484",{"_index":1688,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["4caf50",{"_index":4088,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["4em",{"_index":2605,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["4px",{"_index":1781,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["4rem",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["5",{"_index":1611,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["5.5rem",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["50",{"_index":2882,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["500",{"_index":1012,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["500px",{"_index":3697,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["542788",{"_index":1640,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["56",{"_index":4744,"title":{},"body":{"overview.html":{}}}],["5678",{"_index":3557,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["5em",{"_index":2386,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{}}}],["5px",{"_index":4082,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["5rem",{"_index":1788,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{}}}],["5s",{"_index":3071,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["6",{"_index":4423,"title":{},"body":{"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["6.5.5",{"_index":4669,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2924,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/OldRuiData.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["60em",{"_index":3100,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["625rem",{"_index":4025,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["64b5f6",{"_index":1619,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["666",{"_index":1612,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["66bb6a",{"_index":1602,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["67a9cf",{"_index":1624,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["69f0ae",{"_index":2570,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["6bab65",{"_index":1667,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["6e016b",{"_index":1656,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["6rem",{"_index":2664,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["7",{"_index":4400,"title":{},"body":{"components/ViewerComponent.html":{}}}],["7.5rem",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}}}],["70px",{"_index":2529,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["75rem",{"_index":2530,"title":{},"body":{"components/DualSliderComponent.html":{},"components/RotationSliderComponent.html":{}}}],["78223c",{"_index":1678,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["7rem",{"_index":1545,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["8",{"_index":4405,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["8.2.0",{"_index":4646,"title":{},"body":{"dependencies.html":{}}}],["8.2.4",{"_index":4641,"title":{},"body":{"dependencies.html":{}}}],["8.25rem",{"_index":2668,"title":{},"body":{"components/HeaderComponent.html":{}}}],["8.9",{"_index":691,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["80cbc4",{"_index":1617,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["83",{"_index":2253,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["833",{"_index":1613,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["85",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["883381",{"_index":1687,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["88419d",{"_index":1657,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8c6bb1",{"_index":1658,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8c96c6",{"_index":1659,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["8em",{"_index":1404,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["8rem",{"_index":3073,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["9.5",{"_index":656,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["9.85rem",{"_index":2360,"title":{},"body":{"components/DropdownComponent.html":{}}}],["90",{"_index":2572,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["91cf60",{"_index":1632,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["95",{"_index":4000,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"changelog.html":{}}}],["990000",{"_index":1648,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["998ec3",{"_index":1641,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["999",{"_index":4148,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["9e9e9e",{"_index":3075,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"components/RotationSliderComponent.html":{}}}],["9ebcda",{"_index":1660,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["9rem",{"_index":3999,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["_afterconnected",{"_index":2131,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["_aggregatedataquerystatus",{"_index":2177,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_blank",{"_index":4019,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["_channelconfigs",{"_index":1270,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_error",{"_index":2749,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["_expanded",{"_index":3305,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_height",{"_index":1261,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_layers",{"_index":3013,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["_lighting",{"_index":742,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["_listdataquerystatus",{"_index":2178,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_loaders",{"_index":1266,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["_measuredmargin",{"_index":3333,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_measuredwidth",{"_index":3327,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_msg",{"_index":1885,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["_onclick",{"_index":561,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onclick(e",{"_index":585,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["_onhover",{"_index":562,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onhover(e",{"_index":592,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["_onviewstatechange",{"_index":563,"title":{},"body":{"classes/BodyUI.html":{}}}],["_onviewstatechange(event",{"_index":594,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["_opened",{"_index":3301,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_placement",{"_index":3584,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["_position",{"_index":3297,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["_self",{"_index":4020,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["_sources",{"_index":1265,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["_termoccurencesdataquerystatus",{"_index":2179,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["_width",{"_index":1260,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["a.highlighted",{"_index":1028,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["aabb",{"_index":1417,"title":{},"body":{"interfaces/Collision.html":{}}}],["ability",{"_index":2960,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["about.wrapper",{"_index":3228,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["above",{"_index":4602,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":1783,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["abstract",{"_index":1256,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["acc",{"_index":3794,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["acc[current.id",{"_index":3798,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["accelerate",{"_index":3139,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["accent",{"_index":1397,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["accepting",{"_index":3383,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["accessible",{"_index":2165,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["accessors",{"_index":1516,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["accordingly",{"_index":2592,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["accordion",{"_index":2863,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion'},{'name",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["accordion.component",{"_index":2892,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["accordion.component.html",{"_index":2865,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.scss",{"_index":2864,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts",{"_index":2862,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:20",{"_index":2871,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:25",{"_index":2870,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:30",{"_index":2868,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:35",{"_index":2872,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.component.ts:38",{"_index":2874,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["accordion.module",{"_index":2913,"title":{},"body":{"modules/ImageViewerContentModule.html":{}}}],["accordion.module.ts",{"_index":2889,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["accordion/image",{"_index":2861,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["accumulated",{"_index":3795,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["accumulator",{"_index":3793,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["acknowledgements",{"_index":3189,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["action",{"_index":4008,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["activate",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":1220,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ViewerComponent.html":{}}}],["active/showing",{"_index":4187,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["activelayers",{"_index":4455,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["actual_component",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["add",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["addclass",{"_index":4316,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["added",{"_index":3796,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["addhubmapdatatostore",{"_index":952,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["additional",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["addjsonldtostore",{"_index":947,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["addn3tostore",{"_index":948,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["addrdfxmltostore",{"_index":949,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["adds",{"_index":1726,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["addspatialentity",{"_index":1034,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialentity(entity",{"_index":1043,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialobjectreference",{"_index":1035,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialobjectreference(ref",{"_index":1045,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialplacement",{"_index":1036,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addspatialplacement(placement",{"_index":1049,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["addsubtree",{"_index":3797,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsubtree(model.nodes",{"_index":3791,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsubtree(nodes",{"_index":3800,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["addsvgicon",{"_index":2753,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["aed581",{"_index":1621,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["afterviewinit",{"_index":815,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["against",{"_index":3372,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["age",{"_index":63,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["agerange",{"_index":76,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["aggregate",{"_index":9,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["aggregatedata",{"_index":2180,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["aggregatedata(filter",{"_index":2191,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["aggregatedataquerystatus",{"_index":2181,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["aggregateresult",{"_index":1,"title":{"interfaces/AggregateResult.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{}}}],["aims",{"_index":3150,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["aliases",{"_index":4746,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["alignment_datetime",{"_index":3526,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_id",{"_index":3527,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_operator_first_name",{"_index":3528,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["alignment_operator_last_name",{"_index":3529,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["allcompleted(states",{"_index":2229,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["allergy",{"_index":3217,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["allow",{"_index":1008,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["allowing",{"_index":3978,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["allows",{"_index":826,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["along",{"_index":1576,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["alongside",{"_index":4189,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["alpha",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":1904,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["always",{"_index":1931,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["ambientlight",{"_index":602,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["analysis",{"_index":3133,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["and/or",{"_index":4708,"title":{},"body":{"license.html":{}}}],["angle",{"_index":4203,"title":{},"body":{"components/StageNavComponent.html":{}}}],["angular",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["angular's",{"_index":2443,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["angular/animations",{"_index":2023,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":4636,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":3256,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["angular/cdk/overlay",{"_index":2477,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["angular/cdk/portal",{"_index":2478,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["angular/cdk/scrolling",{"_index":4041,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["angular/common",{"_index":535,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ViewerModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":2114,"title":{},"body":{"modules/CoreModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["angular/compiler",{"_index":4638,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":3669,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4639,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":3670,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/button",{"_index":2704,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/checkbox",{"_index":1391,"title":{},"body":{"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["angular/material/dialog",{"_index":3097,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":2891,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["angular/material/form",{"_index":2393,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["angular/material/icon",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"modules/ImageViewerContentModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/input",{"_index":537,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/OntologySearchModule.html":{},"modules/SlicesInputModule.html":{}}}],["angular/material/progress",{"_index":4199,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["angular/material/radio",{"_index":4135,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/select",{"_index":2395,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["angular/material/slide",{"_index":4238,"title":{},"body":{"modules/StageNavModule.html":{}}}],["angular/material/theming",{"_index":4021,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["angular/material/toolbar",{"_index":2706,"title":{},"body":{"modules/HeaderModule.html":{}}}],["angular/material/tooltip",{"_index":2708,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/tree",{"_index":3889,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["angular/platform",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4640,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":2020,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animate('1.5s",{"_index":3282,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animate('1s",{"_index":2028,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["animate(0",{"_index":3281,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animation",{"_index":2370,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animations",{"_index":1990,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["animationsenabled",{"_index":2030,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["annotate",{"_index":3152,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["anterior",{"_index":4212,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":971,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"changelog.html":{}}}],["app",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/OntologySelectionComponent.html":{},"modules/StoreModule.html":{}}}],["app.component",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}}}],["app.component.scss",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}}}],["app/core/services/theming/theming.service",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["app_bootstrap_listener",{"_index":4266,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":102,"title":{"components/AppComponent.html":{},"components/AppComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["appearance",{"_index":3696,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["applied",{"_index":70,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["apply",{"_index":2557,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applybuttonclick",{"_index":2548,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applyfilter",{"_index":819,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["applyfilter(filter",{"_index":833,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["applyfilters",{"_index":2549,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["applyfilters(filters",{"_index":2595,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["applypropdefaults(props",{"_index":1251,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["applyspatialplacement(tx",{"_index":1072,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["applythemeclass",{"_index":4273,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["applythemeclass(cls",{"_index":4280,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["appmodule",{"_index":398,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":455,"title":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["appropriate",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":4022,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["args",{"_index":1235,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["args.filter(value",{"_index":2760,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["argsgenerator",{"_index":1328,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["argument",{"_index":2758,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["arguments",{"_index":1815,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/SlicesInputComponent.html":{}}}],["arising",{"_index":4738,"title":{},"body":{"license.html":{}}}],["array",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{}}}],["array.from(searchresults.values",{"_index":3833,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["arrow",{"_index":2384,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["arxiv",{"_index":3169,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["asking",{"_index":1369,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["assets",{"_index":976,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["assets/icons/app/hubmap",{"_index":2322,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["assets/icons/filter.svg",{"_index":2324,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["assets/icons/hubmap",{"_index":2327,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{}}}],["associated",{"_index":931,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["async",{"_index":749,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["at(model.nodes",{"_index":3786,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["at(nodes",{"_index":3841,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["atlas",{"_index":3129,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["atscrollbottom",{"_index":3968,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["attach",{"_index":4338,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["authentication",{"_index":2667,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authors",{"_index":4731,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1785,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["autocolorindex",{"_index":4488,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["autocomplete",{"_index":3664,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autocompleteopen",{"_index":3629,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autohighlight",{"_index":769,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["available",{"_index":1720,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/InfoDialogComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules.html":{}}}],["await",{"_index":752,"title":{},"body":{"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["awaited",{"_index":3241,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["award",{"_index":3208,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["axis",{"_index":4064,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["b",{"_index":1027,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["b.highlighted",{"_index":1029,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["b2182b",{"_index":1629,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b35806",{"_index":1645,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b39ddb",{"_index":1603,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b4335a",{"_index":1677,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["b5c740",{"_index":1666,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["back",{"_index":2685,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["backbutton",{"_index":2689,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["backend",{"_index":91,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["background",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":2735,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["bar",{"_index":1506,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["bar'},{'name",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["bar.component",{"_index":1558,"title":{},"body":{"modules/ColorBarModule.html":{}}}],["bar.component.html",{"_index":1509,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.scss",{"_index":1508,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts",{"_index":1505,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:18",{"_index":1518,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:23",{"_index":1523,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:28",{"_index":1524,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:33",{"_index":1520,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:38",{"_index":1526,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:43",{"_index":1537,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:55",{"_index":1532,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.component.ts:64",{"_index":1529,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["bar.module",{"_index":1800,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["bar.module.ts",{"_index":1557,"title":{},"body":{"modules/ColorBarModule.html":{}}}],["bar/color",{"_index":1504,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["bars",{"_index":1541,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["base",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{}}}],["bbox",{"_index":1456,"title":{},"body":{"interfaces/Collision.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["bbox.left",{"_index":3324,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["bbox.right",{"_index":3323,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["bcbb",{"_index":3224,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["became",{"_index":3159,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["becomes",{"_index":3185,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["before",{"_index":1727,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["being",{"_index":3118,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/StoreModule.html":{}}}],["between",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["bf",{"_index":3492,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["bfd3e6",{"_index":1661,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["bftiff",{"_index":3491,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["bind",{"_index":589,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"dependencies.html":{}}}],["biomolecular",{"_index":3128,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bioportal",{"_index":3164,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bitwise",{"_index":4398,"title":{},"body":{"components/ViewerComponent.html":{}}}],["black",{"_index":2368,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{}}}],["block",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["blocksizeinputcomponent",{"_index":324,"title":{"components/BlockSizeInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["blocksizeinputmodule",{"_index":529,"title":{"modules/BlockSizeInputModule.html":{}},"body":{"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["blue",{"_index":4095,"title":{},"body":{"components/RotationSliderComponent.html":{},"components/ViewerComponent.html":{}}}],["bluered",{"_index":1622,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["bmi",{"_index":64,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["bmirange",{"_index":77,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["board",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["body.id",{"_index":3788,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["bodycanvas",{"_index":818,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["bodyid",{"_index":1144,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["bodymodule",{"_index":409,"title":{"modules/BodyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BodyModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyui",{"_index":546,"title":{"classes/BodyUI.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{}}}],["bodyuicomponent",{"_index":327,"title":{"components/BodyUiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["bodyuilayer",{"_index":552,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["bodyuimodule",{"_index":542,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["bodyuiprops",{"_index":617,"title":{"interfaces/BodyUIProps.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["bodyuiviewstateprops",{"_index":613,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["bold",{"_index":518,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["booleaninput",{"_index":3254,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["boolean}).zoomopacity",{"_index":660,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["bootstrap",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["border",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["both",{"_index":74,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["bottom",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["bound",{"_index":2460,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["bounding",{"_index":1180,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["box",{"_index":1775,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"changelog.html":{}}}],["boxes",{"_index":1181,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["branch",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":863,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["brightness",{"_index":1723,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["brightness/transparency",{"_index":1697,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightness[0",{"_index":4409,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightness[1",{"_index":4410,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightness_2",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["brightness_5",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["brightnesschanged",{"_index":1704,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesshigh",{"_index":1709,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesshigh(value",{"_index":1756,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesslow",{"_index":1708,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesslow(value",{"_index":1752,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnessslideroptions",{"_index":1702,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["brightnesstoslider(brightness",{"_index":4406,"title":{},"body":{"components/ViewerComponent.html":{}}}],["brightnesstoslider(layer.brightness",{"_index":4441,"title":{},"body":{"components/ViewerComponent.html":{}}}],["browse",{"_index":4741,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser'},{'name",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["browser.component",{"_index":4039,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser.component.html",{"_index":3967,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.scss",{"_index":3966,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts",{"_index":3960,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:20",{"_index":3975,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:25",{"_index":3974,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:30",{"_index":3977,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:35",{"_index":3976,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:41",{"_index":3979,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:47",{"_index":3985,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:52",{"_index":3989,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:59",{"_index":3983,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.get(browser.baseurl",{"_index":464,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["browser.module",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["browser.module.ts",{"_index":4037,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser/animations",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browser/results",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["browseranimationsmodule",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsermodule",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3156,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["bug",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["button.component",{"_index":2336,"title":{},"body":{"modules/DrawerModule.html":{},"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":3088,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.scss",{"_index":3087,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts",{"_index":3084,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:15",{"_index":3092,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4336,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:22",{"_index":4337,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:25",{"_index":4346,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:26",{"_index":3095,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:34",{"_index":4344,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:36",{"_index":4343,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:38",{"_index":4334,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:59",{"_index":4340,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:69",{"_index":4341,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:79",{"_index":4339,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.component.ts:91",{"_index":4342,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button.module",{"_index":2710,"title":{},"body":{"modules/HeaderModule.html":{}}}],["button.module.ts",{"_index":3105,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button/info",{"_index":2709,"title":{},"body":{"modules/HeaderModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{}}}],["button/toggle",{"_index":2335,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["button:active",{"_index":2569,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["c",{"_index":4688,"title":{},"body":{"license.html":{}}}],["c6427e",{"_index":1686,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ca7670",{"_index":1676,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["cached",{"_index":3325,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["calc",{"_index":4358,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["calc(100",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["calc(50",{"_index":3286,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["calculated",{"_index":3318,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["calculates",{"_index":1826,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"classes/ImageViewerLayer.html":{}}}],["call",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent.html":{}}}],["callback",{"_index":3655,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["called",{"_index":2264,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["calling",{"_index":4221,"title":{},"body":{"components/StageNavComponent.html":{}}}],["calls",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["candidate",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":1419,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["canvas",{"_index":618,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":843,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["captures",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["case",{"_index":859,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{}}}],["catch",{"_index":2748,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["ccf",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"index.html":{}}}],["ccf.spatial.body.id",{"_index":1154,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.bothsexes.id",{"_index":1148,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.female.id",{"_index":1147,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.femaleorgans.id",{"_index":1152,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.male.id",{"_index":1146,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatial.maleorgans.id",{"_index":1151,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.spatialentity",{"_index":1107,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.spatialobjectreference",{"_index":1105,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.spatialplacement",{"_index":1110,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["ccf.x('vhkidney').id",{"_index":3558,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ccf.x('vhleftkidney').id",{"_index":1175,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhrightkidney').id",{"_index":1172,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleen').id",{"_index":1177,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc1').id",{"_index":1183,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc2').id",{"_index":1184,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf.x('vhspleencc3').id",{"_index":1185,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccf_annotations",{"_index":3576,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ccfcontexturl",{"_index":968,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfdatabase",{"_index":886,"title":{"classes/CCFDatabase.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccfdatabaseoptions",{"_index":902,"title":{"interfaces/CCFDatabaseOptions.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["ccfdrawer",{"_index":3274,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ccfdrawercontainer",{"_index":1860,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["ccfowlurl",{"_index":966,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfowlurl.endswith('.n3",{"_index":995,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfspatialgraph",{"_index":905,"title":{"classes/CCFSpatialGraph.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{}}}],["ccfspatialgraph(this",{"_index":988,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ccfspatialscene",{"_index":909,"title":{"classes/CCFSpatialScene.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["ccfspatialscene(this",{"_index":990,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["cdk",{"_index":2381,"title":{},"body":{"components/DropdownComponent.html":{}}}],["cdkportal",{"_index":2470,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cdr",{"_index":1874,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["cdr.markforcheck",{"_index":1948,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["ceil",{"_index":1762,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["cell",{"_index":3141,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["center",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["centers",{"_index":3198,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["centimeter",{"_index":1076,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["cff",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["change",{"_index":1691,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySelectionComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"index.html":{}}}],["changed",{"_index":1729,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":1566,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy",{"_index":1579,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1567,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["changedetectorref",{"_index":1875,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["changelog",{"_index":4514,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changerotation",{"_index":4074,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["changerotation(newrotation",{"_index":4065,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["changes",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.color",{"_index":4496,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.customizedcolor",{"_index":4500,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.push",{"_index":4507,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.selected",{"_index":4501,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["changes.selection",{"_index":2490,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changes.valuerange",{"_index":2488,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changing",{"_index":4214,"title":{},"body":{"components/StageNavComponent.html":{}}}],["channel",{"_index":1864,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["channelconfig",{"_index":1217,"title":{"interfaces/ChannelConfig.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["channelconfigs",{"_index":1268,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelison",{"_index":3948,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelison.push(active",{"_index":3953,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["channelnames",{"_index":1249,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["channelnames.length",{"_index":1345,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["channels",{"_index":3051,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["channelschange",{"_index":4369,"title":{},"body":{"components/ViewerComponent.html":{}}}],["channelschange.emit(!isrgb",{"_index":4436,"title":{},"body":{"components/ViewerComponent.html":{}}}],["charge",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["checkbox",{"_index":1360,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["checkbox'},{'name",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["checkbox.component",{"_index":1412,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["checkbox.component.html",{"_index":1362,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1361,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.mat",{"_index":1396,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":329,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["checkboxes",{"_index":1358,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxmodule",{"_index":1406,"title":{"modules/CheckboxModule.html":{}},"body":{"modules/CheckboxModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["checkboxonchange",{"_index":2965,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["checkboxonchange(layer",{"_index":2976,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["checked",{"_index":1376,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["checkmark",{"_index":1398,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checks",{"_index":2013,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["chevron_left",{"_index":2684,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["child",{"_index":1424,"title":{},"body":{"interfaces/Collision.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["children",{"_index":2637,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["choices",{"_index":2347,"title":{},"body":{"components/DropdownComponent.html":{}}}],["choose",{"_index":1813,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["circle",{"_index":1582,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["claim",{"_index":4734,"title":{},"body":{"license.html":{}}}],["class",{"_index":179,"title":{"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"classes/PictureInPictureViewer.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["class.ccf",{"_index":4332,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["class.cff",{"_index":1994,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["classend",{"_index":3292,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["classes",{"_index":456,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"classes/PictureInPictureViewer.html":{},"overview.html":{}}}],["classname",{"_index":1940,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["clean",{"_index":3451,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["cleans",{"_index":1894,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["clear",{"_index":1282,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["clearedrotation",{"_index":4073,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["click",{"_index":1821,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SlicesInputComponent.html":{}}}],["clicked",{"_index":1832,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/InfoButtonComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SlicesInputComponent.html":{}}}],["clickpos",{"_index":1845,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["clicks",{"_index":1823,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["clientheight",{"_index":3990,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{}}}],["clientwidth",{"_index":4421,"title":{},"body":{"components/ViewerComponent.html":{}}}],["close",{"_index":1833,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{}}}],["close(target",{"_index":1840,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["closed",{"_index":3048,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["closeexpanded",{"_index":3349,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["closeopendone",{"_index":3357,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["closes",{"_index":1822,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["closesliderpopover(target",{"_index":2505,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["closeviewer",{"_index":2897,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["cloud_download",{"_index":2661,"title":{},"body":{"components/HeaderComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["cls",{"_index":4283,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["clsname",{"_index":2683,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["cluster_appmodule",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule",{"_index":530,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_declarations",{"_index":531,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_exports",{"_index":532,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_bodymodule",{"_index":539,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_exports",{"_index":541,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodymodule_imports",{"_index":540,"title":{},"body":{"modules/BodyModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":881,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":882,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":883,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule",{"_index":1407,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_declarations",{"_index":1408,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_exports",{"_index":1409,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule",{"_index":1554,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule_declarations",{"_index":1555,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorbarmodule_exports",{"_index":1556,"title":{},"body":{"modules/ColorBarModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule",{"_index":1584,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_declarations",{"_index":1585,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_exports",{"_index":1587,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorpickerlaunchermodule_imports",{"_index":1586,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule",{"_index":1793,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_declarations",{"_index":1794,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_exports",{"_index":1796,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"overview.html":{}}}],["cluster_colorschemecontentsmodule_imports",{"_index":1795,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["cluster_colorschemepopupmodule",{"_index":1850,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_declarations",{"_index":1851,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_exports",{"_index":1853,"title":{},"body":{"modules/ColorSchemePopupModule.html":{},"overview.html":{}}}],["cluster_colorschemepopupmodule_imports",{"_index":1852,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["cluster_contentmodule",{"_index":2098,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_declarations",{"_index":2099,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_exports",{"_index":2101,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_imports",{"_index":2100,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":2106,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":2108,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":2107,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":2328,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":2329,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":2330,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule",{"_index":2388,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":2389,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":2390,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule",{"_index":2537,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_declarations",{"_index":2538,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_exports",{"_index":2539,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule",{"_index":2575,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_declarations",{"_index":2576,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_exports",{"_index":2578,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_imports",{"_index":2577,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["cluster_filterspopovermodule",{"_index":2613,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_declarations",{"_index":2614,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_exports",{"_index":2616,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_imports",{"_index":2615,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["cluster_headermodule",{"_index":2697,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":2698,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":2700,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_imports",{"_index":2699,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule",{"_index":2884,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_declarations",{"_index":2885,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_exports",{"_index":2887,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imagevieweraccordionmodule_imports",{"_index":2886,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule",{"_index":2909,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_declarations",{"_index":2910,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_exports",{"_index":2912,"title":{},"body":{"modules/ImageViewerContentModule.html":{},"overview.html":{}}}],["cluster_imageviewercontentmodule_imports",{"_index":2911,"title":{},"body":{"modules/ImageViewerContentModule.html":{}}}],["cluster_imageviewerlayersmodule",{"_index":2998,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_declarations",{"_index":2999,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_exports",{"_index":3001,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlayersmodule_imports",{"_index":3000,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule",{"_index":3026,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule_declarations",{"_index":3027,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewerlegendmodule_exports",{"_index":3028,"title":{},"body":{"modules/ImageViewerLegendModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule",{"_index":3031,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule_exports",{"_index":3033,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewermodule_imports",{"_index":3032,"title":{},"body":{"modules/ImageViewerModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule",{"_index":3078,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_declarations",{"_index":3079,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_exports",{"_index":3081,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{},"overview.html":{}}}],["cluster_imageviewerpopovermodule_imports",{"_index":3080,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{}}}],["cluster_infobuttonmodule",{"_index":3101,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":3102,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":3104,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":3103,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["cluster_infodialogmodule",{"_index":3234,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":3235,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":3236,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule",{"_index":3408,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_declarations",{"_index":3409,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_exports",{"_index":3410,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule",{"_index":3608,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_exports",{"_index":3610,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_imports",{"_index":3609,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule",{"_index":3704,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_declarations",{"_index":3705,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_exports",{"_index":3706,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule",{"_index":3868,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_declarations",{"_index":3869,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_exports",{"_index":3871,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_imports",{"_index":3870,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["cluster_ontologytreemodule",{"_index":3884,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_declarations",{"_index":3885,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_exports",{"_index":3886,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule",{"_index":4028,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule_declarations",{"_index":4029,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowseritemmodule_exports",{"_index":4030,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule",{"_index":4033,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_declarations",{"_index":4034,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_exports",{"_index":4036,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_imports",{"_index":4035,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["cluster_rightsidebarmodule",{"_index":4046,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_declarations",{"_index":4047,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_exports",{"_index":4049,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_imports",{"_index":4048,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule",{"_index":4097,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_declarations",{"_index":4098,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_exports",{"_index":4099,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule",{"_index":4129,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_declarations",{"_index":4130,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_exports",{"_index":4132,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"overview.html":{}}}],["cluster_schemedropdownmodule_imports",{"_index":4131,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["cluster_slicesinputmodule",{"_index":4165,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_declarations",{"_index":4166,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_exports",{"_index":4167,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule",{"_index":4194,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_declarations",{"_index":4195,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_exports",{"_index":4196,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule",{"_index":4233,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_declarations",{"_index":4234,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_exports",{"_index":4235,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":4263,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":4264,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_viewermodule",{"_index":4448,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_declarations",{"_index":4449,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_exports",{"_index":4450,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["code",{"_index":2936,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["codex",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":3255,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["collapse",{"_index":3352,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["collapsed",{"_index":3264,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":3348,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["collider",{"_index":729,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["collider.ts",{"_index":1415,"title":{},"body":{"interfaces/Collision.html":{}}}],["collision",{"_index":1413,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{}}}],["collisioning",{"_index":1445,"title":{},"body":{"interfaces/Collision.html":{}}}],["color",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["colorbarcomponent",{"_index":331,"title":{"components/ColorBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorbarmodule",{"_index":1553,"title":{"modules/ColorBarModule.html":{}},"body":{"modules/ColorBarModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/SchemeDropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["colorchange",{"_index":1515,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["colorchanged",{"_index":1510,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{}}}],["colorchanged(color",{"_index":1528,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{}}}],["coloridx",{"_index":1693,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["coloring",{"_index":4170,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["colorizing",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["colorpickerlaunchercomponent",{"_index":334,"title":{"components/ColorPickerLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorpickerlaunchermodule",{"_index":1583,"title":{"modules/ColorPickerLauncherModule.html":{}},"body":{"modules/ColorPickerLauncherModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules.html":{},"overview.html":{}}}],["colors",{"_index":1522,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["colors.foreach((color",{"_index":2955,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["colors[order[index",{"_index":4511,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["colorscheme",{"_index":1512,"title":{"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{}},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["colorscheme.colors",{"_index":1525,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["colorschemecontentscomponent",{"_index":337,"title":{"components/ColorSchemeContentsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorschemecontentsmodule",{"_index":1792,"title":{"modules/ColorSchemeContentsModule.html":{}},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["colorschemepopupcomponent",{"_index":339,"title":{"components/ColorSchemePopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["colorschemepopupmodule",{"_index":1588,"title":{"modules/ColorSchemePopupModule.html":{}},"body":{"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules.html":{},"overview.html":{}}}],["colorschemeselection",{"_index":1692,"title":{"interfaces/ColorSchemeSelection.html":{}},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/SchemeDropdownComponent.html":{}}}],["colorvalues",{"_index":3949,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["colorvalues.push(color",{"_index":3954,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["column",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["combined",{"_index":2094,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":2223,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["combines",{"_index":2269,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["come",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":2146,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["comma",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["common",{"_index":3147,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["common_options",{"_index":1760,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["commonmodule",{"_index":534,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ViewerModule.html":{}}}],["compare",{"_index":2293,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["compatibility",{"_index":4260,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":2259,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/enumerations.html":{}}}],["completion",{"_index":3355,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["componenet",{"_index":3625,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["component",{"_index":101,"title":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["component's",{"_index":2422,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["component.injector.get(overlaycontainer",{"_index":4314,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component.injector.get(renderer2",{"_index":4312,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component.injector.get(themingservice",{"_index":4301,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component.location.nativeelement",{"_index":4313,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["component_template",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["componentref",{"_index":4286,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["components",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["composes",{"_index":3748,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["compositelayer",{"_index":700,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["computational",{"_index":3134,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["computations",{"_index":3715,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computes",{"_index":2475,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["concept",{"_index":3182,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["condition",{"_index":3825,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["conditions",{"_index":4715,"title":{},"body":{"license.html":{}}}],["config",{"_index":1308,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["config.isolated",{"_index":3445,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["configs",{"_index":1349,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["configuration",{"_index":3418,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["connect",{"_index":892,"title":{},"body":{"classes/CCFDatabase.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}}}],["connect(options",{"_index":914,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["connect(source",{"_index":3453,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["connected",{"_index":1899,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["connectedposition",{"_index":2476,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["connecting",{"_index":2160,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connection",{"_index":4739,"title":{},"body":{"license.html":{}}}],["connects",{"_index":916,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["consider",{"_index":4259,"title":{},"body":{"modules/StoreModule.html":{}}}],["console.log",{"_index":1488,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('starting",{"_index":1444,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":1501,"title":{},"body":{"interfaces/Collision.html":{}}}],["consortium",{"_index":4689,"title":{},"body":{"license.html":{}}}],["const",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["construction",{"_index":3140,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor",{"_index":566,"title":{},"body":{"classes/BodyUI.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/RightSidebarComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["constructor(@inject(message_service_config",{"_index":3444,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["constructor(@optional",{"_index":2119,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["constructor(config",{"_index":3472,"title":{},"body":{"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}}}],["constructor(container",{"_index":4370,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor(data",{"_index":823,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["constructor(db",{"_index":1039,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{}}}],["constructor(deckprops",{"_index":567,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["constructor(defaulttheme",{"_index":4278,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["constructor(dialog",{"_index":3090,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["constructor(dialogref",{"_index":3114,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(drawer",{"_index":4333,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["constructor(http",{"_index":3722,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["constructor(messageservice",{"_index":1873,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["constructor(ontologysearchservice",{"_index":3852,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["constructor(ontologyservice",{"_index":3637,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(options",{"_index":901,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["constructor(original",{"_index":2623,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(overlay",{"_index":2419,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["constructor(page",{"_index":2679,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["constructor(private",{"_index":1097,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/InfoButtonComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["constructor(props",{"_index":1275,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["constructor(public",{"_index":985,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/OntologySearchComponent.html":{}}}],["constructor(readonly",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["constructor(registry",{"_index":2762,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["constructor(source",{"_index":2189,"title":{},"body":{"injectables/DataState.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["constructor(state",{"_index":3044,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["constructorparameters[0",{"_index":1237,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["contain",{"_index":2083,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerLayersComponent.html":{}}}],["container",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["container.component.html",{"_index":1863,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["container.component.scss",{"_index":1862,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["container/container.component",{"_index":2334,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":341,"title":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["containerpayload",{"_index":2085,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":1952,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["containing",{"_index":51,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{},"interfaces/ValueObject.html":{}}}],["contains",{"_index":496,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["content",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/InfoDialogComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["content'},{'name",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["content.component",{"_index":2582,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["content.component.html",{"_index":1986,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.scss",{"_index":1985,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts",{"_index":2546,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:16",{"_index":2552,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:21",{"_index":2551,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:26",{"_index":2554,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:31",{"_index":2553,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:36",{"_index":2898,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:38",{"_index":2559,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:41",{"_index":2899,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:44",{"_index":2900,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.component.ts:46",{"_index":2556,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:49",{"_index":2901,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["content.module",{"_index":2618,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["content.module.ts",{"_index":2579,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/ImageViewerContentModule.html":{}}}],["content/content.component",{"_index":1923,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{}}}],["content/filters",{"_index":2545,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{}}}],["content/image",{"_index":2895,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["content1",{"_index":1865,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["content2",{"_index":1866,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["content?.contains(target",{"_index":1842,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["contentchildren",{"_index":1919,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["contentchildren(contentcomponent",{"_index":1901,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["contentchildren(drawercomponent",{"_index":1910,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["contentcomponent",{"_index":343,"title":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":2075,"title":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["contentelement",{"_index":1804,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["contentmodule",{"_index":2097,"title":{"modules/ContentModule.html":{}},"body":{"modules/ContentModule.html":{},"modules.html":{},"overview.html":{}}}],["contents",{"_index":1699,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["contents'},{'name",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["contents.component",{"_index":1799,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["contents.component.html",{"_index":1701,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.scss",{"_index":1700,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts",{"_index":1695,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:106",{"_index":1724,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:118",{"_index":1732,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:21",{"_index":1713,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:26",{"_index":1719,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:31",{"_index":1716,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:36",{"_index":1721,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:41",{"_index":1734,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:46",{"_index":1735,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:51",{"_index":1737,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:52",{"_index":1740,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:59",{"_index":1742,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:60",{"_index":1745,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:67",{"_index":1747,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:68",{"_index":1749,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:70",{"_index":1711,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:91",{"_index":1722,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.component.ts:98",{"_index":1730,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["contents.module",{"_index":1856,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["contents.module.ts",{"_index":1797,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{}}}],["contents/color",{"_index":1694,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{}}}],["contentsvisible",{"_index":2402,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["context",{"_index":967,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/OldRuiData.html":{}}}],["context.jsonld",{"_index":982,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/OldRuiData.html":{}}}],["continues",{"_index":3183,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contract",{"_index":3226,"title":{},"body":{"components/InfoDialogComponent.html":{},"license.html":{}}}],["control",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{}}}],["controller",{"_index":628,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["controls",{"_index":1828,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{}}}],["convenience",{"_index":549,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["convertoldruitojsonld(data",{"_index":3552,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["converts",{"_index":2803,"title":{},"body":{"interfaces/IdObject.html":{},"classes/ImageViewerLayer.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OldRuiData.html":{},"interfaces/ValueObject.html":{}}}],["coordinate",{"_index":3148,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["coordinate_system",{"_index":711,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordinate_system.cartesian",{"_index":774,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordinatesystem",{"_index":773,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["coordination/office",{"_index":3206,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["copied",{"_index":3498,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["copies",{"_index":4710,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4696,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4687,"title":{},"body":{"license.html":{}}}],["core",{"_index":2120,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/color",{"_index":2902,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["core/models/image",{"_index":1580,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["core/models/ontology",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/data",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{}}}],["core/services/ontology",{"_index":3672,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/theming/theming.service",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["core/store/data/data.state",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{}}}],["core/store/ontology/ontology.state",{"_index":3864,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["core/store/page/page.state",{"_index":2682,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["core/store/viewer/viewer.state",{"_index":3063,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["coremodule",{"_index":410,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2693,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["corresponds",{"_index":1565,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["count",{"_index":14,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["counter",{"_index":3425,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["counts",{"_index":937,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["cover",{"_index":4024,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["coverage",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["covid",{"_index":3494,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["covidtiff",{"_index":3493,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["create",{"_index":2421,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["create(original",{"_index":2629,"title":{},"body":{"classes/FlatNode.html":{}}}],["created",{"_index":2461,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["createentitycollections",{"_index":4479,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["creategraph",{"_index":1037,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["createlayerconfigs",{"_index":1312,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["createlayers",{"_index":4456,"title":{},"body":{"injectables/ViewerState.html":{}}}],["createlayers(ids",{"_index":4459,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["createloader",{"_index":1227,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createloader(source.type",{"_index":1298,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["createmodel(nodemap",{"_index":3777,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["createometiffloader",{"_index":3484,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["creates",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewerLayer.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["createselectionlabel(ontolgyselection",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["createvivviews",{"_index":1311,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["createzarrloader",{"_index":3482,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["createzarrloader(info",{"_index":3502,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["creating",{"_index":1926,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["creation",{"_index":3094,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creation_date",{"_index":3574,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator",{"_index":3535,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_first_name",{"_index":3570,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_last_name",{"_index":3571,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["creator_orcid",{"_index":3572,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["credits",{"_index":4680,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":2425,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["css",{"_index":4392,"title":{},"body":{"components/ViewerComponent.html":{},"dependencies.html":{}}}],["csvreport",{"_index":1492,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":1494,"title":{},"body":{"interfaces/Collision.html":{}}}],["ctrlclick",{"_index":682,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{}}}],["ctrlkey",{"_index":680,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["cubegeometry",{"_index":723,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["cubes",{"_index":787,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["cuboid",{"_index":4565,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":832,"title":{},"body":{"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/StageNavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["currently",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"injectables/DataSourceService.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"changelog.html":{}}}],["currentstate",{"_index":687,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["currentstate.data",{"_index":696,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["currentstate.zoomopacity",{"_index":695,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["currentstates",{"_index":1330,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["currentstates[view.id",{"_index":1332,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["currentviewstate",{"_index":1354,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["cursor",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["customizable",{"_index":2996,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["customizedcolor",{"_index":1771,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["cyberinfrastructure",{"_index":4682,"title":{},"body":{"index.html":{}}}],["d",{"_index":777,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.scenegraph",{"_index":789,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.wireframe",{"_index":790,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["d.x",{"_index":3578,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d.y",{"_index":3580,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d.z",{"_index":3582,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["d1e5f0",{"_index":1625,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d3d3d3",{"_index":4083,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["d47d60",{"_index":1685,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d50000",{"_index":4092,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["d7301f",{"_index":1649,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d73027",{"_index":1637,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d8daeb",{"_index":1642,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["d9ef8b",{"_index":1633,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["damages",{"_index":4735,"title":{},"body":{"license.html":{}}}],["dark",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data",{"_index":36,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["data.aggregatedata$.subscribe",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["data.alignment_datetime",{"_index":3575,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_id",{"_index":3567,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_first_name",{"_index":3568,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_last_name",{"_index":3569,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.alignment_operator_orcid",{"_index":3573,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.colorscheme.colors[0",{"_index":2948,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data.filter$.pipe(pluck('ontologyterms",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["data.id",{"_index":2947,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["data.label",{"_index":2905,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["data.length",{"_index":767,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["data.listdata$.subscribe",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["data.organname",{"_index":2904,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["data.reference_organ_id",{"_index":3554,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.storage.googleapis.com/test",{"_index":4395,"title":{},"body":{"components/ViewerComponent.html":{}}}],["data.termoccurencesdata$.subscribe",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["data.tissue_object_rotation",{"_index":3562,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_object_size",{"_index":3561,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point",{"_index":3563,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.x",{"_index":3543,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.y",{"_index":3544,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.tissue_position_mass_point.z",{"_index":3545,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["data.ts",{"_index":4753,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["data/data.state",{"_index":4244,"title":{},"body":{"modules/StoreModule.html":{}}}],["data/hubmap/pyramid_0.0.2/spraggins.ome.tif",{"_index":4396,"title":{},"body":{"components/ViewerComponent.html":{}}}],["data?.length",{"_index":657,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["dataaction",{"_index":2199,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["database",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["database.ts",{"_index":888,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["database.ts:106",{"_index":927,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:116",{"_index":922,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:126",{"_index":946,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:136",{"_index":944,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:147",{"_index":932,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:161",{"_index":925,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:171",{"_index":934,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:181",{"_index":930,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:190",{"_index":939,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:47",{"_index":912,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:49",{"_index":906,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:51",{"_index":903,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:58",{"_index":908,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database.ts:70",{"_index":915,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["database/src/lib/ccf",{"_index":887,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["database/src/lib/hubmap/hubmap",{"_index":4756,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["database/src/lib/hubmap/old",{"_index":3522,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["database/src/lib/interfaces.ts",{"_index":7,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["database/src/lib/interfaces.ts:90",{"_index":2126,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/interfaces.ts:92",{"_index":2124,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/interfaces.ts:94",{"_index":2125,"title":{},"body":{"interfaces/DataSource.html":{}}}],["database/src/lib/spatial",{"_index":4168,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["datafactory",{"_index":950,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["dataloading",{"_index":3971,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["dataquerystate",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["dataquerystate.completed",{"_index":2230,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["dataquerystate.running",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datasets",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":92,"title":{"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/ListResult.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchableItem.html":{},"components/ViewerComponent.html":{}}}],["datasourceservice",{"_index":160,"title":{"injectables/DataSourceService.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["datastate",{"_index":167,"title":{"injectables/DataState.html":{}},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"modules/StoreModule.html":{}}}],["datastatemodel",{"_index":2281,"title":{"interfaces/DataStateModel.html":{}},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["date",{"_index":4171,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["db",{"_index":1041,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["db.getaggregateresults(filter",{"_index":2171,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getimageviewerdata(iri",{"_index":2173,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getlistresults(filter",{"_index":2170,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytermoccurences(filter",{"_index":2172,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["dboptions",{"_index":2132,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["deal",{"_index":4699,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":4740,"title":{},"body":{"license.html":{}}}],["debug",{"_index":90,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["debugging",{"_index":88,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["decided",{"_index":4012,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["decides",{"_index":1386,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["decisions",{"_index":2972,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["deck",{"_index":553,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["deck(props",{"_index":647,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["deck.gl/core",{"_index":605,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":607,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["deck.gl/geo",{"_index":4642,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":4643,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":714,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["deckcallbackargs",{"_index":1239,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["deckprops",{"_index":570,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["declarations",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["decompress",{"_index":754,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["decoration",{"_index":2670,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/OntologySearchComponent.html":{}}}],["decorator",{"_index":610,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"dependencies.html":{}}}],["decorators",{"_index":588,"title":{},"body":{"classes/BodyUI.html":{},"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"components/DualSliderComponent.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/InfoDialogComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/SlicesInputComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["deep",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{}}}],["default",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologyState.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["default_ccf_db_options",{"_index":907,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["default_color_schemes",{"_index":1690,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["default_color_schemes[0",{"_index":4105,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["default_filter",{"_index":2250,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["default_icons",{"_index":2320,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["default_theme",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["defaultchannelconfig",{"_index":1250,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["defaulticondefinition",{"_index":2302,"title":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["defaultorder",{"_index":2916,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaults",{"_index":2282,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaultscheme",{"_index":4487,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["defaulttheme",{"_index":4272,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["deferred",{"_index":3242,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["deficient",{"_index":737,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["defined",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"changelog.html":{}}}],["definition",{"_index":2306,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["definition.html",{"_index":2740,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["definition.url",{"_index":2739,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["degree",{"_index":3600,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["delay",{"_index":1007,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["delete",{"_index":3781,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["demo",{"_index":3186,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["demo_source",{"_index":4393,"title":{},"body":{"components/ViewerComponent.html":{}}}],["department",{"_index":3221,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dependencies",{"_index":400,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":507,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/TissueData.html":{}}}],["descendants",{"_index":1902,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["describes",{"_index":1366,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["describing",{"_index":4175,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{}}}],["desired",{"_index":1203,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["detail",{"_index":3945,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["detailed",{"_index":3038,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["detailheight",{"_index":4427,"title":{},"body":{"components/ViewerComponent.html":{}}}],["details",{"_index":3086,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["detailview",{"_index":3934,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["detailwidth",{"_index":4426,"title":{},"body":{"components/ViewerComponent.html":{}}}],["detect",{"_index":2491,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["detected",{"_index":2441,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detection",{"_index":1886,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["detector",{"_index":1879,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["determine",{"_index":3988,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["determines",{"_index":1521,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["develop",{"_index":3130,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["developed",{"_index":4681,"title":{},"body":{"index.html":{}}}],["development",{"_index":2162,"title":{},"body":{"injectables/DataSourceService.html":{},"components/InfoDialogComponent.html":{}}}],["developmentmode",{"_index":4258,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":4595,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":3093,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["dialog's",{"_index":3117,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog'},{'name",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["dialog.component",{"_index":3098,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":3112,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.scss",{"_index":3111,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts",{"_index":3106,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":3116,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":3123,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":3122,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":3120,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.module",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":3237,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialogref",{"_index":3113,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialogue",{"_index":3096,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["didzoom",{"_index":661,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["diff",{"_index":3993,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["different",{"_index":3384,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{}}}],["dim",{"_index":1208,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["dimension",{"_index":498,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/TissueData.html":{}}}],["dimension_units",{"_index":3583,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["dimensions",{"_index":474,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TissueData.html":{}}}],["direct",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["directedgraph",{"_index":1042,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["direction",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["directive",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["directives",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["directly",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["director",{"_index":3207,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["disable",{"_index":732,"title":{},"body":{"classes/BodyUILayer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["disabled",{"_index":4415,"title":{},"body":{"components/ViewerComponent.html":{}}}],["discrete",{"_index":1546,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{}}}],["diseases",{"_index":3219,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["display",{"_index":49,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["displayed",{"_index":1519,"title":{},"body":{"components/ColorBarComponent.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["displayformatter",{"_index":3633,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displayformatter(option",{"_index":3644,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displaying",{"_index":3010,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{}}}],["displaylabel",{"_index":3760,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["displays",{"_index":1562,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["distinct",{"_index":2231,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["distribute",{"_index":4706,"title":{},"body":{"license.html":{}}}],["div",{"_index":1563,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["doc",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":727,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["docollisions(scene",{"_index":1443,"title":{},"body":{"interfaces/Collision.html":{}}}],["docollisions(state.data",{"_index":794,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["document",{"_index":1820,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["document:click",{"_index":1808,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["document:click(target",{"_index":1817,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["documentation",{"_index":3165,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"license.html":{}}}],["dom",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["domsanitizer",{"_index":2719,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["don't",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["down",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["download",{"_index":37,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["downloadclicked",{"_index":2648,"title":{},"body":{"components/HeaderComponent.html":{}}}],["downloadtooltip",{"_index":39,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["downloadurl",{"_index":38,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["dracoloader",{"_index":718,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["dracoworkerloader",{"_index":719,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["draggable",{"_index":4061,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["drawer",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["drawer.close",{"_index":4354,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawer.closeexpanded",{"_index":4353,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawer.component.html",{"_index":3275,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["drawer.component.scss",{"_index":3276,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["drawer.open",{"_index":4355,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawer.position",{"_index":1961,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["drawer/drawer.component",{"_index":1924,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["drawercomponent",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":2046,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["drawercontainerschanged",{"_index":2082,"title":{"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawerexpanded",{"_index":2589,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["drawerinitialized",{"_index":2088,"title":{"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":411,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":2093,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":1960,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["drawertoggled",{"_index":2089,"title":{"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":2338,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown'},{'name",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["dropdown.component",{"_index":2396,"title":{},"body":{"modules/DropdownModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["dropdown.component.html",{"_index":2340,"title":{},"body":{"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2339,"title":{},"body":{"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":4101,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:18",{"_index":4107,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:23",{"_index":4106,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:28",{"_index":4108,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:33",{"_index":4113,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:38",{"_index":4109,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.component.ts:46",{"_index":4111,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["dropdown.module",{"_index":3006,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["dropdown.module.ts",{"_index":4133,"title":{},"body":{"modules/SchemeDropdownModule.html":{}}}],["dropdown/scheme",{"_index":3005,"title":{},"body":{"modules/ImageViewerLayersModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{}}}],["dropdowncomponent",{"_index":346,"title":{"components/DropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["dropdownmodule",{"_index":2387,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["dual",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["dualslidercomponent",{"_index":348,"title":{"components/DualSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["dualslidermodule",{"_index":412,"title":{"modules/DualSliderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["due",{"_index":736,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["duration",{"_index":2059,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["during",{"_index":71,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["dynamic",{"_index":1539,"title":{},"body":{"components/ColorBarComponent.html":{},"dependencies.html":{}}}],["dynamically",{"_index":1561,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["e",{"_index":591,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.info",{"_index":811,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["e.isdragging",{"_index":640,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.object",{"_index":674,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.object['@id",{"_index":675,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e.picked",{"_index":672,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["e1b986",{"_index":1675,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e3b842",{"_index":1684,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e65100",{"_index":1608,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["e91e63",{"_index":1607,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["each",{"_index":3427,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["ease",{"_index":2062,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/SpinnerOverlayComponent.html":{}}}],["easily",{"_index":4070,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["edf8fb",{"_index":1662,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef6548",{"_index":1650,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef8a62",{"_index":1628,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ef9a9a",{"_index":1618,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["effect",{"_index":2354,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["effects",{"_index":623,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["efficient",{"_index":3154,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["effort",{"_index":3195,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["element",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["element(by.css('ccf",{"_index":465,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["element.getboundingclientrect",{"_index":3322,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["element.nativeelement.contains(target",{"_index":2506,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["elementref",{"_index":836,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/ViewerComponent.html":{}}}],["ellipsis",{"_index":2880,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["embedded",{"_index":3891,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["emit",{"_index":1379,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["emits",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["emitted",{"_index":504,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["emitter",{"_index":485,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{}}}],["emitters",{"_index":3964,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["emitting",{"_index":1728,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/DataSourceService.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["empty",{"_index":3739,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{}}}],["empty_data",{"_index":3056,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["empty_result",{"_index":3060,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["enable",{"_index":3648,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["enabled",{"_index":2004,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["enables",{"_index":1538,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["enableselection",{"_index":1513,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["encapsulates",{"_index":3846,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["encoded",{"_index":2804,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["end",{"_index":1935,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["end?.expanded",{"_index":2057,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["end?.opened",{"_index":2056,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["enddrawers",{"_index":1962,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["enddrawers.length",{"_index":1965,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["enddrawers[0",{"_index":1968,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["endexpanded",{"_index":2055,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["enough",{"_index":2939,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["ensures",{"_index":3759,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enter",{"_index":2449,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["entered",{"_index":4158,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["entering",{"_index":473,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["entire",{"_index":4249,"title":{},"body":{"modules/StoreModule.html":{}}}],["entities",{"_index":80,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["entity",{"_index":84,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["entityid",{"_index":739,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["entityupdate",{"_index":4477,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["entry",{"_index":524,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{},"components/SlicesInputComponent.html":{}}}],["entry.displaylabel.join().includes",{"_index":3688,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.label",{"_index":2875,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["entry.node.label.tolowercase",{"_index":3689,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.value",{"_index":2876,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["enum",{"_index":2255,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["enumerations",{"_index":4675,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":2147,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["environment.dboptions",{"_index":2157,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["environment.disabledbworker",{"_index":2151,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["environment.organnodes",{"_index":3817,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["environment.production",{"_index":2166,"title":{},"body":{"injectables/DataSourceService.html":{},"modules/StoreModule.html":{}}}],["environments/environment",{"_index":2148,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":1929,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["error('the",{"_index":2121,"title":{},"body":{"modules/CoreModule.html":{}}}],["error('theming",{"_index":4310,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["error(`multiple",{"_index":1938,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["error(`pyramid",{"_index":3513,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["errors",{"_index":1927,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["es",{"_index":1420,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["etc",{"_index":2092,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["eui",{"_index":3171,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["eui/e2e/src/app.po.ts",{"_index":457,"title":{},"body":{"classes/AppPage.html":{}}}],["eui/e2e/src/app.po.ts:4",{"_index":462,"title":{},"body":{"classes/AppPage.html":{}}}],["eui/e2e/src/app.po.ts:8",{"_index":460,"title":{},"body":{"classes/AppPage.html":{}}}],["eui/src/app/app.component.ts",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.component.ts:28",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.component.ts:31",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.component.ts:35",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["eui/src/app/app.module.ts",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/core/core.module.ts",{"_index":2112,"title":{},"body":{"modules/CoreModule.html":{}}}],["eui/src/app/core/header/header.component.ts",{"_index":2641,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:18",{"_index":2651,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:23",{"_index":2652,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:28",{"_index":2650,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:33",{"_index":2655,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:38",{"_index":2654,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.module.ts",{"_index":2702,"title":{},"body":{"modules/HeaderModule.html":{}}}],["eui/src/app/core/models/color",{"_index":1593,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["eui/src/app/core/models/flat",{"_index":2620,"title":{},"body":{"classes/FlatNode.html":{}}}],["eui/src/app/core/models/image",{"_index":2914,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/core/models/json",{"_index":2771,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["eui/src/app/core/models/ontology",{"_index":3622,"title":{},"body":{"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{}}}],["eui/src/app/core/services/data",{"_index":2129,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["eui/src/app/core/services/ontology",{"_index":3712,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/core/services/theming/theming.module.ts",{"_index":4265,"title":{},"body":{"modules/ThemingModule.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts",{"_index":4270,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:13",{"_index":4294,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:15",{"_index":4296,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:17",{"_index":4297,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:20",{"_index":4287,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:23",{"_index":4279,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:37",{"_index":4284,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:46",{"_index":4293,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:56",{"_index":4291,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:67",{"_index":4290,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:82",{"_index":4281,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/store/data/data.state.ts",{"_index":2174,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["eui/src/app/core/store/data/data.state.ts:101",{"_index":2215,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:103",{"_index":2218,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:107",{"_index":2209,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:111",{"_index":2235,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:116",{"_index":2220,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:118",{"_index":2212,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:120",{"_index":2237,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:123",{"_index":2232,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:130",{"_index":2190,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:155",{"_index":2200,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:169",{"_index":2195,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:181",{"_index":2192,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:193",{"_index":2197,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:92",{"_index":2204,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:94",{"_index":2202,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:96",{"_index":2205,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/data/data.state.ts:98",{"_index":2221,"title":{},"body":{"injectables/DataState.html":{}}}],["eui/src/app/core/store/icon",{"_index":2303,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts",{"_index":3874,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts:39",{"_index":3880,"title":{},"body":{"injectables/OntologyState.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts:42",{"_index":3882,"title":{},"body":{"injectables/OntologyState.html":{}}}],["eui/src/app/core/store/ontology/ontology.state.ts:50",{"_index":3877,"title":{},"body":{"injectables/OntologyState.html":{}}}],["eui/src/app/core/store/store.module.ts",{"_index":4240,"title":{},"body":{"modules/StoreModule.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts",{"_index":4453,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:116",{"_index":4462,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:40",{"_index":4476,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:44",{"_index":4470,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:49",{"_index":4460,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:71",{"_index":4466,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/core/store/viewer/viewer.state.ts:96",{"_index":4464,"title":{},"body":{"injectables/ViewerState.html":{}}}],["eui/src/app/modules/body/body",{"_index":812,"title":{},"body":{"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{}}}],["eui/src/app/modules/body/body.module.ts",{"_index":543,"title":{},"body":{"modules/BodyModule.html":{}}}],["eui/src/app/modules/color",{"_index":1502,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["eui/src/app/modules/filters/filters",{"_index":2544,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{}}}],["eui/src/app/modules/image",{"_index":2860,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{}}}],["eui/src/app/modules/info/info",{"_index":3083,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{}}}],["eui/src/app/modules/ontology",{"_index":3614,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["eui/src/app/modules/results",{"_index":3959,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["eui/src/app/modules/scheme",{"_index":4100,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts",{"_index":1355,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:16",{"_index":1365,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:21",{"_index":1370,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:26",{"_index":1374,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:31",{"_index":1378,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:38",{"_index":1383,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.module.ts",{"_index":1410,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts",{"_index":1857,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:101",{"_index":1893,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:111",{"_index":1883,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:120",{"_index":1895,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":1880,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":1911,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":1903,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":1907,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":1915,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":1918,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:58",{"_index":1898,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":1876,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:79",{"_index":1889,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts",{"_index":1988,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:100",{"_index":2017,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:113",{"_index":2012,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":2002,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":2003,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":2005,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":2006,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":2000,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":2018,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":1998,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:58",{"_index":2011,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:68",{"_index":2008,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["eui/src/app/shared/components/drawer/drawer.module.ts",{"_index":2331,"title":{},"body":{"modules/DrawerModule.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":3240,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:33",{"_index":3249,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":3248,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":3250,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:42",{"_index":3251,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:52",{"_index":3253,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:59",{"_index":3252,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/messages.ts",{"_index":2076,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/shared/components/drawer/toggle",{"_index":4331,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts",{"_index":2337,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:16",{"_index":2344,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:21",{"_index":2346,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:26",{"_index":2348,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:31",{"_index":2349,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:36",{"_index":2355,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:41",{"_index":2352,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:49",{"_index":2351,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.module.ts",{"_index":2391,"title":{},"body":{"modules/DropdownModule.html":{}}}],["eui/src/app/shared/components/dual",{"_index":2397,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["eui/src/app/shared/components/spinner",{"_index":4181,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{}}}],["eui/src/app/shared/services/message/message.service.ts",{"_index":3413,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:101",{"_index":3463,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:110",{"_index":3464,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:126",{"_index":3476,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:128",{"_index":3473,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:151",{"_index":3475,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:161",{"_index":3474,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:48",{"_index":3460,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:68",{"_index":3465,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:81",{"_index":3461,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:91",{"_index":3462,"title":{},"body":{"classes/MessageChannel.html":{}}}],["euler",{"_index":1066,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["event",{"_index":596,"title":{},"body":{"classes/BodyUI.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"license.html":{}}}],["event.checked",{"_index":1392,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["event.interactionstate?.iszooming",{"_index":686,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["event.key",{"_index":2518,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["event.pagey",{"_index":1846,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["event.target",{"_index":1816,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SlicesInputComponent.html":{}}}],["event.viewstate",{"_index":698,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["event.viewstate.zoom",{"_index":690,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["eventemitter",{"_index":483,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ViewerComponent.html":{}}}],["eventemitter(true",{"_index":3307,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["events",{"_index":1385,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["everything",{"_index":2284,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["evolve",{"_index":3184,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["evt",{"_index":844,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["evt.preventdefault",{"_index":845,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["example",{"_index":3456,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}}}],["except",{"_index":3432,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["executionstrategy",{"_index":4261,"title":{},"body":{"modules/StoreModule.html":{}}}],["expand",{"_index":3351,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["expand/collapse",{"_index":3359,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expand_collapse_params_default",{"_index":3267,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expandable",{"_index":2622,"title":{},"body":{"classes/FlatNode.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["expandcollapsedone",{"_index":3361,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expanded",{"_index":2090,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":3303,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expanded/collapsed",{"_index":3260,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":3308,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expandedstate",{"_index":3261,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":3263,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":3313,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expands",{"_index":3345,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["expansion",{"_index":2877,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{}}}],["expert",{"_index":3196,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["exploration",{"_index":3170,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["exploration.module",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["exploration.module.ts",{"_index":3615,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["exploration/ontology",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["exportas",{"_index":1859,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["exports",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["express",{"_index":4723,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":4177,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["extdeckprops",{"_index":1238,"title":{"interfaces/ExtDeckProps.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["extended",{"_index":3266,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":614,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["external_link",{"_index":42,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["externalid",{"_index":3549,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["extracting",{"_index":2784,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["f",{"_index":852,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["f1a340",{"_index":1644,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f2f424",{"_index":1683,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f7f7f7",{"_index":1626,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["f8fc9d",{"_index":1674,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["factor",{"_index":1074,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["factory",{"_index":3423,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["fade",{"_index":2353,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["faded",{"_index":2014,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["fadein",{"_index":2361,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["fadeinout",{"_index":1993,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["fafafa",{"_index":1405,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["fake",{"_index":3770,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["false",{"_index":662,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["fc8d59",{"_index":1636,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fdbb84",{"_index":1651,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fdd49e",{"_index":1652,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fddbc7",{"_index":1627,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["features",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["fee08b",{"_index":1635,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fee0b6",{"_index":1643,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["fef0d9",{"_index":1653,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["female",{"_index":62,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["fetch",{"_index":2318,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["fetch(url",{"_index":3517,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["fetches",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["few",{"_index":734,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ffb74d",{"_index":1620,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffcc80",{"_index":1604,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffe31c",{"_index":1665,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffff8d",{"_index":1605,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ffffbf",{"_index":1634,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["field",{"_index":22,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/Filter.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"interfaces/ValueObject.html":{}}}],["fields",{"_index":2785,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["file_format",{"_index":4172,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["file_subpath",{"_index":4174,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["files",{"_index":4698,"title":{},"body":{"license.html":{}}}],["fill",{"_index":2375,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["filler",{"_index":2672,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["filter",{"_index":73,"title":{"interfaces/Filter.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["filter's",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(d",{"_index":1447,"title":{},"body":{"interfaces/Collision.html":{}}}],["filter(l",{"_index":809,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["filter(s",{"_index":1191,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter(value",{"_index":3679,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["filter?.debug",{"_index":1179,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter?.ontologyterms",{"_index":1156,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filter?.sex",{"_index":1145,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["filterbox",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["filterbox.removebox",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["filterchange",{"_index":822,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["filtered",{"_index":3436,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{}}}],["filteredresults",{"_index":3630,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filtering",{"_index":3157,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["filteronchange",{"_index":1363,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filteronchange(event",{"_index":1380,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filters",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["filters?.agerange[0",{"_index":2657,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.agerange[1",{"_index":2658,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.bmirange[0",{"_index":2659,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.bmirange[1",{"_index":2660,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filters?.sex",{"_index":2656,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filterschange",{"_index":2550,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["filterscontentcomponent",{"_index":351,"title":{"components/FiltersContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["filterscontentmodule",{"_index":2574,"title":{"modules/FiltersContentModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filterspopovercomponent",{"_index":169,"title":{"components/FiltersPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["filterspopovermodule",{"_index":413,"title":{"modules/FiltersPopoverModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filtersvisible",{"_index":2586,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["finalize",{"_index":1288,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["find",{"_index":3750,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["find(nodemap[''].children",{"_index":3778,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["findids",{"_index":956,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["findids(this.store",{"_index":1014,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["finished",{"_index":2086,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["fired",{"_index":1837,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["first",{"_index":3180,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["fit",{"_index":4023,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["fitness",{"_index":4727,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{}}}],["fixes",{"_index":3539,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["fixes/performance",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["fixoldruikidneydata(data",{"_index":3542,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["flat",{"_index":2627,"title":{},"body":{"classes/FlatNode.html":{}}}],["flatmap",{"_index":1232,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatmap(loaders",{"_index":1346,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatmap(vivviews",{"_index":1323,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["flatnode",{"_index":2619,"title":{"classes/FlatNode.html":{}},"body":{"classes/FlatNode.html":{}}}],["flatnode(original",{"_index":2640,"title":{},"body":{"classes/FlatNode.html":{}}}],["flex",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["float",{"_index":3231,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["floor",{"_index":1761,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["flow",{"_index":2774,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["fly",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":4714,"title":{},"body":{"license.html":{}}}],["font",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["footer",{"_index":3233,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["foreach",{"_index":3751,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(current.children",{"_index":3799,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(nodemap",{"_index":3775,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foreach(organnodes",{"_index":3789,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["form",{"_index":522,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{}}}],["format",{"_index":3525,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["formatlabel",{"_index":3717,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["formatlabel(label",{"_index":3730,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formats",{"_index":3733,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formatter",{"_index":3647,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formcontrol",{"_index":3631,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formsmodule",{"_index":3708,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["forwards",{"_index":2376,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["found",{"_index":3734,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["foundational",{"_index":3136,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["framework",{"_index":3149,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["free",{"_index":4693,"title":{},"body":{"license.html":{}}}],["from(this.getdb().then((db",{"_index":2169,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["fromeuler",{"_index":1063,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["full",{"_index":3108,"title":{},"body":{"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["fullscreen_exit",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["fully",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2273,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["fund",{"_index":3202,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["funded",{"_index":3200,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["furnished",{"_index":4713,"title":{},"body":{"license.html":{}}}],["further",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["gender",{"_index":59,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["generate",{"_index":1371,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["generation",{"_index":3131,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["genericmessage",{"_index":2078,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":2079,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":2080,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["get(event",{"_index":3690,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["get(id",{"_index":921,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getaggregateresults",{"_index":893,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":96,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getaggregateresults(this.getids(filter",{"_index":1030,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getarguments",{"_index":2759,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getarguments(undefined",{"_index":2764,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getautocolor",{"_index":4457,"title":{},"body":{"injectables/ViewerState.html":{}}}],["getautocolor(index",{"_index":4461,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["getbackground",{"_index":2942,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["getbrightness",{"_index":2918,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["getbrightnesshigh",{"_index":1741,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getbrightnesslow",{"_index":1736,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getchannelconfigs",{"_index":2858,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getchannelnames",{"_index":2856,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getchildren",{"_index":3718,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getchildren(node",{"_index":3737,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getchildrenfunc",{"_index":3762,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["getcolor",{"_index":779,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getcontent",{"_index":1914,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["getcursor",{"_index":637,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["getdb",{"_index":2133,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getentityscenenodes",{"_index":1125,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getentityscenenodes(filter",{"_index":1131,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getexpandable",{"_index":2634,"title":{},"body":{"classes/FlatNode.html":{}}}],["getgradientstyle",{"_index":1536,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["gethaswrappedcontent",{"_index":1917,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["getheight",{"_index":2850,"title":{},"body":{"classes/ImageViewer.html":{}}}],["geticon",{"_index":4345,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["getids",{"_index":894,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["getids(filter",{"_index":926,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getimageviewerdata",{"_index":895,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getimageviewerdata(id",{"_index":929,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getimageviewerdata(iri",{"_index":98,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getindexofmatch",{"_index":3719,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getindexofmatch(label",{"_index":3740,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getlabel",{"_index":2631,"title":{},"body":{"classes/FlatNode.html":{}}}],["getlayers",{"_index":3016,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["getlistresult",{"_index":959,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getlistresult(this.store",{"_index":1022,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getlistresults",{"_index":896,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{}}}],["getlistresults(filter",{"_index":94,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["getloaders",{"_index":2854,"title":{},"body":{"classes/ImageViewer.html":{}}}],["getmessages",{"_index":3434,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["getmessagesfromsource",{"_index":3457,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["getmessagesfromsource(source",{"_index":3437,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["getmessagesfromsources",{"_index":3458,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["getmessagesfromsources(sources",{"_index":3440,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["getmethodname",{"_index":2751,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getmethodname(undefined",{"_index":2766,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["getontologytermoccurences",{"_index":897,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":933,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(this.getids(filter",{"_index":1031,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getpickinginfo",{"_index":703,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":707,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getrangelabel",{"_index":2473,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["getreferencebody",{"_index":1126,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferencebody(filter",{"_index":1133,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getreferenceorgans",{"_index":1127,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferenceorgans(filter",{"_index":1135,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getreferencescenenodes",{"_index":1128,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getreferencescenenodes(filter",{"_index":1137,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["gets",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorPickerLauncherComponent.html":{},"injectables/DataSourceService.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["getscene",{"_index":898,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{}}}],["getscene(filter",{"_index":938,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getscenenode",{"_index":1129,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["getscenenode(source",{"_index":1140,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getsources",{"_index":2852,"title":{},"body":{"classes/ImageViewer.html":{},"components/ViewerComponent.html":{}}}],["getspatialentities",{"_index":899,"title":{},"body":{"classes/CCFDatabase.html":{}}}],["getspatialentities(filter",{"_index":943,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialentity",{"_index":1069,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getspatialentity(this.db.store",{"_index":1149,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["getspatialentityforentity",{"_index":963,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialentityforentity(this.store",{"_index":1019,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["getspatialobjectreference",{"_index":1070,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["getspatialplacement",{"_index":1071,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["getter/setter",{"_index":3296,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["gettheme",{"_index":4274,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["getting",{"_index":3761,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["gettitletext",{"_index":458,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["gettransformationmatrix",{"_index":1038,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["gettransformationmatrix(sourceiri",{"_index":1054,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["gettransformmatrix",{"_index":776,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gettransparency",{"_index":1746,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["getvivid",{"_index":1233,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["getwidth",{"_index":2848,"title":{},"body":{"classes/ImageViewer.html":{}}}],["github",{"_index":3163,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["give",{"_index":3426,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["given",{"_index":2691,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["global",{"_index":2159,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["globally",{"_index":2164,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis",{"_index":2158,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis.dboptions",{"_index":2161,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":3330,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["gloptions",{"_index":1341,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["gltf",{"_index":751,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.nodes?.find((n",{"_index":757,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene",{"_index":763,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene.nodes[gltf.scene.nodes.length",{"_index":761,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scene?.nodes?.length",{"_index":760,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltf.scenes",{"_index":764,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltfloader",{"_index":721,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["gltfscene",{"_index":1465,"title":{},"body":{"interfaces/Collision.html":{}}}],["grab",{"_index":642,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["grabbing",{"_index":641,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["gradient",{"_index":1533,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{}}}],["gradient(to",{"_index":2954,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["gradienthighlight",{"_index":1511,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["gradientstyle",{"_index":1517,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["grant",{"_index":3213,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["granted",{"_index":4692,"title":{},"body":{"license.html":{}}}],["graph",{"_index":890,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"modules.html":{}}}],["graph.ts",{"_index":1033,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:38",{"_index":1040,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:44",{"_index":1053,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:63",{"_index":1044,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:66",{"_index":1047,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:69",{"_index":1051,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graph.ts:73",{"_index":1056,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["graphology",{"_index":1059,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["greeenorange",{"_index":1600,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["green",{"_index":4093,"title":{},"body":{"components/RotationSliderComponent.html":{},"components/ViewerComponent.html":{}}}],["greenred",{"_index":1630,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["group",{"_index":1357,"title":{},"body":{"components/CheckboxComponent.html":{},"components/StageNavComponent.html":{}}}],["grow",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["h",{"_index":1497,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":1500,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":1499,"title":{},"body":{"interfaces/Collision.html":{}}}],["half",{"_index":3265,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":2313,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["handlemessage",{"_index":1868,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["handlemessage(_msg",{"_index":1881,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["handlemessage(msg",{"_index":2007,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["handler",{"_index":2456,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["handles",{"_index":2547,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["handling",{"_index":2423,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["happen",{"_index":2555,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["happy",{"_index":4254,"title":{},"body":{"modules/StoreModule.html":{}}}],["has3dobject",{"_index":1192,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hash",{"_index":3766,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["hasspatialentity",{"_index":85,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["hasterm",{"_index":1157,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.kidney",{"_index":1173,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.left_kidney",{"_index":1176,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.right_kidney",{"_index":1174,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["hasterm.spleen",{"_index":1178,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["haswrappedcontent",{"_index":1872,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["header",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["header'},{'name",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["header.component",{"_index":2711,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":2646,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["header.component.scss",{"_index":2645,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}}}],["header/header.module",{"_index":2116,"title":{},"body":{"modules/CoreModule.html":{}}}],["headercomponent",{"_index":354,"title":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["headermodule",{"_index":2109,"title":{"modules/HeaderModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["heading",{"_index":3230,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["health",{"_index":3222,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["height",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["helper",{"_index":1925,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["here",{"_index":2325,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["hereby",{"_index":4691,"title":{},"body":{"license.html":{}}}],["hex",{"_index":2935,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ViewerComponent.html":{}}}],["hex.length",{"_index":4399,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hextorgbtriple(hex",{"_index":4397,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hextorgbtriple(layer.color",{"_index":4440,"title":{},"body":{"components/ViewerComponent.html":{}}}],["hhsn316201300006w/hhsn27200002",{"_index":3227,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["hidden",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["hide",{"_index":2612,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["hidelimitlabels",{"_index":1764,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["hidepointerlabels",{"_index":1765,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["hides",{"_index":2597,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["hiding",{"_index":3107,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["high",{"_index":1743,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["highlightcolor",{"_index":770,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["highlighted",{"_index":45,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/ColorBarComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{}}}],["highlighted.has(entity.entityid",{"_index":1190,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["highlighted.has(s['@id",{"_index":1025,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["highlightedentities",{"_index":81,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BodyUiComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["highlightedentities.concat([node.entityid",{"_index":876,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlightedentities.length",{"_index":873,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlightedentities[0",{"_index":874,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["highlighting",{"_index":1534,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["highvalue",{"_index":2403,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hit",{"_index":1493,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":1498,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":1496,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":1495,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":1416,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":1483,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":1481,"title":{},"body":{"interfaces/Collision.html":{}}}],["hive",{"_index":3194,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["holders",{"_index":4732,"title":{},"body":{"license.html":{}}}],["home",{"_index":2688,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["homeurl",{"_index":3892,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["hook",{"_index":2444,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["hooked",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":395,"title":{},"body":{"components/AppComponent-1.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["hostbinding",{"_index":1920,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["hostbinding('@expandcollapse",{"_index":3312,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostbinding('@fadeinout",{"_index":2034,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["hostbinding('@openclose",{"_index":3311,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostbinding('class",{"_index":1939,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["hostbinding('class.active",{"_index":4191,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["hostbinding('class.ccf",{"_index":3291,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["hostbinding('class.cff",{"_index":2029,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["hostbinding('style.margin",{"_index":2031,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["hostbindings",{"_index":1871,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/HeaderComponent-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["hostlistener",{"_index":1836,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":3360,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostlistener('@openclose.done",{"_index":3356,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["hostlistener('document:click",{"_index":1838,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["hostlistener('document:mousemove",{"_index":2503,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlistener('document:touchstart",{"_index":2504,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlisteners",{"_index":1807,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["hover",{"_index":1552,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["html",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":619,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["htmlelement",{"_index":621,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/SlicesInputComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["htmlinputelement",{"_index":510,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["htmlinputelement).value",{"_index":2517,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["http",{"_index":3726,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":870,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":865,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":862,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0013702",{"_index":2254,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["http://purl.org/ccf/0.5",{"_index":3566,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhleftkidney",{"_index":864,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhrightkidney",{"_index":860,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleen",{"_index":866,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc1",{"_index":867,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc2",{"_index":868,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhspleencc3",{"_index":869,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["http://www.geneontology.org/formats/oboinowl#hasexactsynonym",{"_index":2782,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["http://www.w3.org/2000/01/rdf",{"_index":2779,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["httpclient",{"_index":3723,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["httpclientmodule",{"_index":2113,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://assets.hubmapconsortium.org",{"_index":984,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":4678,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":3564,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["https://hubmapconsortium.org",{"_index":3146,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["https://portal.hubmapconsortium.org",{"_index":983,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://purl.org/ccf/latest/ccf",{"_index":981,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://purl.org/ccf/latest/ccf.owl",{"_index":980,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["https://vitessce",{"_index":4394,"title":{},"body":{"components/ViewerComponent.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":4262,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":972,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmap/hubmap",{"_index":953,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmap/vitessce",{"_index":1226,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{},"dependencies.html":{}}}],["hubmapassetsurl",{"_index":977,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapdataservice",{"_index":970,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapdataurl",{"_index":975,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["hubmapportalurl",{"_index":974,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{}}}],["hubmaptoken",{"_index":979,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["human",{"_index":3127,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["icon",{"_index":33,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchableItem.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["icondefinition",{"_index":2712,"title":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{}},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["iconregistry",{"_index":2720,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["iconregistrystate",{"_index":2721,"title":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"modules/StoreModule.html":{}}}],["icons",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["icons.ts",{"_index":2305,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["id",{"_index":28,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":27,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["identifiers",{"_index":3623,"title":{},"body":{"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["identity",{"_index":1115,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["idextractor",{"_index":2786,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idextractor(json",{"_index":2807,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idobject",{"_index":2770,"title":{"interfaces/IdObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["idproperty",{"_index":2783,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["ids",{"_index":928,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/ViewerState.html":{}}}],["ids.length",{"_index":4492,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["idx",{"_index":4112,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["iec",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["if(data.reference_organ_id",{"_index":3559,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["if(this.handlemessage(msg",{"_index":2037,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["image",{"_index":47,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["image_viewer",{"_index":44,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["image_viewer_layer_defaults",{"_index":4484,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["images",{"_index":2995,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["imageviewer",{"_index":1257,"title":{"classes/ImageViewer.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserItemComponent.html":{},"components/ViewerComponent.html":{}}}],["imageviewer:110",{"_index":3921,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:114",{"_index":3926,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:133",{"_index":3927,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:148",{"_index":3929,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:168",{"_index":3920,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:169",{"_index":3919,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:171",{"_index":3928,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:181",{"_index":3933,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:185",{"_index":3931,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:195",{"_index":3932,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:208",{"_index":3930,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:212",{"_index":3922,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:231",{"_index":3925,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:244",{"_index":3923,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:250",{"_index":3924,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:64",{"_index":3912,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:68",{"_index":3908,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:69",{"_index":3905,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:73",{"_index":3907,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:74",{"_index":3906,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:78",{"_index":3904,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:80",{"_index":3915,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:81",{"_index":3914,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:82",{"_index":3911,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:83",{"_index":3910,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:84",{"_index":3913,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:86",{"_index":3909,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imageviewer:99",{"_index":3918,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["imagevieweraccordioncomponent",{"_index":356,"title":{"components/ImageViewerAccordionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imagevieweraccordionmodule",{"_index":2883,"title":{"modules/ImageViewerAccordionModule.html":{}},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewercontentcomponent",{"_index":358,"title":{"components/ImageViewerContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewercontentmodule",{"_index":2908,"title":{"modules/ImageViewerContentModule.html":{}},"body":{"modules/ImageViewerContentModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerdata",{"_index":50,"title":{"interfaces/ImageViewerData.html":{}},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/Filter.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["imageviewerlayer",{"_index":1572,"title":{"classes/ImageViewerLayer.html":{}},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageviewerlayer(layer",{"_index":4475,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["imageviewerlayerargs",{"_index":2921,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["imageviewerlayerrequiredargnames",{"_index":2944,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"miscellaneous/typealiases.html":{}}}],["imageviewerlayerscomponent",{"_index":359,"title":{"components/ImageViewerLayersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerlayersmodule",{"_index":2888,"title":{"modules/ImageViewerLayersModule.html":{}},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerlegendcomponent",{"_index":361,"title":{"components/ImageViewerLegendComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerlegendmodule",{"_index":3025,"title":{"modules/ImageViewerLegendModule.html":{}},"body":{"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewermodule",{"_index":414,"title":{"modules/ImageViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImageViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerpopovercomponent",{"_index":173,"title":{"components/ImageViewerPopoverComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["imageviewerpopovermodule",{"_index":3034,"title":{"modules/ImageViewerPopoverModule.html":{}},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["imageviewerprops",{"_index":1246,"title":{"interfaces/ImageViewerProps.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["immutable",{"_index":3745,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["implementation",{"_index":2203,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["implemented",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":814,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["implied",{"_index":4724,"title":{},"body":{"license.html":{}}}],["implies",{"_index":2091,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["import",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["important",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/ViewerComponent.html":{}}}],["imported",{"_index":2122,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["imports",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ViewerModule.html":{}}}],["improved",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":86,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{}}}],["included",{"_index":4718,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3178,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{},"license.html":{}}}],["increased",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indiana",{"_index":3191,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["indicates",{"_index":2636,"title":{},"body":{"classes/FlatNode.html":{}}}],["indicator",{"_index":2141,"title":{},"body":{"injectables/DataSourceService.html":{},"components/ImageViewerAccordionComponent.html":{}}}],["individual",{"_index":1372,"title":{},"body":{"components/CheckboxComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["infectious",{"_index":3218,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["infix",{"_index":2363,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["info_outline",{"_index":2686,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/InfoButtonComponent.html":{}}}],["infobuttoncomponent",{"_index":363,"title":{"components/InfoButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":2701,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/HeaderModule.html":{},"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infodialogcomponent",{"_index":365,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["infodialogmodule",{"_index":415,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":89,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/CheckboxComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"index.html":{}}}],["infrastructure",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["inherit",{"_index":2604,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{}}}],["inherited",{"_index":3903,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["init",{"_index":3650,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["initial",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["initialization",{"_index":904,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["initializationstate",{"_index":3239,"title":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["initialize",{"_index":918,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initialize(component",{"_index":4285,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initialized",{"_index":2042,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializedeck",{"_index":2812,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["initializedeck(props",{"_index":1337,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["initializeimpl",{"_index":4275,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializeimpl(component",{"_index":4289,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializer",{"_index":4288,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["initializes",{"_index":2437,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["initializesliderpopover",{"_index":2410,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["initializestate",{"_index":704,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["initializing",{"_index":2087,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["initialviewstate",{"_index":1247,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["initiates",{"_index":1712,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["inject",{"_index":3124,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["inject(default_theme",{"_index":4303,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["inject(mat_dialog_data",{"_index":3121,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["injectable",{"_index":2127,"title":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/PageState.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"injectables/ViewerState.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["injectables",{"_index":2128,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/PageState.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"injectables/ViewerState.html":{},"overview.html":{}}}],["injected",{"_index":3119,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["injectiontoken",{"_index":3415,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["injectiontoken('default",{"_index":4300,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["inner",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["input",{"_index":475,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ViewerComponent.html":{}}}],["input'},{'name",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["input.component",{"_index":538,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.component.html",{"_index":477,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["input.component.scss",{"_index":476,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["input.component.ts",{"_index":472,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["input.component.ts:25",{"_index":4163,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:28",{"_index":503,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:30",{"_index":4162,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:37",{"_index":484,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:38",{"_index":4155,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:43",{"_index":4161,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:44",{"_index":493,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:50",{"_index":4160,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:54",{"_index":487,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:64",{"_index":4159,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:77",{"_index":4156,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.module",{"_index":4053,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["input.module.ts",{"_index":533,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.target",{"_index":509,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["input/block",{"_index":471,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"interfaces/TissueData.html":{}}}],["input/slices",{"_index":4057,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{}}}],["inputelement",{"_index":4145,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["inputevent",{"_index":491,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["inputeventsinterval",{"_index":1767,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["inputs",{"_index":821,"title":{},"body":{"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["inputtarget",{"_index":508,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["inputtarget.value",{"_index":512,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["inputvalue",{"_index":511,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["inserted",{"_index":3779,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["inside",{"_index":2524,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["instance",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["instances",{"_index":2985,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["instant",{"_index":3259,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":2531,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["institute",{"_index":3216,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["integrated",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":625,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["intent",{"_index":4010,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["inter",{"_index":2675,"title":{},"body":{"components/HeaderComponent.html":{}}}],["interactions",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":684,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["interest",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AggregateResult.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PageStateModel.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"interfaces/ValueObject.html":{},"interfaces/ViewerStateModel.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"index.html":{}}}],["interfaceinfo_outline",{"_index":2696,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"interfaces/IdObject.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PageStateModel.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"interfaces/ValueObject.html":{},"interfaces/ViewerStateModel.html":{},"overview.html":{}}}],["invisible",{"_index":2001,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["iri",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["isdark",{"_index":2919,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["isdemo",{"_index":4365,"title":{},"body":{"components/ViewerComponent.html":{}}}],["isdragging",{"_index":638,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["islight",{"_index":2920,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["isloading",{"_index":2866,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["isolated",{"_index":3421,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["isrgb",{"_index":3956,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["issliderinitialized",{"_index":2404,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isslideropen",{"_index":2405,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["issues",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":685,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["it's",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":56,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["item'},{'name",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["item.component",{"_index":4032,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{}}}],["item.component.html",{"_index":4004,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.scss",{"_index":4003,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts",{"_index":4002,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:19",{"_index":4007,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:24",{"_index":4009,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.component.ts:30",{"_index":4011,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["item.module",{"_index":4038,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["item.module.ts",{"_index":4031,"title":{},"body":{"modules/ResultsBrowserItemModule.html":{}}}],["item/results",{"_index":4001,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{}}}],["items",{"_index":93,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["iu",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":3687,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["json",{"_index":2773,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["jsondict",{"_index":4751,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["jsonld",{"_index":3548,"title":{},"body":{"interfaces/OldRuiData.html":{},"dependencies.html":{}}}],["jsonontology",{"_index":3806,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsonontology.pipe",{"_index":3809,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsonontologynode",{"_index":2778,"title":{"interfaces/JsonOntologyNode.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["jsontoontologynode",{"_index":3754,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["jsontoontologynode(json",{"_index":2806,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["july",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":3160,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["justify",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["keep",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keeping",{"_index":2222,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["keeps",{"_index":2591,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/StageNavComponent.html":{}}}],["key",{"_index":492,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TissueData.html":{}}}],["key/value",{"_index":2560,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["keyboard",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["keyboard_arrow_left",{"_index":4348,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["keyboard_arrow_right",{"_index":4347,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["keyboardevent",{"_index":2446,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["keyby",{"_index":3752,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keyby(nodes",{"_index":3813,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["keyframes",{"_index":2358,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["keys",{"_index":1344,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["keys.reduce((configs",{"_index":1348,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["kidney",{"_index":1159,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/InfoDialogComponent.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["kind",{"_index":4722,"title":{},"body":{"license.html":{}}}],["known",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":810,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["label",{"_index":15,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["label.length",{"_index":3839,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(0",{"_index":3836,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.substr(index",{"_index":3837,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().includes(searchvalue",{"_index":3832,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().indexof(searchvalue",{"_index":3834,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["labeled",{"_index":1356,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["labelextractor",{"_index":2796,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelextractor(json",{"_index":2809,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labelproperty",{"_index":2795,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["labels",{"_index":1373,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"interfaces/OntologyNode.html":{}}}],["labs/data",{"_index":4242,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/data/decorators",{"_index":2239,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/repositories",{"_index":2240,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/typings",{"_index":3749,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["labs/data/utils",{"_index":4480,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["last",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["lasthovered",{"_index":554,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["later",{"_index":3774,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["latest",{"_index":2210,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["launch",{"_index":1581,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher",{"_index":1568,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["launcher.component",{"_index":1590,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["launcher.component.html",{"_index":1570,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":1569,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":1560,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts:20",{"_index":1573,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.component.ts:25",{"_index":1574,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["launcher.module",{"_index":3007,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["launcher.module.ts",{"_index":1589,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["launcher/color",{"_index":1559,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["launchinfodialog",{"_index":3089,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["layer",{"_index":612,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer's",{"_index":1578,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["layer.color",{"_index":4497,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.colorscheme.colors.indexof(layer.color",{"_index":4506,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.customizedcolor",{"_index":4499,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.defaultorder",{"_index":4498,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.id",{"_index":2987,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ViewerComponent.html":{}}}],["layer.id.includes(getvivid(viewportid",{"_index":1351,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layer.label",{"_index":2994,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{}}}],["layer.selected",{"_index":2990,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layer.ts",{"_index":699,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["layer.ts:102",{"_index":2938,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:116",{"_index":708,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:24",{"_index":2929,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:25",{"_index":2930,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:27",{"_index":2927,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:28",{"_index":2926,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:29",{"_index":2925,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:30",{"_index":2933,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:32",{"_index":2931,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:33",{"_index":2928,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:34",{"_index":2932,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:35",{"_index":2922,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:47",{"_index":2943,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:70",{"_index":2934,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layer.ts:75",{"_index":706,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:77",{"_index":709,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:85",{"_index":710,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:95",{"_index":2941,"title":{},"body":{"classes/ImageViewerLayer.html":{}}}],["layerchange",{"_index":1571,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["layerchange.emit(layer",{"_index":1774,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["layerchanged",{"_index":2966,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layerchanged(layer",{"_index":2980,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layerconfig",{"_index":1245,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["layerconfigs",{"_index":1273,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerconfigs.length",{"_index":1322,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layerconfigs[index",{"_index":1326,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["layerfilter",{"_index":1338,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerfilter(undefined",{"_index":2834,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["layerfilterargs",{"_index":1241,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["layername",{"_index":702,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["layers",{"_index":629,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["layers'},{'name",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["layers(layers",{"_index":3019,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["layers.component",{"_index":3004,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["layers.component.html",{"_index":2964,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.scss",{"_index":2963,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts",{"_index":2959,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:21",{"_index":2969,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:26",{"_index":2968,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:31",{"_index":2973,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:36",{"_index":2975,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:44",{"_index":2983,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:54",{"_index":2977,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.component.ts:67",{"_index":2981,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["layers.filter(layer",{"_index":4469,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layers.length",{"_index":4438,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers.map(layer",{"_index":4474,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["layers.module",{"_index":2894,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerModule.html":{}}}],["layers.module.ts",{"_index":3003,"title":{},"body":{"modules/ImageViewerLayersModule.html":{}}}],["layers.reduce((result",{"_index":4439,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers/image",{"_index":2893,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerModule.html":{}}}],["layers].sort((v1",{"_index":3021,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["left",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["left.closeexpanded",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["left.open",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["left.px",{"_index":1996,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["left_kidney",{"_index":1163,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["leftmargin",{"_index":2032,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["leftsidebarcomponent",{"_index":367,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["leftsidebarmodule",{"_index":3407,"title":{"modules/LeftSidebarModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["legend'},{'name",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["legend.component",{"_index":3030,"title":{},"body":{"modules/ImageViewerLegendModule.html":{}}}],["legend.component.html",{"_index":3012,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.scss",{"_index":3011,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts",{"_index":3009,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:18",{"_index":3014,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:21",{"_index":3017,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.component.ts:22",{"_index":3015,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["legend.module",{"_index":3082,"title":{},"body":{"modules/ImageViewerPopoverModule.html":{}}}],["legend.module.ts",{"_index":3029,"title":{},"body":{"modules/ImageViewerLegendModule.html":{}}}],["legend/image",{"_index":3008,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["length",{"_index":1321,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["level",{"_index":2625,"title":{},"body":{"classes/FlatNode.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"changelog.html":{}}}],["levels",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["lexically",{"_index":3662,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["liability",{"_index":4736,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4733,"title":{},"body":{"license.html":{}}}],["license",{"_index":4685,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":3651,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["light",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ImageViewerLayer.html":{}}}],["lighter",{"_index":2687,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["lightingeffect",{"_index":603,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["limitation",{"_index":4701,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4528,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":4146,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["line",{"_index":645,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["line:no",{"_index":1839,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{}}}],["linear",{"_index":2953,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["link",{"_index":2643,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["linkage",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["linkchildren",{"_index":3780,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["linkchildren(nodemap",{"_index":3768,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["links",{"_index":3763,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["list",{"_index":24,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{}}}],["listdata",{"_index":2182,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listdata(filter",{"_index":2194,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listdataquerystatus",{"_index":2183,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["listen",{"_index":3420,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["listener",{"_index":2274,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["listeners",{"_index":1891,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["listens",{"_index":1819,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["listresult",{"_index":26,"title":{"interfaces/ListResult.html":{}},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["literal",{"_index":586,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyStateModel.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":715,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Collision.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SpatialSceneNode.html":{}}}],["load(model.scenegraph",{"_index":753,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["loaded",{"_index":920,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"changelog.html":{}}}],["loader",{"_index":1224,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/TiffInfo.html":{}}}],["loader.channelnames",{"_index":1347,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["loader.isrgb",{"_index":4435,"title":{},"body":{"components/ViewerComponent.html":{}}}],["loaderpromises",{"_index":1296,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["loaders",{"_index":1263,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders.gl/core",{"_index":717,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":720,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":722,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["loaders.length",{"_index":3944,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders[0",{"_index":3946,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaders[0].isrgb",{"_index":3957,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaderselection",{"_index":3947,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loaderselection.push",{"_index":3952,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["loadertype",{"_index":1228,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loadertype.bftiff",{"_index":3509,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.covidtiff",{"_index":3510,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.omezarr",{"_index":3503,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.statictiff",{"_index":3511,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.staticzarr",{"_index":3501,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.tiff",{"_index":3507,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["loadertype.tiff2",{"_index":3508,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadertype.zarr",{"_index":3500,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadgltf(model",{"_index":750,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["loading",{"_index":3059,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["loadoffsets(offsets",{"_index":3512,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadoffsets(url",{"_index":3515,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["loadontology",{"_index":3720,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["loads",{"_index":3743,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["local_link",{"_index":43,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["located",{"_index":3290,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["location",{"_index":3844,"title":{},"body":{"interfaces/OntologySelection.html":{}}}],["lodash",{"_index":2775,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"dependencies.html":{}}}],["log",{"_index":4679,"title":{},"body":{"index.html":{}}}],["logged",{"_index":2653,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loggedin",{"_index":2647,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logic",{"_index":3272,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["login",{"_index":2662,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logo",{"_index":2321,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{}}}],["logo.svg",{"_index":2323,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["logout",{"_index":2663,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lomap",{"_index":3753,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lomap(ontology",{"_index":3811,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["look",{"_index":2692,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["looks",{"_index":3747,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup",{"_index":3721,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["lookup(nodes",{"_index":3744,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["low",{"_index":1738,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["low/high",{"_index":2492,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lower",{"_index":2428,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lowerbound",{"_index":1450,"title":{},"body":{"interfaces/Collision.html":{}}}],["lowerbound[i",{"_index":1462,"title":{},"body":{"interfaces/Collision.html":{}}}],["lowvalue",{"_index":2406,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["luma.gl/core",{"_index":724,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["luma.gl/experimental",{"_index":726,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["m",{"_index":4164,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["made",{"_index":1577,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["magma",{"_index":1673,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["main",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["make",{"_index":2163,"title":{},"body":{"injectables/DataSourceService.html":{},"components/ImageViewerLayersComponent.html":{}}}],["male",{"_index":61,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["managed",{"_index":1913,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["manages",{"_index":4271,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["many",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map((s",{"_index":1023,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["map(createmodel",{"_index":3815,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(entities",{"_index":4472,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map(layers",{"_index":4468,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["map(model",{"_index":1448,"title":{},"body":{"interfaces/Collision.html":{}}}],["map(nodes",{"_index":3812,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(ontology",{"_index":3810,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(partial(prunemodel",{"_index":3816,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(searchresults",{"_index":3682,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["map(state",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["map(states",{"_index":2228,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["mapping",{"_index":1597,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/InfoDialogComponent.html":{}}}],["maps",{"_index":3137,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["margin",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{}}}],["margin2",{"_index":3269,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["mass",{"_index":3537,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["mat",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["mat.transformaspoint",{"_index":1451,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":1453,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat_dialog_data",{"_index":3125,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["matautocompletemodule",{"_index":3710,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matautocompleteselectedevent",{"_index":3653,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["matbuttonmodule",{"_index":2703,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["match",{"_index":2666,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["matcheckboxchange",{"_index":1381,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["matcheckboxmodule",{"_index":1411,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/ImageViewerLayersModule.html":{}}}],["matching",{"_index":99,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["matdialog",{"_index":3091,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["matdialogmodule",{"_index":3238,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":3115,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["material",{"_index":2690,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["matexpansionmodule",{"_index":2890,"title":{},"body":{"modules/ImageViewerAccordionModule.html":{}}}],["matformfieldmodule",{"_index":2392,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["math.gl/core",{"_index":609,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":1490,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(...this.selection",{"_index":2496,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.max(n",{"_index":1461,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.min(...this.selection",{"_index":2494,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(math.max(1",{"_index":689,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["math.min(n",{"_index":1458,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.trunc(slider_max",{"_index":4408,"title":{},"body":{"components/ViewerComponent.html":{}}}],["maticonmodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/ViewerModule.html":{}}}],["maticonregistry",{"_index":2718,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["matinputmodule",{"_index":536,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/OntologySearchModule.html":{},"modules/SlicesInputModule.html":{}}}],["matprogressspinnermodule",{"_index":4198,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["matradiomodule",{"_index":4134,"title":{},"body":{"modules/SchemeDropdownModule.html":{},"modules/StageNavModule.html":{}}}],["matrix",{"_index":666,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{}}}],["matrix.copy(scene.matrix",{"_index":1428,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.gettranslation",{"_index":669,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["matrix.identity",{"_index":1429,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.multiplyright(rotationmatrix",{"_index":1435,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.scale(scene.scale",{"_index":1437,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix.translate(scene.translation",{"_index":1431,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4",{"_index":608,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["matrix4().fromquaternion(scene.rotation",{"_index":1434,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4().identity",{"_index":1426,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4().rotatex(toradians(90)).multiplyleft(transform",{"_index":1200,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["matrix4(model.transformmatrix",{"_index":1449,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(node.transformmatrix",{"_index":667,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["matrix4(worldmatrix).multiplyright(matrix",{"_index":1438,"title":{},"body":{"interfaces/Collision.html":{}}}],["matselectmodule",{"_index":2394,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SchemeDropdownModule.html":{}}}],["matslidetogglemodule",{"_index":4237,"title":{},"body":{"modules/StageNavModule.html":{}}}],["mattoolbarmodule",{"_index":2705,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodule",{"_index":2707,"title":{},"body":{"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["mattreemodule",{"_index":3888,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["max",{"_index":2378,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["max.tostring().length",{"_index":4150,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["maxhits",{"_index":1489,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxlength",{"_index":4149,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["maxrotationx",{"_index":652,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["maxselected",{"_index":4490,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["mc",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["measured",{"_index":3326,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["measuredmargin",{"_index":3328,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["measuredwidth",{"_index":3319,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["medicine",{"_index":3212,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["member",{"_index":3386,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["menu",{"_index":1696,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["merchantability",{"_index":4726,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4704,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":3416,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["mesh",{"_index":775,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer('cubes",{"_index":795,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer('wireframes",{"_index":796,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["meshlayer(id",{"_index":766,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["message",{"_index":1882,"title":{"interfaces/Message.html":{},"interfaces/Message-1.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["message_service_config",{"_index":2332,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["message_service_default_config",{"_index":2333,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messagechannel",{"_index":1897,"title":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":3454,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messagechannel.counter",{"_index":3443,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messages",{"_index":1878,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":1861,"title":{"injectables/MessageService.html":{},"injectables/MessageService-1.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice.connect(this",{"_index":1945,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["messageservice.connect(this).getmessages",{"_index":2035,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["messageserviceconfig",{"_index":3419,"title":{"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["messagess",{"_index":2265,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["metadata",{"_index":55,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["meter",{"_index":1079,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["method",{"_index":1384,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["method.apply(registry",{"_index":2747,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["methodname",{"_index":2742,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["methods",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["millimeter",{"_index":1077,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["min",{"_index":2383,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["minor",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":650,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["miscellaneous",{"_index":4674,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":4686,"title":{},"body":{"license.html":{}}}],["mm",{"_index":515,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["mock",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":3110,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["mode",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"components/StageNavComponent.html":{}}}],["model",{"_index":802,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["model._lighting",{"_index":804,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.color",{"_index":807,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.entityid",{"_index":1455,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.scenegraph",{"_index":803,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.scenegraphnode",{"_index":756,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.subscribe(ontology",{"_index":3818,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["model.tooltip",{"_index":1454,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":806,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.unpickable",{"_index":801,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model.zoombasedopacity",{"_index":799,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["model['@id",{"_index":798,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["modelmatrix",{"_index":1425,"title":{},"body":{"interfaces/Collision.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":1474,"title":{},"body":{"interfaces/Collision.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":1473,"title":{},"body":{"interfaces/Collision.html":{}}}],["models",{"_index":792,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["models.map((model",{"_index":797,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["models/color",{"_index":4481,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["models/image",{"_index":4482,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["models/json",{"_index":3755,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["models/ontology",{"_index":3756,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["modify",{"_index":4703,"title":{},"body":{"license.html":{}}}],["module",{"_index":397,"title":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["modules",{"_index":399,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/body/body.module",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/color",{"_index":4114,"title":{},"body":{"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["modules/filters/filters",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modules/image",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["modules/info/info",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{}}}],["modules/ontology",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/results",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["molecular",{"_index":3132,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["more",{"_index":2257,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":2432,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mouseevent",{"_index":587,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorSchemePopupComponent.html":{}}}],["mouseevent?.srcevent?.ctrlkey",{"_index":683,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["moved",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["movement",{"_index":2433,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["moz",{"_index":4089,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["msg",{"_index":2010,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["msg.payload",{"_index":2047,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["msg.payload.drawers",{"_index":2040,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["msg.payload.opened",{"_index":4351,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["msg.payload.type",{"_index":2038,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["msg.source",{"_index":2045,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["multi",{"_index":4269,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":3173,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["n.name",{"_index":758,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["n3",{"_index":955,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{},"dependencies.html":{}}}],["name",{"_index":53,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["namespace",{"_index":2314,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["nan",{"_index":4143,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["national",{"_index":3215,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["nativeelement",{"_index":1841,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/ViewerComponent.html":{}}}],["nav",{"_index":4204,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav'},{'name",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["nav.component",{"_index":4239,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav.component.html",{"_index":4206,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.scss",{"_index":4205,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts",{"_index":4202,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["nav.component.ts:19",{"_index":4213,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:24",{"_index":4215,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:29",{"_index":4217,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:34",{"_index":4218,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:40",{"_index":4220,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:51",{"_index":4223,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.module",{"_index":2105,"title":{},"body":{"modules/ContentModule.html":{}}}],["nav.module.ts",{"_index":4236,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav/stage",{"_index":2104,"title":{},"body":{"modules/ContentModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"miscellaneous/typealiases.html":{}}}],["navigateto",{"_index":459,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["navigation",{"_index":3176,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["necessary",{"_index":2454,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["need",{"_index":1811,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/FiltersPopoverComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["needed",{"_index":2971,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["needs",{"_index":1887,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerLayersComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["nested",{"_index":2523,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["network",{"_index":4683,"title":{},"body":{"index.html":{}}}],["never",{"_index":1936,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["new",{"_index":497,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/CoreModule.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["newconfigs",{"_index":1306,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["newfilter",{"_index":877,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["newly",{"_index":1527,"title":{},"body":{"components/ColorBarComponent.html":{},"classes/FlatNode.html":{}}}],["newrotation",{"_index":4063,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["newval",{"_index":4151,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["newvalue",{"_index":2515,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["next",{"_index":644,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["nextmessageid",{"_index":3442,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["ng",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{}}}],["ng5",{"_index":1750,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"dependencies.html":{}}}],["ng5slidermodule",{"_index":1798,"title":{},"body":{"modules/ColorSchemeContentsModule.html":{},"modules/DualSliderModule.html":{}}}],["ngacceptinputtype_expanded",{"_index":3389,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ngacceptinputtype_opened",{"_index":3388,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ngacceptinputtype_position",{"_index":3385,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["ngafterviewinit",{"_index":820,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["ngfor",{"_index":2984,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["ngmodule",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{}}}],["ngonchanges",{"_index":2411,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ngonchanges(changes",{"_index":2438,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ngondestroy",{"_index":1869,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["ngoninit",{"_index":3403,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["ngxs",{"_index":850,"title":{},"body":{"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":2241,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"dependencies.html":{}}}],["ngxsdataentitycollectionsrepository",{"_index":4454,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ngxsdatapluginmodule",{"_index":4241,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":4256,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":2176,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["ngxsentitycollections",{"_index":4478,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ngxsmodule",{"_index":4243,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":4257,"title":{},"body":{"modules/StoreModule.html":{}}}],["niaid",{"_index":3220,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["niddk",{"_index":3210,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["nih",{"_index":3201,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["node",{"_index":601,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/Collision.html":{},"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"miscellaneous/typealiases.html":{}}}],["node's",{"_index":2633,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.children",{"_index":3842,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.entityid",{"_index":871,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["node.label.tolowercase().includes(searchvalue",{"_index":3826,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.mesh",{"_index":1467,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.mesh.primitives",{"_index":1468,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.mesh.primitives.length",{"_index":1469,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.name",{"_index":1476,"title":{},"body":{"interfaces/Collision.html":{}}}],["node.parent",{"_index":3790,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.synonymlabels.find((label",{"_index":3831,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.ts",{"_index":2621,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OntologyNode.html":{}}}],["node.ts:11",{"_index":2632,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:16",{"_index":2635,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:27",{"_index":2630,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:29",{"_index":2626,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.zoomtoonload",{"_index":663,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["node['@id",{"_index":858,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["nodeattrs",{"_index":1141,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodeclick",{"_index":555,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodeclicksubject",{"_index":556,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstart",{"_index":557,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstartsubject",{"_index":558,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstop",{"_index":559,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodehoverstopsubject",{"_index":560,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["nodemap",{"_index":3765,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodemap[parent].children.push(id",{"_index":3776,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"miscellaneous/typealiases.html":{}}}],["nodes.concat",{"_index":1182,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodes.filter(s",{"_index":1186,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["nodes.foreach((node",{"_index":3824,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes[id",{"_index":3801,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes[node.parent",{"_index":3867,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["none",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["noninfringement",{"_index":4730,"title":{},"body":{"license.html":{}}}],["normally",{"_index":830,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["not(:last",{"_index":2671,"title":{},"body":{"components/HeaderComponent.html":{}}}],["note",{"_index":731,"title":{},"body":{"classes/BodyUILayer.html":{},"components/DualSliderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{}}}],["notice",{"_index":4716,"title":{},"body":{"license.html":{}}}],["now",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":4026,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["null",{"_index":1016,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["null)?.getcontainerelement",{"_index":4315,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["num_layers_selected_on_creation",{"_index":4483,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/FlatNode.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["number((event.target",{"_index":2516,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(this.options.floor",{"_index":2519,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(value.slice(0",{"_index":3332,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["number.isnan(value",{"_index":4403,"title":{},"body":{"components/ViewerComponent.html":{}}}],["number.parseint(hex.slice(1",{"_index":4401,"title":{},"body":{"components/ViewerComponent.html":{}}}],["number[][]}).transformmatrix",{"_index":778,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["number]}).color",{"_index":780,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["numslices",{"_index":4138,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["o",{"_index":2276,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["object",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{}}}],["object.assign",{"_index":2294,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["object.assign(s",{"_index":1024,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["object.assign(this",{"_index":2946,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["object.entries(channelconfigs",{"_index":3951,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["object.entries(configs).reduce((result",{"_index":1307,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["object.entries(entities",{"_index":4505,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["object.keys(this.channelconfigs",{"_index":1267,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["object.values(entities",{"_index":4473,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["object.values(state.nodes",{"_index":3879,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["objects",{"_index":506,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/TissueData.html":{}}}],["observable",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observableinput",{"_index":2193,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["observedvalueof",{"_index":2242,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["obtaining",{"_index":4695,"title":{},"body":{"license.html":{}}}],["occurencedata",{"_index":3849,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["occurences",{"_index":962,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["occurrences",{"_index":935,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["occurs",{"_index":2435,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["office",{"_index":3204,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["official",{"_index":4544,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":2049,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["offsets",{"_index":3497,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["old",{"_index":3540,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["oldruidata",{"_index":3521,"title":{"interfaces/OldRuiData.html":{}},"body":{"interfaces/OldRuiData.html":{}}}],["oldviewstate",{"_index":1352,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["ome",{"_index":3487,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["omezarr",{"_index":3486,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["omezarrinfo",{"_index":1229,"title":{"interfaces/OMEZarrInfo.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omezarrreader",{"_index":3483,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omezarrreader.fromurl(url",{"_index":3505,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["omit",{"_index":3938,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":2123,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":2399,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onchannelschange",{"_index":3042,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["onchannelschange(channels",{"_index":3049,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["onclick",{"_index":633,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["ondestroy",{"_index":1858,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["one",{"_index":2256,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["ones",{"_index":2961,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["onhover",{"_index":631,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["oninit",{"_index":3400,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/RightSidebarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["onkeyhigh",{"_index":2412,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeyhigh(event",{"_index":2445,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow",{"_index":2413,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow(event",{"_index":2451,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["online",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["onscroll",{"_index":3970,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onscroll(event",{"_index":3981,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onselect",{"_index":3634,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onselect(event",{"_index":3652,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontolgyselection.foreach((selection",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["ontolgyselection.length",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["ontolgyselection[0].label",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["ontological",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":65,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["ontology.ts",{"_index":2772,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["ontology/ccf",{"_index":3565,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["ontology/ontology.state",{"_index":4246,"title":{},"body":{"modules/StoreModule.html":{}}}],["ontologyexplorationmodule",{"_index":416,"title":{"modules/OntologyExplorationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyfilter",{"_index":3850,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologynode",{"_index":2624,"title":{"interfaces/OntologyNode.html":{}},"body":{"classes/FlatNode.html":{},"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["ontologysearchcomponent",{"_index":369,"title":{"components/OntologySearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologysearchmodule",{"_index":3611,"title":{"modules/OntologySearchModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologysearchservice",{"_index":3638,"title":{"injectables/OntologySearchService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["ontologyselected(ontologyselection",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselection",{"_index":157,"title":{"interfaces/OntologySelection.html":{}},"body":{"components/AppComponent.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{}}}],["ontologyselection.map(selection",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselectioncomponent",{"_index":371,"title":{"components/OntologySelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologyselectionlabel",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["ontologyselectionmodule",{"_index":3612,"title":{"modules/OntologySelectionModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyselections",{"_index":3858,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologyservice",{"_index":3632,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologystate",{"_index":3724,"title":{"injectables/OntologyState.html":{}},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{}}}],["ontologystatemodel",{"_index":3757,"title":{"interfaces/OntologyStateModel.html":{}},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["ontologyterms",{"_index":67,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["ontologytermsdata",{"_index":2288,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ontologytermsfulldata",{"_index":2184,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["ontologytreecomponent",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["ontologytreemodule",{"_index":3613,"title":{"modules/OntologyTreeModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules.html":{},"overview.html":{}}}],["onviewstatechange",{"_index":635,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["onviewstatechange(undefined",{"_index":2836,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["onviewstatechangeargs",{"_index":1242,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["opacity",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/BodyUILayer.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{}}}],["open",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open(data",{"_index":3052,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["open(event",{"_index":1824,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["open/close",{"_index":3310,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["openapi",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["opened",{"_index":2016,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["opened(value",{"_index":3299,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["opened/closed",{"_index":3257,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":3306,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openedstate",{"_index":3258,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":3346,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openimageviewer",{"_index":4006,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["opening",{"_index":3980,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["opening/closing/expanding",{"_index":3273,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openresult",{"_index":4005,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["opens",{"_index":1714,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["openviewer(viewer",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["operator",{"_index":2268,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["operatorfunction",{"_index":2243,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["opposite",{"_index":3262,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["ops",{"_index":993,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addhubmapdatatostore",{"_index":1001,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addjsonldtostore(this.options.hubmapdataurl",{"_index":1000,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addn3tostore(this.options.ccfowlurl",{"_index":996,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["ops.push(addrdfxmltostore(this.options.ccfowlurl",{"_index":997,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["optimizations",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1382,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["option.displaylabel[0",{"_index":3693,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[1",{"_index":3694,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[2",{"_index":3695,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option:first",{"_index":4125,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["option:last",{"_index":4126,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["option?.displaylabel",{"_index":3686,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["optional",{"_index":87,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["options",{"_index":69,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{}}}],["options.ceil",{"_index":2521,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["options.floor",{"_index":2520,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionschanged",{"_index":2414,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionsvisible",{"_index":2341,"title":{},"body":{"components/DropdownComponent.html":{}}}],["orbitaxis",{"_index":615,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["orbitview",{"_index":604,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["order",{"_index":3138,"title":{},"body":{"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["order.length",{"_index":4512,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ordering",{"_index":3387,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["organ",{"_index":52,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["organids",{"_index":3783,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organization",{"_index":3145,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["organname",{"_index":54,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["organnodes",{"_index":3785,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organs",{"_index":942,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["organsid",{"_index":1150,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["original",{"_index":2628,"title":{},"body":{"classes/FlatNode.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["originx",{"_index":2479,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["originy",{"_index":2480,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ot",{"_index":2311,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["ot2od026671",{"_index":3209,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["other.expanded",{"_index":3374,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.expandedstate2",{"_index":3375,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.margin2",{"_index":3380,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.measuredmargin",{"_index":3378,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.measuredwidth",{"_index":3377,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.opened",{"_index":3376,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["other.width",{"_index":3379,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["otherwise",{"_index":2732,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"license.html":{}}}],["out",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"license.html":{},"overview.html":{}}}],["outer",{"_index":4128,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["outline",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{}}}],["output",{"_index":505,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ViewerComponent.html":{}}}],["outputs",{"_index":481,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{}}}],["outside",{"_index":827,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["overall",{"_index":1367,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["overflow",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["overlay",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["overlay'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["overlay.component",{"_index":4200,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.component.html",{"_index":4185,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":4184,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":4182,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:16",{"_index":4190,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:19",{"_index":4186,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:22",{"_index":4188,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.create",{"_index":2486,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.module",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.module.ts",{"_index":4197,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.position().flexibleconnectedto(element).withpositions([position",{"_index":2484,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay/spinner",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{}}}],["overlaycontainer",{"_index":4298,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["overlaymodule",{"_index":2541,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["overlayref",{"_index":2407,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.attach(popoverportal",{"_index":2513,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.updateposition",{"_index":2514,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlays",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["overlayx",{"_index":2481,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayy",{"_index":2482,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overview",{"_index":3939,"title":{"overview.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["overview_defaults",{"_index":3940,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["overviewargs",{"_index":3937,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["overviewview",{"_index":3935,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["overviewviewnewargs",{"_index":3936,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["owl",{"_index":3162,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["owner",{"_index":1805,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["owner?.contains(target",{"_index":1843,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["owning",{"_index":4335,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["p",{"_index":1073,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"changelog.html":{}}}],["p.translation_units",{"_index":1075,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_rotation",{"_index":1085,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_scaling",{"_index":1093,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.x_translation",{"_index":1081,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_rotation",{"_index":1086,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_scaling",{"_index":1094,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.y_translation",{"_index":1082,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_rotation].map(toradians",{"_index":1087,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_scaling",{"_index":1095,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["p.z_translation].map(t",{"_index":1083,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["package",{"_index":4634,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["page",{"_index":2644,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["pagestate",{"_index":2680,"title":{"injectables/PageState.html":{}},"body":{"components/HeaderComponent-1.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["pagestatemodel",{"_index":3897,"title":{"interfaces/PageStateModel.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["pair",{"_index":3382,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["pane",{"_index":2382,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["panel",{"_index":2373,"title":{},"body":{"components/DropdownComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["panelclass",{"_index":2487,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["param",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{}}}],["parameters",{"_index":495,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["parameters>[0",{"_index":1240,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["parameters[0",{"_index":3496,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["params",{"_index":3268,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["parent",{"_index":620,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/CheckboxComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{},"miscellaneous/typealiases.html":{}}}],["parent.messages.pipe(takewhile",{"_index":3448,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["parentextractor",{"_index":2792,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentextractor(json",{"_index":2808,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parentproperty",{"_index":2791,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["parents",{"_index":3764,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["parseint(inputvalue",{"_index":4152,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["parser",{"_index":4665,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":3193,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{}}}],["partial",{"_index":568,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/ValueObject.html":{},"injectables/ViewerState.html":{}}}],["partial.placeholder",{"_index":2802,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["partial[0",{"_index":1772,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["particular",{"_index":4728,"title":{},"body":{"license.html":{}}}],["partonomy",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":2752,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.join",{"_index":2757,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.push('innamespace",{"_index":2756,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.push('literal",{"_index":2755,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["parts.push('set",{"_index":2754,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["pass",{"_index":2873,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["passed",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["passes",{"_index":1575,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["path",{"_index":1119,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/CheckboxComponent.html":{},"dependencies.html":{}}}],["path.length",{"_index":1121,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["path.reverse",{"_index":1122,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["path/unweighted",{"_index":1062,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["patient",{"_index":2571,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["payload",{"_index":2084,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"miscellaneous/typealiases.html":{}}}],["pbr",{"_index":805,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["permission",{"_index":4690,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4711,"title":{},"body":{"license.html":{}}}],["person",{"_index":4694,"title":{},"body":{"license.html":{}}}],["persons",{"_index":4712,"title":{},"body":{"license.html":{}}}],["physiologic",{"_index":3179,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["pick",{"_index":2945,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["pickable",{"_index":768,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["picked",{"_index":671,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["picker",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["picture",{"_index":3900,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["pictureinpictureviewer",{"_index":3898,"title":{"classes/PictureInPictureViewer.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ViewerComponent.html":{}}}],["pictureinpictureviewerprops",{"_index":3901,"title":{"interfaces/PictureInPictureViewerProps.html":{}},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["pipe",{"_index":2227,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["pipe(mergeall",{"_index":3450,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["placed",{"_index":4255,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":2997,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"changelog.html":{}}}],["placement",{"_index":1052,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["placement.target['@id",{"_index":1114,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["placement_date",{"_index":3585,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["placements",{"_index":1108,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["placementtarget",{"_index":3553,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["placementtarget?.endswith('kidney",{"_index":3560,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["places",{"_index":735,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["plasma",{"_index":1682,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["pluck",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["plugin",{"_index":4253,"title":{},"body":{"modules/StoreModule.html":{}}}],["point",{"_index":3536,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["pointer",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["popover",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover's",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["popover'},{'name",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["popover.component",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"modules/FiltersPopoverModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popover.component.html",{"_index":2585,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.scss",{"_index":2584,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts",{"_index":2583,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:15",{"_index":2593,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:21",{"_index":2590,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:26",{"_index":2594,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:31",{"_index":2600,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:36",{"_index":2599,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:37",{"_index":3057,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:42",{"_index":3061,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:43",{"_index":2598,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:47",{"_index":3062,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:51",{"_index":2596,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:52",{"_index":3058,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:57",{"_index":3046,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:70",{"_index":3047,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:79",{"_index":3053,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:88",{"_index":3050,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.component.ts:99",{"_index":3055,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["popover.module",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageViewerModule.html":{}}}],["popover.module.ts",{"_index":2617,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popover/filters",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{}}}],["popover/image",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["popoverelement",{"_index":2408,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverelement.nativeelement.contains(target",{"_index":2507,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverportal",{"_index":2409,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popup",{"_index":1507,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"changelog.html":{}}}],["popup'},{'name",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["popup.component",{"_index":1855,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["popup.component.html",{"_index":1803,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.scss",{"_index":1802,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts",{"_index":1801,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:20",{"_index":1812,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:25",{"_index":1809,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:30",{"_index":1814,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:32",{"_index":1830,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:37",{"_index":1834,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:40",{"_index":1831,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:45",{"_index":1827,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:53",{"_index":1818,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.component.ts:64",{"_index":1825,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["popup.module",{"_index":1592,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{}}}],["popup.module.ts",{"_index":1854,"title":{},"body":{"modules/ColorSchemePopupModule.html":{}}}],["popup/color",{"_index":1591,"title":{},"body":{"modules/ColorPickerLauncherModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{}}}],["popupvisible",{"_index":1806,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["portal",{"_index":973,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/HeaderComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["portalmodule",{"_index":2542,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["portions",{"_index":4720,"title":{},"body":{"license.html":{}}}],["position",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BodyUiComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OldRuiData.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["position(value",{"_index":3295,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["positions",{"_index":1543,"title":{},"body":{"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["positions[index",{"_index":2956,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["positionstrategy",{"_index":2483,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["posterior",{"_index":4225,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["postprocess",{"_index":755,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["precision",{"_index":3211,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["prefix",{"_index":3736,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["preparation",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["preprint",{"_index":3167,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["presented",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":2450,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["preview",{"_index":4230,"title":{},"body":{"components/StageNavComponent.html":{}}}],["primitive",{"_index":1470,"title":{},"body":{"interfaces/Collision.html":{}}}],["primitive.attributes.position",{"_index":1471,"title":{},"body":{"interfaces/Collision.html":{}}}],["primitive.attributes.position.min",{"_index":1472,"title":{},"body":{"interfaces/Collision.html":{}}}],["private",{"_index":551,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["process",{"_index":2009,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["processed",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":1884,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["programmers",{"_index":730,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["progress",{"_index":4183,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["project",{"_index":3085,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["projected",{"_index":1892,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["projects/.../data.state.ts",{"_index":4676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../drawer.component.ts",{"_index":4749,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../hubmap",{"_index":4752,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../image",{"_index":4748,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../loader.ts",{"_index":4677,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../messages.ts",{"_index":4747,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../ontology",{"_index":4750,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../picture",{"_index":4754,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../stage",{"_index":4755,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["promise",{"_index":95,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["promise(r",{"_index":1010,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["promise(resolve",{"_index":3246,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["promise.all(loaderpromises",{"_index":1300,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["promise.all(ops",{"_index":1006,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["proof",{"_index":3181,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["prop",{"_index":2741,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["property",{"_index":1388,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IdObject.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/ValueObject.html":{}}}],["property(0",{"_index":2794,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(idproperty",{"_index":2787,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(labelproperty",{"_index":2797,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(parentproperty",{"_index":2793,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(synonymsproperty",{"_index":2800,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["property(valueproperty",{"_index":2790,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["props",{"_index":622,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["props.defaultchannelconfig",{"_index":1255,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["props.overview",{"_index":3943,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["protected",{"_index":1271,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["protractor",{"_index":463,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["provide",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":849,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/InfoDialogComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":2149,"title":{},"body":{"injectables/DataSourceService.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["provider",{"_index":889,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["providers",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["provides",{"_index":3641,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["providing",{"_index":1989,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["prunednodes",{"_index":3787,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["prunemodel(model",{"_index":3784,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["public",{"_index":891,"title":{},"body":{"classes/CCFDatabase.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"changelog.html":{}}}],["publication",{"_index":3168,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["publish",{"_index":4705,"title":{},"body":{"license.html":{}}}],["publishreplay",{"_index":2245,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["publishreplay(1",{"_index":2280,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["pull",{"_index":1718,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{}}}],["pureimageviewerlayer",{"_index":2915,"title":{"interfaces/PureImageViewerLayer.html":{}},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["purplebrown",{"_index":1639,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["purplelightblue",{"_index":1655,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["purpose",{"_index":4729,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1535,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["px",{"_index":3287,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["quad",{"_index":924,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["qualitative",{"_index":1598,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"changelog.html":{}}}],["qualitative1",{"_index":1601,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["qualitative2",{"_index":1616,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["quaternion",{"_index":1064,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["queried",{"_index":21,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["queries",{"_index":72,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"components/ViewerComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["queries/aggregate",{"_index":954,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/find",{"_index":957,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/image",{"_index":958,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/list",{"_index":960,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/ontology",{"_index":961,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["queries/spatial",{"_index":964,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["query",{"_index":10,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["querydata",{"_index":2275,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["querying",{"_index":2270,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["querylist",{"_index":1900,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["querystatus",{"_index":2185,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["question",{"_index":1368,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["r",{"_index":1088,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{}}}],["r.hits.length",{"_index":1491,"title":{},"body":{"interfaces/Collision.html":{}}}],["r.x",{"_index":3592,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r.y",{"_index":3594,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r.z",{"_index":3596,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["r_rad",{"_index":1084,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["r_rad[0",{"_index":1090,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["r_rad[2",{"_index":1091,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["radio",{"_index":4127,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["radius",{"_index":1547,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/OntologySearchComponent.html":{},"components/RotationSliderComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["range",{"_index":75,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{}}}],["rangelabel",{"_index":2418,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ratio",{"_index":3590,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["rc.1",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1067,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["rdf.type",{"_index":1104,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["rdfjs/data",{"_index":4650,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":4663,"title":{},"body":{"dependencies.html":{}}}],["react",{"_index":4667,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":3709,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["read",{"_index":838,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/ViewerComponent.html":{}}}],["reader",{"_index":3504,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["reader.loadomezarr",{"_index":3506,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["readonly",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/ChannelConfig.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/FlatNode.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SpatialSceneNode.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["ready",{"_index":2137,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["real",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":4252,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":1999,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["receiving",{"_index":3424,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["record",{"_index":1244,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["red",{"_index":4091,"title":{},"body":{"components/RotationSliderComponent.html":{},"components/ViewerComponent.html":{}}}],["redtan",{"_index":1647,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["ref",{"_index":1048,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["refcount",{"_index":2246,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["reference",{"_index":941,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialObjectReference.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["reference_organ_id",{"_index":3530,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["referencelayer",{"_index":2991,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["references",{"_index":1100,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["referencing",{"_index":2992,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["reforganid",{"_index":3550,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["refresh",{"_index":516,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["refreshblocksize",{"_index":479,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/TissueData.html":{}}}],["refreshclicked",{"_index":2649,"title":{},"body":{"components/HeaderComponent.html":{}}}],["refreshes",{"_index":488,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["refreshslices",{"_index":4153,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["region",{"_index":2907,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["regions",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2316,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/StageNavComponent.html":{}}}],["registered",{"_index":2319,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["registericon",{"_index":2736,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registericon(definition",{"_index":2733,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registericonimpl",{"_index":2761,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registericonimpl(definition",{"_index":2737,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registering",{"_index":2715,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registerloaders",{"_index":716,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["registerloaders([dracoworkerloader",{"_index":785,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["registers",{"_index":2730,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registration",{"_index":2310,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry",{"_index":2722,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state",{"_index":4245,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":2714,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:106",{"_index":2767,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:120",{"_index":2765,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:43",{"_index":2763,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:72",{"_index":2768,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry.state.ts:82",{"_index":2769,"title":{},"body":{"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["registry/default",{"_index":2304,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["registry/icon",{"_index":2713,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"modules/StoreModule.html":{}}}],["registry[methodname",{"_index":2744,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["relationship",{"_index":3144,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["relative",{"_index":880,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["relavant",{"_index":1530,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["release",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["remote",{"_index":2142,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["remove",{"_index":1387,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["removebox",{"_index":2587,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["removeclass",{"_index":4317,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["removes",{"_index":4282,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["render",{"_index":829,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["renderer",{"_index":4311,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["renderer2",{"_index":4299,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["renderer[methodname](overlay",{"_index":4319,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["renderer[methodname](root",{"_index":4318,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["rendering",{"_index":1717,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/StageNavComponent.html":{}}}],["renderlayers",{"_index":705,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["replace",{"_index":847,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["replay",{"_index":2272,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject",{"_index":2244,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject(1",{"_index":2201,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["replaysubject>(1",{"_index":2289,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["report",{"_index":1477,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":1484,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":2175,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["represents",{"_index":3172,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["reqprops",{"_index":1276,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.height",{"_index":1279,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.sources.length",{"_index":1280,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["reqprops.width",{"_index":1278,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["requested",{"_index":923,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["requests",{"_index":3727,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["require",{"_index":2940,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["required",{"_index":1252,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["res",{"_index":3516,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["res.json",{"_index":3520,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["res.status",{"_index":3518,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["research",{"_index":3199,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["reset",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["resetchannelconfigs",{"_index":1343,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["resetrotation",{"_index":4072,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["resets",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["resettheme",{"_index":4276,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["resizesensor",{"_index":4387,"title":{},"body":{"components/ViewerComponent.html":{}}}],["resizesensor(container",{"_index":4429,"title":{},"body":{"components/ViewerComponent.html":{}}}],["resizing",{"_index":4123,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["resolution",{"_index":3142,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["resolve",{"_index":3243,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["resolves",{"_index":1916,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataSourceService.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["resolving",{"_index":919,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["respond",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["responsetype",{"_index":3808,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["responsible",{"_index":3714,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["restriction",{"_index":4700,"title":{},"body":{"license.html":{}}}],["result",{"_index":11,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result's",{"_index":4014,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["result[key",{"_index":1309,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["resultclicked",{"_index":3973,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resulting",{"_index":2805,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["resultlabel",{"_index":3972,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["results",{"_index":100,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resultsbrowser",{"_index":3961,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsercomponent",{"_index":375,"title":{"components/ResultsBrowserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["resultsbrowseritemcomponent",{"_index":377,"title":{"components/ResultsBrowserItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["resultsbrowseritemmodule",{"_index":4027,"title":{"modules/ResultsBrowserItemModule.html":{}},"body":{"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["resultsbrowseritems",{"_index":3965,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsermodule",{"_index":417,"title":{"modules/ResultsBrowserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["resulttype",{"_index":41,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchableItem.html":{}}}],["resulturl",{"_index":40,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["return",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["returns",{"_index":461,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{}}}],["reverse",{"_index":2566,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["rgb",{"_index":2937,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{}}}],["right",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["right.closeexpanded",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["right.expanded",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["right.open",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["right.px",{"_index":1997,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["right_kidney",{"_index":1161,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["rightmargin",{"_index":2033,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["rights",{"_index":4702,"title":{},"body":{"license.html":{}}}],["rightsidebarcomponent",{"_index":379,"title":{"components/RightSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["rightsidebarmodule",{"_index":4045,"title":{"modules/RightSidebarModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["root",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"modules/CoreModule.html":{},"injectables/DataSourceService.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["root'},{'name",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["root_states",{"_index":4250,"title":{},"body":{"modules/StoreModule.html":{}}}],["rootnode",{"_index":3716,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["rotation",{"_index":381,"title":{"interfaces/Rotation.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["rotation.x",{"_index":4079,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.y",{"_index":4080,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.z",{"_index":4081,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation_order",{"_index":3597,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotation_units",{"_index":3599,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotationchanged",{"_index":4062,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotationclone",{"_index":4066,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotationclone[axis",{"_index":4068,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotationmatrix",{"_index":1433,"title":{},"body":{"interfaces/Collision.html":{}}}],["rotationorbit",{"_index":655,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["rotations",{"_index":4071,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["rotationslidercomponent",{"_index":380,"title":{"components/RotationSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["rotationslidermodule",{"_index":4050,"title":{"modules/RotationSliderModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules.html":{},"overview.html":{}}}],["rotationx",{"_index":654,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["row",{"_index":1402,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{}}}],["rui",{"_index":1143,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{},"changelog.html":{}}}],["rui/e2e/src/app.po.ts",{"_index":467,"title":{},"body":{"classes/AppPage-1.html":{}}}],["rui/e2e/src/app.po.ts:4",{"_index":469,"title":{},"body":{"classes/AppPage-1.html":{}}}],["rui/e2e/src/app.po.ts:8",{"_index":468,"title":{},"body":{"classes/AppPage-1.html":{}}}],["rui/src/app/app.component.ts",{"_index":394,"title":{},"body":{"components/AppComponent-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts",{"_index":4320,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:13",{"_index":4328,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:15",{"_index":4329,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:17",{"_index":4330,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:20",{"_index":4324,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:23",{"_index":4321,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:37",{"_index":4323,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:46",{"_index":4327,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:56",{"_index":4326,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:67",{"_index":4325,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:82",{"_index":4322,"title":{},"body":{"injectables/ThemingService-1.html":{}}}],["rui/src/app/core/store/icon",{"_index":2326,"title":{},"body":{"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState-1.html":{}}}],["rui/src/app/core/store/page/page.state.ts",{"_index":3890,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["rui/src/app/core/store/page/page.state.ts:25",{"_index":3894,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:26",{"_index":3896,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/modules/content/content.component.ts",{"_index":1984,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:10",{"_index":1987,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.module.ts",{"_index":2103,"title":{},"body":{"modules/ContentModule.html":{}}}],["rui/src/app/modules/content/stage",{"_index":4201,"title":{},"body":{"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/modules/header/header.component.ts",{"_index":2678,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["rui/src/app/modules/header/header.component.ts:17",{"_index":2681,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["rui/src/app/modules/left",{"_index":3397,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{}}}],["rui/src/app/modules/right",{"_index":4042,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{}}}],["rui/src/app/shared/components/block",{"_index":470,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/TissueData.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts",{"_index":1971,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:101",{"_index":1976,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:111",{"_index":1974,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:120",{"_index":1977,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":1973,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":1981,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":1979,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":1980,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":1982,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":1983,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:58",{"_index":1978,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":1972,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:79",{"_index":1975,"title":{},"body":{"components/ContainerComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts",{"_index":2063,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:100",{"_index":2073,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:113",{"_index":2072,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":2066,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":2067,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":2068,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":2069,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":2065,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":2074,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":2064,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:58",{"_index":2071,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:68",{"_index":2070,"title":{},"body":{"components/ContentComponent-2.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":3390,"title":{},"body":{"classes/InitializationState-1.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:33",{"_index":3392,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":3391,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":3393,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:42",{"_index":3394,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:52",{"_index":3396,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:59",{"_index":3395,"title":{},"body":{"classes/InitializationState-1.html":{}}}],["rui/src/app/shared/components/drawer/messages.ts",{"_index":2096,"title":{},"body":{"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/shared/components/drawer/toggle",{"_index":4361,"title":{},"body":{"components/ToggleButtonComponent-1.html":{}}}],["rui/src/app/shared/components/rotation",{"_index":4058,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{}}}],["rui/src/app/shared/components/slices",{"_index":4137,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{}}}],["rui/src/app/shared/services/message/message.service.ts",{"_index":3455,"title":{},"body":{"interfaces/Message-1.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:101",{"_index":3469,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:110",{"_index":3470,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:126",{"_index":3480,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:128",{"_index":3477,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:151",{"_index":3479,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:161",{"_index":3478,"title":{},"body":{"injectables/MessageService-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:48",{"_index":3466,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:68",{"_index":3471,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:81",{"_index":3467,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:91",{"_index":3468,"title":{},"body":{"classes/MessageChannel-1.html":{}}}],["run",{"_index":1888,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["running",{"_index":2258,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["runtime",{"_index":2309,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["rxjs",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["s",{"_index":1020,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sad",{"_index":1478,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":1487,"title":{},"body":{"interfaces/Collision.html":{}}}],["safedef",{"_index":2726,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["safehtml",{"_index":2716,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["saferesourceurl",{"_index":2717,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sample",{"_index":2906,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"changelog.html":{}}}],["samples",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":2724,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sanitized",{"_index":2312,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["sanitizer",{"_index":2723,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sanitizer.bypasssecuritytrusthtml(html",{"_index":2728,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl(url",{"_index":2727,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["sans",{"_index":2676,"title":{},"body":{"components/HeaderComponent.html":{}}}],["saved",{"_index":2561,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["scaffolding",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1201,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/HeaderComponent-1.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scale(1,2",{"_index":4360,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["scales",{"_index":3174,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["scalex",{"_index":521,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["scaling",{"_index":4176,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["scaling_units",{"_index":3589,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["scene",{"_index":728,"title":{},"body":{"classes/BodyUILayer.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scene.children",{"_index":1441,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.filter(d",{"_index":1464,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.matrix",{"_index":1427,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":1440,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.rotation",{"_index":1432,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.scale",{"_index":1436,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.translation",{"_index":1430,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.ts",{"_index":1124,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scene.ts:105",{"_index":1132,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:115",{"_index":1142,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:154",{"_index":1139,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:26",{"_index":1130,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:30",{"_index":1134,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:47",{"_index":1136,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scene.ts:64",{"_index":1138,"title":{},"body":{"classes/CCFSpatialScene.html":{}}}],["scenegraph",{"_index":743,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphlayer",{"_index":712,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphnode",{"_index":725,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["scenegraphnode.rotation",{"_index":759,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenes",{"_index":911,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["schema",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["schema#label",{"_index":2780,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["scheme",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme.colors[index",{"_index":4508,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme.ts",{"_index":1594,"title":{},"body":{"interfaces/ColorScheme.html":{}}}],["scheme.type",{"_index":4117,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["scheme/color",{"_index":1503,"title":{},"body":{"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["scheme1",{"_index":1599,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme2",{"_index":1614,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme3",{"_index":1638,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme4",{"_index":1646,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme5",{"_index":1654,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme6",{"_index":1663,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme7",{"_index":1672,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["scheme8",{"_index":1681,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["schemechange",{"_index":2867,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["schemechanged",{"_index":4104,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemechanged(idx",{"_index":4110,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemedropdowncomponent",{"_index":382,"title":{"components/SchemeDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["schemedropdownmodule",{"_index":3002,"title":{"modules/SchemeDropdownModule.html":{}},"body":{"modules/ImageViewerLayersModule.html":{},"modules/SchemeDropdownModule.html":{},"modules.html":{},"overview.html":{}}}],["schemeidx",{"_index":4103,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["schemeoptions",{"_index":1707,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["schemes",{"_index":1542,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{}}}],["schemes.ts",{"_index":1595,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["science",{"_index":4684,"title":{},"body":{"index.html":{}}}],["screen",{"_index":3109,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["scroll",{"_index":3984,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollbar",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrolled",{"_index":3986,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollheight",{"_index":3991,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrolling",{"_index":1969,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollingmodule",{"_index":4040,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["scrolltop",{"_index":3992,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["search",{"_index":900,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["search'},{'name",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["search(filter",{"_index":945,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["search.component",{"_index":3711,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.component.html",{"_index":3628,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.scss",{"_index":3627,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts",{"_index":3624,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:25",{"_index":3642,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:30",{"_index":3665,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:36",{"_index":3663,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:41",{"_index":3639,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:47",{"_index":3668,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:54",{"_index":3649,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:72",{"_index":3646,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:81",{"_index":3658,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:90",{"_index":3661,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:98",{"_index":3654,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.detached",{"_index":3700,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.module",{"_index":3617,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["search.module.ts",{"_index":3707,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.service",{"_index":3673,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["search.service.ts",{"_index":3713,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["search.service.ts:107",{"_index":3725,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:124",{"_index":3742,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:142",{"_index":3728,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:154",{"_index":3746,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:190",{"_index":3741,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:200",{"_index":3732,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:216",{"_index":3738,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search/ontology",{"_index":3616,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["searchableitem",{"_index":58,"title":{"interfaces/SearchableItem.html":{}},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["searched",{"_index":57,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{}}}],["searches",{"_index":3729,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searching",{"_index":3626,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["searchresult",{"_index":3645,"title":{"interfaces/SearchResult.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults",{"_index":3823,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.get(node.id",{"_index":3827,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.set(node.id",{"_index":3828,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchservice",{"_index":3640,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["searchvalue",{"_index":3731,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchvalue.length",{"_index":3838,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["section",{"_index":4102,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["see",{"_index":3166,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["select",{"_index":2365,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selected",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["selected(ontologynode",{"_index":3859,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selectedcolor",{"_index":1514,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["selectedresult",{"_index":3969,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["selecting",{"_index":2345,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selection",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/StageNavComponent.html":{}}}],["selection'},{'name",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["selection.component",{"_index":3873,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.component.html",{"_index":3848,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.scss",{"_index":3847,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts",{"_index":3845,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:23",{"_index":3863,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":3854,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":3857,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:40",{"_index":3856,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":3853,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:53",{"_index":3861,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:61",{"_index":3860,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.id",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["selection.label",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["selection.module",{"_index":3619,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["selection.module.ts",{"_index":3872,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.ts",{"_index":3843,"title":{},"body":{"interfaces/OntologySelection.html":{}}}],["selection/ontology",{"_index":3618,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{}}}],["selectionchange",{"_index":1364,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selectionchanged",{"_index":2342,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionchanged(value",{"_index":2350,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectioncounter",{"_index":4489,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["selectionorder",{"_index":2917,"title":{},"body":{"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["selections",{"_index":1359,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["selectionstring",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["selects",{"_index":2750,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["sell",{"_index":4709,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3155,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["semantically",{"_index":3151,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["send",{"_index":1877,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["sendcompletedto(subject",{"_index":2266,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._aggregatedataquerystatus",{"_index":2208,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._listdataquerystatus",{"_index":2217,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._termoccurencesdataquerystatus",{"_index":2234,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sender",{"_index":3414,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sending",{"_index":3364,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sending/receiving",{"_index":3334,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["sendmessage",{"_index":3459,"title":{},"body":{"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{}}}],["sendmessage(payload",{"_index":3428,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sends",{"_index":2263,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{}}}],["sendtoggle",{"_index":3365,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["sensor",{"_index":4366,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sent",{"_index":2077,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"miscellaneous/typealiases.html":{}}}],["serif",{"_index":2677,"title":{},"body":{"components/HeaderComponent.html":{}}}],["server",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":969,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["service.initializeimpl(component",{"_index":4302,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["services",{"_index":3223,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["services/data",{"_index":2249,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["services/message/message.service",{"_index":2081,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{}}}],["services/theming/theming.module",{"_index":2117,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":68,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/ImageViewerData.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["set(filter.highlightedentities",{"_index":1021,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["set(filter?.highlightedentities",{"_index":1187,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["setbrightnesshigh(value",{"_index":1744,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setbrightnesslow(value",{"_index":1739,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setdefaultscheme",{"_index":4458,"title":{},"body":{"injectables/ViewerState.html":{}}}],["setdefaultscheme(scheme",{"_index":4463,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["setlayers(layers",{"_index":3018,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["setontology",{"_index":3875,"title":{},"body":{"injectables/OntologyState.html":{}}}],["setontology(ontology",{"_index":3876,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["sets",{"_index":1890,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["setscene",{"_index":564,"title":{},"body":{"classes/BodyUI.html":{}}}],["setscene(data",{"_index":597,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["setsize",{"_index":2813,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsize(width",{"_index":1290,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources",{"_index":2814,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources(sources",{"_index":1295,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["setsources(urls",{"_index":4390,"title":{},"body":{"components/ViewerComponent.html":{}}}],["setsourceurls",{"_index":3043,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["setsourceurls(result",{"_index":3054,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["settheme",{"_index":4277,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["settheme(theme",{"_index":4292,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["settimeout",{"_index":3336,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["settimeout(r",{"_index":1011,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["setting",{"_index":4059,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/StoreModule.html":{}}}],["settings",{"_index":1733,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{}}}],["settle",{"_index":1009,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["settransparency(value",{"_index":1748,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["setup",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":60,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shadow",{"_index":1776,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["shall",{"_index":4717,"title":{},"body":{"license.html":{}}}],["shape",{"_index":1564,"title":{},"body":{"components/ColorPickerLauncherComponent.html":{}}}],["share",{"_index":611,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["shared",{"_index":4248,"title":{},"body":{"modules/StoreModule.html":{}}}],["shared/components/block",{"_index":4052,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/checkbox/checkbox.module",{"_index":2580,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["shared/components/drawer/drawer/drawer.component",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/components/dropdown/dropdown.module",{"_index":2581,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/dual",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/FiltersContentModule.html":{}}}],["shared/components/rotation",{"_index":4054,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/slices",{"_index":4056,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/spinner",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["sharing",{"_index":2271,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["short",{"_index":30,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["shortest",{"_index":1061,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"dependencies.html":{}}}],["shortestpath",{"_index":1060,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["shortestpath(this.graph",{"_index":1120,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["shortinfo",{"_index":31,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["show",{"_index":1849,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["showing",{"_index":4416,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["showm",{"_index":2962,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["shown",{"_index":2463,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["shows",{"_index":4157,"title":{},"body":{"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["showselectionbar",{"_index":1769,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["side",{"_index":2019,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["sidebar",{"_index":2896,"title":{},"body":{"components/ImageViewerContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["sidebar.component",{"_index":3412,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar.component.html",{"_index":3402,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":3401,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":3399,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:12",{"_index":4044,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:13",{"_index":3405,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:9",{"_index":3404,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.module.ts",{"_index":3411,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar/left",{"_index":3398,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{}}}],["sidebar/right",{"_index":4043,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{}}}],["sidechanged",{"_index":4210,"title":{},"body":{"components/StageNavComponent.html":{}}}],["simplechanges",{"_index":2439,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["simplemeshlayer",{"_index":713,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["simplify",{"_index":3771,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["single",{"_index":848,"title":{},"body":{"components/BodyUiComponent.html":{},"interfaces/IdObject.html":{},"components/InfoDialogComponent.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/ValueObject.html":{}}}],["site",{"_index":2642,"title":{},"body":{"components/HeaderComponent.html":{}}}],["size",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OldRuiData.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["skipself",{"_index":2115,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["slice",{"_index":4140,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["slices",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["slicesdata",{"_index":4136,"title":{"interfaces/SlicesData.html":{}},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["slicesinputcomponent",{"_index":383,"title":{"components/SlicesInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["slicesinputmodule",{"_index":4051,"title":{"modules/SlicesInputModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/SlicesInputModule.html":{},"modules.html":{},"overview.html":{}}}],["slideinhorizontaldropdown",{"_index":2359,"title":{},"body":{"components/DropdownComponent.html":{}}}],["slideinhorizontalslider",{"_index":2526,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider",{"_index":1221,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["slider's",{"_index":2448,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider'},{'name",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["slider.component",{"_index":2543,"title":{},"body":{"modules/DualSliderModule.html":{},"modules/RotationSliderModule.html":{}}}],["slider.component.html",{"_index":2401,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.scss",{"_index":2400,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts",{"_index":2398,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts:102",{"_index":2420,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:125",{"_index":2440,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:139",{"_index":2453,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:155",{"_index":2442,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:168",{"_index":2431,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:187",{"_index":2457,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:204",{"_index":2455,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:214",{"_index":2436,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:22",{"_index":4075,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:227",{"_index":2452,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:243",{"_index":2447,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:27",{"_index":4076,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":2472,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:34",{"_index":4077,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:36",{"_index":2468,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:41",{"_index":2424,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:44",{"_index":4078,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:46",{"_index":2427,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:51",{"_index":2426,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:56",{"_index":2430,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:61",{"_index":2462,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:66",{"_index":2465,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:71",{"_index":2464,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:76",{"_index":2459,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:81",{"_index":2458,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:86",{"_index":2474,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:97",{"_index":2466,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.detached",{"_index":2528,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.module",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/FiltersContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["slider.module.ts",{"_index":2540,"title":{},"body":{"modules/DualSliderModule.html":{},"modules/RotationSliderModule.html":{}}}],["slider.wrapper",{"_index":2522,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider/dual",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"modules/ColorSchemeContentsModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider/rotation",{"_index":4055,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{}}}],["slider:hover",{"_index":4086,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider_max",{"_index":4407,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sliders",{"_index":1698,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slidervaluechanged",{"_index":2415,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slidervalues",{"_index":3950,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["slidervalues.push(slider",{"_index":3955,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["small",{"_index":32,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["software",{"_index":4697,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1551,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["sort((a",{"_index":1026,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["sortby",{"_index":3671,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortby(searchresults",{"_index":3683,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult",{"_index":3635,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult(this",{"_index":3657,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorted",{"_index":2974,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["sortlexically",{"_index":3636,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically(this",{"_index":3660,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorts",{"_index":3659,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/AppPage-1.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"modules/ColorBarModule.html":{},"components/ColorPickerLauncherComponent.html":{},"modules/ColorPickerLauncherModule.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"modules/ColorSchemeContentsModule.html":{},"components/ColorSchemePopupComponent.html":{},"modules/ColorSchemePopupModule.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"modules/OntologyExplorationModule.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SchemeDropdownComponent.html":{},"modules/SchemeDropdownModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["source.dimension_units",{"_index":1204,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.entityid",{"_index":1211,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.getontologytermoccurences().subscribe(ontologytermsdata",{"_index":2290,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.info",{"_index":1299,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["source.label",{"_index":1214,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object",{"_index":1193,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object.file_format?.startswith('model/gltf",{"_index":1194,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object?.file",{"_index":1212,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object?.file_subpath",{"_index":1213,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.object['@id",{"_index":1196,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.pipe",{"_index":2277,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.service",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source.service.ts",{"_index":2130,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":2143,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:19",{"_index":2145,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":2134,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:53",{"_index":2136,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:67",{"_index":2139,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:77",{"_index":2135,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:87",{"_index":2140,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:97",{"_index":2138,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.subscribe(data",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["source.worker",{"_index":2153,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.x_dimension",{"_index":1205,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.y_dimension",{"_index":1206,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source.z_dimension].map(dim",{"_index":1207,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["source/data",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BodyUiComponent.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["source['@id",{"_index":1197,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sourceboxes",{"_index":1446,"title":{},"body":{"interfaces/Collision.html":{}}}],["sourceid",{"_index":1195,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sourceiri",{"_index":1057,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["sources",{"_index":1248,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["sources(urls",{"_index":4411,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sources.includes(msg.source",{"_index":3441,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["sources.map(source",{"_index":1297,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["sourcesfromurls",{"_index":4367,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sourcesfromurls(urls",{"_index":4378,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sourceurls",{"_index":3040,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["space",{"_index":519,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["span')).gettext",{"_index":466,"title":{},"body":{"classes/AppPage.html":{},"classes/AppPage-1.html":{}}}],["spatial",{"_index":83,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spatialentity",{"_index":910,"title":{"interfaces/SpatialEntity.html":{}},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spatially",{"_index":3153,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["spatialobjectreference",{"_index":1046,"title":{"interfaces/SpatialObjectReference.html":{}},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["spatialplacement",{"_index":1050,"title":{"interfaces/SpatialPlacement.html":{}},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["spatialscenenode",{"_index":574,"title":{"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["spec",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":3773,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["specific",{"_index":97,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/SearchableItem.html":{},"miscellaneous/typealiases.html":{}}}],["specified",{"_index":3439,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["specifying",{"_index":3422,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["spinner",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["spinneractive",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["spinneroverlaycomponent",{"_index":385,"title":{"components/SpinnerOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["spinneroverlaymodule",{"_index":418,"title":{"modules/SpinnerOverlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["spinning",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1165,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["sprint",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1479,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":1480,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":1485,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":1486,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":679,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["stage",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/ContentModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["stagenavcomponent",{"_index":387,"title":{"components/StageNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["stagenavmodule",{"_index":2102,"title":{"modules/StageNavModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["standards",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1934,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["start?.expanded",{"_index":2054,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["start?.opened",{"_index":2053,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["startdrawers",{"_index":1959,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["startdrawers.length",{"_index":1963,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["startdrawers[0",{"_index":1967,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["started",{"_index":4513,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["startexpanded",{"_index":2052,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["starts",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":2307,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["startwith",{"_index":1922,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/OntologySearchComponent.html":{}}}],["stat",{"_index":3997,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.count",{"_index":3995,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.label",{"_index":3996,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["state",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state('closed",{"_index":3279,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('collapsed",{"_index":3284,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('extended",{"_index":3288,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('false",{"_index":2025,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["state('full",{"_index":3289,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('half",{"_index":3285,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state('true",{"_index":2026,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["state(`open",{"_index":3278,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["state.data.filter(d",{"_index":788,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["state.docollisions",{"_index":793,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["state.nodes[state.root",{"_index":3881,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["state.zoomopacity",{"_index":800,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["statechange",{"_index":3309,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["staterepository",{"_index":2238,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["states",{"_index":1274,"title":{},"body":{"interfaces/ChannelConfig.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"modules/StoreModule.html":{}}}],["states.every(state",{"_index":2262,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["states[view.id",{"_index":1333,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["static",{"_index":701,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["statictiff",{"_index":3495,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["staticzarr",{"_index":3488,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["stats",{"_index":3962,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["status",{"_index":2213,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["stay",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1763,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{}}}],["still",{"_index":828,"title":{},"body":{"components/BodyUiComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["store",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode-1.html":{},"modules/StoreModule.html":{}}}],["store.forsubjects((subject",{"_index":1101,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["store/ontology/ontology.state",{"_index":3758,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["store/store.module",{"_index":2118,"title":{},"body":{"modules/CoreModule.html":{}}}],["storemodule",{"_index":2110,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":4251,"title":{},"body":{"modules/StoreModule.html":{}}}],["strategic",{"_index":3205,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["streaming",{"_index":4664,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["string[]>(map",{"_index":2801,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["stroke",{"_index":1399,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["structure",{"_index":2777,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["styilng",{"_index":2970,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["style",{"_index":1550,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"classes/ImageViewerLayer.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/PureImageViewerLayer.html":{},"components/SchemeDropdownComponent.html":{}}}],["style.margin",{"_index":1995,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["styled",{"_index":2665,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":3331,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["styleurls",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["styling",{"_index":1540,"title":{},"body":{"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{}}}],["sub",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":577,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"license.html":{}}}],["subject.id",{"_index":1103,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["subject.next(dataquerystate.completed",{"_index":2267,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["sublicense",{"_index":4707,"title":{},"body":{"license.html":{}}}],["subpath",{"_index":4173,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["subscription",{"_index":1912,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["subscriptions",{"_index":1867,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["substantial",{"_index":4719,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":3232,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["subtree",{"_index":3792,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["subtrees",{"_index":3782,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["successful",{"_index":2731,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["such",{"_index":2434,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["suffix",{"_index":3698,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["super",{"_index":2283,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["support",{"_index":3225,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules.html":{}}}],["supported",{"_index":3514,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{}}}],["supporting",{"_index":3175,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["svg",{"_index":2315,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"modules.html":{}}}],["swatch",{"_index":1786,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["switch",{"_index":857,"title":{},"body":{"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{}}}],["switchmap",{"_index":2247,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["switchmap(query",{"_index":2278,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["switchmap(value",{"_index":3680,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["syncexpanded(other",{"_index":3373,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["syncs",{"_index":3370,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["synonym",{"_index":3735,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["synonymlabels",{"_index":2810,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/ValueObject.html":{}}}],["synonyms",{"_index":2781,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"interfaces/ValueObject.html":{}}}],["synonymsextractor",{"_index":2799,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsextractor(json",{"_index":2811,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["synonymsproperty",{"_index":2798,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["systems",{"_index":3177,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["t",{"_index":1080,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"miscellaneous/typealiases.html":{}}}],["t.x",{"_index":3602,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["t.y",{"_index":3604,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["t.z",{"_index":3606,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tab",{"_index":4017,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["table",{"_index":3767,"title":{},"body":{"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/SearchResult.html":{}}}],["take",{"_index":4013,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["takes",{"_index":1725,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["takewhile",{"_index":3417,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["tap",{"_index":2248,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["tap(linkchildren",{"_index":3814,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["tap(next",{"_index":2279,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["target",{"_index":616,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["target.name",{"_index":1482,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":1199,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["targetboxes",{"_index":1463,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":1475,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetiri",{"_index":1055,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["tealgreen",{"_index":1615,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["team",{"_index":3197,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["technologies",{"_index":79,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["technology",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":1389,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["template",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["templateurl",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["temporary",{"_index":3769,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["term",{"_index":936,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["termdata",{"_index":3851,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["termoccurencesdata",{"_index":2186,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["termoccurencesdata(filter",{"_index":2196,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["termoccurencesdataquerystatus",{"_index":2187,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["terms",{"_index":66,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.body.id",{"_index":1158,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.kidney.id",{"_index":1160,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.left_kidney.id",{"_index":1164,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.right_kidney.id",{"_index":1162,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["terms.indexof(rui.spleen.id",{"_index":1166,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["test",{"_index":2261,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["testing",{"_index":2260,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["text",{"_index":526,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["theme",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["themes",{"_index":4295,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["theming",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["theming.gettheme",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["theming.service",{"_index":4267,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":2111,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":164,"title":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}},"body":{"components/AppComponent.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":4268,"title":{},"body":{"modules/ThemingModule.html":{}}}],["thickness",{"_index":4139,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["thin",{"_index":3703,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["this._afterconnected",{"_index":2167,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.completed",{"_index":2286,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.running",{"_index":2298,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.pipe(distinct",{"_index":2211,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._channelconfigs",{"_index":1269,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._expanded",{"_index":3302,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._height",{"_index":1259,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._layers",{"_index":3020,"title":{},"body":{"components/ImageViewerLegendComponent.html":{},"components/ViewerComponent.html":{}}}],["this._listdataquerystatus$.next(dataquerystate.completed",{"_index":2285,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._listdataquerystatus$.next(dataquerystate.running",{"_index":2296,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._listdataquerystatus$.pipe(distinct",{"_index":2219,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._loaders",{"_index":1264,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this._measuredmargin",{"_index":3329,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._measuredwidth",{"_index":3320,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._onclick",{"_index":634,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this._onhover",{"_index":632,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this._onviewstatechange",{"_index":636,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this._opened",{"_index":3298,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._position",{"_index":3294,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this._sources",{"_index":1262,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["this._sources.length",{"_index":4414,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this._sources.map(source",{"_index":4419,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this._termoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":2287,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._termoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":2300,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._termoccurencesdataquerystatus$.pipe(distinct",{"_index":2236,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this._width",{"_index":1258,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.addentitiesmany(ids.map((id",{"_index":4494,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.addspatialentity(getspatialentity(store",{"_index":1106,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.addspatialobjectreference(getspatialobjectreference(store",{"_index":1102,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.addspatialplacement(getspatialplacement(store",{"_index":1109,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.aggregatedata",{"_index":2207,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.aggregatedataquerystatus",{"_index":2225,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.animationsenabled",{"_index":2043,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.applyfilter({highlightedentities",{"_index":875,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.applyfilter({ontologyterms",{"_index":861,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.applyfilters.emit(this.filters",{"_index":2564,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.applythemeclass(theme",{"_index":4307,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.applythemeclass(this.theme",{"_index":4306,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.atscrollbottom",{"_index":3994,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.bodycanvas.nativeelement",{"_index":841,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui",{"_index":842,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui.nodeclick$.subscribe(async",{"_index":856,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyui.setscene(scene",{"_index":855,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.bodyuilayer",{"_index":630,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.bodyuilayer.setstate({data",{"_index":665,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.bodyuilayer.state",{"_index":659,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.bottom",{"_index":1847,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["this.brightnesshigh",{"_index":1754,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.brightnesslow",{"_index":1757,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.brightnessslideroptions",{"_index":1766,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.cdr.markforcheck",{"_index":1953,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.channel",{"_index":1944,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.asobservable",{"_index":3447,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.closed",{"_index":3449,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.complete",{"_index":3452,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.next",{"_index":3429,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.channel.sendmessage",{"_index":1951,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.channelconfigs",{"_index":1310,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.clear",{"_index":4417,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.closeviewer.emit",{"_index":2903,"title":{},"body":{"components/ImageViewerContentComponent.html":{}}}],["this.color",{"_index":2950,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme",{"_index":1544,"title":{},"body":{"components/ColorBarComponent.html":{},"components/SchemeDropdownComponent.html":{}}}],["this.colorscheme.colors",{"_index":2951,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme.positions",{"_index":2952,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.colorscheme.type",{"_index":2949,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.component",{"_index":4309,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.content",{"_index":1955,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":1954,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content1.first",{"_index":1941,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content1.length",{"_index":1943,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.content2.first",{"_index":1942,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.contentsvisible",{"_index":2511,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.creategraph",{"_index":1098,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.createlayerconfigs",{"_index":1302,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.createselectionlabel(ontologyselection",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["this.createvivviews",{"_index":1291,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.ctx.patchstate",{"_index":4503,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.ctx.setstate(ontology",{"_index":3883,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["this.cursor",{"_index":639,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.data",{"_index":3065,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.data.filter$.subscribe(async",{"_index":851,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.data.querystatus$.pipe",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.data.resulttype",{"_index":4015,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["this.data.updatefilter",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["this.datasource",{"_index":2154,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource.connect(this.dboptions",{"_index":2168,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasourceservice.datasource.connect",{"_index":853,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.datasourceservice.datasource.getscene(f",{"_index":854,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.datasourceservice.getimageviewerdata(result['@id",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["this.db.getspatialentities(filter).map((entity",{"_index":1188,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.db.graph.gettransformationmatrix(sourceid",{"_index":1198,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.db.store",{"_index":1099,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.dboptions",{"_index":2156,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.deck",{"_index":646,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.finalize",{"_index":1289,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.props.viewstate",{"_index":668,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.deck.redraw(true",{"_index":1294,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.setprops",{"_index":648,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.deck.setprops(props",{"_index":1336,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.deck.setprops({viewstate",{"_index":697,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.defaulttheme",{"_index":4304,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.deferred",{"_index":3271,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":3099,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialogref.close",{"_index":3126,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["this.drawer",{"_index":4352,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.drawer.position",{"_index":4350,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.drawers",{"_index":2039,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":1949,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.drawers.toarray",{"_index":1958,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.element.nativeelement",{"_index":3321,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.entities$.pipe",{"_index":4471,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.entities[id",{"_index":4495,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.expanded",{"_index":3354,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":3362,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.expandedstate",{"_index":3342,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.expandedstate2",{"_index":3314,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.faded",{"_index":2058,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.filter",{"_index":878,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filter$.pipe(querydata",{"_index":2206,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.filter?.highlightedentities",{"_index":872,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filterchange.emit(newfilter",{"_index":879,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["this.filteredresults",{"_index":3677,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.filters",{"_index":2562,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(filters",{"_index":2602,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(this.filters",{"_index":2563,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.filtersvisible",{"_index":2601,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.formatlabel(node.label",{"_index":3830,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.formcontrol.reset",{"_index":3692,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.formcontrol.valuechanges",{"_index":3676,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.get(s",{"_index":1018,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.getarguments(definition",{"_index":2745,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.getautocolor(autocolorindex",{"_index":4502,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.getbrightness",{"_index":2958,"title":{},"body":{"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{}}}],["this.getchildren",{"_index":3804,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getchildren.bind(this",{"_index":3805,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getentityscenenodes(filter",{"_index":1216,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getids(filter)].map((s",{"_index":1017,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.getindexofmatch(label",{"_index":3835,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getindexofmatch(node.label",{"_index":3829,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":3438,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.getmethodname(definition",{"_index":2743,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.getreferencebody(filter",{"_index":1155,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getreferenceorgans(filter).map((organ",{"_index":1169,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getreferencescenenodes(filter",{"_index":1215,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(body",{"_index":1167,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(entity",{"_index":1189,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(getspatialentity(store",{"_index":1171,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getscenenode(organ",{"_index":1170,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["this.getstate().filter",{"_index":2295,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.graph",{"_index":987,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{}}}],["this.graph.creategraph",{"_index":1013,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.graph.getedgeattribute(source",{"_index":1123,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.hasnode(sourceiri",{"_index":1116,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.hasnode(targetiri",{"_index":1117,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergedirectededge(placement.source['@id",{"_index":1113,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergenode(entity['@id",{"_index":1111,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.graph.mergenode(ref['@id",{"_index":1112,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["this.handlemessage(msg",{"_index":1947,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.highvalue",{"_index":2495,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.http.get(environment.ontologyurl",{"_index":3807,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.initialized",{"_index":3270,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initialized.set",{"_index":3335,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initialized.valueof",{"_index":3343,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initialized.wait",{"_index":3366,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.initializedeck(reqprops",{"_index":1277,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.initializesliderpopover",{"_index":2512,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isdemo",{"_index":4413,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.isloading",{"_index":3067,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.issliderinitialized",{"_index":2509,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isslideropen",{"_index":2510,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.lasthovered",{"_index":677,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.layer",{"_index":1773,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.brightness[0",{"_index":1751,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.brightness[1",{"_index":1755,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layer.transparency",{"_index":1758,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layerchange.emit(layer",{"_index":2993,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["this.layerchange.emit(new",{"_index":2989,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["this.layerchange.emit(this.layer",{"_index":1770,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.layerconfigs",{"_index":1285,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layerfilter",{"_index":1339,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layers",{"_index":1284,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.layers$.pipe",{"_index":4467,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.leftmargin",{"_index":2050,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.listdata",{"_index":2216,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.listdataquerystatus",{"_index":2224,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.loaders[0",{"_index":3958,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["this.lookup(nodes",{"_index":3821,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.lowvalue",{"_index":2493,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.margin2",{"_index":3317,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.measuredmargin",{"_index":3316,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.measuredwidth",{"_index":3367,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.messages",{"_index":3446,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.messages.pipe(filter(msg",{"_index":3435,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.nextmessageid",{"_index":3430,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.nodeclicksubject.next({node",{"_index":681,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":575,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":678,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":579,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":676,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":582,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["this.ontologyselectionlabel",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ontologyservice.filter(value",{"_index":3681,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologyservice.loadontology",{"_index":3674,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologystate.nodes$.pipe",{"_index":3820,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologystate.rootnode",{"_index":3803,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologystate.setontology(ontology",{"_index":3819,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologyterms",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ontologytermsfulldata",{"_index":2291,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.onviewstatechange",{"_index":1340,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.opened",{"_index":3340,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.openedchange.emit(this.opened",{"_index":3358,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.openedstate",{"_index":3341,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.openimageviewer.emit",{"_index":4016,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["this.options",{"_index":991,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/DualSliderComponent.html":{}}}],["this.options.ccfowlurl",{"_index":994,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.ceil",{"_index":2501,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.floor",{"_index":2500,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.hubmapassetsurl",{"_index":1004,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataservice",{"_index":1002,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataurl",{"_index":998,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapdataurl.endswith('.jsonld",{"_index":999,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmapportalurl",{"_index":1005,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.options.hubmaptoken",{"_index":1003,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.optionschanged",{"_index":2489,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionsvisible",{"_index":2356,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.original.children.length",{"_index":2639,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.original.label",{"_index":2638,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.overlayref",{"_index":2485,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.detach",{"_index":2508,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.dispose",{"_index":2502,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.patchstate",{"_index":2292,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.popupvisible",{"_index":1844,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["this.position",{"_index":3293,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.props",{"_index":782,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.registericonimpl(definition",{"_index":2734,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.registericonimpl(safedef",{"_index":2729,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.registry",{"_index":2738,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["this.removebox",{"_index":2603,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.removeentitiesmany(this.ids",{"_index":4493,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.resetchannelconfigs",{"_index":1301,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.resolve",{"_index":3247,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.result",{"_index":3066,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.rightmargin",{"_index":2051,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.rootnode",{"_index":3802,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.rotation",{"_index":4067,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.rotationchanged.emit(this.rotation",{"_index":4069,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.scene",{"_index":989,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.scene.getscene(filter",{"_index":1032,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.schemechange.emit(this.colorscheme",{"_index":4121,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemechanged(0",{"_index":4118,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeidx",{"_index":4120,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions",{"_index":4115,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions.filter(scheme",{"_index":4116,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.schemeoptions[idx",{"_index":4119,"title":{},"body":{"components/SchemeDropdownComponent.html":{}}}],["this.selected.emit(node",{"_index":3691,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.selection",{"_index":1393,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selection.filter(selection",{"_index":1394,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.selectionchange.emit(this.selection",{"_index":1395,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selectionchange.emit(value",{"_index":2357,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.sendtoggle",{"_index":3344,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.sensor",{"_index":4428,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.sensor.detach",{"_index":4431,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.setsources(reqprops.sources",{"_index":1281,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.setsourceurls(result",{"_index":3068,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.setstate({data",{"_index":783,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.settheme(this.defaulttheme",{"_index":4308,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.side",{"_index":4226,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.sidechanged.emit(this.side",{"_index":4227,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.snapshot",{"_index":4491,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.sortbysynonymresult",{"_index":3684,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.sortlexically",{"_index":3685,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.source",{"_index":3431,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["this.source.getaggregateresults(filter",{"_index":2299,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.source.getlistresults(filter",{"_index":2297,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.source.getontologytermoccurences(filter",{"_index":2301,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.sourcesfromurls(urls",{"_index":4412,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.sourceurls",{"_index":3070,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.state",{"_index":786,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["this.state$.pipe(map(state",{"_index":3878,"title":{},"body":{"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{}}}],["this.state$.pipe(pluck('embedded",{"_index":3893,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["this.state$.pipe(pluck('filter",{"_index":2214,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.state$.pipe(pluck('homeurl",{"_index":3895,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{}}}],["this.state.createlayers(channels",{"_index":3069,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.statechange.emit",{"_index":3368,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.states",{"_index":1286,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.store",{"_index":986,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.store.getquads(datafactory.namednode(id",{"_index":1015,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.store.selectsnapshot(ontologystate",{"_index":3840,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.store.size",{"_index":992,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":4349,"title":{},"body":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":2036,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":1946,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.subscriptions.unsubscribe",{"_index":1956,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["this.syncexpanded(other",{"_index":3369,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.termoccurencesdata",{"_index":2233,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.termoccurencesdataquerystatus",{"_index":2226,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["this.theme",{"_index":4305,"title":{},"body":{"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["this.theming.settheme(this.theming.gettheme",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tissuedata",{"_index":513,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/TissueData.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":3300,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggle(false",{"_index":3338,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggle(true",{"_index":3337,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":3304,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggleexpanded(false",{"_index":3350,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.toggleexpanded(true",{"_index":3347,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.transparencyslideroptions",{"_index":1768,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.tree.expandandselect(ontologynode",{"_index":3866,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.update",{"_index":1287,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatedeckprops",{"_index":1315,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updateentitiesmany",{"_index":4504,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.updateentitiesmany(changes",{"_index":4509,"title":{},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["this.updatefaded",{"_index":2041,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.updatelayer",{"_index":1753,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["this.updatelayers",{"_index":1314,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ViewerComponent.html":{}}}],["this.updatemargin(position",{"_index":2048,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["this.updatesources",{"_index":4418,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.updatestate((_view",{"_index":1353,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatestate((view",{"_index":1292,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updatestate(view",{"_index":1303,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.updateviews",{"_index":1313,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.validatedrawers",{"_index":1950,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["this.valuerange",{"_index":2497,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[0",{"_index":2498,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[1",{"_index":2499,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valueschange.emit(this.tissuedata",{"_index":514,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/TissueData.html":{}}}],["this.view3d",{"_index":4228,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.view3dchanged.emit(this.view3d",{"_index":4229,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.viewer",{"_index":4422,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.finalize",{"_index":4432,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer.setsize(width",{"_index":4430,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewer?.clear",{"_index":4443,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.viewervisible",{"_index":3064,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["this.views",{"_index":1316,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews",{"_index":1283,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews.map(viv",{"_index":1318,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.vivviews.reduce((states",{"_index":1331,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["this.width",{"_index":3315,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["this.zoomto(node",{"_index":664,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["those",{"_index":3433,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{}}}],["through",{"_index":3203,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["throw",{"_index":1937,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"modules/CoreModule.html":{},"interfaces/OMEZarrInfo.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{}}}],["throwduplicatedrawerserror('end",{"_index":1966,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["throwduplicatedrawerserror('start",{"_index":1964,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["throwduplicatedrawerserror(position",{"_index":1933,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["thrown",{"_index":1932,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["throws",{"_index":1928,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["thumb",{"_index":4087,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["thumbnails",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["thumbnailurl",{"_index":35,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{}}}],["tiff",{"_index":3489,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["tiff2",{"_index":3490,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["tiffinfo",{"_index":1230,"title":{"interfaces/TiffInfo.html":{}},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["tiffinfo).url",{"_index":4420,"title":{},"body":{"components/ViewerComponent.html":{}}}],["time",{"_index":1377,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/OldRuiData.html":{}}}],["timing",{"_index":2061,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/ImageViewerPopoverComponent.html":{}}}],["tissue",{"_index":29,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"components/InfoDialogComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OldRuiData.html":{},"components/RotationSliderComponent.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{},"changelog.html":{}}}],["tissue_object_rotation",{"_index":3531,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_object_size",{"_index":3532,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_position_mass_point",{"_index":3533,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissue_position_vertices",{"_index":3534,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["tissuedata",{"_index":478,"title":{"interfaces/TissueData.html":{}},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/TissueData.html":{}}}],["tissues",{"_index":25,"title":{},"body":{"interfaces/AggregateResult.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["title",{"_index":2879,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RotationSliderComponent.html":{}}}],["tmc",{"_index":78,"title":{},"body":{"interfaces/AggregateResult.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/Filter.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/SearchableItem.html":{},"changelog.html":{}}}],["todo",{"_index":846,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["toeuler",{"_index":1065,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["toeuler(fromeuler(r_rad[1",{"_index":1089,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["toggle",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["toggle(opened",{"_index":3339,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["togglebuttoncomponent",{"_index":390,"title":{"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"overview.html":{}}}],["toggled",{"_index":2044,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["toggleexpanded(expanded",{"_index":3353,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["togglefiltervisible",{"_index":2588,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["toggleoptions",{"_index":2343,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggles",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["togglescheme",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["togglesliderpopover",{"_index":2416,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["toggling",{"_index":4216,"title":{},"body":{"components/StageNavComponent.html":{}}}],["token",{"_index":978,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{}}}],["tool",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["tools",{"_index":3135,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["tooltip",{"_index":747,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["top",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["toradians",{"_index":1058,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["tort",{"_index":4737,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1970,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/DualSliderComponent.html":{}}}],["track",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/StageNavComponent.html":{}}}],["trackbyid",{"_index":2967,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["trackbyid(layer",{"_index":2982,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["tracks",{"_index":3666,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["transform",{"_index":520,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/CCFSpatialScene.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["transform.scale(scale",{"_index":1210,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["transformmatrix",{"_index":746,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["transition",{"_index":2021,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/RotationSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["transition('closed",{"_index":3280,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["transition('false",{"_index":2027,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["translated",{"_index":3551,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["translatey",{"_index":2385,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["translation",{"_index":4180,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["translation_units",{"_index":3607,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["transparency",{"_index":1710,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"classes/ImageViewerLayer.html":{},"interfaces/PureImageViewerLayer.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["transparency(value",{"_index":1759,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["transparencychanged",{"_index":1705,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["transparencyslideroptions",{"_index":1703,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["traversescene(child",{"_index":1442,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(gltfscene",{"_index":1466,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":1421,"title":{},"body":{"interfaces/Collision.html":{}}}],["tree",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tree'},{'name",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["tree.component",{"_index":3865,"title":{},"body":{"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{}}}],["tree.module",{"_index":3621,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["tree.module.ts",{"_index":3887,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["tree/ontology",{"_index":3620,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{}}}],["trigger",{"_index":2022,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["trigger('expandcollapse",{"_index":3283,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["trigger('fadeinout",{"_index":2024,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["trigger('openclose",{"_index":3277,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["triggered",{"_index":3656,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["triple",{"_index":913,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{}}}],["true",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"interfaces/Collision.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/StageNavComponent.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["try",{"_index":2746,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{}}}],["tslib",{"_index":4670,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":733,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tslint:disable",{"_index":643,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/Collision.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["tslint:enable",{"_index":765,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"components/ViewerComponent.html":{}}}],["tuned",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":1957,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["two",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["tx",{"_index":1118,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["tx.translate(t).rotatexyz(r).scale(s",{"_index":1096,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"interfaces/ColorScheme.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"interfaces/PageStateModel.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TiffInfo.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":4745,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1329,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"injectables/DataSourceService.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"interfaces/TiffInfo.html":{}}}],["types",{"_index":965,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SpatialSceneNode-1.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/typealiases.html":{}}}],["types.ts",{"_index":4169,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["typing",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":738,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["u",{"_index":1236,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["u2cdk114886",{"_index":3214,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ui",{"_index":550,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["ui'},{'name",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["ui.component",{"_index":885,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":817,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.scss",{"_index":816,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts",{"_index":813,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:18",{"_index":825,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:23",{"_index":831,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:25",{"_index":839,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:27",{"_index":824,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:31",{"_index":835,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.component.ts:71",{"_index":834,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["ui.module",{"_index":545,"title":{},"body":{"modules/BodyModule.html":{}}}],["ui.module.ts",{"_index":884,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.ts",{"_index":548,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["ui.ts:103",{"_index":593,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:121",{"_index":590,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:128",{"_index":595,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:27",{"_index":573,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:28",{"_index":571,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:30",{"_index":578,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:31",{"_index":581,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:32",{"_index":584,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:34",{"_index":576,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:35",{"_index":580,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:36",{"_index":583,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:38",{"_index":572,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:39",{"_index":569,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:75",{"_index":598,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui.ts:89",{"_index":600,"title":{},"body":{"classes/BodyUI.html":{}}}],["ui/body",{"_index":544,"title":{},"body":{"modules/BodyModule.html":{},"components/BodyUiComponent.html":{},"modules/BodyUiModule.html":{}}}],["ui/src/lib/body",{"_index":547,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["ui/src/lib/spatial",{"_index":1414,"title":{},"body":{"interfaces/Collision.html":{}}}],["uievent",{"_index":3982,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["unchecked",{"_index":1390,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["undefined",{"_index":673,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/OntologyNode.html":{},"interfaces/OntologySelection.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/ViewerComponent.html":{}}}],["under",{"_index":2317,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent.html":{}}}],["underline",{"_index":2367,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["underlying",{"_index":2144,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["understanding",{"_index":3143,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["unique",{"_index":2986,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OntologyNode.html":{}}}],["units",{"_index":4141,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["unitsvisible",{"_index":4142,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["university",{"_index":3192,"title":{},"body":{"components/InfoDialogComponent.html":{},"index.html":{}}}],["unknown",{"_index":688,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/OldRuiData.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSceneNode.html":{}}}],["unlike",{"_index":2308,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{}}}],["unpickable",{"_index":740,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["unsafe",{"_index":748,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/Collision.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLegendComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/SpatialSceneNode.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["unselected",{"_index":2988,"title":{},"body":{"components/ImageViewerLayersComponent.html":{}}}],["unset",{"_index":2878,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{}}}],["until",{"_index":2469,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"changelog.html":{}}}],["up",{"_index":1715,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["update",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["updatechannelconfigs",{"_index":2815,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatechannelconfigs(configs",{"_index":1305,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updated",{"_index":499,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{},"changelog.html":{}}}],["updatedeckprops",{"_index":2816,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatedeckprops(props",{"_index":1335,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatefaded",{"_index":1991,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["updatefilter",{"_index":2188,"title":{},"body":{"injectables/DataState.html":{},"components/FiltersContentComponent.html":{}}}],["updatefilter(filter",{"_index":2198,"title":{},"body":{"injectables/DataState.html":{},"interfaces/DataStateModel.html":{}}}],["updatefilter(value",{"_index":2558,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatelayer",{"_index":1706,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{},"injectables/ViewerState.html":{}}}],["updatelayer(id",{"_index":4465,"title":{},"body":{"injectables/ViewerState.html":{}}}],["updatelayer(updates",{"_index":1731,"title":{},"body":{"components/ColorSchemeContentsComponent.html":{}}}],["updatelayers",{"_index":1320,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"components/ViewerComponent.html":{}}}],["updatemargin",{"_index":1992,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["updatemargin(position",{"_index":2015,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["updates",{"_index":494,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["updateside",{"_index":4207,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateside(selection",{"_index":4219,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateslicesdata",{"_index":4154,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["updateslicesdata(input",{"_index":4147,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["updatesources",{"_index":4368,"title":{},"body":{"components/ViewerComponent.html":{}}}],["updatestate",{"_index":1327,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatestate(args",{"_index":2845,"title":{},"body":{"classes/ImageViewer.html":{},"classes/PictureInPictureViewer.html":{}}}],["updatetissuedata",{"_index":480,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["updatetissuedata(input",{"_index":490,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/TissueData.html":{}}}],["updateview",{"_index":4208,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateview(selection",{"_index":4222,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateviews",{"_index":1317,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["updating",{"_index":2979,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["upgraded",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":2429,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["upperbound",{"_index":1452,"title":{},"body":{"interfaces/Collision.html":{}}}],["upperbound[i",{"_index":1459,"title":{},"body":{"interfaces/Collision.html":{}}}],["url",{"_index":34,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DefaultIconDefinition-1.html":{},"interfaces/Filter.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/ImageViewerData.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/SearchableItem.html":{},"interfaces/TiffInfo.html":{},"components/ViewerComponent.html":{}}}],["url).map(url",{"_index":4445,"title":{},"body":{"components/ViewerComponent.html":{}}}],["urls",{"_index":2725,"title":{},"body":{"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerPopoverComponent.html":{},"components/ViewerComponent.html":{}}}],["urls.filter(url",{"_index":4444,"title":{},"body":{"components/ViewerComponent.html":{}}}],["use",{"_index":1810,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"injectables/DataSourceService.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ResultsBrowserItemComponent.html":{},"license.html":{}}}],["used",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ColorScheme-1.html":{},"components/ColorSchemeContentsComponent.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"changelog.html":{}}}],["useful",{"_index":1930,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["user",{"_index":1375,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/InfoDialogComponent.html":{},"components/OntologySearchComponent.html":{},"components/StageNavComponent.html":{},"changelog.html":{},"index.html":{}}}],["users",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["usevalue",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":4554,"title":{},"body":{"changelog.html":{}}}],["util/prefixes",{"_index":1068,"title":{},"body":{"classes/CCFSpatialGraph.html":{},"classes/CCFSpatialScene.html":{},"interfaces/OldRuiData.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["utils",{"_index":951,"title":{},"body":{"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["utils.ts",{"_index":3523,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["uuid",{"_index":3555,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["v0.5.0",{"_index":3524,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["v1.0.0",{"_index":3158,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["v1.selectionorder",{"_index":3023,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["v2",{"_index":3022,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["v2.selectionorder",{"_index":3024,"title":{},"body":{"components/ImageViewerLegendComponent.html":{}}}],["valid",{"_index":4224,"title":{},"body":{"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["validatedrawers",{"_index":1870,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["validates",{"_index":1896,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["validation",{"_index":3667,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["value",{"_index":20,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"interfaces/IdObject.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ListResult.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/OntologyState.html":{},"injectables/PageState.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchableItem.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"interfaces/ValueObject.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"miscellaneous/enumerations.html":{}}}],["value.tolowercase",{"_index":3822,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["valuechanges",{"_index":3675,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valuechanges.pipe",{"_index":3678,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valueextractor",{"_index":2789,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valueobject",{"_index":2776,"title":{"interfaces/ValueObject.html":{}},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valueof",{"_index":3244,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["valueorgenerator",{"_index":1234,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"miscellaneous/typealiases.html":{}}}],["valueproperty",{"_index":2788,"title":{},"body":{"interfaces/IdObject.html":{},"interfaces/JsonOntologyNode.html":{},"interfaces/ValueObject.html":{}}}],["valuerange",{"_index":2417,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["values",{"_index":486,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"injectables/DataSourceService.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TissueData.html":{},"miscellaneous/typealiases.html":{}}}],["valueschange",{"_index":482,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/TissueData.html":{}}}],["var",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["variable",{"_index":2095,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["variables",{"_index":1531,"title":{},"body":{"components/ColorBarComponent.html":{}}}],["vec3",{"_index":1418,"title":{},"body":{"interfaces/Collision.html":{}}}],["vec3(...lowerbound.map((n",{"_index":1457,"title":{},"body":{"interfaces/Collision.html":{}}}],["vec3(...upperbound.map((n",{"_index":1460,"title":{},"body":{"interfaces/Collision.html":{}}}],["version",{"_index":3546,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["vertical",{"_index":4447,"title":{},"body":{"components/ViewerComponent.html":{}}}],["vertices",{"_index":3538,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["via",{"_index":4060,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/ViewerComponent.html":{}}}],["video",{"_index":3187,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["view",{"_index":1222,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/SearchResult.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["view.filterviewstate(argsgenerator(view",{"_index":1334,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.getlayers",{"_index":1324,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.id",{"_index":1293,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view.initialviewstate",{"_index":1304,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["view3d",{"_index":4209,"title":{},"body":{"components/StageNavComponent.html":{}}}],["view3dchanged",{"_index":4211,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild",{"_index":840,"title":{},"body":{"components/BodyUiComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"components/ViewerComponent.html":{}}}],["viewchild('bodycanvas",{"_index":837,"title":{},"body":{"components/BodyUiComponent.html":{}}}],["viewchild('canvas",{"_index":4384,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewchild('content",{"_index":1829,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["viewchild('popover",{"_index":2467,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild('thicknessinput",{"_index":4144,"title":{},"body":{"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{}}}],["viewchild(cdkportal",{"_index":2471,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(ontologytreecomponent",{"_index":3862,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["viewchildren",{"_index":1921,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["viewchildren(contentcomponent",{"_index":1906,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["viewer",{"_index":48,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"classes/CCFDatabase.html":{},"interfaces/CCFDatabaseOptions.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource.html":{},"interfaces/DataSource-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"interfaces/Filter.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ListResult.html":{},"interfaces/OMEZarrInfo.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchableItem.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"interfaces/TiffInfo.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["viewer.channelnames",{"_index":4437,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.close",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer.component",{"_index":4452,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewer.component.html",{"_index":4364,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.component.scss",{"_index":4363,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.loaders.some((loader",{"_index":4434,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.module",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.module.ts",{"_index":3036,"title":{},"body":{"modules/ImageViewerModule.html":{}}}],["viewer.open(data",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["viewer.setsources(sources",{"_index":4433,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.ts",{"_index":1219,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer.ts:110",{"_index":2832,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:114",{"_index":2839,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:133",{"_index":2840,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:148",{"_index":2842,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:16",{"_index":3902,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:168",{"_index":2831,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:169",{"_index":2830,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:171",{"_index":2841,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:181",{"_index":2847,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:185",{"_index":2844,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:195",{"_index":2846,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:208",{"_index":2843,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:212",{"_index":2833,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:231",{"_index":2838,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:24",{"_index":3917,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:244",{"_index":2835,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:250",{"_index":2837,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:51",{"_index":3916,"title":{},"body":{"classes/PictureInPictureViewer.html":{}}}],["viewer.ts:64",{"_index":2825,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:66",{"_index":2849,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:67",{"_index":2851,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:68",{"_index":2822,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:69",{"_index":2819,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:71",{"_index":2853,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:72",{"_index":2855,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:73",{"_index":2821,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:74",{"_index":2820,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:76",{"_index":2857,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:77",{"_index":2859,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:78",{"_index":2818,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:80",{"_index":2828,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:81",{"_index":2827,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:82",{"_index":2824,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:83",{"_index":2823,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:84",{"_index":2826,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:86",{"_index":2817,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.ts:99",{"_index":2829,"title":{},"body":{"classes/ImageViewer.html":{}}}],["viewer.updatechannelconfigs(configs",{"_index":4442,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/image",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ImageViewerAccordionComponent.html":{},"modules/ImageViewerAccordionModule.html":{},"components/ImageViewerContentComponent.html":{},"modules/ImageViewerContentModule.html":{},"components/ImageViewerLayersComponent.html":{},"modules/ImageViewerLayersModule.html":{},"components/ImageViewerLegendComponent.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"components/ImageViewerPopoverComponent.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["viewer/src/lib/image",{"_index":1218,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/src/lib/loader.ts",{"_index":3481,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/src/lib/picture",{"_index":3899,"title":{},"body":{"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/viewer.module",{"_index":3037,"title":{},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{}}}],["viewer/viewer.state",{"_index":4247,"title":{},"body":{"modules/StoreModule.html":{}}}],["viewer/viewer/viewer.component.ts",{"_index":4362,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:121",{"_index":4377,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:126",{"_index":4381,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:138",{"_index":4380,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:156",{"_index":4375,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:160",{"_index":4379,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:52",{"_index":4373,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:63",{"_index":4389,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:66",{"_index":4383,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:69",{"_index":4372,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:73",{"_index":4391,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:74",{"_index":4382,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:76",{"_index":4374,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:78",{"_index":4385,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:80",{"_index":4386,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:81",{"_index":4388,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:82",{"_index":4371,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.component.ts:86",{"_index":4376,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer/viewer/viewer.module.ts",{"_index":4451,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewercomponent",{"_index":391,"title":{"components/ViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"components/BodyUiComponent.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/LeftSidebarComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["viewermodule",{"_index":3035,"title":{"modules/ViewerModule.html":{}},"body":{"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["viewerstate",{"_index":3045,"title":{"injectables/ViewerState.html":{}},"body":{"components/ImageViewerPopoverComponent.html":{},"modules/StoreModule.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["viewerstatemodel",{"_index":4486,"title":{"interfaces/ViewerStateModel.html":{}},"body":{"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["viewervisible",{"_index":3041,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["viewid",{"_index":1243,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewing",{"_index":3039,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{},"components/StageNavComponent.html":{}}}],["viewport",{"_index":1223,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"components/ResultsBrowserComponent.html":{}}}],["viewportid",{"_index":1350,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["views",{"_index":627,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"changelog.html":{}}}],["viewstate",{"_index":649,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viewstateprops",{"_index":606,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["viewstates",{"_index":1325,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["viridis",{"_index":1664,"title":{},"body":{"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{}}}],["virtual",{"_index":3963,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["visibility",{"_index":1835,"title":{},"body":{"components/ColorSchemePopupComponent.html":{},"components/DualSliderComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visible",{"_index":1202,"title":{},"body":{"classes/CCFSpatialScene.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode-1.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visitor",{"_index":1423,"title":{},"body":{"interfaces/Collision.html":{}}}],["visitor(scene",{"_index":1439,"title":{},"body":{"interfaces/Collision.html":{}}}],["visual",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["visualizing",{"_index":1596,"title":{},"body":{"interfaces/ColorScheme-1.html":{}}}],["vitessce",{"_index":3499,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"changelog.html":{}}}],["viv.getdeckglview",{"_index":1319,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["vivview",{"_index":1225,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{}}}],["vivviews",{"_index":1272,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"classes/PictureInPictureViewer.html":{}}}],["void",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/BodyUiComponent.html":{},"classes/CCFSpatialGraph.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"interfaces/Collision.html":{},"components/ColorBarComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ColorSchemePopupComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/DataSource-1.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"interfaces/IconDefinition-1.html":{},"injectables/IconRegistryState.html":{},"injectables/IconRegistryState-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/OntologyState.html":{},"interfaces/OntologyStateModel.html":{},"classes/PictureInPictureViewer.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"interfaces/SearchResult.html":{},"interfaces/SlicesData.html":{},"components/SlicesInputComponent.html":{},"interfaces/SpatialSceneNode.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{},"injectables/ViewerState.html":{},"interfaces/ViewerStateModel.html":{}}}],["vu",{"_index":3541,"title":{},"body":{"interfaces/OldRuiData.html":{},"changelog.html":{}}}],["w",{"_index":4178,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["w_rotation",{"_index":4179,"title":{},"body":{"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["wait",{"_index":3245,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["waiting",{"_index":2869,"title":{},"body":{"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/ImageViewerLayersComponent.html":{}}}],["waits",{"_index":3363,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["warning",{"_index":4446,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["warranties",{"_index":4725,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4721,"title":{},"body":{"license.html":{}}}],["way",{"_index":3987,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["webgl2",{"_index":1342,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{}}}],["webkit",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/RotationSliderComponent.html":{}}}],["week",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":517,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent-1.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["well",{"_index":2978,"title":{},"body":{"components/ImageViewerLayersComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["whenever",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxComponent.html":{},"injectables/DataState.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["whether",{"_index":82,"title":{},"body":{"interfaces/AggregateResult.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"interfaces/ColorScheme-1.html":{},"interfaces/ColorSchemeSelection.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DualSliderComponent.html":{},"interfaces/Filter.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerContentComponent.html":{},"interfaces/ImageViewerData.html":{},"classes/ImageViewerLayer.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"interfaces/Message-1.html":{},"classes/MessageChannel.html":{},"classes/MessageChannel-1.html":{},"injectables/MessageService.html":{},"injectables/MessageService-1.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MessageServiceConfig-1.html":{},"interfaces/PureImageViewerLayer.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchableItem.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"injectables/ThemingService-1.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"license.html":{}}}],["white",{"_index":1400,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InfoDialogComponent.html":{},"components/ResultsBrowserItemComponent.html":{}}}],["whole",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["wholebody",{"_index":1153,"title":{},"body":{"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["whose",{"_index":3643,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["width",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/AppComponent-1.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ChannelConfig.html":{},"components/CheckboxComponent.html":{},"components/ColorBarComponent.html":{},"components/ColorPickerLauncherComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/ContentContainerChanged-1.html":{},"interfaces/DataSource-1.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerContainersChanged-1.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerInitialized-1.html":{},"interfaces/DrawerToggled.html":{},"interfaces/DrawerToggled-1.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ExtDeckProps.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"classes/ImageViewer.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLayersComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/ImageViewerProps.html":{},"components/InfoButtonComponent.html":{},"classes/InitializationState.html":{},"classes/InitializationState-1.html":{},"components/OntologySearchComponent.html":{},"classes/PictureInPictureViewer.html":{},"interfaces/PictureInPictureViewerProps.html":{},"components/ResultsBrowserComponent.html":{},"components/ResultsBrowserItemComponent.html":{},"components/RotationSliderComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"components/SpinnerOverlayComponent.html":{},"interfaces/TissueData.html":{},"components/ToggleButtonComponent.html":{},"components/ToggleButtonComponent-1.html":{},"components/ViewerComponent.html":{}}}],["widths",{"_index":3371,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["window",{"_index":3072,"title":{},"body":{"components/ImageViewerPopoverComponent.html":{}}}],["window.innerheight",{"_index":1848,"title":{},"body":{"components/ColorSchemePopupComponent.html":{}}}],["window.open(this.data.resulturl",{"_index":4018,"title":{},"body":{"components/ResultsBrowserItemComponent.html":{}}}],["wireframe",{"_index":741,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["wireframes",{"_index":791,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{}}}],["within",{"_index":3855,"title":{},"body":{"components/OntologySelectionComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["without",{"_index":1908,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"license.html":{}}}],["won't",{"_index":3772,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["work",{"_index":3190,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["workaround",{"_index":3381,"title":{},"body":{"classes/InitializationState.html":{},"classes/InitializationState-1.html":{}}}],["worker",{"_index":2150,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["worker('./data",{"_index":2152,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["works",{"_index":3406,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["worldmatrix",{"_index":1422,"title":{},"body":{"interfaces/Collision.html":{}}}],["wrap",{"_index":1403,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/DataSourceService.html":{},"components/ImageViewerAccordionComponent.html":{},"components/ImageViewerLegendComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["wrap(worker",{"_index":2155,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["wrapped",{"_index":1905,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{}}}],["wrapper",{"_index":527,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SchemeDropdownComponent.html":{},"components/SlicesInputComponent.html":{}}}],["wrapper/container",{"_index":2525,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["wrapping",{"_index":1909,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{}}}],["x",{"_index":500,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/TissueData.html":{}}}],["x_dimension",{"_index":3577,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_rotation",{"_index":3591,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_scaling",{"_index":3586,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["x_translation",{"_index":3601,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["xyz",{"_index":3598,"title":{},"body":{"interfaces/OldRuiData.html":{}}}],["xyz').tovector",{"_index":1092,"title":{},"body":{"classes/CCFSpatialGraph.html":{}}}],["y",{"_index":501,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/OldRuiData.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"interfaces/TissueData.html":{}}}],["y_dimension",{"_index":3579,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_rotation",{"_index":3593,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_scaling",{"_index":3587,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["y_translation",{"_index":3603,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["yes",{"_index":917,"title":{},"body":{"classes/CCFDatabase.html":{},"classes/CCFSpatialScene.html":{},"components/ColorSchemePopupComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/OntologySearchComponent.html":{}}}],["youtube",{"_index":3188,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["z",{"_index":502,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ColorSchemeContentsComponent.html":{},"components/ContainerComponent.html":{},"components/ContainerComponent-1.html":{},"components/ContentComponent-1.html":{},"components/ContentComponent-2.html":{},"components/FiltersPopoverComponent.html":{},"components/ImageViewerPopoverComponent.html":{},"interfaces/OldRuiData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{},"components/SpinnerOverlayComponent.html":{},"interfaces/TissueData.html":{},"components/ViewerComponent.html":{}}}],["z_dimension",{"_index":3581,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_rotation",{"_index":3595,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_scaling",{"_index":3588,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["z_translation",{"_index":3605,"title":{},"body":{"interfaces/OldRuiData.html":{},"interfaces/SpatialEntity.html":{},"interfaces/SpatialObjectReference.html":{},"interfaces/SpatialPlacement.html":{}}}],["zarr",{"_index":3485,"title":{},"body":{"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/enumerations.html":{}}}],["zarrinfo",{"_index":1231,"title":{},"body":{"interfaces/ChannelConfig.html":{},"interfaces/DataSource-1.html":{},"interfaces/ExtDeckProps.html":{},"classes/ImageViewer.html":{},"interfaces/ImageViewerProps.html":{},"interfaces/OMEZarrInfo.html":{},"interfaces/TiffInfo.html":{},"miscellaneous/typealiases.html":{}}}],["zone.js",{"_index":4672,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/BodyModule.html":{},"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"modules/BodyUiModule.html":{},"modules/CheckboxModule.html":{},"modules/ColorBarModule.html":{},"modules/ColorPickerLauncherModule.html":{},"modules/ColorSchemeContentsModule.html":{},"modules/ColorSchemePopupModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/ImageViewerAccordionModule.html":{},"modules/ImageViewerContentModule.html":{},"modules/ImageViewerLayersModule.html":{},"modules/ImageViewerLegendModule.html":{},"modules/ImageViewerModule.html":{},"modules/ImageViewerPopoverModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/LeftSidebarModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserItemModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SchemeDropdownModule.html":{},"modules/SlicesInputModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StageNavModule.html":{},"modules/ThemingModule.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["zoombasedopacity",{"_index":744,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}],["zoomopacity",{"_index":658,"title":{},"body":{"classes/BodyUI.html":{},"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomto",{"_index":565,"title":{},"body":{"classes/BodyUI.html":{}}}],["zoomto(node",{"_index":599,"title":{},"body":{"classes/BodyUI.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{}}}],["zoomtoonload",{"_index":745,"title":{},"body":{"classes/BodyUILayer.html":{},"classes/CCFSpatialScene.html":{},"interfaces/SpatialSceneNode.html":{},"interfaces/SpatialSceneNode-1.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AggregateResult.html":{"url":"interfaces/AggregateResult.html","title":"interface - AggregateResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AggregateResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Aggregate query result. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Aggregate value. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Queried field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        This is the main angular component that all the other components branch off from.\nIt is in charge of the header and drawer components who have many sub-components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelectionLabel\n                            \n                            \n                                    Readonly\n                                ontologyTerms$\n                            \n                            \n                                    Readonly\n                                spinnerActive$\n                            \n                            \n                                string\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ontologySelectionLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'body'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                        Used to keep track of the ontology label to be passed down to the\nresults-browser component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ontologyTerms$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            spinnerActive$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        Emits true whenever the overlay spinner should activate. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            string\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ListResult } from 'ccf-database';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\n\nimport { OntologySelection } from './core/models/ontology-selection';\nimport { DataSourceService } from './core/services/data-source/data-source.service';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { DataQueryState, DataState } from './core/store/data/data.state';\nimport { FiltersPopoverComponent } from './modules/filters/filters-popover/filters-popover.component';\nimport { ImageViewerPopoverComponent } from './modules/image-viewer/image-viewer-popover/image-viewer-popover.component';\nimport { DrawerComponent } from './shared/components/drawer/drawer/drawer.component';\n\n/**\n * This is the main angular component that all the other components branch off from.\n * It is in charge of the header and drawer components who have many sub-components.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Used to keep track of the ontology label to be passed down to the\n   * results-browser component.\n   */\n  ontologySelectionLabel = 'body';\n\n  /** Emits true whenever the overlay spinner should activate. */\n  readonly spinnerActive$ = this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  );\n\n  readonly ontologyTerms$: Observable;\n\n  /**\n   * Creates an instance of app component.\n   *\n   * @param data The data state.\n   */\n  constructor(readonly data: DataState, readonly dataSourceService: DataSourceService, readonly theming: ThemingService) {\n    data.listData$.subscribe();\n    data.aggregateData$.subscribe();\n    data.termOccurencesData$.subscribe();\n    this.ontologyTerms$ = data.filter$.pipe(pluck('ontologyTerms'));\n  }\n\n  /**\n   * Resets the drawers and filter components to their default state.\n   * @param left The left drawer component gets passed in so we can call it's methods to control it's state\n   * @param right The right drawer component gets passed in so we can call it's methods to control it's state\n   * @param filterbox The filter's popover component gets passed in so we can control it's popover's state\n   */\n  reset(\n    left: DrawerComponent,\n    right: DrawerComponent,\n    filterbox: FiltersPopoverComponent,\n    viewer: ImageViewerPopoverComponent\n  ): void {\n    viewer.close();\n    left.open();\n    left.closeExpanded();\n    right.open();\n    right.closeExpanded();\n    filterbox.removeBox();\n  }\n\n  /**\n   * Fetches relevant data from the database and calls the open function on the image viewer with the data\n   * @param viewer The image viewer component\n   * @param iri URL containing the image data\n   */\n  openViewer(viewer: ImageViewerPopoverComponent, result: ListResult): void {\n    const source = this.dataSourceService.getImageViewerData(result['@id']);\n    source.subscribe(data => viewer.open(data, result));\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.theming.setTheme(this.theming.getTheme() === 'light-theme' ? 'dark-theme' : 'light-theme');\n  }\n\n  /**\n   * Captures changes in the ontologySelection and uses them to update the results-browser label\n   * and the filter object in the data store.\n   * @param ontologySelection the list of currently selected organ nodes\n   */\n  ontologySelected(ontologySelection: OntologySelection[]): void {\n    if (!!ontologySelection) {\n      this.data.updateFilter({ ontologyTerms: ontologySelection.map(selection => selection.id)});\n      this.ontologySelectionLabel = this.createSelectionLabel(ontologySelection);\n      return;\n    }\n\n    this.data.updateFilter({ ontologyTerms: [] });\n    this.ontologySelectionLabel = '';\n  }\n\n  /**\n   * Creates selection label for the results-browser to display based on an\n   * array of selected ontology nodes.\n   */\n  createSelectionLabel(ontolgySelection: OntologySelection[]): string{\n    if (ontolgySelection.length === 0){\n      return '';\n    }\n\n    if (ontolgySelection.length === 1){\n      return ontolgySelection[0].label;\n    }\n\n    let selectionString = '';\n    ontolgySelection.forEach((selection, index) => {\n      selectionString += selection.label;\n\n      // Don't add a comma if it's the last item in the array.\n      if (index  0;\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n  \n    \n      \n      \n    \n    \n      \n        \n        \n          {{ right.expanded ? 'fullscreen_exit' : 'fullscreen' }}\n        \n        \n          {{ theming.getTheme() === 'light-theme' ? 'brightness_2' : 'brightness_5' }}\n        \n      \n      \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .ccf-app {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n\n  ccf-drawer-container {\n    flex-grow: 1;\n    position: fixed;\n    top: 4rem;\n    height: 100%;\n    width: 100%;\n    opacity: 1;\n\n    ccf-drawer-content {\n      overflow: hidden;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    ccf-drawer {\n      width: 28.5rem;\n\n      .drawer-icons {\n        display: flex;\n        padding-left: 1.5rem;\n\n        .scheme-toggle {\n          mat-icon {\n            font-size: 2rem !important;\n          }\n        }\n\n        .button {\n          width: 3rem;\n          height: 3rem;\n          padding: 0;\n          background: none;\n          border: none;\n          cursor: pointer;\n          outline: none;\n\n          mat-icon {\n            width: 100%;\n            height: 100%;\n            font-size: 2.5rem;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n        }\n      }\n    }\n\n    .left-drawer {\n      ::ng-deep .cff-drawer-inner-container {\n        height: calc(100% - 5.5rem);\n      }\n    }\n  }\n}\n\n::-webkit-scrollbar {\n  width: 7.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ right.expanded ? \\'fullscreen_exit\\' : \\'fullscreen\\' }}                          {{ theming.getTheme() === \\'light-theme\\' ? \\'brightness_2\\' : \\'brightness_5\\' }}                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent-1.html":{"url":"components/AppComponent-1.html","title":"component - AppComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n\n  \n    \n    \n  \n  \n    \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n\n  ccf-drawer-container {\n    flex-grow: 1;\n    position: fixed;\n    top: 4rem;\n    height: 100%;\n    width: 100%;\n    opacity: 1;\n\n    ccf-drawer-content {\n      overflow: hidden;\n      margin-top: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    ccf-drawer {\n      width: 25.5rem;\n    }\n  }\n}\n\n::-webkit-scrollbar {\n  width: 7.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBodyModule\n\nBodyModule\n\nAppModule -->\n\nBodyModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nAppModule -->\n\nImageViewerModule->AppModule\n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nAppModule -->\n\nInfoDialogModule->AppModule\n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BodyModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            FiltersPopoverModule\n                        \n                        \n                            ImageViewerModule\n                        \n                        \n                            InfoDialogModule\n                        \n                        \n                            OntologyExplorationModule\n                        \n                        \n                            ResultsBrowserModule\n                        \n                        \n                            SpinnerOverlayModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { BodyModule } from './modules/body/body.module';\nimport { FiltersPopoverModule } from './modules/filters/filters-popover/filters-popover.module';\nimport { ImageViewerModule } from './modules/image-viewer/image-viewer.module';\nimport { InfoDialogModule } from './modules/info/info-dialog/info-dialog.module';\nimport { OntologyExplorationModule } from './modules/ontology-exploration/ontology-exploration.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\nimport { DualSliderModule } from './shared/components/dual-slider/dual-slider.module';\nimport { ResultsBrowserModule } from './modules/results-browser/results-browser/results-browser.module';\nimport { SpinnerOverlayModule } from './shared/components/spinner-overlay/spinner-overlay.module';\n\nimport { DEFAULT_THEME } from '../app/core/services/theming/theming.service';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    DrawerModule,\n    FiltersPopoverModule,\n    OntologyExplorationModule,\n    InfoDialogModule,\n    MatIconModule,\n    DualSliderModule,\n    ResultsBrowserModule,\n    SpinnerOverlayModule,\n    ImageViewerModule,\n    BodyModule\n  ],\n  declarations: [AppComponent],\n  providers: [{provide: DEFAULT_THEME, useValue: 'light-theme'}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('ccf-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage-1.html":{"url":"classes/AppPage-1.html","title":"class - AppPage-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('ccf-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockSizeInputComponent.html":{"url":"components/BlockSizeInputComponent.html","title":"component - BlockSizeInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlockSizeInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n\n\n    \n        Description\n    \n    \n        Component for entering dimensions of the tissue block\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-block-size-input\n            \n\n            \n                styleUrls\n                ./block-size-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./block-size-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tissueData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshBlockSize\n                            \n                            \n                                updateTissueData\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valuesChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valuesChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:37\n                            \n                        \n                \n                    \n                        Emitter for values\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshBlockSize\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshBlockSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:54\n                \n            \n\n\n            \n                \n                    Refreshes all block size values to 10\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTissueData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTissueData(input: InputEvent, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:44\n                \n            \n\n\n            \n                \n                    Updates values when an input changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        InputEvent from the input element which contains the new value\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the dimension to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tissueData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TissueData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    x: 10,\n    y: 10,\n    z: 10,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:28\n                            \n                        \n\n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface TissueData {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss']\n})\nexport class BlockSizeInputComponent {\n  /**\n   * Values of block dimensions to be emitted\n   */\n  tissueData: TissueData = {\n    x: 10,\n    y: 10,\n    z: 10,\n  };\n\n  /**\n   * Emitter for values\n   */\n  @Output() valuesChange = new EventEmitter();\n\n  /**\n   * Updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateTissueData(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    const inputValue = inputTarget.value;\n    this.tissueData = { ...this.tissueData, [key]: +inputValue };\n    this.valuesChange.emit(this.tissueData);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.tissueData = { x: 10, y: 10, z: 10 };\n    this.valuesChange.emit(this.tissueData);\n  }\n}\n\n    \n\n    \n        \n  \n    Tissue Block Size (mm)\n    refresh\n  \n  \n    \n      \n        Width (X)\n        \n      \n    \n    \n      \n        Height (Y)\n        \n      \n    \n    \n      \n        Depth (Z)\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./block-size-input.component.scss\n                \n                \n.block-size-input {\n  margin: 0 1.5rem;\n  display: flex;\n  flex-direction: column;\n\n  .block-size-header {\n    font-weight: bold;\n    display: flex;\n    justify-content: space-between;\n    height: 3rem;\n    align-items: center;\n  \n    .block-size-refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n    }\n  }\n\n  .size-input-form {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 1.5rem;\n    margin-top: 1rem;\n  \n    .form-entry {\n      display: flex;\n      flex-direction: column;\n      width: 30%;\n      .form-input {\n        text-align: center;\n      }\n      \n      ::ng-deep .mat-form-field-label-wrapper {\n        top: -1.5em;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tissue Block Size (mm)    refresh                      Width (X)                                    Height (Y)                                    Depth (Z)                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockSizeInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockSizeInputModule.html":{"url":"modules/BlockSizeInputModule.html","title":"module - BlockSizeInputModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockSizeInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { BlockSizeInputComponent } from './block-size-input.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatInputModule, MatIconModule],\n  declarations: [BlockSizeInputComponent],\n  exports: [BlockSizeInputComponent]\n})\nexport class BlockSizeInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyModule.html":{"url":"modules/BodyModule.html","title":"module - BodyModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_exports\n\n\n\n\nBodyUiModule\n\nBodyUiModule\n\n\n\nBodyModule\n\nBodyModule\n\nBodyModule -->\n\nBodyUiModule->BodyModule\n\n\n\n\n\nBodyUiModule \n\nBodyUiModule \n\nBodyUiModule  -->\n\nBodyModule->BodyUiModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/body/body.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BodyUiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BodyUiModule } from './body-ui/body-ui.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BodyUiModule\n  ],\n  exports: [\n    BodyUiModule\n  ]\n})\nexport class BodyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyUI.html":{"url":"classes/BodyUI.html","title":"class - BodyUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n            \n                Description\n            \n            \n                A convenience wrapper class for the CCF Body UI\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bodyUILayer\n                            \n                            \n                                    Private\n                                    Optional\n                                cursor\n                            \n                            \n                                deck\n                            \n                            \n                                    Private\n                                    Optional\n                                lastHovered\n                            \n                            \n                                    Readonly\n                                nodeClick$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeClickSubject\n                            \n                            \n                                    Readonly\n                                nodeHoverStart$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeHoverStartSubject\n                            \n                            \n                                    Readonly\n                                nodeHoverStop$\n                            \n                            \n                                    Private\n                                    Readonly\n                                nodeHoverStopSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _onClick\n                            \n                            \n                                    Private\n                                _onHover\n                            \n                            \n                                    Private\n                                _onViewStateChange\n                            \n                            \n                                setScene\n                            \n                            \n                                zoomTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deckProps: Partial)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui/src/lib/body-ui.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deckProps\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            bodyUILayer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BodyUILayer({})\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            cursor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            lastHovered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpatialSceneNode\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeClick$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeClickSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeClickSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeHoverStart$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeHoverStartSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeHoverStartSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nodeHoverStop$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.nodeHoverStopSubject.pipe(share())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            nodeHoverStopSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onClick(e: literal type, mouseEvent: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mouseEvent\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onHover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onHover(e: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _onViewStateChange(event: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \nsetScene(data: SpatialSceneNode[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            zoomTo\n                        \n                        \n                    \n                \n            \n            \n                \nzoomTo(node: SpatialSceneNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n}\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: -15,\n        maxRotationX: 15,\n        target: [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 9.5\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            layerName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'BodyUILayer'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:75\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPickingInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeState\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderLayers\n                        \n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { load, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { CubeGeometry } from '@luma.gl/core';\nimport { ScenegraphNode } from '@luma.gl/experimental';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { doCollisions } from './spatial-scene-collider';\n\n\n// Programmers Note: had to disable tslint in a few places due to deficient typings.\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\n// tslint:disable: no-unsafe-any\nasync function loadGLTF(model: SpatialSceneNode): Promise {\n  const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n\n  const scenegraphNode = model.scenegraphNode ? gltf.nodes?.find((n) => n.name === model.scenegraphNode) : undefined;\n  if (scenegraphNode) {\n    if (!scenegraphNode.rotation && gltf.scene?.nodes?.length > 0) {\n      scenegraphNode.rotation = gltf.scene.nodes[gltf.scene.nodes.length-1].rotation;\n    }\n    gltf.scene = {\n      id: 'scene-1',\n      name: 'Scene',\n      nodes: [scenegraphNode]\n    };\n    gltf.scenes = [gltf.scene, ...gltf.scenes];\n  }\n  return gltf;\n}\n// tslint:enable: no-unsafe-any\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: {[key: string]: unknown}): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // tslint:disable-next-line: no-unsafe-any\n        mesh: new CubeGeometry(),\n        wireframe: false,\n        getTransformMatrix: (d) => (d as {transformMatrix: number[][]}).transformMatrix,\n        getColor: (d) => (d as {color: [number, number, number, number]}).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({data: data || [], zoomOpacity: 0.8, doCollisions: false});\n\n    // tslint:disable-next-line: no-unsafe-any\n    registerLoaders([DracoWorkerLoader, GLTFLoader]);\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as {data: SpatialSceneNode[], zoomOpacity: number, doCollisions: boolean};\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return [\n      meshLayer('cubes', cubes, {wireframe: false}),\n      meshLayer('wireframes', wireframes, {wireframe: true, pickable: false}),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          id: 'models-' + model['@id'],\n          opacity: model.zoomBasedOpacity ? state.zoomOpacity : 1.0,\n          pickable: !model.unpickable,\n          coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n          data: [model],\n          scenegraph: model.scenegraphNode ?\n            loadGLTF(model) as Promise :\n            model.scenegraph as unknown as ScenegraphNode,\n          _lighting: model._lighting,  // 'pbr' | undefined\n          getTransformMatrix: model.transformMatrix as unknown as number[][],\n          getColor: model.color || [0, 255, 0, 0.5*255],\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(e: {info: object}): unknown {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canvas\n                                \n                                \n                                        id\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n}\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: -15,\n        maxRotationX: 15,\n        target: [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 9.5\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        orbitAxis\n                                \n                                \n                                            Optional\n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer, SpatialSceneNode } from './body-ui-layer';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n}\n\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n}\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(deckProps: Partial) {\n    const props = {\n      ...deckProps,\n      effects: [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ],\n      views: [ new OrbitView({}) ],\n      controller: true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      getCursor: (e: {isDragging: boolean}) => this.cursor || (e.isDragging ? 'grabbing' : 'grab')\n    };\n    // tslint:disable-next-line: no-any\n    this.deck = new Deck(props as any);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: -15,\n        maxRotationX: 15,\n        target: [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 9.5\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      const zoomOpacity = (this.bodyUILayer.state as {zoomOpacity: boolean}).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      this.bodyUILayer.setState({data, zoomOpacity: didZoom ? 0.5 : zoomOpacity});\n    }\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  @bind\n  private _onHover(e: {picked: boolean, object: SpatialSceneNode}): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(e: {picked: boolean, object: SpatialSceneNode}, mouseEvent: { srcEvent: { ctrlKey: boolean; }; }): void {\n    if (e.picked && e.object && e.object['@id']) {\n      this.nodeClickSubject.next({node: e.object, ctrlClick: mouseEvent?.srcEvent?.ctrlKey ?? undefined});\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean; }; viewState: { zoom: number; } }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {zoomOpacity: number, data: unknown};\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 3, 0.2), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({data: currentState.data, zoomOpacity});\n      }\n    }\n    this.deck.setProps({viewState: { ...event.viewState }});\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BodyUiComponent.html":{"url":"components/BodyUiComponent.html","title":"component - BodyUiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BodyUiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-body-ui\n            \n\n            \n                styleUrls\n                ./body-ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./body-ui.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bodyCanvas\n                            \n                            \n                                bodyUI\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyFilter\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DataState, dataSourceService: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DataState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSourceService\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:18\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:23\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilter(filter: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyCanvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('bodyCanvas', {read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bodyUI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BodyUI\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/body/body-ui/body-ui.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { BodyUI } from 'ccf-body-ui';\nimport { Filter } from 'ccf-database';\n\nimport { DataSourceService } from './../../../core/services/data-source/data-source.service';\nimport { DataState } from './../../../core/store/data/data.state';\n\n\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss']\n})\nexport class BodyUiComponent implements AfterViewInit {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filter: Filter;\n\n  /**\n   * Emits the current filters\n   */\n  @Output() filterChange = new EventEmitter();\n\n  bodyUI: BodyUI;\n\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  constructor(readonly data: DataState, readonly dataSourceService: DataSourceService) { }\n\n  ngAfterViewInit(): void {\n    const canvas = this.bodyCanvas.nativeElement;\n    this.bodyUI = new BodyUI({ id: 'body-ui', canvas });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n\n    // TODO: Replace with a single @Input with scene provided by ngxs\n    this.data.filter$.subscribe(async (f: Filter) => {\n      await this.dataSourceService.dataSource.connect();\n      const scene = await this.dataSourceService.dataSource.getScene(f);\n      this.bodyUI.setScene(scene);\n    });\n\n    this.bodyUI.nodeClick$.subscribe(async ({node, ctrlClick}) => {\n      switch (node['@id']) {\n        case 'http://purl.org/ccf/latest/ccf.owl#VHRightKidney':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0004539']});\n          break;\n        case 'http://purl.org/ccf/latest/ccf.owl#VHLeftKidney':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0004538']});\n          break;\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleen':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC1':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC2':\n        case 'http://purl.org/ccf/latest/ccf.owl#VHSpleenCC3':\n          this.applyFilter({ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0002106']});\n          break;\n        default:\n          if (node.entityId) {\n            const highlightedEntities = ctrlClick ? this.filter?.highlightedEntities ?? [] : [];\n            if (highlightedEntities.length === 1 && highlightedEntities[0] === node.entityId) {\n              this.applyFilter({highlightedEntities: []});\n            } else {\n              this.applyFilter({highlightedEntities: highlightedEntities.concat([node.entityId])});\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  private applyFilter(filter: Partial): void {\n    const newFilter = { ...this.filter, ...filter } as Filter;\n    this.filter = newFilter;\n    this.filterChange.emit(newFilter);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./body-ui.component.scss\n                \n                .body-ui {\n  position: relative !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BodyUiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/body/body-ui/body-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFDatabase.html":{"url":"classes/CCFDatabase.html","title":"class - CCFDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-database.ts\n        \n\n            \n                Description\n            \n            \n                Database provider. \n\n            \n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                scene\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                connect\n                            \n                            \n                                get\n                            \n                            \n                                    Async\n                                getAggregateResults\n                            \n                            \n                                getIds\n                            \n                            \n                                    Async\n                                getImageViewerData\n                            \n                            \n                                    Async\n                                getListResults\n                            \n                            \n                                    Async\n                                getOntologyTermOccurences\n                            \n                            \n                                    Async\n                                getScene\n                            \n                            \n                                getSpatialEntities\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: CCFDatabaseOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-database.ts:51\n                            \n                        \n\n                \n                    \n                            Creates an instance of ccfdatabase.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        CCFDatabaseOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initialization options.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFSpatialGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:49\n                            \n                        \n\n                \n                    \n                        The spatial graph \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFDatabaseOptions\n\n                        \n                    \n                    \n                        \n                            Default value : DEFAULT_CCF_DB_OPTIONS\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:58\n                            \n                        \n\n                \n                    \n                        Initialization options.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFSpatialScene\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:51\n                            \n                        \n\n                \n                    \n                        Creates SpatialEntity Scenes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-database.ts:47\n                            \n                        \n\n                \n                    \n                        The triple store. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    connect(options?: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:70\n                \n            \n\n\n            \n                \n                    Connects the database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CCFDatabaseOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Options used to initialize.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise resolving to true if data has been loaded into the database.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:116\n                \n            \n\n\n            \n                \n                    Gets the data for an object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the requested object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Quad[]\n\n                    \n                    \n                        The object data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:161\n                \n            \n\n\n            \n                \n                    Gets all aggregate results for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A list of aggregate data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIds\n                        \n                        \n                    \n                \n            \n            \n                \ngetIds(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:106\n                \n            \n\n\n            \n                \n                    Gets all ids matching the filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {} as Filter\n                                    \n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Set\n\n                    \n                    \n                        A set of all matching ids.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageViewerData(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:181\n                \n            \n\n\n            \n                \n                    Gets image data for the associated id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The identifier.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The image data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:147\n                \n            \n\n\n            \n                \n                    Gets all list results for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A list of results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOntologyTermOccurences\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:171\n                \n            \n\n\n            \n                \n                    Get number of occurrences of ontology terms for a set of ids.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        Ontology term counts.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:190\n                \n            \n\n\n            \n                \n                    Get all nodes to form the 3D scene of reference body, organs, and tissues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A list of Spatial Scene Nodes for the 3D Scene\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpatialEntities\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpatialEntities(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:136\n                \n            \n\n\n            \n                \n                    Gets all spatial entities for a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity[]\n\n                    \n                    \n                        A list of spatial entities.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-database.ts:126\n                \n            \n\n\n            \n                \n                    Gets the data for objects matching a filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {} as Filter\n                                    \n\n                                    \n                                        The filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [][]\n\n                    \n                    \n                        An array of data.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, Quad, Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { addHubmapDataToStore } from './hubmap/hubmap-data';\nimport { AggregateResult, DataSource, Filter, ImageViewerData, ListResult } from './interfaces';\nimport { getAggregateResults } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getImageViewerData } from './queries/image-viewer-data-n3';\nimport { getListResult } from './queries/list-result-n3';\nimport { getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** An url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase implements DataSource {\n  /** The triple store. */\n  store: Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store();\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions): Promise {\n    if (options) {\n      this.options = options;\n    }\n    if (this.store.size === 0) {\n      const ops: Promise[] = [];\n      const ccfOwlUrl = this.options.ccfOwlUrl;\n      if (ccfOwlUrl.endsWith('.n3')) {\n        ops.push(addN3ToStore(this.options.ccfOwlUrl, this.store));\n      } else {\n        ops.push(addRdfXmlToStore(this.options.ccfOwlUrl, this.store));\n      }\n      if (this.options.hubmapDataUrl) {\n        if (this.options.hubmapDataUrl.endsWith('.jsonld')) {\n          ops.push(addJsonLdToStore(this.options.hubmapDataUrl, this.store));\n        } else {\n          ops.push(addHubmapDataToStore(\n            this.store, this.options.hubmapDataUrl, this.options.hubmapDataService, this.options.hubmapToken,\n            this.options.hubmapAssetsUrl, this.options.hubmapPortalUrl\n          ));\n        }\n      }\n      await Promise.all(ops);\n      // Add a small delay to allow the triple store to settle\n      await new Promise(r => setTimeout(r, 500));\n      this.graph.createGraph();\n    }\n    return this.store.size > 0;\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set {\n    return findIds(this.store, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  /**\n   * Gets all list results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getListResults(filter?: Filter): Promise {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    const highlighted = new Set(filter.highlightedEntities);\n    return [...this.getIds(filter)].map((s) => getListResult(this.store, s))\n      .map((s) => Object.assign(s, {highlighted: highlighted.has(s['@id'])}))\n      .sort((a, b) => (a.highlighted ? 0 : 1) - (b.highlighted ? 0 : 1));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Gets image data for the associated id.\n   *\n   * @param id The identifier.\n   * @returns The image data.\n   */\n  async getImageViewerData(id: string): Promise {\n    return getImageViewerData(id, this.store);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseOptions.html":{"url":"interfaces/CCFDatabaseOptions.html","title":"interface - CCFDatabaseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CCFDatabaseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-database.ts\n        \n\n            \n                Description\n            \n            \n                Database initialization options. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ccfContextUrl\n                                \n                                \n                                        ccfOwlUrl\n                                \n                                \n                                        hubmapAssetsUrl\n                                \n                                \n                                        hubmapDataService\n                                \n                                \n                                        hubmapDataUrl\n                                \n                                \n                                        hubmapPortalUrl\n                                \n                                \n                                            Optional\n                                        hubmapToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ccfContextUrl\n                                    \n                                \n                                \n                                    \n                                        ccfContextUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Context. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccfOwlUrl\n                                    \n                                \n                                \n                                    \n                                        ccfOwlUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An url to load data from. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapAssetsUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapAssetsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap assets api url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapDataService\n                                    \n                                \n                                \n                                    \n                                        hubmapDataService:     \"static\" | \"search-api\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"static\" | \"search-api\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data service type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapDataUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapDataUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap data url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapPortalUrl\n                                    \n                                \n                                \n                                    \n                                        hubmapPortalUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hubmap Portal url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    HuBMAP Service Token. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, Quad, Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { addHubmapDataToStore } from './hubmap/hubmap-data';\nimport { AggregateResult, DataSource, Filter, ImageViewerData, ListResult } from './interfaces';\nimport { getAggregateResults } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getImageViewerData } from './queries/image-viewer-data-n3';\nimport { getListResult } from './queries/list-result-n3';\nimport { getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** An url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase implements DataSource {\n  /** The triple store. */\n  store: Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store();\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions): Promise {\n    if (options) {\n      this.options = options;\n    }\n    if (this.store.size === 0) {\n      const ops: Promise[] = [];\n      const ccfOwlUrl = this.options.ccfOwlUrl;\n      if (ccfOwlUrl.endsWith('.n3')) {\n        ops.push(addN3ToStore(this.options.ccfOwlUrl, this.store));\n      } else {\n        ops.push(addRdfXmlToStore(this.options.ccfOwlUrl, this.store));\n      }\n      if (this.options.hubmapDataUrl) {\n        if (this.options.hubmapDataUrl.endsWith('.jsonld')) {\n          ops.push(addJsonLdToStore(this.options.hubmapDataUrl, this.store));\n        } else {\n          ops.push(addHubmapDataToStore(\n            this.store, this.options.hubmapDataUrl, this.options.hubmapDataService, this.options.hubmapToken,\n            this.options.hubmapAssetsUrl, this.options.hubmapPortalUrl\n          ));\n        }\n      }\n      await Promise.all(ops);\n      // Add a small delay to allow the triple store to settle\n      await new Promise(r => setTimeout(r, 500));\n      this.graph.createGraph();\n    }\n    return this.store.size > 0;\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set {\n    return findIds(this.store, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  /**\n   * Gets all list results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getListResults(filter?: Filter): Promise {\n    filter = {...filter, hasSpatialEntity: true} as Filter;\n    const highlighted = new Set(filter.highlightedEntities);\n    return [...this.getIds(filter)].map((s) => getListResult(this.store, s))\n      .map((s) => Object.assign(s, {highlighted: highlighted.has(s['@id'])}))\n      .sort((a, b) => (a.highlighted ? 0 : 1) - (b.highlighted ? 0 : 1));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Gets image data for the associated id.\n   *\n   * @param id The identifier.\n   * @returns The image data.\n   */\n  async getImageViewerData(id: string): Promise {\n    return getImageViewerData(id, this.store);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFSpatialGraph.html":{"url":"classes/CCFSpatialGraph.html","title":"class - CCFSpatialGraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFSpatialGraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-graph.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSpatialEntity\n                            \n                            \n                                addSpatialObjectReference\n                            \n                            \n                                addSpatialPlacement\n                            \n                            \n                                createGraph\n                            \n                            \n                                getTransformationMatrix\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: CCFDatabase)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DirectedGraph\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:38\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialEntity\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialEntity(entity: SpatialEntity)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialObjectReference\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialObjectReference(ref: SpatialObjectReference)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                SpatialObjectReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSpatialPlacement\n                        \n                        \n                    \n                \n            \n            \n                \naddSpatialPlacement(placement: SpatialPlacement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    placement\n                                    \n                                                SpatialPlacement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGraph\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransformationMatrix\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransformationMatrix(sourceIRI: string, targetIRI: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-graph.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIRI\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetIRI\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Matrix4 | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CCFDatabase } from './ccf-database';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { DirectedGraph } from 'graphology';\nimport shortestPath from 'graphology-shortest-path/unweighted';\nimport { fromEuler } from 'quaternion';\nimport toEuler from 'quaternion-to-euler';\n\nimport { SpatialEntity, SpatialObjectReference, SpatialPlacement } from './spatial-types';\nimport { rdf, ccf } from './util/prefixes';\nimport { getSpatialEntity, getSpatialObjectReference, getSpatialPlacement } from './queries/spatial-result-n3';\n\n\nexport function applySpatialPlacement(tx: Matrix4, placement: SpatialPlacement): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R_RAD = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians);\n  // tslint:disable-next-line: no-unsafe-any\n  const R = toEuler(fromEuler(R_RAD[1], R_RAD[0], R_RAD[2], 'XYZ').toVector()) as number[];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport class CCFSpatialGraph {\n  graph: DirectedGraph;\n\n  constructor(private db: CCFDatabase) {\n    this.createGraph();\n  }\n\n  createGraph(): void {\n    this.graph = new DirectedGraph();\n    const store = this.db.store;\n    // Add all Spatial Object References\n    store.forSubjects((subject) => {\n      this.addSpatialObjectReference(getSpatialObjectReference(store, subject.id));\n    }, rdf.type, ccf.SpatialObjectReference, null);\n\n    // Add all Spatial Entities\n    store.forSubjects((subject) => {\n      this.addSpatialEntity(getSpatialEntity(store, subject.id));\n    }, rdf.type, ccf.SpatialEntity, null);\n\n    // Add all Spatial Placements\n    store.forSubjects((subject) => {\n      this.addSpatialPlacement(getSpatialPlacement(store, subject.id));\n    }, rdf.type, ccf.SpatialPlacement, null);\n  }\n\n  addSpatialEntity(entity: SpatialEntity): void {\n    this.graph.mergeNode(entity['@id'], {type: 'SpatialEntity', object: entity});\n  }\n  addSpatialObjectReference(ref: SpatialObjectReference): void {\n    this.graph.mergeNode(ref['@id'], {type: 'SpatialObjectReference', object: ref});\n  }\n  addSpatialPlacement(placement: SpatialPlacement): void {\n    this.graph.mergeDirectedEdge(placement.source['@id'], placement.target['@id'], {type: 'SpatialPlacement', placement});\n  }\n\n  getTransformationMatrix(sourceIRI: string, targetIRI: string): Matrix4 | undefined {\n    if (sourceIRI === targetIRI) {\n      return new Matrix4(); // identity\n    }\n    if (!this.graph.hasNode(sourceIRI) || !this.graph.hasNode(targetIRI)) {\n      return undefined;\n    }\n\n    const tx = new Matrix4();\n    const path = shortestPath(this.graph, sourceIRI, targetIRI);\n    if (path && path.length > 0) {\n      path.reverse();\n      let target: string | number = '';\n      for (const source of path) {\n        if (target) {\n          const p = this.graph.getEdgeAttribute(source, target, 'placement') as SpatialPlacement;\n          applySpatialPlacement(tx, p);\n        }\n        target = source;\n      }\n      return tx;\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFSpatialScene.html":{"url":"classes/CCFSpatialScene.html","title":"class - CCFSpatialScene","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFSpatialScene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-scene.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEntitySceneNodes\n                            \n                            \n                                getReferenceBody\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceSceneNodes\n                            \n                            \n                                getScene\n                            \n                            \n                                getSceneNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: CCFDatabase)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEntitySceneNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetEntitySceneNodes(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceBody\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceBody(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceOrgans\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SpatialEntity[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReferenceSceneNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetReferenceSceneNodes(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScene\n                        \n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSceneNode\n                        \n                        \n                    \n                \n            \n            \n                \ngetSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/ccf-spatial-scene.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    target\n                                    \n                                                SpatialEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    nodeAttrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport { getSpatialEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { ccf, rui } from './util/prefixes';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': 'SpatialSceneNode';\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return getSpatialEntity(this.db.store, bodyId);\n  }\n\n  getReferenceOrgans(filter?: Filter): SpatialEntity[] {\n    let organsId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        organsId = ccf.spatial.MaleOrgans.id;\n        break;\n      case 'Female':\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n      case 'Both':\n      default:\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n    }\n    return [getSpatialEntity(this.db.store, organsId)];\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const wholeBody = getSpatialEntity(this.db.store, ccf.spatial.Body.id);\n    const body = this.getReferenceBody(filter);\n    const organs = getSpatialEntity(this.db.store, ccf.spatial.MaleOrgans.id);\n    const store = this.db.store;\n    const terms = filter?.ontologyTerms || [];\n    const hasTerm = {\n      body: terms.indexOf(rui.body.id) === 0,\n      kidney: terms.indexOf(rui.kidney.id) === 0,\n      right_kidney: terms.indexOf(rui.right_kidney.id) === 0,\n      left_kidney: terms.indexOf(rui.left_kidney.id) === 0,\n      spleen: terms.indexOf(rui.spleen.id) === 0,\n    };\n\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      this.getSceneNode(body, wholeBody, {unpickable: true, color: [255, 255, 255, 1*255]}),\n      ...this.getReferenceOrgans(filter).map((organ) =>\n        this.getSceneNode(organ, body, {unpickable: true, _lighting: 'pbr', zoomBasedOpacity: true,  color: [255, 0, 0, 1*255]})\n      ),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.right_kidney, zoomToOnLoad: hasTerm.right_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.left_kidney, zoomToOnLoad: hasTerm.left_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleen').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.spleen, zoomToOnLoad: hasTerm.spleen})\n    ];\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), wholeBody, {color: [0, 0, 255, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), wholeBody, {color: [255, 0, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC1').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC2').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC3').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true})\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const highlighted = new Set(filter?.highlightedEntities);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, {\n        color: highlighted.has(entity.entityId as string) ? [10, 10, 229, 0.9*255] : [255, 255, 255, 0.9*255]\n      })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial = {}): SpatialSceneNode | undefined {\n    const has3dObject = source.object && source.object.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4().rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId || undefined,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      } as SpatialSceneNode;\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChannelConfig.html":{"url":"interfaces/ChannelConfig.html","title":"interface - ChannelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChannelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        color\n                                \n                                \n                                        slider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slider\n                                    \n                                \n                                \n                                    \n                                        slider:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterOnChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:16\n                            \n                        \n                \n                    \n                        The label that describes the overall question the checkbox is asking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:21\n                            \n                        \n                \n                    \n                        Used to generate the individual checkboxes and their individual labels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:26\n                            \n                        \n                \n                    \n                        A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:31\n                            \n                        \n                \n                    \n                        Any time a checkbox changes we emit that value so the parent component has that information\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nfilterOnChange(event: MatCheckboxChange, option: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                \n            \n\n\n            \n                \n                    This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event object from the checkbox that contains the boolean property 'checked'\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tells us which option was checked or unchecked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\n\n/**\n * Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n */\n@Component({\n  selector: 'ccf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\n  /**\n   * The label that describes the overall question the checkbox is asking\n   */\n  @Input() label: string;\n\n  /**\n   * Used to generate the individual checkboxes and their individual labels\n   */\n  @Input() options: string[];\n\n  /**\n   * A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n   */\n  @Input() selection: string[] = [];\n\n  /**\n   * Any time a checkbox changes we emit that value so the parent component has that information\n   */\n  @Output() selectionChange = new EventEmitter();\n\n  /**\n   * This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n   * @param event Event object from the checkbox that contains the boolean property 'checked'\n   * @param option Tells us which option was checked or unchecked\n   */\n  filterOnChange(event: MatCheckboxChange, option: string): void {\n    const checked = event.checked;\n\n    if (checked) {\n      this.selection = [...this.selection, option];\n    } else {\n      this.selection = this.selection.filter(selection => selection !== option);\n    }\n\n    this.selectionChange.emit(this.selection);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n  \n    \n      \n        {{ option }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                ::ng-deep  .mat-checkbox.mat-accent {\n  .mat-checkbox-checkmark-path {\n    stroke: white !important;\n  }\n\n  .mat-checkbox-inner-container {\n    margin-right: 1rem;\n  }\n}\n\n.filter-label {\n  margin-bottom: 0.5em;\n  font-weight: bold;\n}\n\n.options-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n.option {\n  margin-right: 1.5em;\n  width: 8em;\n  color: #fafafa;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ option }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckboxModule.html":{"url":"modules/CheckboxModule.html","title":"module - CheckboxModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/checkbox/checkbox.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CheckboxComponent } from './checkbox.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent]\n})\nexport class CheckboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/spatial-scene-collider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        hits\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from './body-ui-layer';\n\n\n// tslint:disable: no-unsafe-any\nfunction traverseScene(scene, worldMatrix = new Matrix4(), visitor: (child, modelMatrix: Matrix4) => void): void {\n  const matrix = new Matrix4().identity();\n  if (scene.matrix) {\n    matrix.copy(scene.matrix);\n  } else {\n    matrix.identity();\n\n    if (scene.translation) {\n      matrix.translate(scene.translation);\n    }\n\n    if (scene.rotation) {\n      const rotationMatrix = new Matrix4().fromQuaternion(scene.rotation);\n      matrix.multiplyRight(rotationMatrix);\n    }\n\n    if (scene.scale) {\n      matrix.scale(scene.scale);\n    }\n  }\n  const modelMatrix = new Matrix4(worldMatrix).multiplyRight(matrix);\n  visitor(scene, modelMatrix);\n\n  for (const child of (scene.nodes || scene.children || [])) {\n    traverseScene(child, modelMatrix, visitor);\n  }\n}\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: {'@id': string, name: string}[];\n}\n\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && !d.wireframe)\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n// tslint:enable: no-unsafe-any\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorBarComponent.html":{"url":"components/ColorBarComponent.html","title":"component - ColorBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Color bar component for the color scheme popup and color scheme selector\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-bar\n            \n\n            \n                styleUrls\n                ./color-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                colorChanged\n                            \n                            \n                                gradientHighlight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                enableSelection\n                            \n                            \n                                selected\n                            \n                            \n                                selectedColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gradientStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colorScheme\n                    \n                \n                \n                    \n                        Type :         ColorScheme\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Color scheme to be displayed in the color bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSelection\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:33\n                            \n                        \n                \n                    \n                        Determines if colors are able to be selected on the color bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:23\n                            \n                        \n                \n                    \n                        Whether or not the scheme is currently selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedColor\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:28\n                            \n                        \n                \n                    \n                        Currently selected color in colorScheme.colors\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        colorChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:38\n                            \n                        \n                \n                    \n                        Emits the newly selected color index\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncolorChanged(color: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:64\n                \n            \n\n\n            \n                \n                    When a color is selected, this updates relavant variables and emits the\nselected color\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the color the user selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gradientHighlight\n                        \n                        \n                    \n                \n            \n            \n                \ngradientHighlight()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:55\n                \n            \n\n\n            \n                \n                    Returns whether or not the scheme is a selected gradient (for highlighting purposes)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gradientStyle\n                    \n                \n\n                \n                    \n                        getgradientStyle()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.component.ts:43\n                                \n                            \n                    \n                        \n                                Enables dynamic styling for gradient bars\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ColorScheme } from '../color-schemes';\n\n\n/**\n * Color bar component for the color scheme popup and color scheme selector\n */\n@Component({\n  selector: 'ccf-color-bar',\n  templateUrl: './color-bar.component.html',\n  styleUrls: ['./color-bar.component.scss']\n})\nexport class ColorBarComponent {\n  /**\n   * Color scheme to be displayed in the color bar\n   */\n  @Input() colorScheme: ColorScheme;\n\n  /**\n   * Whether or not the scheme is currently selected\n   */\n  @Input() selected = false;\n\n  /**\n   * Currently selected color in colorScheme.colors\n   */\n  @Input() selectedColor = '';\n\n  /**\n   * Determines if colors are able to be selected on the color bar\n   */\n  @Input() enableSelection = false;\n\n  /**\n   * Emits the newly selected color index\n   */\n  @Output() colorChange = new EventEmitter();\n\n  /**\n   * Enables dynamic styling for gradient bars\n   */\n  get gradientStyle(): string {\n    const { colors, positions } = this.colorScheme;\n    const result: string[] = [];\n    for (let i = 0; i \n    \n\n    \n        \n  \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./color-bar.component.scss\n                \n                .scheme-container {\n  width: 7rem;\n  height: 1rem;\n  display: flex;\n  .discrete {\n    width: 1rem;\n  }\n  .gradient {\n    width: 7rem;\n  }\n\n  &.selected-scheme {\n    .discrete {\n      &.selected-color {\n        border-radius: 10px;\n      }\n    }\n  }\n\n  &.highlighted {\n    outline-width: 1px;\n    outline-style: solid;\n  }\n\n  :hover {\n    cursor: pointer;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorBarModule.html":{"url":"modules/ColorBarModule.html","title":"module - ColorBarModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorBarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorBarModule\n\n\n\ncluster_ColorBarModule_declarations\n\n\n\ncluster_ColorBarModule_exports\n\n\n\n\nColorBarComponent\n\nColorBarComponent\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorBarModule -->\n\nColorBarComponent->ColorBarModule\n\n\n\n\n\nColorBarComponent \n\nColorBarComponent \n\nColorBarComponent  -->\n\nColorBarModule->ColorBarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-bar/color-bar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorBarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorBarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ColorBarComponent } from './color-bar.component';\n\n\n@NgModule({\n  declarations: [ColorBarComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ColorBarComponent]\n})\nexport class ColorBarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorPickerLauncherComponent.html":{"url":"components/ColorPickerLauncherComponent.html","title":"component - ColorPickerLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorPickerLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts\n\n\n    \n        Description\n    \n    \n        Component dynamically displays a div with a shape and background that corresponds to the color scheme\nor color of the layer that it gets passed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-picker-launcher\n            \n\n            \n                styleUrls\n                ./color-picker-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-picker-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts:20\n                            \n                        \n                \n                    \n                        An image-viewer layer which contains the styling information required to render this component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.component.ts:25\n                            \n                        \n                \n                    \n                        Output that passes along changes made to the layer's properties from the color picker\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\n/**\n * Component dynamically displays a div with a shape and background that corresponds to the color scheme\n * or color of the layer that it gets passed.\n */\n@Component({\n  selector: 'ccf-color-picker-launcher',\n  templateUrl: './color-picker-launcher.component.html',\n  styleUrls: ['./color-picker-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ColorPickerLauncherComponent {\n  /**\n   * An image-viewer layer which contains the styling information required to render this component.\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Output that passes along changes made to the layer's properties from the color picker\n   */\n  @Output() layerChange = new EventEmitter();\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./color-picker-launcher.component.scss\n                \n                .launch-button {\n  width: 1rem;\n  height: 1rem;\n  cursor: pointer;\n}\n\n.circle {\n  border-radius: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorPickerLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorPickerLauncherModule.html":{"url":"modules/ColorPickerLauncherModule.html","title":"module - ColorPickerLauncherModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorPickerLauncherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorPickerLauncherModule\n\n\n\ncluster_ColorPickerLauncherModule_declarations\n\n\n\ncluster_ColorPickerLauncherModule_imports\n\n\n\ncluster_ColorPickerLauncherModule_exports\n\n\n\n\nColorPickerLauncherComponent\n\nColorPickerLauncherComponent\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule -->\n\nColorPickerLauncherComponent->ColorPickerLauncherModule\n\n\n\n\n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent  -->\n\nColorPickerLauncherModule->ColorPickerLauncherComponent \n\n\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorPickerLauncherModule -->\n\nColorSchemePopupModule->ColorPickerLauncherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-picker-launcher/color-picker-launcher.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorPickerLauncherComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorSchemePopupModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorPickerLauncherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorPickerLauncherComponent } from './color-picker-launcher.component';\nimport { ColorSchemePopupModule } from '../color-scheme-popup/color-scheme-popup.module';\n\n\n@NgModule({\n  declarations: [ColorPickerLauncherComponent],\n  imports: [CommonModule, ColorSchemePopupModule],\n  exports: [ColorPickerLauncherComponent]\n})\nexport class ColorPickerLauncherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme.html":{"url":"interfaces/ColorScheme.html","title":"interface - ColorScheme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/color-scheme.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colors\n                                \n                                \n                                        name\n                                \n                                \n                                        positions\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"discrete\" | \"gradient\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"discrete\" | \"gradient\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n    type: 'discrete' | 'gradient';\n    name: string;\n    colors: string[];\n    positions: number[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorScheme-1.html":{"url":"interfaces/ColorScheme-1.html","title":"interface - ColorScheme-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorScheme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-schemes.ts\n        \n\n            \n                Description\n            \n            \n                Color scheme to be used in visualizing layers of the image\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colors\n                                \n                                \n                                        name\n                                \n                                \n                                        positions\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colors\n                                    \n                                \n                                \n                                    \n                                        colors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Colors used in the scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        positions\n                                    \n                                \n                                \n                                    \n                                        positions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions for mapping the data to colors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"discrete\" | \"gradient\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"discrete\" | \"gradient\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the scheme is discrete or gradient\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n\n  /**\n   * Whether the scheme is discrete or gradient\n   */\n  type: 'discrete' | 'gradient';\n\n  /**\n   * Name of scheme\n   */\n  name: string;\n\n  /**\n   * Colors used in the scheme\n   */\n  colors: string[];\n\n  /**\n   * Positions for mapping the data to colors\n   */\n  positions: number[];\n}\n\n/**\n * Default Qualitative Scheme1 (discrete)\n */\nexport const GREEENORANGE: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative1',\n  colors: ['#66BB6A', '#B39DDB', '#FFCC80', '#FFFF8D', '#1565C0', '#E91E63', '#E65100'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Qualitative Scheme2 (discrete)\n */\nexport const TEALGREEN: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative2',\n  colors: ['#80CBC4', '#FFFF8D', '#B39DDB', '#EF9A9A', '#64B5F6', '#FFB74D', '#AED581'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme1 (discrete)\n */\nexport const BLUERED: ColorScheme = {\n  type: 'discrete',\n  name: 'bluered',\n  colors: ['#2166AC', '#67A9CF', '#D1E5F0', '#F7F7F7', '#FDDBC7', '#EF8A62', '#B2182B'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme2 (discrete)\n */\nexport const GREENRED: ColorScheme = {\n  type: 'discrete',\n  name: 'greenred',\n  colors: ['#1A9850', '#91CF60', '#D9EF8B', '#FFFFBF', '#FEE08B', '#FC8D59', '#D73027'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme3 (discrete)\n */\nexport const PURPLEBROWN: ColorScheme = {\n  type: 'discrete',\n  name: 'purplebrown',\n  colors: ['#542788', '#998EC3', '#D8DAEB', '#F7F7F7', '#FEE0B6', '#F1A340', '#B35806'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme4 (discrete)\n */\nexport const REDTAN: ColorScheme = {\n  type: 'discrete',\n  name: 'redtan',\n  colors: ['#990000', '#D7301F', '#EF6548', '#FC8D59', '#FDBB84', '#FDD49E', '#FEF0D9'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme5 (discrete)\n */\nexport const PURPLELIGHTBLUE: ColorScheme = {\n  type: 'discrete',\n  name: 'purplelightblue',\n  colors: ['#6E016B', '#88419D', '#8C6BB1', '#8C96C6', '#9EBCDA', '#BFD3E6', '#EDF8FB'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme6 (gradient)\n */\nexport const VIRIDIS: ColorScheme = {\n  type: 'gradient',\n  name: 'viridis',\n  colors: ['#FFE31C', '#B5C740', '#6BAB65', '#21908A', '#2D6379', '#393768', '#450B57'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme7 (gradient)\n */\nexport const MAGMA: ColorScheme = {\n  type: 'gradient',\n  name: 'magma',\n  colors: ['#F8FC9D', '#E1B986', '#CA7670', '#B4335A', '#78223C', '#3D121F', '#020202'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme8 (gradient)\n */\nexport const PLASMA: ColorScheme = {\n  type: 'gradient',\n  name: 'plasma',\n  colors: ['#F2F424', '#E3B842', '#D47D60', '#C6427E', '#883381', '#4A2484', '#0C1687'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default scheme options\n */\nexport const DEFAULT_COLOR_SCHEMES = [\n  GREEENORANGE,\n  TEALGREEN,\n  BLUERED,\n  GREENRED,\n  PURPLEBROWN,\n  // REDTAN,\n  // PURPLELIGHTBLUE,\n  // VIRIDIS,\n  // MAGMA,\n  // PLASMA\n];\n\n/**\n * Object containing scheme and color index info to be emitted when a change is made\n */\nexport interface ColorSchemeSelection {\n\n  /**\n   * Current scheme selected\n   */\n  scheme: ColorScheme;\n\n  /**\n   * Index of the selected color in scheme\n   */\n  coloridx: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSchemeContentsComponent.html":{"url":"components/ColorSchemeContentsComponent.html","title":"component - ColorSchemeContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSchemeContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts\n\n\n    \n        Description\n    \n    \n        Contains the color menu and brightness/transparency sliders\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-scheme-contents\n            \n\n            \n                styleUrls\n                ./color-scheme-contents.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-scheme-contents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightnessSliderOptions\n                            \n                            \n                                transparencySliderOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                brightnessChanged\n                            \n                            \n                                colorChanged\n                            \n                            \n                                transparencyChanged\n                            \n                            \n                                    Private\n                                updateLayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                layer\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    brightnessLow\n                                \n                                \n                                    brightnessHigh\n                                \n                                \n                                    transparency\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:70\n                            \n                        \n\n                \n                    \n                            Initiates slider options\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:21\n                            \n                        \n                \n                    \n                        Determines if the popup opens up or down from the icon position\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:31\n                            \n                        \n                \n                    \n                        Layer that the component is currently rendering, used to pull relevant properties from.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:26\n                            \n                        \n                \n                    \n                        List of available schemes\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:36\n                            \n                        \n                \n                    \n                        Used to emit any changes made to the layer or its properties\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            brightnessChanged\n                        \n                        \n                    \n                \n            \n            \n                \nbrightnessChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:91\n                \n            \n\n\n            \n                \n                    Emits new brightness selection\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            colorChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncolorChanged(color: string, scheme: ColorScheme)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:106\n                \n            \n\n\n            \n                \n                    Takes in the selected color and scheme and adds them to the Layer\nbefore emitting the changed layer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scheme\n                                    \n                                                ColorScheme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transparencyChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntransparencyChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:98\n                \n            \n\n\n            \n                \n                    Emits new transparency value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateLayer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayer(updates: Partial<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:118\n                \n            \n\n\n            \n                \n                    Updates layer with new layer settings\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    updates\n                                    \n                                            Partial<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contains updated layer settings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brightnessSliderOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:41\n                            \n                        \n\n                \n                    \n                        Options for the brightness slider\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transparencySliderOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:46\n                            \n                        \n\n                \n                    \n                        Options for the transparency slider\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        brightnessLow\n                    \n                \n\n                \n                    \n                        getbrightnessLow()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:51\n                                \n                            \n                    \n                        \n                                Updates current low brightness value with new low brightness value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbrightnessLow(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        brightnessHigh\n                    \n                \n\n                \n                    \n                        getbrightnessHigh()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:59\n                                \n                            \n                    \n                        \n                                Updates current high brightness value with new high brightness value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        setbrightnessHigh(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        transparency\n                    \n                \n\n                \n                    \n                        gettransparency()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:67\n                                \n                            \n                    \n                        \n                                Updates current transparency value with new transparency value\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n                \n                    \n                        settransparency(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.component.ts:68\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Options } from 'ng5-slider';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../color-schemes';\n\n\n/**\n * Contains the color menu and brightness/transparency sliders\n */\n@Component({\n  selector: 'ccf-color-scheme-contents',\n  templateUrl: './color-scheme-contents.component.html',\n  styleUrls: ['./color-scheme-contents.component.scss']\n})\nexport class ColorSchemeContentsComponent {\n\n  /**\n   * Determines if the popup opens up or down from the icon position\n   */\n  @Input() bottom = false;\n\n  /**\n   * List of available schemes\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * Layer that the component is currently rendering, used to pull relevant properties from.\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Used to emit any changes made to the layer or its properties\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /**\n   * Options for the brightness slider\n   */\n  brightnessSliderOptions: Options;\n\n  /**\n   * Options for the transparency slider\n   */\n  transparencySliderOptions: Options;\n\n  /**\n   * Updates current low brightness value with new low brightness value\n   */\n  get brightnessLow(): number { return this.layer.brightness[0]; }\n  set brightnessLow(value: number) {\n    this.updateLayer({ brightness: [value, this.brightnessHigh] });\n  }\n\n  /**\n   * Updates current high brightness value with new high brightness value\n   */\n  get brightnessHigh(): number { return this.layer.brightness[1]; }\n  set brightnessHigh(value: number) {\n    this.updateLayer({ brightness: [this.brightnessLow, value] });\n  }\n\n  /**\n   * Updates current transparency value with new transparency value\n   */\n  get transparency(): number { return this.layer.transparency; }\n  set transparency(value: number) {\n    this.updateLayer({ transparency: value });\n  }\n\n  /**\n   * Initiates slider options\n   */\n  constructor() {\n    const COMMON_OPTIONS = {\n      floor: 0,\n      ceil: 100,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n\n    this.brightnessSliderOptions = { ...COMMON_OPTIONS, inputEventsInterval: 1000 };\n    this.transparencySliderOptions = { ...COMMON_OPTIONS, showSelectionBar: true };\n  }\n\n  /**\n   * Emits new brightness selection\n   */\n  brightnessChanged(): void {\n    this.layerChange.emit(this.layer);\n  }\n\n  /**\n   * Emits new transparency value\n   */\n  transparencyChanged(): void {\n    this.layerChange.emit(this.layer);\n  }\n\n  /**\n   * Takes in the selected color and scheme and adds them to the Layer\n   * before emitting the changed layer\n   */\n  colorChanged(color: string, scheme: ColorScheme): void {\n    this.updateLayer({\n      colorScheme: scheme,\n      color,\n      customizedColor: true\n    });\n  }\n\n  /**\n   * Updates layer with new layer settings\n   * @param updates Contains updated layer settings\n   */\n  private updateLayer(\n    updates: Partial[0]>\n  ): void {\n    const { layer: current, layerChange } = this;\n    const layer = new ImageViewerLayer({\n      ...current,\n      ...updates\n    });\n\n    this.layer = layer;\n    layerChange.emit(layer);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    Brightness\n    \n    \n\n    Transparency\n    \n     -->\n  \n\n\n    \n\n    \n                \n                    ./color-scheme-contents.component.scss\n                \n                .color-scheme-contents-container {\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 4px;\n  width: 10rem;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 1;\n  right: -1.125rem;\n  top: -1.125rem;\n\n  &.bottom {\n    top: auto;\n    bottom: 0rem;\n  }\n\n  .scheme-contents {\n    margin: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .swatch {\n      display: flex;\n      width: 7rem;\n      height: 1rem;\n      margin-bottom: 0.5rem;\n\n      :hover {\n        cursor: pointer;\n      }\n    }\n\n    .brightness-slider-label {\n      margin-top: .5rem;\n    }\n  }\n\n  ::ng-deep .slider {\n    margin-top: 0.75rem;\n    margin-bottom: 1rem;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: 0.15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: -0.5rem;\n      border-width: 0.1rem;\n      border-style: solid;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Brightness            Transparency         -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSchemeContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorSchemeContentsModule.html":{"url":"modules/ColorSchemeContentsModule.html","title":"module - ColorSchemeContentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorSchemeContentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorSchemeContentsModule\n\n\n\ncluster_ColorSchemeContentsModule_declarations\n\n\n\ncluster_ColorSchemeContentsModule_imports\n\n\n\ncluster_ColorSchemeContentsModule_exports\n\n\n\n\nColorSchemeContentsComponent\n\nColorSchemeContentsComponent\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule -->\n\nColorSchemeContentsComponent->ColorSchemeContentsModule\n\n\n\n\n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent  -->\n\nColorSchemeContentsModule->ColorSchemeContentsComponent \n\n\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorSchemeContentsModule -->\n\nColorBarModule->ColorSchemeContentsModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nColorSchemeContentsModule -->\n\nDualSliderModule->ColorSchemeContentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-scheme-contents/color-scheme-contents.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorSchemeContentsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorBarModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorSchemeContentsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { ColorSchemeContentsComponent } from './color-scheme-contents.component';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { ColorBarModule } from '../color-bar/color-bar.module';\n\n\n@NgModule({\n  imports: [CommonModule, DualSliderModule, Ng5SliderModule, ColorBarModule],\n  declarations: [ColorSchemeContentsComponent],\n  exports: [ColorSchemeContentsComponent]\n})\n\nexport class ColorSchemeContentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColorSchemePopupComponent.html":{"url":"components/ColorSchemePopupComponent.html","title":"component - ColorSchemePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColorSchemePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the scheme selector popup\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-color-scheme-popup\n            \n\n            \n                styleUrls\n                ./color-scheme-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./color-scheme-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                contentElement\n                            \n                            \n                                    Private\n                                    Optional\n                                owner\n                            \n                            \n                                popupVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layer\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layer\n                    \n                \n                \n                    \n                        Type :         ImageViewerLayer\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:25\n                            \n                        \n                \n                    \n                        The Layer which we use to pull the properties we need from\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:20\n                            \n                        \n                \n                    \n                        Schemes available to choose from\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:30\n                            \n                        \n                \n                    \n                        Output we use to emit any changes to the layer or its properties\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:53\n                \n            \n\n\n            \n                \n                    Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(event: MouseEvent, owner?: Element)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:64\n                \n            \n\n\n            \n                \n                    Opens popup and calculates which direction the popup opens based on click position\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    owner\n                                    \n                                            Element\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:45\n                            \n                        \n\n                \n                    \n                        Controls direction the popup opens\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('content', {static: true, read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Element\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:40\n                            \n                        \n\n                \n                    \n                        Owner button element which when clicked will not close on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.component.ts:37\n                            \n                        \n\n                \n                    \n                        Controls visibility of the popup\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostListener, Input, Output, ViewChild, ElementRef } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../color-schemes';\n\n\n/**\n * Component for the scheme selector popup\n */\n@Component({\n  selector: 'ccf-color-scheme-popup',\n  templateUrl: './color-scheme-popup.component.html',\n  styleUrls: ['./color-scheme-popup.component.scss']\n})\nexport class ColorSchemePopupComponent {\n\n  /**\n   * Schemes available to choose from\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * The Layer which we use to pull the properties we need from\n   */\n  @Input() layer: ImageViewerLayer;\n\n  /**\n   * Output we use to emit any changes to the layer or its properties\n   */\n  @Output() layerChange = new EventEmitter();\n\n  @ViewChild('content', { static: true, read: ElementRef }) contentElement: ElementRef;\n\n  /**\n   * Controls visibility of the popup\n   */\n  popupVisible = false;\n\n  /** Owner button element which when clicked will not close on. */\n  private owner?: Element;\n\n  /**\n   * Controls direction the popup opens\n   */\n  bottom = false;\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  close(target: HTMLElement): void {\n    const { popupVisible, contentElement: { nativeElement: content } = { nativeElement: undefined }, owner } = this;\n    if (!popupVisible || content?.contains(target) || owner?.contains(target)) {\n      return;\n    }\n    this.popupVisible = !popupVisible;\n  }\n\n  /**\n   * Opens popup and calculates which direction the popup opens based on click position\n   */\n  open(event: MouseEvent, owner?: Element): void {\n    const clickPos = event.pageY;\n    this.bottom = window.innerHeight - clickPos \n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./color-scheme-popup.component.scss\n                \n                .hidden {\n  display: none;\n}\n\n.show {\n  display: block;\n  position: absolute;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ColorSchemePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ColorSchemePopupModule.html":{"url":"modules/ColorSchemePopupModule.html","title":"module - ColorSchemePopupModule","body":"\n                   \n\n\n\n\n    Modules\n    ColorSchemePopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ColorSchemePopupModule\n\n\n\ncluster_ColorSchemePopupModule_declarations\n\n\n\ncluster_ColorSchemePopupModule_imports\n\n\n\ncluster_ColorSchemePopupModule_exports\n\n\n\n\nColorSchemePopupComponent\n\nColorSchemePopupComponent\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorSchemePopupModule -->\n\nColorSchemePopupComponent->ColorSchemePopupModule\n\n\n\n\n\nColorSchemePopupComponent \n\nColorSchemePopupComponent \n\nColorSchemePopupComponent  -->\n\nColorSchemePopupModule->ColorSchemePopupComponent \n\n\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemePopupModule -->\n\nColorSchemeContentsModule->ColorSchemePopupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-scheme-popup/color-scheme-popup.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ColorSchemePopupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorSchemeContentsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ColorSchemePopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ColorSchemePopupComponent } from './color-scheme-popup.component';\nimport { ColorSchemeContentsModule } from '../color-scheme-contents/color-scheme-contents.module';\n\n\n@NgModule({\n  imports: [CommonModule, ColorSchemeContentsModule],\n  declarations: [ColorSchemePopupComponent],\n  exports: [ColorSchemePopupComponent]\n})\n\nexport class ColorSchemePopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorSchemeSelection.html":{"url":"interfaces/ColorSchemeSelection.html","title":"interface - ColorSchemeSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColorSchemeSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/color-scheme/color-schemes.ts\n        \n\n            \n                Description\n            \n            \n                Object containing scheme and color index info to be emitted when a change is made\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coloridx\n                                \n                                \n                                        scheme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coloridx\n                                    \n                                \n                                \n                                    \n                                        coloridx:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Index of the selected color in scheme\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheme\n                                    \n                                \n                                \n                                    \n                                        scheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current scheme selected\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ColorScheme {\n\n  /**\n   * Whether the scheme is discrete or gradient\n   */\n  type: 'discrete' | 'gradient';\n\n  /**\n   * Name of scheme\n   */\n  name: string;\n\n  /**\n   * Colors used in the scheme\n   */\n  colors: string[];\n\n  /**\n   * Positions for mapping the data to colors\n   */\n  positions: number[];\n}\n\n/**\n * Default Qualitative Scheme1 (discrete)\n */\nexport const GREEENORANGE: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative1',\n  colors: ['#66BB6A', '#B39DDB', '#FFCC80', '#FFFF8D', '#1565C0', '#E91E63', '#E65100'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Qualitative Scheme2 (discrete)\n */\nexport const TEALGREEN: ColorScheme = {\n  type: 'discrete',\n  name: 'qualitative2',\n  colors: ['#80CBC4', '#FFFF8D', '#B39DDB', '#EF9A9A', '#64B5F6', '#FFB74D', '#AED581'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme1 (discrete)\n */\nexport const BLUERED: ColorScheme = {\n  type: 'discrete',\n  name: 'bluered',\n  colors: ['#2166AC', '#67A9CF', '#D1E5F0', '#F7F7F7', '#FDDBC7', '#EF8A62', '#B2182B'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme2 (discrete)\n */\nexport const GREENRED: ColorScheme = {\n  type: 'discrete',\n  name: 'greenred',\n  colors: ['#1A9850', '#91CF60', '#D9EF8B', '#FFFFBF', '#FEE08B', '#FC8D59', '#D73027'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme3 (discrete)\n */\nexport const PURPLEBROWN: ColorScheme = {\n  type: 'discrete',\n  name: 'purplebrown',\n  colors: ['#542788', '#998EC3', '#D8DAEB', '#F7F7F7', '#FEE0B6', '#F1A340', '#B35806'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme4 (discrete)\n */\nexport const REDTAN: ColorScheme = {\n  type: 'discrete',\n  name: 'redtan',\n  colors: ['#990000', '#D7301F', '#EF6548', '#FC8D59', '#FDBB84', '#FDD49E', '#FEF0D9'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme5 (discrete)\n */\nexport const PURPLELIGHTBLUE: ColorScheme = {\n  type: 'discrete',\n  name: 'purplelightblue',\n  colors: ['#6E016B', '#88419D', '#8C6BB1', '#8C96C6', '#9EBCDA', '#BFD3E6', '#EDF8FB'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme6 (gradient)\n */\nexport const VIRIDIS: ColorScheme = {\n  type: 'gradient',\n  name: 'viridis',\n  colors: ['#FFE31C', '#B5C740', '#6BAB65', '#21908A', '#2D6379', '#393768', '#450B57'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme7 (gradient)\n */\nexport const MAGMA: ColorScheme = {\n  type: 'gradient',\n  name: 'magma',\n  colors: ['#F8FC9D', '#E1B986', '#CA7670', '#B4335A', '#78223C', '#3D121F', '#020202'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default Scheme8 (gradient)\n */\nexport const PLASMA: ColorScheme = {\n  type: 'gradient',\n  name: 'plasma',\n  colors: ['#F2F424', '#E3B842', '#D47D60', '#C6427E', '#883381', '#4A2484', '#0C1687'],\n  positions: [0, .166, .333, .5, .666, .833, 1]\n};\n\n/**\n * Default scheme options\n */\nexport const DEFAULT_COLOR_SCHEMES = [\n  GREEENORANGE,\n  TEALGREEN,\n  BLUERED,\n  GREENRED,\n  PURPLEBROWN,\n  // REDTAN,\n  // PURPLELIGHTBLUE,\n  // VIRIDIS,\n  // MAGMA,\n  // PLASMA\n];\n\n/**\n * Object containing scheme and color index info to be emitted when a change is made\n */\nexport interface ColorSchemeSelection {\n\n  /**\n   * Current scheme selected\n   */\n  scheme: ColorScheme;\n\n  /**\n   * Index of the selected color in scheme\n   */\n  coloridx: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-container'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:111\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:79\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:101\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateDrawers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:120\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessageChannel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:58\n                            \n                        \n\n                \n                    \n                        The connected message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(ContentComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:45\n                            \n                        \n\n                \n                    \n                        Content component if provided already wrapped. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(ContentComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:48\n                            \n                        \n\n                \n                    \n                        Content component if provided without wrapping. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DrawerComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:41\n                            \n                        \n\n                \n                    \n                        Drawer components in this container. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                        All subscriptions managed by the container. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component. \n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped. \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean { return this.content1.length !== 0; }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) { throwDuplicateDrawersError('start'); }\n    if (endDrawers.length > 1) { throwDuplicateDrawersError('end'); }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent-1.html":{"url":"components/ContainerComponent-1.html","title":"component - ContainerComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-container'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:111\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:79\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:101\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateDrawers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:120\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MessageChannel\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:58\n                            \n                        \n\n                \n                    \n                        The connected message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(ContentComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:45\n                            \n                        \n\n                \n                    \n                        Content component if provided already wrapped. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            content2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(ContentComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:48\n                            \n                        \n\n                \n                    \n                        Content component if provided without wrapping. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DrawerComponent, {descendants: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:41\n                            \n                        \n\n                \n                    \n                        Drawer components in this container. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:60\n                            \n                        \n\n                \n                    \n                        All subscriptions managed by the container. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component. \n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped. \n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean { return this.content1.length !== 0; }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) { throwDuplicateDrawersError('start'); }\n    if (endDrawers.length > 1) { throwDuplicateDrawersError('end'); }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/content.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n\n@Component({\n  selector: 'ccf-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./content.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-1.html":{"url":"components/ContentComponent-1.html","title":"component - ContentComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @fadeInOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the content is invisible. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.cff-drawer-content-animations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                            \n                        \n\n                \n                    \n                        Whether animations are enabled. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-left.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                            \n                        \n\n                \n                    \n                        Left margin size. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-right.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                            \n                        \n\n                \n                    \n                        Right margin size. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:68\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateFaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:113\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateMargin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:100\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DrawerComponent[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:39\n                            \n                        \n\n                \n                    \n                        References to the side drawers. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if(this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled':\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = startExpanded || endExpanded;\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 7rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: 1.5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-2.html":{"url":"components/ContentComponent-2.html","title":"component - ContentComponent-2","body":"\n                   \n\n\n\n\n\n  Components\n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @fadeInOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the content is invisible. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.cff-drawer-content-animations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                            \n                        \n\n                \n                    \n                        Whether animations are enabled. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-left.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                            \n                        \n\n                \n                    \n                        Left margin size. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style.margin-right.px\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                            \n                        \n\n                \n                    \n                        Right margin size. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:68\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateFaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:113\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateMargin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:100\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DrawerComponent[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:39\n                            \n                        \n\n                \n                    \n                        References to the side drawers. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if(this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled':\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = !!(startExpanded || endExpanded);\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 7rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: 1.5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-2'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when the content component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged-1.html":{"url":"interfaces/ContentContainerChanged-1.html","title":"interface - ContentContainerChanged-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when the content component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentModule.html":{"url":"modules/ContentModule.html","title":"module - ContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\n\nContentComponent\n\nContentComponent\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StageNavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ContentComponent } from '../content/content.component';\nimport { StageNavModule } from './stage-nav/stage-nav.module';\n\n\n@NgModule({\n  imports: [CommonModule, StageNavModule],\n  declarations: [ContentComponent],\n  exports: [ContentComponent]\n})\nexport class ContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHeaderModule\n\nHeaderModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { HeaderModule } from './header/header.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [HttpClientModule, HeaderModule, StoreModule, ThemingModule],\n  exports: [HeaderModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Backend query interface. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getAggregateResults\n                                \n                                \n                                    getImageViewerData\n                                \n                                \n                                    getListResults\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:92\n                \n            \n\n\n            \n                \n                    Query aggregate items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageViewerData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:94\n                \n            \n\n\n            \n                \n                    Query a specific image. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-database/src/lib/interfaces.ts:90\n                \n            \n\n\n            \n                \n                    Query list items. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource-1.html":{"url":"interfaces/DataSource-1.html","title":"interface - DataSource-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         ZarrInfo | OMEZarrInfo | TiffInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZarrInfo | OMEZarrInfo | TiffInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         LoaderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoaderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n            \n                Description\n            \n            \n                Backend data queries.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _afterConnected\n                            \n                            \n                                dataSource\n                            \n                            \n                                dbOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAggregateResults\n                            \n                            \n                                    Private\n                                    Async\n                                getDB\n                            \n                            \n                                getImageViewerData\n                            \n                            \n                                getListResults\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of data source service.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAggregateResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:77\n                \n            \n\n\n            \n                \n                    Queries for aggregate values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getDB\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDB()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:53\n                \n            \n\n\n            \n                \n                    Gets a reference to the database.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise that resolves to the database when ready.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImageViewerData\n                        \n                        \n                    \n                \n            \n            \n                \ngetImageViewerData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:97\n                \n            \n\n\n            \n                \n                    Queries data for a specific image.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The image identifier ('\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the result.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getListResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetListResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:67\n                \n            \n\n\n            \n                \n                    Queries for list values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOntologyTermOccurences\n                        \n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:87\n                \n            \n\n\n            \n                \n                    Queries for ontology term counts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _afterConnected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:21\n                            \n                        \n\n                \n                    \n                        Indicator of when the database is ready. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Remote | CCFDatabase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:17\n                            \n                        \n\n                \n                    \n                        The underlying database. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CCFDatabaseOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:19\n                            \n                        \n\n                \n                    \n                        Database initialization options. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AggregateResult, CCFDatabase, CCFDatabaseOptions, Filter, ImageViewerData, ListResult } from 'ccf-database';\nimport { Remote, wrap } from 'comlink';\nimport { from, Observable } from 'rxjs';\n\nimport { environment } from './../../../../environments/environment';\n\n\n/**\n * Backend data queries.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceService {\n  /** The underlying database. */\n  dataSource: Remote | CCFDatabase;\n  /** Database initialization options. */\n  dbOptions: CCFDatabaseOptions;\n  /** Indicator of when the database is ready. */\n  private _afterConnected: Promise;\n\n  /**\n   * Creates an instance of data source service.\n   */\n  constructor() {\n    if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      const worker = new Worker('./data-source.worker', { type: 'module' });\n      this.dataSource = wrap(worker);\n    } else {\n      this.dataSource = new CCFDatabase();\n    }\n    this.dbOptions = environment.dbOptions as CCFDatabaseOptions;\n\n    if (typeof globalThis === 'object') {\n      // If a global dbOptions object is set, use this for connecting to the db\n      if (globalThis.dbOptions) {\n        this.dbOptions = { ...this.dbOptions, ...globalThis.dbOptions } as CCFDatabaseOptions;\n      }\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        ((globalThis as unknown) as { db: Remote | CCFDatabase }).db = this.dataSource;\n      }\n    }\n  }\n\n  /**\n   * Gets a reference to the database.\n   *\n   * @returns A promise that resolves to the database when ready.\n   */\n  private async getDB(): Promise | CCFDatabase> {\n    if (!this._afterConnected) {\n      this._afterConnected = this.dataSource.connect(this.dbOptions);\n    }\n    await this._afterConnected;\n    return this.dataSource;\n  }\n\n  /**\n   * Queries for list values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getListResults(filter?: Filter): Observable {\n    return from(this.getDB().then((db) => db.getListResults(filter)));\n  }\n\n  /**\n   * Queries for aggregate values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getAggregateResults(filter?: Filter): Observable {\n    return from(this.getDB().then((db) => db.getAggregateResults(filter)));\n  }\n\n  /**\n   * Queries for ontology term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return from(this.getDB().then((db) => db.getOntologyTermOccurences(filter)));\n  }\n\n  /**\n   * Queries data for a specific image.\n   *\n   * @param iri The image identifier ('@id').\n   * @returns An observable emitting the result.\n   */\n  getImageViewerData(iri: string): Observable {\n    return from(this.getDB().then((db) => db.getImageViewerData(iri)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataState.html":{"url":"injectables/DataState.html","title":"injectable - DataState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/data/data.state.ts\n        \n\n            \n                Description\n            \n            \n                Data state repository and service.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _aggregateDataQueryStatus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _listDataQueryStatus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                _termOccurencesDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                aggregateData$\n                            \n                            \n                                    Readonly\n                                aggregateDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                filter$\n                            \n                            \n                                    Readonly\n                                listData$\n                            \n                            \n                                    Readonly\n                                listDataQueryStatus$\n                            \n                            \n                                    Readonly\n                                ontologyTermsFullData$\n                            \n                            \n                                    Readonly\n                                queryStatus$\n                            \n                            \n                                    Readonly\n                                termOccurencesData$\n                            \n                            \n                                    Readonly\n                                termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aggregateData\n                            \n                            \n                                    Private\n                                listData\n                            \n                            \n                                    Private\n                                termOccurencesData\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of data state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data query service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            aggregateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    aggregateData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:181\n                \n            \n\n\n            \n                \n                    Queries for aggregate data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ObservableInput\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            listData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:169\n                \n            \n\n\n            \n                \n                    Queries for list data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ObservableInput\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            termOccurencesData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    termOccurencesData(filter: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:193\n                \n            \n\n\n            \n                \n                    Queries for term occurences data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The filter used during query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObservableInput>\n\n                    \n                    \n                        The result of the query.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilter(filter: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:155\n                \n            \n\n\n            \n                \n                    Updates the current filter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes to be made to the current filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _aggregateDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:94\n                            \n                        \n\n                \n                    \n                        Implementation subject for aggregateDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _listDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:92\n                            \n                        \n\n                \n                    \n                        Implementation subject for listDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:96\n                            \n                        \n\n                \n                    \n                        Implementation subject for termOccurencesDataQueryStatus$. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            aggregateData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:107\n                            \n                        \n\n                \n                    \n                        Latest aggregate query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            aggregateDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._aggregateDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:118\n                            \n                        \n\n                \n                    \n                        Current status of queries in the aggregateData$ observable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('filter'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:101\n                            \n                        \n\n                \n                    \n                        Current filter. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            listData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:103\n                            \n                        \n\n                \n                    \n                        Latest list query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            listDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._listDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:116\n                            \n                        \n\n                \n                    \n                        Current status of queries in the listData$ observable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ontologyTermsFullData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:98\n                            \n                        \n\n                \n                    \n                        Keeping track of all ontology terms there is data for. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            queryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:123\n                            \n                        \n\n                \n                    \n                        Current status of all queries. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            termOccurencesData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:111\n                            \n                        \n\n                \n                    \n                        Latest term occurences query data. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            termOccurencesDataQueryStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this._termOccurencesDataQueryStatus$.pipe(distinct())\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/data/data.state.ts:120\n                            \n                        \n\n                \n                    \n                        Current status of queries in the aggregateData$ observable. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, Filter, ListResult } from 'ccf-database';\nimport { combineLatest, Observable, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { distinct, map, pluck, publishReplay, refCount, switchMap, tap } from 'rxjs/operators';\n\nimport { DataSourceService } from '../../services/data-source/data-source.service';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702']\n};\n\n/** Current state of data queries. */\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n}\n\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository {\n  /** Implementation subject for listDataQueryStatus$. */\n  private readonly _listDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for termOccurencesDataQueryStatus$. */\n  private readonly _termOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$: Observable>;\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest list query data. */\n  readonly listData$ = this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest term occurences query data. */\n  readonly termOccurencesData$ = this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ));\n\n  /** Current status of queries in the listData$ observable. */\n  readonly listDataQueryStatus$ = this._listDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly termOccurencesDataQueryStatus$ = this._termOccurencesDataQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._listDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n\n    const ontologyTermsData = new ReplaySubject>(1);\n    source.getOntologyTermOccurences().subscribe(ontologyTermsData);\n    this.ontologyTermsFullData$ = ontologyTermsData;\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: Object.assign({}, this.getState().filter, filter)\n    });\n  }\n\n  /**\n   * Queries for list data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private listData(filter: Filter): ObservableInput {\n    this._listDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getListResults(filter);\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getAggregateResults(filter);\n  }\n\n  /**\n   * Queries for term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private termOccurencesData(filter: Filter): ObservableInput> {\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getOntologyTermOccurences(filter);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataStateModel.html":{"url":"interfaces/DataStateModel.html","title":"interface - DataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/data/data.state.ts\n        \n\n            \n                Description\n            \n            \n                Store data state. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:         Filter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current filter. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, Filter, ListResult } from 'ccf-database';\nimport { combineLatest, Observable, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { distinct, map, pluck, publishReplay, refCount, switchMap, tap } from 'rxjs/operators';\n\nimport { DataSourceService } from '../../services/data-source/data-source.service';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702']\n};\n\n/** Current state of data queries. */\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n}\n\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository {\n  /** Implementation subject for listDataQueryStatus$. */\n  private readonly _listDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for termOccurencesDataQueryStatus$. */\n  private readonly _termOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$: Observable>;\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest list query data. */\n  readonly listData$ = this.filter$.pipe(queryData(\n    this.listData, sendCompletedTo(this._listDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest term occurences query data. */\n  readonly termOccurencesData$ = this.filter$.pipe(queryData(\n    this.termOccurencesData, sendCompletedTo(this._termOccurencesDataQueryStatus$)\n  ));\n\n  /** Current status of queries in the listData$ observable. */\n  readonly listDataQueryStatus$ = this._listDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly termOccurencesDataQueryStatus$ = this._termOccurencesDataQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.listDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.termOccurencesDataQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._listDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n\n    const ontologyTermsData = new ReplaySubject>(1);\n    source.getOntologyTermOccurences().subscribe(ontologyTermsData);\n    this.ontologyTermsFullData$ = ontologyTermsData;\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: Object.assign({}, this.getState().filter, filter)\n    });\n  }\n\n  /**\n   * Queries for list data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private listData(filter: Filter): ObservableInput {\n    this._listDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getListResults(filter);\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getAggregateResults(filter);\n  }\n\n  /**\n   * Queries for term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private termOccurencesData(filter: Filter): ObservableInput> {\n    this._termOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.source.getOntologyTermOccurences(filter);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  { name: 'logo', namespace: 'app', url: 'assets/icons/app/hubmap-logo.svg' },\n\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n\n  // Add default icons here!\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition-1.html":{"url":"interfaces/DefaultIconDefinition-1.html","title":"interface - DefaultIconDefinition-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  { name: 'logo', namespace: 'app', url: 'assets/icons/hubmap-logo.svg' },\n\n  // Add default icons here!\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        drawers\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                    \n                                \n                                \n                                    \n                                        drawers:     [unknown, unknown]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [unknown, unknown]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged-1.html":{"url":"interfaces/DrawerContainersChanged-1.html","title":"interface - DrawerContainersChanged-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        drawers\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                    \n                                \n                                \n                                    \n                                        drawers:     [unknown, unknown]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [unknown, unknown]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized-1.html":{"url":"interfaces/DrawerInitialized-1.html","title":"interface - DrawerInitialized-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expanded\n                                \n                                \n                                        margin\n                                \n                                \n                                        opened\n                                \n                                \n                                        type\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled-1.html":{"url":"interfaces/DrawerToggled-1.html","title":"interface - DrawerToggled-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expanded\n                                \n                                \n                                        margin\n                                \n                                \n                                        opened\n                                \n                                \n                                        type\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\nexport const MessageService = GenericMessageService; // tslint:disable-line: variable-name\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n\n\n    \n        Description\n    \n    \n        Component for a dropdown menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                optionsVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChanged\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:16\n                            \n                        \n                \n                    \n                        What the component is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:21\n                            \n                        \n                \n                    \n                        Choices displayed in the dropdown menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:26\n                            \n                        \n                \n                    \n                        Current option selected.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the new selected option when selection is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:49\n                \n            \n\n\n            \n                \n                    Updates the selected value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value that has been selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleOptions\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:41\n                \n            \n\n\n            \n                \n                    Controls fade-in effect after dropdown menu opens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'invisible'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:36\n                            \n                        \n\n                \n                    \n                        Determines if menu contents are visible (used for fade-in effect).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Component for a dropdown menu.\n */\n@Component({\n  selector: 'ccf-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent {\n\n  /**\n   * What the component is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * Choices displayed in the dropdown menu.\n   */\n  @Input() options: string[];\n\n  /**\n   * Current option selected.\n   */\n  @Input() selection: string;\n\n  /**\n   * Emits the new selected option when selection is changed.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines if menu contents are visible (used for fade-in effect).\n   */\n  optionsVisible = 'invisible';\n\n  /**\n   * Controls fade-in effect after dropdown menu opens\n   */\n  toggleOptions(): void {\n    this.optionsVisible = this.optionsVisible === 'visible' ? 'invisible' : 'visible';\n  }\n\n  /**\n   * Updates the selected value.\n   * @param value The value that has been selected\n   */\n  selectionChanged(value: string): void {\n    this.selection = value;\n    this.selectionChange.emit(value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n      \n        \n          \n            {{ option }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dropdown.component.scss\n                \n                @keyframes slideInHorizontalDropdown {\n  from {\n    width: 0;\n  }\n  to {\n    width: 9.85rem;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.dropdown-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        font-size: 14px;\n        border: none;\n\n        mat-select {\n          font-size: 16px;\n          font-weight: bold;\n        }\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      background-color: black;\n      transform: none;\n      height: 2px;\n    }\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .option-panel {\n  animation: slideInHorizontalDropdown .3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  position: absolute !important;\n  top: 1.55rem;\n  max-width: 152px;\n  border-radius: 0px;\n  border-width: 1px;\n  border-style: solid;\n\n\n  .mat-option {\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    padding-left: 1em;\n  }\n\n  :last-child {\n    border-bottom: none;\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0px !important;\n}\n\n.dropdown-form-field {\n  height: 3rem;\n  width: 100%;\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n  }\n}\n\n::ng-deep .ccf-dropdown {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-.5em);\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}                                    {{ option }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dropdown/dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DropdownComponent } from './dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent]\n})\n\nexport class DropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualSliderComponent.html":{"url":"components/DualSliderComponent.html","title":"component - DualSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DualSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n\n\n    \n        Description\n    \n    \n        Component containing a button that when clicked will show a slider popover.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dual-slider\n            \n\n            \n                styleUrls\n                ./dual-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsVisible\n                            \n                            \n                                highValue\n                            \n                            \n                                    Private\n                                isSliderInitialized\n                            \n                            \n                                isSliderOpen\n                            \n                            \n                                lowValue\n                            \n                            \n                                options\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                popoverElement\n                            \n                            \n                                popoverPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializeSliderPopover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onKeyHigh\n                            \n                            \n                                onKeyLow\n                            \n                            \n                                optionsChanged\n                            \n                            \n                                sliderValueChanged\n                            \n                            \n                                toggleSliderPopover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                selection\n                            \n                            \n                                valueRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rangeLabel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:102\n                            \n                        \n\n                \n                    \n                            Creates an instance of dual slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The overlay service used to create the slider popover.\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the component's element. Used during event handling.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:41\n                            \n                        \n                \n                    \n                        Which criteria the slider is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:51\n                            \n                        \n                \n                    \n                        The current range selected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueRange\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:46\n                            \n                        \n                \n                    \n                        The lower and upper range of the slider.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:56\n                            \n                        \n                \n                    \n                        Emits the new selection range when a change is made to it.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:168\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:214\n                \n            \n\n\n            \n                \n                    Creates and initializes the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:125\n                \n            \n\n\n            \n                \n                    Updates slider options (with optionsChanged) and selection when changes detected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes that have been made to the slider properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:155\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyHigh\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyHigh(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:243\n                \n            \n\n\n            \n                \n                    Updates the slider's high pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyLow\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyLow(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:227\n                \n            \n\n\n            \n                \n                    Updates the slider's low pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionsChanged\n                        \n                        \n                    \n                \n            \n            \n                \noptionsChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:139\n                \n            \n\n\n            \n                \n                    Updates the slider options, and the slider values if necessary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sliderValueChanged\n                        \n                        \n                    \n                \n            \n            \n                \nsliderValueChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:204\n                \n            \n\n\n            \n                \n                    Handler for updates to the slider values.\nEmits the updated selection value array.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSliderPopover\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:187\n                \n            \n\n\n            \n                \n                    Toggles the visibility of the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'invisible'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:81\n                            \n                        \n\n                \n                    \n                        Determines if slider contents are visible (used for fade-in effect).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:76\n                            \n                        \n\n                \n                    \n                        Value bound to the slider's high pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isSliderInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:102\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover has been created and initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSliderOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:61\n                            \n                        \n\n                \n                    \n                        Determines whether slider popover is shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:71\n                            \n                        \n\n                \n                    \n                        Value bound to the slider's low pointer value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:66\n                            \n                        \n\n                \n                    \n                        Slider options.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            overlayRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     OverlayRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:97\n                            \n                        \n\n                \n                    \n                        Reference to the slider popover overlay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popover', {read: ElementRef, static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the popover element.\nThis is undefined until the slider popover is initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popoverPortal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CdkPortal\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CdkPortal, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the template for the slider popover.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rangeLabel\n                    \n                \n\n                \n                    \n                        getrangeLabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:86\n                                \n                            \n                    \n                        \n                                Computes the current age range for display in the button.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { Options } from 'ng5-slider';\n\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-dual-slider',\n  templateUrl: './dual-slider.component.html',\n  styleUrls: ['./dual-slider.component.scss']\n})\nexport class DualSliderComponent implements OnDestroy, OnChanges {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement: ElementRef;\n\n  /**\n   * Which criteria the slider is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * The lower and upper range of the slider.\n   */\n  @Input() valueRange: number[];\n\n  /**\n   * The current range selected.\n   */\n  @Input() selection: number[];\n\n  /**\n   * Emits the new selection range when a change is made to it.\n   */\n  @Output() selectionChange = new EventEmitter();\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options: Options;\n\n  /**\n   * Value bound to the slider's low pointer value.\n   */\n  lowValue: number;\n\n  /**\n   * Value bound to the slider's high pointer value.\n   */\n  highValue: number;\n\n  /**\n   * Determines if slider contents are visible (used for fade-in effect).\n   */\n  contentsVisible = 'invisible';\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get rangeLabel(): string {\n    const { lowValue, highValue } = this;\n    if (lowValue === highValue) {\n      return `${lowValue}`;\n    }\n    return `${lowValue}-${highValue}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of dual slider component.\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   */\n  constructor(\n    overlay: Overlay,\n    private element: ElementRef,\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'slider-pane',\n      positionStrategy\n    });\n  }\n\n  /**\n   * Updates slider options (with optionsChanged) and selection when changes detected.\n   * @param changes Changes that have been made to the slider properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.valueRange) {\n      this.optionsChanged();\n    }\n    if (changes.selection) {\n      // Detect when selection is changed and update low/high value.\n      this.lowValue = Math.min(...this.selection);\n      this.highValue = Math.max(...this.selection);\n    }\n  }\n\n  /**\n   * Updates the slider options, and the slider values if necessary.\n   */\n  optionsChanged(): void {\n    this.options = {\n      floor: this.valueRange ? this.valueRange[0] : 0,\n      ceil: this.valueRange ? this.valueRange[1] : 0,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n    this.lowValue = this.options.floor ?? 0;\n    this.highValue = this.options.ceil ?? 0;\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy(): void {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click, mouse movement, and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  // @HostListener('document:mousemove', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  @HostListener('document:touchstart', ['$event.target']) // tslint:disable-line:no-unsafe-any\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    if (!isSliderOpen) {\n      return;\n    } else if (element.nativeElement.contains(target)) {\n      return;\n    } else if (popoverElement && popoverElement.nativeElement.contains(target)) {\n      return;\n    }\n\n    this.overlayRef.detach();\n    this.isSliderInitialized = false;\n    this.isSliderOpen = false;\n    this.contentsVisible = 'invisible';\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (isSliderInitialized) {\n      this.overlayRef.detach();\n      this.isSliderInitialized = false;\n    } else if (!isSliderInitialized && !isSliderOpen) {\n      this.initializeSliderPopover();\n    }\n\n    this.contentsVisible = this.contentsVisible === 'visible' ? 'invisible' : 'visible';\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Emits the updated selection value array.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue } = this;\n\n    this.selection = [lowValue, highValue];\n    this.selectionChange.emit(this.selection);\n  }\n\n  /**\n   * Creates and initializes the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n\n  /**\n   * Updates the slider's low pointer value when Enter key is pressed.\n   * @param event Event passed into the component\n   */\n  onKeyLow(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue = Number(this.options.floor) && newValue \n    \n\n    \n        \n  \n    \n      \n         {{ options.floor }}> \n        \n      \n\n      \n      \n\n      \n         {{ options.ceil }} \n        \n      \n    \n\n    \n      \n        {{ label }}\n        {{ rangeLabel }}\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual-slider.component.scss\n                \n                .slider-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        border: none;\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      background-color: black;\n      transform: none;\n      height: 2px;\n    }\n  }\n}\n\n\n.slider-labels {\n  display: flex;\n  flex-direction: column;\n  .name-label {\n    font-size: 14px;\n  }\n\n  .range-label {\n    font-weight: bold;\n  }\n}\n\n::ng-deep .ccf-slider.wrapper {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-1.5em);\n  }\n}\n\n// Styles for the popover slider\n// NOTE: This must NOT be nested inside the wrapper/container!\n\n@keyframes slideInHorizontalSlider {\n  from {\n    width: 0;\n  }\n  to {\n    width: 20em;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .slider-pane {\n  border-width: 1px;\n  border-style: solid;\n  position: absolute !important;\n  top: -1px;\n}\n\n.ccf-slider.detached {\n  animation: slideInHorizontalSlider 0.3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 0rem;\n  height: 70px;\n  padding: .75rem; // NOTE: Use padding instead of margin!\n\n  .slider ::ng-deep {\n    visibility: hidden;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: .15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: 0.095rem - ($pointer-size / 2);\n      border-width: .1rem;\n      border-style: solid;\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    width: 32px;\n    \n    &.min {\n      margin-right: 1rem;\n    }\n    \n    &.max {\n      margin-left: 1rem;\n      align-items: flex-end;\n\n      .ceil, input {\n        text-align: right;\n      }\n    }\n\n    .floor, .ceil {\n      font-size: 14px;\n    }\n\n    input {\n      border: none;\n      width: 28px;\n      font-size: 16px;\n      font-weight: bold;\n      padding: 0;\n    }\n\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{ options.floor }}>                                          {{ options.ceil }}                                     {{ label }}        {{ rangeLabel }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualSliderModule.html":{"url":"modules/DualSliderModule.html","title":"module - DualSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    DualSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { DualSliderComponent } from './dual-slider.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    Ng5SliderModule\n  ],\n  declarations: [DualSliderComponent],\n  exports: [DualSliderComponent]\n})\nexport class DualSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtDeckProps.html":{"url":"interfaces/ExtDeckProps.html","title":"interface - ExtDeckProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtDeckProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DeckProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canvas\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Options applied during queries. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ageRange\n                                \n                                \n                                        bmiRange\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        hasSpatialEntity\n                                \n                                \n                                            Optional\n                                        highlightedEntities\n                                \n                                \n                                        ontologyTerms\n                                \n                                \n                                        sex\n                                \n                                \n                                        technologies\n                                \n                                \n                                        tmc\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                    \n                                \n                                \n                                    \n                                        ageRange:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Age range. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                    \n                                \n                                \n                                    \n                                        bmiRange:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    BMI range. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Include optional debugging information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSpatialEntity\n                                    \n                                \n                                \n                                    \n                                        hasSpatialEntity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether it has a spatial entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedEntities\n                                    \n                                \n                                \n                                    \n                                        highlightedEntities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Entities to be highlighted \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ontology terms. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:     \"Both\" | \"Male\" | \"Female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Both\" | \"Male\" | \"Female\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Gender. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Technologies. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tmc\n                                    \n                                \n                                \n                                    \n                                        tmc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    TMC. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersContentComponent.html":{"url":"components/FiltersContentComponent.html","title":"component - FiltersContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n\n\n    \n        Description\n    \n    \n        Contains components of the filters popup and handles changes in filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-content\n            \n\n            \n                styleUrls\n                ./filters-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyButtonClick\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:21\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:16\n                            \n                        \n                \n                    \n                        Determines if the filters are visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        applyFilters\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the filters to be applied\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the filter change when they happen\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \napplyButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:46\n                \n            \n\n\n            \n                \n                    Emits the current filters when the apply button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFilter(value: unknown, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:38\n                \n            \n\n\n            \n                \n                    Updates the filter object with a new key/value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be saved for the filter\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the filter to be saved at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Contains components of the filters popup and handles changes in filter settings\n */\n@Component({\n  selector: 'ccf-filters-content',\n  templateUrl: './filters-content.component.html',\n  styleUrls: ['./filters-content.component.scss']\n})\nexport class FiltersContentComponent {\n\n  /**\n   * Determines if the filters are visible\n   */\n  @Input() hidden: boolean;\n\n  /**\n   * Allows the filters to be set from outside the component\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emits the filter change when they happen\n   */\n  @Output() filtersChange = new EventEmitter>();\n\n  /**\n   * Emits the filters to be applied\n   */\n  @Output() applyFilters = new EventEmitter>();\n\n  /**\n   * Updates the filter object with a new key/value\n   * @param value The value to be saved for the filter\n   * @param key The key for the filter to be saved at\n   */\n  updateFilter(value: unknown, key: string): void {\n    this.filters = { ...this.filters, [key]: value };\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits the current filters when the apply button is clicked\n   */\n  applyButtonClick(): void {\n    this.applyFilters.emit(this.filters);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n  \n\n\n\n  \n\n\n\n  APPLY FILTERS\n\n\n    \n\n    \n                \n                    ./filters-content.component.scss\n                \n                .filter {\n  &.hidden {\n    display: none !important;\n  }\n\n  margin-top: 2em;\n}\n\n.button-container {\n  &.hidden {\n    display: none !important;\n  }\n  \n  margin-top: 2em;\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.outline-button {\n  box-shadow: 0.1rem 0.1rem 0.2rem 0rem #000000;\n  border-radius: 4px;\n  background: none;\n  border-width: 1px;\n  border-style: solid;\n  padding: 0.4em;\n  cursor: pointer;\n}\n\n.outline-button:active {\n  background: #69f0ae;\n  color: black;\n}\n\n.patient-filters {\n  display: flex;\n  width: 90%;\n\n  &.hidden {\n    display: none !important;\n  }\n\n  ccf-dual-slider {\n    margin-left: .5em;\n    width: 33%;\n  }\n\n  ccf-dropdown {\n    width: 33%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            APPLY FILTERS'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersContentModule.html":{"url":"modules/FiltersContentModule.html","title":"module - FiltersContentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CheckboxModule\n                        \n                        \n                            DropdownModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CheckboxModule } from '../../../shared/components/checkbox/checkbox.module';\nimport { DropdownModule } from '../../../shared/components/dropdown/dropdown.module';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { FiltersContentComponent } from './filters-content.component';\n\n\n@NgModule({\n  imports: [CommonModule, CheckboxModule, DropdownModule, DualSliderModule],\n  declarations: [FiltersContentComponent],\n  exports: [FiltersContentComponent]\n})\nexport class FiltersContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersPopoverComponent.html":{"url":"components/FiltersPopoverComponent.html","title":"component - FiltersPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n\n\n    \n        Description\n    \n    \n        Popover box for filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-popover\n            \n\n            \n                styleUrls\n                ./filters-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                removeBox\n                            \n                            \n                                toggleFilterVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawerExpanded\n                            \n                            \n                                filters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawerExpanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:21\n                            \n                        \n                \n                    \n                        Keeps track of whether or not the containing drawer is expanded\nBecause the styles need to change accordingly\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:15\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:26\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilters(filters: Record)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:51\n                \n            \n\n\n            \n                \n                    Emits the current filters, and hides the popover box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object containing all the currently set filters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBox\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:43\n                \n            \n\n\n            \n                \n                    Hides the filters popover box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFilterVisible\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFilterVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:36\n                \n            \n\n\n            \n                \n                    Toggles filter visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:31\n                            \n                        \n\n                \n                    \n                        Keeps track of whether or not the filters popover box is visible or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Popover box for filter settings\n */\n@Component({\n  selector: 'ccf-filters-popover',\n  templateUrl: './filters-popover.component.html',\n  styleUrls: ['./filters-popover.component.scss']\n})\nexport class FiltersPopoverComponent {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filters: Record;\n\n  /**\n   * Keeps track of whether or not the containing drawer is expanded\n   * Because the styles need to change accordingly\n   */\n  @Input() drawerExpanded: boolean;\n\n  /**\n   * Emits the current filters\n   */\n  @Output() filtersChange = new EventEmitter>();\n\n  /**\n   * Keeps track of whether or not the filters popover box is visible or not\n   */\n  filtersVisible = false;\n\n  /**\n   * Toggles filter visible\n   */\n  toggleFilterVisible(): void {\n    this.filtersVisible = !this.filtersVisible;\n  }\n\n  /**\n   * Hides the filters popover box\n   */\n  removeBox(): void {\n    this.filtersVisible = false;\n  }\n\n  /**\n   * Emits the current filters, and hides the popover box\n   * @param filters The object containing all the currently set filters\n   */\n  applyFilters(filters: Record): void {\n    this.filters = filters;\n    this.filtersChange.emit(filters);\n    this.removeBox();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./filters-popover.component.scss\n                \n                .filters-popover {\n  position: inherit;\n\n  &.expanded {\n    position: relative;\n\n    .popup-container {\n      right: inherit;\n    }\n\n    .popup-body {\n      padding-left: 4em !important;\n    }\n  }\n}\n\n.popup-container {\n  position: absolute;\n  border-width: 0px;\n  border-style: solid;\n  width: 0em;\n  height: 16.5rem; // 22.5rem\n  z-index: 5;\n  top: 0;\n  right: 24rem;\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  transition-property: width;\n  transition-duration: 0.3s;\n\n  .popup-body {\n    position: relative;\n    opacity: 0;\n    transition-property: opacity;\n    transition-duration: 0s;\n    transition-delay: 0s;\n  }\n\n  &.visible {\n    width: 35rem;\n    border-width: 1px;\n\n    .popup-body {\n      padding: 1.5rem;\n      opacity: 1;\n      transition-delay: 0.3s;\n      transition-duration: 0.3s;\n    }\n  }\n}\n\n.show-hide {\n  width: 3rem;\n  height: 3rem;\n  background: none;\n  border: none;\n  z-index: 10;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersPopoverModule.html":{"url":"modules/FiltersPopoverModule.html","title":"module - FiltersPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_imports\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FiltersContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FiltersContentModule } from '../filters-content/filters-content.module';\nimport { FiltersPopoverComponent } from './filters-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FiltersContentModule],\n  declarations: [FiltersPopoverComponent],\n  exports: [FiltersPopoverComponent]\n})\nexport class FiltersPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlatNode.html":{"url":"classes/FlatNode.html","title":"class - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/flat-node.ts\n        \n\n            \n                Description\n            \n            \n                Node type used by ontology tree component.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    expandable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(original: OntologyNode, level: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:29\n                            \n                        \n\n                \n                    \n                            Creates an instance of flat node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        original\n                                                  \n                                                        \n                                                                        OntologyNode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The original ontology node object.\n\n                                                        \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The level of the new flat node in the tree.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(original: OntologyNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:27\n                \n            \n\n\n            \n                \n                    Creates a flat node from a ontology node object and a level in the tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original ontology node object.\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The level of the new flat node in the tree.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlatNode\n\n                    \n                    \n                        The newly created flat node.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:11\n                                \n                            \n                    \n                        \n                                Gets this node's label.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expandable\n                    \n                \n\n                \n                    \n                        getexpandable()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:16\n                                \n                            \n                    \n                        \n                                Indicates whether this node has children.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { OntologyNode } from './ontology-node';\n\n\n/**\n * Node type used by ontology tree component.\n */\nexport class FlatNode {\n  /**\n   * Gets this node's label.\n   */\n  get label(): string { return this.original.label; }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean {\n    return this.original.children.length > 0;\n  }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(readonly original: OntologyNode, readonly level: number) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/core/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Header which is always displayed on the site; contains current filter info,\na link to download data, and a logo which resets the page when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hubmapPortalUrl\n                            \n                            \n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                downloadClicked\n                            \n                            \n                                refreshClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:28\n                            \n                        \n                \n                    \n                        Current filter settings\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapPortalUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:18\n                            \n                        \n                \n                    \n                        URL to Hubmap Portal site\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedIn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:23\n                            \n                        \n                \n                    \n                        Is the user logged in?\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        downloadClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:38\n                            \n                        \n                \n                    \n                        Emitted when download button is clicked\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:33\n                            \n                        \n                \n                    \n                        Emitted when refresh button is clicked\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Header which is always displayed on the site; contains current filter info,\n * a link to download data, and a logo which resets the page when clicked.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n\n  /**\n   * URL to Hubmap Portal site\n   */\n  @Input() hubmapPortalUrl: string;\n\n  /**\n   * Is the user logged in?\n   */\n  @Input() loggedIn: boolean;\n\n  /**\n   * Current filter settings\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emitted when refresh button is clicked\n   */\n  @Output() refreshClicked = new EventEmitter();\n\n  /**\n   * Emitted when download button is clicked\n   */\n  @Output() downloadClicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n  \n    Sex: {{filters?.sex}}\n    Age: {{filters?.ageRange[0]}}-{{filters?.ageRange[1]}}\n    BMI: {{filters?.bmiRange[0]}}-{{filters?.bmiRange[1]}}\n  \n\n  refresh\n\n  \n    \n      cloud_download\n    \n  \n  \n\n  Login\n  Logout\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .ccf-header {\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  display: flex;\n\n  .logo {\n    width: 6rem;\n  }\n\n  .download {\n    height: 1.5rem;\n  }\n\n  // Styled to match the HuBMAP Portal\n  .authentication {\n    width: 8.25rem;\n    border-radius: 2px;\n  }\n\n  .logo, .download, .refresh {\n    display: flex;\n    align-items: center;\n    transition: color 1s;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  :not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n\n  .filter-labels {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    font: 400 16px/20px Inter, sans-serif;\n  }\n\n  ::ng-deep ccf-info-button {\n    height: 2rem;\n    width: 2rem;\n    display: flex;\n    justify-content: center;\n    .mat-icon {\n      height: 2rem;\n      width: 2rem;\n      font-size: 2rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Sex: {{filters?.sex}}    Age: {{filters?.ageRange[0]}}-{{filters?.ageRange[1]}}    BMI: {{filters?.bmiRange[0]}}-{{filters?.bmiRange[1]}}    refresh            cloud_download          Login  Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent-1.html":{"url":"components/HeaderComponent-1.html","title":"component - HeaderComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        Page header\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of header component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-header'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                            \n                        \n\n                \n                    \n                        HTML class name \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\nimport { PageState } from '../../core/store/page/page.state';\n\n\n/**\n * Page header\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-header';\n\n  /**\n   * Creates an instance of header component.\n   *\n   * @param page Page data.\n   */\n  constructor(readonly page: PageState) { }\n}\n\n    \n\n    \n        \n\n\n\n  \n    chevron_left\n    BACK\n  \n\n\n\n  \n    \n  \n  CCF REGISTRATION USER INTERFACE\n\n\n\n\ninfo_outline\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n\n  .text {\n    font-size: 1.5rem;\n    font-weight: lighter;\n  }\n\n  .link {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  .home {\n    * {\n      transition: color 1s;\n    }\n\n    .backbutton {\n      // Material icons do not always fill the space given\n      // Scale up size for icon to look correct\n      font-size: 2.25rem;\n      width: 2.25rem;\n      height: 2.25rem;\n    }\n  }\n\n  .hubmap .logo {\n    width: 4.5rem;\n    height: 1.5rem;\n    margin-right: 1rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      chevron_left    BACK            CCF REGISTRATION USER INTERFACEinfo_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoButtonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { InfoButtonModule } from '../../modules/info/info-button/info-button.module';\nimport { HeaderComponent } from './header.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule, MatTooltipModule, InfoButtonModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition-1.html":{"url":"interfaces/IconDefinition-1.html","title":"interface - IconDefinition-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getArguments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:120\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown[]\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMethodName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:106\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerIcon\n                        \n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:72\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerIconImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:82\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState-1.html":{"url":"injectables/IconRegistryState-1.html","title":"injectable - IconRegistryState-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getArguments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:120\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown[]\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMethodName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:106\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerIcon\n                        \n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:72\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerIconImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:82\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              sanitizer: DomSanitizer) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) { return false; }\n    if (!definition.url && !definition.html) { return false; }\n\n    const registry = this.registry as unknown as { [prop: string]: (...args: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) { return false; }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) { parts.push('Set'); }\n    if (!url) { parts.push('Literal'); }\n    if (namespace) { parts.push('InNamespace'); }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url || html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IdObject.html":{"url":"interfaces/IdObject.html","title":"interface - IdObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IdObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@id' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@id' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageViewer.html":{"url":"classes/ImageViewer.html","title":"class - ImageViewer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageViewer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channelConfigs\n                            \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _loaders\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                deck\n                            \n                            \n                                    Protected\n                                layerConfigs\n                            \n                            \n                                    Protected\n                                layers\n                            \n                            \n                                    Readonly\n                                props\n                            \n                            \n                                    Protected\n                                states\n                            \n                            \n                                    Protected\n                                views\n                            \n                            \n                                    Protected\n                                vivViews\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createVivViews\n                            \n                            \n                                finalize\n                            \n                            \n                                    Private\n                                initializeDeck\n                            \n                            \n                                    Private\n                                layerFilter\n                            \n                            \n                                    Private\n                                onViewStateChange\n                            \n                            \n                                    Private\n                                resetChannelConfigs\n                            \n                            \n                                    Async\n                                setSize\n                            \n                            \n                                    Async\n                                setSources\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Async\n                                updateChannelConfigs\n                            \n                            \n                                    Protected\n                                updateDeckProps\n                            \n                            \n                                    Protected\n                                updateLayers\n                            \n                            \n                                    Protected\n                                updateState\n                            \n                            \n                                    Protected\n                                updateViews\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    sources\n                                \n                                \n                                    loaders\n                                \n                                \n                                    channelNames\n                                \n                                \n                                    channelConfigs\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: Props)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:86\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    Props\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _channelConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Loader[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayerConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Layer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            props\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            vivViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VivView[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:80\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalize\n                        \n                        \n                    \n                \n            \n            \n                \nfinalize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeDeck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDeck(props)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Deck\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            layerFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerFilter(undefined: LayerFilterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LayerFilterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewStateChange(undefined: OnViewStateChangeArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OnViewStateChangeArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChannelConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize(width: number, height: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSources(sources: DataSource[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            DataSource[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChannelConfigs(configs: Record>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Record>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateDeckProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDeckProps(props: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(args: ValueOrGenerator | >)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ValueOrGenerator | >\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n\n                \n                    \n                        getsources()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loaders\n                    \n                \n\n                \n                    \n                        getloaders()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        channelNames\n                    \n                \n\n                \n                    \n                        getchannelNames()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        channelConfigs\n                    \n                \n\n                \n                    \n                        getchannelConfigs()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-image-viewer/src/lib/image-viewer.ts:77\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerAccordionComponent.html":{"url":"components/ImageViewerAccordionComponent.html","title":"component - ImageViewerAccordionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerAccordionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts\n\n\n    \n        Description\n    \n    \n        Expandable accordion panel for the image viewer\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-accordion\n            \n\n            \n                styleUrls\n                ./image-viewer-accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layers\n                            \n                            \n                                metadata\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:30\n                            \n                        \n                \n                    \n                        Whether content is waiting to be loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:25\n                            \n                        \n                \n                    \n                        The list of layers used to render this and child components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metadata\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:20\n                            \n                        \n                \n                    \n                        Metadata of image to be displayed in the About panel\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:35\n                            \n                        \n                \n                    \n                        Output to pass up the changes made to the layers to parent components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.component.ts:38\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.  \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme } from '../../color-scheme/color-schemes';\n\n\n/**\n * Expandable accordion panel for the image viewer\n */\n@Component({\n  selector: 'ccf-image-viewer-accordion',\n  templateUrl: './image-viewer-accordion.component.html',\n  styleUrls: ['./image-viewer-accordion.component.scss']\n})\nexport class ImageViewerAccordionComponent {\n\n  /**\n   * Metadata of image to be displayed in the About panel\n   */\n  @Input() metadata: { label: string; value: string; }[];\n\n  /**\n   * The list of layers used to render this and child components\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Whether content is waiting to be loaded.\n   */\n  @Input() isLoading: boolean;\n\n  /**\n   * Output to pass up the changes made to the layers to parent components\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /** Emits when the default scheme has changed.  */\n  @Output() schemeChange = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n      Layers\n    \n    \n  \n\n  \n    \n      About\n    \n    \n      \n        {{ entry.label }}:\n        {{ entry.value }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-accordion.component.scss\n                \n                .mat-expansion-panel {\n  margin-left: 1.5rem;\n  margin-right: 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  border-radius: 0 !important;\n  position: unset;\n\n  .mat-expansion-panel-header {\n    padding: 0;\n\n    mat-panel-title {\n      font-weight: bold;\n    }\n\n    ::ng-deep .mat-expansion-indicator {\n      position: relative;\n      right: 1em;\n    }\n  }\n\n  .data-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    font-size: 0.75rem;\n\n    .data-entry {\n      display: flex;\n      text-overflow: ellipsis;\n      justify-content: center;\n      margin-bottom: .25rem;\n\n      .label,\n      .value {\n        display: flex;\n        height: 1rem;\n        line-height: 1rem;\n      }\n\n      .label {\n        justify-content: flex-end;\n        width: 50%;\n      }\n\n      .value {\n        justify-content: flex-start;\n        margin-left: 1rem;\n        width: 50%;\n        flex-wrap: wrap;\n        height: 100%;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Layers                      About                      {{ entry.label }}:        {{ entry.value }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerAccordionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerAccordionModule.html":{"url":"modules/ImageViewerAccordionModule.html","title":"module - ImageViewerAccordionModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerAccordionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerAccordionModule\n\n\n\ncluster_ImageViewerAccordionModule_declarations\n\n\n\ncluster_ImageViewerAccordionModule_imports\n\n\n\ncluster_ImageViewerAccordionModule_exports\n\n\n\n\nImageViewerAccordionComponent\n\nImageViewerAccordionComponent\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule -->\n\nImageViewerAccordionComponent->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent  -->\n\nImageViewerAccordionModule->ImageViewerAccordionComponent \n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerAccordionModule -->\n\nImageViewerLayersModule->ImageViewerAccordionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-accordion/image-viewer-accordion.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerAccordionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImageViewerLayersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerAccordionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\nimport { ImageViewerAccordionComponent } from './image-viewer-accordion.component';\nimport { ImageViewerLayersModule } from '../image-viewer-layers/image-viewer-layers.module';\n\n\n@NgModule({\n  imports: [CommonModule, MatExpansionModule, ImageViewerLayersModule],\n  declarations: [ImageViewerAccordionComponent],\n  exports: [ImageViewerAccordionComponent]\n})\nexport class ImageViewerAccordionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerContentComponent.html":{"url":"components/ImageViewerContentComponent.html","title":"component - ImageViewerContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts\n\n\n    \n        Description\n    \n    \n        Content for the image viewer sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-content\n            \n\n            \n                styleUrls\n                ./image-viewer-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                isLoading\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeViewer\n                            \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ImageViewerData\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:21\n                            \n                        \n                \n                    \n                        Image data to be displayed in the sidebar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:31\n                            \n                        \n                \n                    \n                        Whether content is waiting to be loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:26\n                            \n                        \n                \n                    \n                        The list of layers used to render this and child components\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeViewer\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:36\n                            \n                        \n                \n                    \n                        Emits closeViewer on close button click\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:41\n                            \n                        \n                \n                    \n                        Output to pass up the changes made to the layers to parent components\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:44\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.  \n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.component.ts:49\n                \n            \n\n\n            \n                \n                    Hides the viewer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ImageViewerData } from 'ccf-database';\n\nimport { ColorScheme } from '../../../core/models/color-scheme';\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\n/**\n * Content for the image viewer sidebar\n */\n@Component({\n  selector: 'ccf-image-viewer-content',\n  templateUrl: './image-viewer-content.component.html',\n  styleUrls: ['./image-viewer-content.component.scss']\n})\nexport class ImageViewerContentComponent {\n\n  /**\n   * Image data to be displayed in the sidebar\n   */\n  @Input() data: ImageViewerData;\n\n  /**\n   * The list of layers used to render this and child components\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Whether content is waiting to be loaded.\n   */\n  @Input() isLoading: boolean;\n\n  /**\n   * Emits closeViewer on close button click\n   */\n  @Output() closeViewer = new EventEmitter();\n\n  /**\n   * Output to pass up the changes made to the layers to parent components\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /** Emits when the default scheme has changed.  */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Hides the viewer\n   */\n  close(): void {\n    this.closeViewer.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n  \n  \n    {{ data.organName }}\n    {{ data.label }}\n  \n  \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-content.component.scss\n                \n                .viewer-sidebar {\n  .viewer-close-header {\n    display: flex;\n    justify-content: flex-end;\n    height: 3rem;\n    padding-right: 1.5rem;\n    padding-left: 1.5rem;\n    \n    .viewer-close-button {\n      border: none;\n      padding: 0;\n      background: inherit;\n      cursor: pointer;\n    }\n  }\n}\n  \n.sample-info {\n  padding-right: 1.5rem;\n  padding-left: 1.5rem;\n  padding-top: 1.5rem;\n  padding-bottom: 1rem;\n  \n  .sample-region {\n    font-weight: bold;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close            {{ data.organName }}    {{ data.label }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerContentModule.html":{"url":"modules/ImageViewerContentModule.html","title":"module - ImageViewerContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerContentModule\n\n\n\ncluster_ImageViewerContentModule_declarations\n\n\n\ncluster_ImageViewerContentModule_imports\n\n\n\ncluster_ImageViewerContentModule_exports\n\n\n\n\nImageViewerContentComponent\n\nImageViewerContentComponent\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerContentModule -->\n\nImageViewerContentComponent->ImageViewerContentModule\n\n\n\n\n\nImageViewerContentComponent \n\nImageViewerContentComponent \n\nImageViewerContentComponent  -->\n\nImageViewerContentModule->ImageViewerContentComponent \n\n\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerContentModule -->\n\nImageViewerAccordionModule->ImageViewerContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-content/image-viewer-content.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ImageViewerAccordionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ImageViewerAccordionModule } from '../image-viewer-accordion/image-viewer-accordion.module';\nimport { ImageViewerContentComponent } from './image-viewer-content.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, ImageViewerAccordionModule],\n  declarations: [ImageViewerContentComponent],\n  exports: [ImageViewerContentComponent]\n})\nexport class ImageViewerContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageViewerData.html":{"url":"interfaces/ImageViewerData.html","title":"interface - ImageViewerData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageViewerData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Data for image viewer display. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        metadata\n                                \n                                \n                                        organName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Other metadata. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Containing organ name. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageViewerLayer.html":{"url":"classes/ImageViewerLayer.html","title":"class - ImageViewerLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageViewerLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/image-viewer-layer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PureImageViewerLayer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brightness\n                            \n                            \n                                color\n                            \n                            \n                                colorScheme\n                            \n                            \n                                customizedColor\n                            \n                            \n                                defaultOrder\n                            \n                            \n                                id\n                            \n                            \n                                label\n                            \n                            \n                                selected\n                            \n                            \n                                selectionOrder\n                            \n                            \n                                transparency\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrightness\n                            \n                            \n                                isDark\n                            \n                            \n                                isLight\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    background\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ImageViewerLayerArgs)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ImageViewerLayerArgs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            brightness\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [number, number]\n\n                        \n                    \n                    \n                        \n                            Default value : [20, 60]\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorScheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ColorScheme\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customizedColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectionOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transparency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrightness\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrightness()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:70\n                \n            \n\n\n            \n                \n                    Converts the layer's hex color code to RGB and calculates a value for the color brightness\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDark\n                        \n                        \n                    \n                \n            \n            \n                \nisDark()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:102\n                \n            \n\n\n            \n                \n                    Determines whether the color icon is dark enough to require a border (dark mode only)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLight\n                        \n                        \n                    \n                \n            \n            \n                \nisLight()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:95\n                \n            \n\n\n            \n                \n                    Determines whether the color icon is light enough to require a border (light mode only)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n\n                \n                    \n                        getbackground()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/image-viewer-layer.ts:47\n                                \n                            \n                    \n                        \n                                Dynamically creates a background style based on the layer's color or color scheme\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ColorScheme } from './color-scheme';\n\nexport interface PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number];\n  transparency: number;\n\n  selected: boolean;\n  customizedColor: boolean;\n  selectionOrder: number;\n  defaultOrder: number;\n}\n\nexport type ImageViewerLayerRequiredArgNames = 'id' | 'colorScheme';\nexport type ImageViewerLayerArgs =\n  Pick &\n  Partial>;\n\nexport class ImageViewerLayer implements PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number] = [20, 60];\n  transparency = 100;\n\n  selected = false;\n  customizedColor = false;\n  selectionOrder = 0;\n  defaultOrder = -1;\n\n  constructor(data: ImageViewerLayerArgs) {\n    Object.assign(this, {\n      label: data.id,\n      color: data.colorScheme.colors[0]\n    }, data);\n  }\n\n  /**\n   * Dynamically creates a background style based on the layer's color or color scheme\n   */\n  get background(): string {\n    if (this.colorScheme.type === 'discrete') {\n      return this.color;\n    }\n\n    const colors = this.colorScheme.colors;\n    const positions = this.colorScheme.positions;\n\n    let gradient = 'linear-gradient(to right, ';\n    colors.forEach((color, index) => {\n      gradient += `${color} ${positions[index] * 100}%`;\n      if (index  225 ? true : false;\n  }\n\n  /**\n   * Determines whether the color icon is dark enough to require a border (dark mode only)\n   */\n  isDark(): boolean {\n    return this.getBrightness() \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerLayersComponent.html":{"url":"components/ImageViewerLayersComponent.html","title":"component - ImageViewerLayersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerLayersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts\n\n\n    \n        Description\n    \n    \n        Component in charge of rendering list of the image layers along with the ability\nto choose which ones are to be showm and what display properties they have.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-layers\n            \n\n            \n                styleUrls\n                ./image-viewer-layers.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-layers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxOnChange\n                            \n                            \n                                layerChanged\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                layerChange\n                            \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:26\n                            \n                        \n                \n                    \n                        Whether content is waiting to be loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     ImageViewerLayer[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:21\n                            \n                        \n                \n                    \n                        The list of layers to be displayed which contain the styilng properties needed\nto make rendering decisions.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        layerChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:31\n                            \n                        \n                \n                    \n                        A sorted list of selected layers containing information such as selectionOrder and colorScheme.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:36\n                            \n                        \n                \n                    \n                        Emits when the default scheme has changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkboxOnChange\n                        \n                        \n                    \n                \n            \n            \n                \ncheckboxOnChange(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:54\n                \n            \n\n\n            \n                \n                    Function in charge of handling the layers' checkbox change events.  It keeps track of layers' selected\nand selectionOrder properties as well as emitting the updated layer list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the layer that needs updating based on the event passed with it.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            layerChanged\n                        \n                        \n                    \n                \n            \n            \n                \nlayerChanged(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:67\n                \n            \n\n\n            \n                \n                    This method captures changes to a layer's color options and updates the layers list accordingly\nbefore emitting the new set of active layers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the updated layer object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackById\n                        \n                        \n                    \n                \n            \n            \n                \ntrackById(layer: ImageViewerLayer)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.component.ts:44\n                \n            \n\n\n            \n                \n                    Used by ngFor to track changes across ImageViewerLayer instances.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    layer\n                                    \n                                                ImageViewerLayer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The layer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The layer's unique id.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\nimport { ColorScheme } from '../../color-scheme/color-schemes';\n\n\n/**\n * Component in charge of rendering list of the image layers along with the ability\n * to choose which ones are to be showm and what display properties they have.\n */\n@Component({\n  selector: 'ccf-image-viewer-layers',\n  templateUrl: './image-viewer-layers.component.html',\n  styleUrls: ['./image-viewer-layers.component.scss']\n})\nexport class ImageViewerLayersComponent {\n  /**\n   * The list of layers to be displayed which contain the styilng properties needed\n   * to make rendering decisions.\n   */\n  @Input() layers: ImageViewerLayer[];\n\n  /**\n   * Whether content is waiting to be loaded.\n   */\n  @Input() isLoading: boolean;\n\n  /**\n   * A sorted list of selected layers containing information such as selectionOrder and colorScheme.\n   */\n  @Output() layerChange = new EventEmitter();\n\n  /**\n   * Emits when the default scheme has changed.\n   */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Used by ngFor to track changes across ImageViewerLayer instances.\n   *\n   * @param layer The layer.\n   * @returns The layer's unique id.\n   */\n  trackById(layer: ImageViewerLayer): string {\n    return layer.id;\n  }\n\n  /**\n   * Function in charge of handling the layers' checkbox change events.  It keeps track of layers' selected\n   * and selectionOrder properties as well as emitting the updated layer list.\n   * @param event contains whether or not the layer was selected or unselected.\n   * @param layer is the layer that needs updating based on the event passed with it.\n   */\n  checkboxOnChange(layer: ImageViewerLayer): void {\n    this.layerChange.emit(new ImageViewerLayer({\n      ...layer,\n      selected: !layer.selected\n    }));\n  }\n\n  /**\n   * This method captures changes to a layer's color options and updates the layers list accordingly\n   * before emitting the new set of active layers.\n   * @param layer the updated layer object.\n   * @param referenceLayer the layer object before the changes, used for referencing which layer in the list to update.\n   */\n  layerChanged(layer: ImageViewerLayer): void {\n    this.layerChange.emit(layer);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n\n    \n      \n        \n          {{ layer.label }}\n        \n        \n        \n      \n    \n  \n  \n    \n      RGB Images are not customizable.\n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-layers.component.scss\n                \n                :host {\n  .layer {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 1.5rem;\n  }\n\n  .hidden {\n    visibility: hidden !important;\n  }\n\n  .color-selector-placeholder {\n    height: 1rem;\n    width: 1rem;\n    border-radius: 100%;\n  }\n\n  .no-layers-text {\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ layer.label }}                                                RGB Images are not customizable.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerLayersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerLayersModule.html":{"url":"modules/ImageViewerLayersModule.html","title":"module - ImageViewerLayersModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerLayersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerLayersModule\n\n\n\ncluster_ImageViewerLayersModule_declarations\n\n\n\ncluster_ImageViewerLayersModule_imports\n\n\n\ncluster_ImageViewerLayersModule_exports\n\n\n\n\nImageViewerLayersComponent\n\nImageViewerLayersComponent\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerLayersModule -->\n\nImageViewerLayersComponent->ImageViewerLayersModule\n\n\n\n\n\nImageViewerLayersComponent \n\nImageViewerLayersComponent \n\nImageViewerLayersComponent  -->\n\nImageViewerLayersModule->ImageViewerLayersComponent \n\n\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nImageViewerLayersModule -->\n\nColorPickerLauncherModule->ImageViewerLayersModule\n\n\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nImageViewerLayersModule -->\n\nSchemeDropdownModule->ImageViewerLayersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-layers/image-viewer-layers.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerLayersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorPickerLauncherModule\n                        \n                        \n                            SchemeDropdownModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerLayersComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ImageViewerLayersComponent } from './image-viewer-layers.component';\nimport { SchemeDropdownModule } from '../../scheme-dropdown/scheme-dropdown.module';\nimport { ColorPickerLauncherModule } from '../../color-scheme/color-picker-launcher/color-picker-launcher.module';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule, ColorPickerLauncherModule, SchemeDropdownModule],\n  declarations: [ImageViewerLayersComponent],\n  exports: [ImageViewerLayersComponent]\n})\nexport class ImageViewerLayersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerLegendComponent.html":{"url":"components/ImageViewerLegendComponent.html","title":"component - ImageViewerLegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerLegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts\n\n\n    \n        Description\n    \n    \n        Legend in the image viewer displaying the selected layers and their colors\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-legend\n            \n\n            \n                styleUrls\n                ./image-viewer-legend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _layers\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    layers\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:18\n                            \n                        \n                \n                    \n                        The list of layers used to render this components\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ImageViewerLayer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n\n                \n                    \n                        getlayers()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:21\n                                \n                            \n\n                \n                    \n                        setlayers(layers: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.component.ts:18\n                                \n                            \n                    \n                        \n                                The list of layers used to render this components\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layers\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n/**\n * Legend in the image viewer displaying the selected layers and their colors\n */\n@Component({\n  selector: 'ccf-image-viewer-legend',\n  templateUrl: './image-viewer-legend.component.html',\n  styleUrls: ['./image-viewer-legend.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageViewerLegendComponent {\n  /**\n   * The list of layers used to render this components\n   */\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set layers(layers: ImageViewerLayer[]) {\n    this._layers = [...layers].sort((v1, v2) => v1.selectionOrder - v2.selectionOrder);\n  }\n  get layers(): ImageViewerLayer[] { return this._layers; }\n  private _layers: ImageViewerLayer[];\n}\n\n    \n\n    \n        \n  \n    \n    {{ layer.label }}\n  \n\n\n    \n\n    \n                \n                    ./image-viewer-legend.component.scss\n                \n                .legend {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  height: 3rem;\n\n  .legend-item {\n    margin-right: 1rem;\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .item-color {\n      margin-right: 1rem;\n      height: 1rem;\n      width: 1rem;\n    }\n\n    .item-title {\n      font-size: 14px;\n      display: flex;\n      align-items: center;\n    }\n  }\n}\n\n.circle {\n  border-radius: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ layer.label }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerLegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerLegendModule.html":{"url":"modules/ImageViewerLegendModule.html","title":"module - ImageViewerLegendModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerLegendModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerLegendModule\n\n\n\ncluster_ImageViewerLegendModule_declarations\n\n\n\ncluster_ImageViewerLegendModule_exports\n\n\n\n\nImageViewerLegendComponent\n\nImageViewerLegendComponent\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerLegendModule -->\n\nImageViewerLegendComponent->ImageViewerLegendModule\n\n\n\n\n\nImageViewerLegendComponent \n\nImageViewerLegendComponent \n\nImageViewerLegendComponent  -->\n\nImageViewerLegendModule->ImageViewerLegendComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-legend/image-viewer-legend.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerLegendComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerLegendComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageViewerLegendComponent } from './image-viewer-legend.component';\n\n\n\n@NgModule({\n  declarations: [ImageViewerLegendComponent],\n  imports: [CommonModule],\n  exports: [ImageViewerLegendComponent]\n})\nexport class ImageViewerLegendModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerModule.html":{"url":"modules/ImageViewerModule.html","title":"module - ImageViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerModule\n\n\n\ncluster_ImageViewerModule_imports\n\n\n\ncluster_ImageViewerModule_exports\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nImageViewerModule -->\n\nImageViewerContentModule->ImageViewerModule\n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerModule -->\n\nImageViewerLayersModule->ImageViewerModule\n\n\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerModule -->\n\nImageViewerPopoverModule->ImageViewerModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerModule -->\n\nViewerModule->ImageViewerModule\n\n\n\n\n\nImageViewerContentModule \n\nImageViewerContentModule \n\nImageViewerContentModule  -->\n\nImageViewerModule->ImageViewerContentModule \n\n\n\n\n\nImageViewerLayersModule \n\nImageViewerLayersModule \n\nImageViewerLayersModule  -->\n\nImageViewerModule->ImageViewerLayersModule \n\n\n\n\n\nImageViewerPopoverModule \n\nImageViewerPopoverModule \n\nImageViewerPopoverModule  -->\n\nImageViewerModule->ImageViewerPopoverModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLayersModule\n                        \n                        \n                            ImageViewerPopoverModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLayersModule\n                        \n                        \n                            ImageViewerPopoverModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { ImageViewerContentModule } from './image-viewer-content/image-viewer-content.module';\nimport { ImageViewerLayersModule } from './image-viewer-layers/image-viewer-layers.module';\nimport { ImageViewerPopoverModule } from './image-viewer-popover/image-viewer-popover.module';\nimport { ViewerModule } from './viewer/viewer.module';\n\n\n@NgModule({\n  imports: [ImageViewerPopoverModule, ImageViewerContentModule, ViewerModule, ImageViewerLayersModule],\n  providers: [],\n  declarations: [],\n  exports: [ImageViewerPopoverModule, ImageViewerContentModule, ImageViewerLayersModule]\n})\nexport class ImageViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageViewerPopoverComponent.html":{"url":"components/ImageViewerPopoverComponent.html","title":"component - ImageViewerPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageViewerPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts\n\n\n    \n        Description\n    \n    \n        Popup that displays detailed information on a selected image along with viewing options\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-image-viewer-popover\n            \n\n            \n                styleUrls\n                ./image-viewer-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./image-viewer-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                isLoading\n                            \n                            \n                                result\n                            \n                            \n                                sourceUrls\n                            \n                            \n                                viewerVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                onChannelsChange\n                            \n                            \n                                open\n                            \n                            \n                                    Private\n                                setSourceUrls\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(state: ViewerState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:57\n                            \n                        \n\n                \n                    \n                            Initializes the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        ViewerState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The image viewer state.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to this components change detector.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:70\n                \n            \n\n\n            \n                \n                    Returns viewer to closed state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChannelsChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChannelsChange(channels: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channels\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(data: ImageViewerData, result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:79\n                \n            \n\n\n            \n                \n                    Changes viewer to opened state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ImageViewerData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data of the image to be passed into the viewer\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSourceUrls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSourceUrls(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:99\n                \n            \n\n\n            \n                \n                    Sets the source urls from the currently active data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active data.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EMPTY_DATA\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:37\n                            \n                        \n\n                \n                    \n                        Data of the image to be passed into the viewer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:52\n                            \n                        \n\n                \n                    \n                        Whether data is currently loading.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EMPTY_RESULT\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:42\n                            \n                        \n\n                \n                    \n                        Currently active result.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceUrls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:47\n                            \n                        \n\n                \n                    \n                        Urls to load image data from.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewerVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.component.ts:57\n                            \n                        \n\n                \n                    \n                        Whether or not the image viewer is visible\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ImageViewerData, ListResult } from 'ccf-database';\n\nimport { ViewerState } from '../../../core/store/viewer/viewer.state';\n\n\nconst EMPTY_DATA: ImageViewerData = {\n  '@id': '',\n  '@type': 'ImageViewerData',\n  id: '',\n  label: '',\n  organName: '',\n  metadata: []\n};\n\nconst EMPTY_RESULT: ListResult = {\n  '@id': '',\n  '@type': 'ListResult',\n  id: '',\n  label: ''\n};\n\n\n/**\n * Popup that displays detailed information on a selected image along with viewing options\n */\n@Component({\n  selector: 'ccf-image-viewer-popover',\n  templateUrl: './image-viewer-popover.component.html',\n  styleUrls: ['./image-viewer-popover.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageViewerPopoverComponent {\n  /**\n   * Data of the image to be passed into the viewer\n   */\n  data = EMPTY_DATA;\n\n  /**\n   * Currently active result.\n   */\n  result = EMPTY_RESULT;\n\n  /**\n   * Urls to load image data from.\n   */\n  sourceUrls: string[] = [];\n\n  /**\n   * Whether data is currently loading.\n   */\n  isLoading = true;\n\n  /**\n   * Whether or not the image viewer is visible\n   */\n  viewerVisible = false;\n\n  /**\n   * Initializes the component.\n   *\n   * @param state The image viewer state.\n   * @param cdr Reference to this components change detector.\n   */\n  constructor(readonly state: ViewerState, private readonly cdr: ChangeDetectorRef) { }\n\n  /**\n   * Returns viewer to closed state\n   */\n  close(): void {\n    this.viewerVisible = false;\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Changes viewer to opened state\n   * @param data Data of the image to be passed into the viewer\n   */\n  open(data: ImageViewerData, result: ListResult): void {\n    this.viewerVisible = true;\n    this.data = data;\n    this.result = result;\n    this.isLoading = true;\n    this.setSourceUrls(result);\n    this.cdr.markForCheck();\n  }\n\n  onChannelsChange(channels: string[]): void {\n    this.isLoading = false;\n    this.state.createLayers(channels);\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Sets the source urls from the currently active data.\n   *\n   * @param result The active data.\n   */\n  private setSourceUrls(result: ListResult): void {\n    const { resultType, resultUrl } = result;\n    if (resultType !== 'image_viewer' || resultUrl === undefined) {\n      this.sourceUrls = [];\n    } else {\n      this.sourceUrls = [resultUrl];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n    \n  \n  \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./image-viewer-popover.component.scss\n                \n                .image-viewer-container {\n  position: fixed;\n  top: 4rem;\n  overflow: hidden;\n  z-index: 10;\n  flex-grow: 1;\n  height: calc(100% - 1.5rem);\n  width: 100%;\n  left: 100%;\n  transition-property: left;\n  transition-duration: .5s;\n  transition-timing-function: ease-in-out;\n\n  &.expanded {\n    left: 0%;\n  }\n\n  .image-viewer-window {\n    margin-top: 1.5rem;\n    height: calc(100% - 2rem);\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .viewer {\n      width: 100%;\n      height: calc(100% - 8rem);\n      margin-left: 1.5rem;\n    }\n\n    .legend {\n      width: 100%;\n      height: 3.5rem;\n      margin-top: 1.5rem;\n      margin-left: 1.5rem;\n    }\n  }\n\n  .image-viewer-drawer {\n    width: 25.5rem;\n    margin: 0 1.5rem;\n\n    .drawer-icons {\n      display: flex;\n\n      .button {\n        width: 3rem;\n        height: 3rem;\n        color: #9e9e9e;\n        background: none;\n        border: none;\n        cursor: pointer;\n        outline: none;\n\n        :hover {\n          color: #1e88e5;\n        }\n\n        mat-icon {\n          font-size: 2.2rem;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImageViewerPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImageViewerPopoverModule.html":{"url":"modules/ImageViewerPopoverModule.html","title":"module - ImageViewerPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    ImageViewerPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImageViewerPopoverModule\n\n\n\ncluster_ImageViewerPopoverModule_declarations\n\n\n\ncluster_ImageViewerPopoverModule_imports\n\n\n\ncluster_ImageViewerPopoverModule_exports\n\n\n\n\nImageViewerPopoverComponent\n\nImageViewerPopoverComponent\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule -->\n\nImageViewerPopoverComponent->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent  -->\n\nImageViewerPopoverModule->ImageViewerPopoverComponent \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nImageViewerPopoverModule -->\n\nDrawerModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerPopoverModule -->\n\nImageViewerContentModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerPopoverModule -->\n\nImageViewerLegendModule->ImageViewerPopoverModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerPopoverModule -->\n\nViewerModule->ImageViewerPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/image-viewer-popover/image-viewer-popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImageViewerPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DrawerModule\n                        \n                        \n                            ImageViewerContentModule\n                        \n                        \n                            ImageViewerLegendModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImageViewerPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DrawerModule } from '../../../shared/components/drawer/drawer.module';\nimport { ImageViewerContentModule } from '../image-viewer-content/image-viewer-content.module';\nimport { ImageViewerLegendModule } from '../image-viewer-legend/image-viewer-legend.module';\nimport { ViewerModule } from '../viewer/viewer.module';\nimport { ImageViewerPopoverComponent } from './image-viewer-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, ImageViewerContentModule, DrawerModule, ViewerModule, ImageViewerLegendModule],\n  declarations: [ImageViewerPopoverComponent],\n  exports: [ImageViewerPopoverComponent]\n})\nexport class ImageViewerPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageViewerProps.html":{"url":"interfaces/ImageViewerProps.html","title":"interface - ImageViewerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageViewerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/image-viewer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canvas\n                                \n                                \n                                            Optional\n                                        channelNames\n                                \n                                \n                                            Optional\n                                        defaultChannelConfig\n                                \n                                \n                                            Optional\n                                        height\n                                \n                                \n                                        id\n                                \n                                \n                                        initialViewState\n                                \n                                \n                                            Optional\n                                        sources\n                                \n                                \n                                            Optional\n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                    \n                                \n                                \n                                    \n                                        canvas:     HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLCanvasElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelNames\n                                    \n                                \n                                \n                                    \n                                        channelNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultChannelConfig\n                                    \n                                \n                                \n                                    \n                                        defaultChannelConfig:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialViewState\n                                    \n                                \n                                \n                                    \n                                        initialViewState:         State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sources\n                                    \n                                \n                                \n                                    \n                                        sources:     DataSource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DataSource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Deck, Layer, View, Viewport } from '@deck.gl/core';\nimport { Loader, VivView } from '@hubmap/vitessce-image-viewer';\nimport { bind } from 'bind-decorator';\n\nimport { createLoader, LoaderType, OMEZarrInfo, TiffInfo, ZarrInfo } from './loader';\nimport { flatMap, getVivId } from './utils';\n\n\ntype ValueOrGenerator = T | ((...args: U) => T);\n\ntype DeckProps = ConstructorParameters[0];\ninterface ExtDeckProps extends DeckProps {\n  canvas?: string | HTMLElement;\n}\n\ntype DeckCallbackArgs = Parameters>[0];\ntype LayerFilterArgs = DeckCallbackArgs;\ntype OnViewStateChangeArgs = DeckCallbackArgs & { viewId: string };\n\nexport type State = Record;\nexport type LayerConfig = Record;\n\nexport interface ChannelConfig {\n  active: boolean;\n  color: [number, number, number];\n  slider: [number, number];\n}\n\nexport interface DataSource {\n  type: LoaderType;\n  info: ZarrInfo | OMEZarrInfo | TiffInfo;\n}\n\nexport interface ImageViewerProps {\n  id: string;\n  initialViewState: State;\n  canvas?: HTMLCanvasElement;\n  width?: number;\n  height?: number;\n  sources?: DataSource[];\n  channelNames?: string[];\n  defaultChannelConfig?: Partial;\n}\n\nfunction applyPropDefaults(props: Props): Props & Required {\n  return {\n    canvas: null,\n    width: 0,\n    height: 0,\n    sources: [],\n    channelNames: [],\n    ...props,\n    defaultChannelConfig: {\n      active: true,\n      color: [255, 255, 255],\n      slider: [1500, 20000],\n      ...(props.defaultChannelConfig ?? {})\n    }\n  };\n}\n\n\nexport abstract class ImageViewer {\n  readonly props: Props & Required;\n\n  get width(): number { return this._width; }\n  get height(): number { return this._height; }\n  private _width: number;\n  private _height: number;\n\n  get sources(): DataSource[] { return this._sources; }\n  get loaders(): Loader[] { return this._loaders; }\n  private _sources: DataSource[] = [];\n  private _loaders: Loader[] = [];\n\n  get channelNames(): string[] { return Object.keys(this.channelConfigs); }\n  get channelConfigs(): Record { return this._channelConfigs; }\n  private _channelConfigs: Record = {};\n\n  protected vivViews: VivView[] = [];\n  protected views: View[] = [];\n  protected layers: Layer[] = [];\n  protected layerConfigs: LayerConfig[] = [];\n  protected states: Record = {};\n\n  private deck: Deck;\n\n  constructor(props: Props) {\n    const reqProps = this.props = applyPropDefaults(props);\n    this.deck = this.initializeDeck(reqProps);\n    this._width = reqProps.width;\n    this._height = reqProps.height;\n\n    if (reqProps.sources.length > 0) {\n      this.setSources(reqProps.sources);\n    }\n  }\n\n  clear(): void {\n    this._sources = [];\n    this._loaders = [];\n    this._channelConfigs = {};\n    this.vivViews = [];\n    this.layers = [];\n    this.layerConfigs = [];\n    this.states = {};\n    this.update();\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  async setSize(width: number, height: number): Promise {\n    this._width = width;\n    this._height = height;\n    this.vivViews = await this.createVivViews();\n\n    this.updateState((view, current) => ({\n      viewState: {\n        ...current,\n        width,\n        height,\n        id: view.id\n      }\n    }));\n    this.update();\n    this.deck.redraw(true);\n\n    return this;\n  }\n\n  async setSources(sources: DataSource[]): Promise {\n    const loaderPromises = sources.map(source => createLoader(source.type, source.info));\n    const loaders = await Promise.all(loaderPromises);\n\n    this._sources = sources;\n    this._loaders = loaders;\n    this.resetChannelConfigs();\n    this.vivViews = await this.createVivViews();\n    this.layerConfigs = await this.createLayerConfigs();\n    this.updateState(view => ({ viewState: view.initialViewState }));\n    this.update();\n\n    return this;\n  }\n\n  async updateChannelConfigs(configs: Record>): Promise {\n    const newConfigs = Object.entries(configs).reduce((result, [key, config]) => {\n      return !(key in result) ? result : {\n        ...result,\n        [key]: {\n          ...result[key],\n          ...config\n        }\n      };\n    }, this.channelConfigs);\n\n    if (newConfigs === this.channelConfigs) { return this; }\n\n    this._channelConfigs = newConfigs;\n    this.layerConfigs = await this.createLayerConfigs();\n    this.update();\n\n    return this;\n  }\n\n  protected abstract async createVivViews(): Promise;\n  protected abstract async createLayerConfigs(): Promise;\n\n  protected update(): void {\n    this.updateViews();\n    this.updateLayers();\n    this.updateDeckProps({\n      views: this.views,\n      layers: this.layers,\n      viewState: this.states\n    });\n  }\n\n  protected updateViews(): void {\n    this.views = this.vivViews.map(viv => viv.getDeckGlView());\n  }\n\n  protected updateLayers(): void {\n    const { vivViews, states, layerConfigs } = this;\n    const length = layerConfigs.length;\n\n    this.layers = flatMap(vivViews, (view, index) => view.getLayers({\n      viewStates: states,\n      props: layerConfigs[index % length]\n    }));\n  }\n\n  protected updateState(\n    args: ValueOrGenerator, [VivView, State]>\n  ): void {\n    const argsGenerator = typeof args === 'function' ? args : () => args;\n    const currentStates = this.states;\n\n    this.states = this.vivViews.reduce((states, view) => {\n      const current = currentStates[view.id] ?? {};\n      states[view.id] = view.filterViewState(argsGenerator(view, current));\n      return states;\n    }, {} as Record);\n  }\n\n  protected updateDeckProps(props: Partial): void {\n    this.deck.setProps(props);\n  }\n\n  private initializeDeck(props: Props & Required): Deck {\n    const { id, canvas, width, height } = props;\n    return new Deck({\n      id,\n      canvas,\n      width,\n      height,\n      views: [],\n      layers: [],\n      effects: [],\n      viewState: {},\n      layerFilter: this.layerFilter,\n      onViewStateChange: this.onViewStateChange,\n      glOptions: {\n        webgl2: true\n      }\n    } as ExtDeckProps);\n  }\n\n  private resetChannelConfigs(): void {\n    const { loaders, props: { channelNames, defaultChannelConfig } } = this;\n    const keys = channelNames.length > 0 ?\n      channelNames :\n      flatMap(loaders, loader => loader.channelNames ?? []);\n\n    this._channelConfigs = keys.reduce((configs, key) => ({\n      ...configs,\n      [key]: defaultChannelConfig as ChannelConfig\n    }), {} as Record);\n  }\n\n  @bind\n  private layerFilter({ layer, viewport }: LayerFilterArgs): boolean {\n    const { id: viewportId } = viewport as Viewport & { id: string };\n    return layer.id.includes(getVivId(viewportId));\n  }\n\n  @bind\n  private onViewStateChange({ viewId, viewState, oldViewState }: OnViewStateChangeArgs): void {\n    this.updateState((_view, current) => ({\n      viewState: { ...viewState, id: viewId },\n      oldViewState,\n      currentViewState: current\n    }));\n    this.update();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/info/info-button/info-button.component.ts\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/info/info-button/info-button.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            launchInfoDialog\n                        \n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/info/info-button/info-button.component.ts:26\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent {\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(): void {\n    this.dialog.open(InfoDialogComponent, {\n      width: '60em',\n      data: {}\n    });\n  }\n}\n\n    \n\n    \n        \n  info_outline\n\n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info {\n  cursor: pointer;\n  transition: color 1s;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  info_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/info/info-button/info-button.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: unknown)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:27\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:21\n                            \n                        \n\n                \n                    \n                        Data being injected into the dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                        A reference to the dialog that this component creates, used to call the dialog's methods\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent {\n  /**\n   * Creates an instance of info dialog component.\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown\n  ) { }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      HuBMAP\n      The Human Biomolecular Atlas Project\n\n      \n        \n          The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis\n          technologies, computational tools, and generate foundational tissue maps in order to accelerate the\n          construction of an atlas of the human body at single-cell resolution for understanding the relationship\n          between tissue organization and function.\n          \n          https://hubmapconsortium.org\n        \n\n        Common Coordinate Framework (CCF)\n        \n          The HuBMAP common coordinate framework (CCF) is under active development. It aims to semantically annotate and\n          spatially index HuBMAP data for efficient spatial and semantic search, browsing, and filtering. The CCF v1.0.0\n          became available in June 2020. The CCF Ontology is available as an OWL file,\n          on GitHub, and\n          on BioPortal. For\n          documentation, see CCF Portal and preprint of CCF\n          Ontology publication on arxiv.\n        \n\n        CCF Exploration User Interface (EUI)\n        \n          The CCF Exploration User Interface (EUI) represents data across multiple scales, supporting navigation by\n          multiple coordinate systems, including spatial, physiologic, and organ-based browsing. The first\n          proof-of-concept user interface for the CCF v1.0.0 became available in June 2020. The EUI continues to evolve\n          as more data becomes available. The CCF EUI code is available\n          on GitHub.\n          A demo video is on YouTube.\n        \n\n        Acknowledgements\n        \n          The CCF work is under active development by the Indiana University Mapping Component as part of the HuBMAP\n          HIVE effort with expert input by the HuBMAP team. Data was provided by the HuBMAP Tissue Mapping Centers. This\n          research is funded by the NIH Common Fund through the Office of Strategic Coordination/Office of the NIH\n          Director under award OT2OD026671, by the NIDDK Kidney Precision Medicine Project grant U2CDK114886, and the\n          NIH National Institute of Allergy and Infectious Diseases (NIAID), Department of Health and Human Services\n          under BCBB Support Services Contract HHSN316201300006W/HHSN27200002.\n        \n      \n\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.ccf-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n      background-color: white;\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .heading {\n      margin-bottom: 0;\n      font-size: 0.875rem;\n      font-weight: bold;\n    }\n\n    .close {\n      .close-icon {\n        float: right;\n        margin-top: 1rem;\n        margin-right: 1rem;\n        cursor: pointer;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin-bottom: 0;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .footer {\n      padding-top: 1.5rem;\n      .nih-logo {\n        height: 2.25rem;\n        display: block;\n        margin: auto;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              HuBMAP      The Human Biomolecular Atlas Project                        The Human Biomolecular Atlas Project (HuBMAP) will develop the next generation of molecular analysis          technologies, computational tools, and generate foundational tissue maps in order to accelerate the          construction of an atlas of the human body at single-cell resolution for understanding the relationship          between tissue organization and function.                    https://hubmapconsortium.org                Common Coordinate Framework (CCF)                  The HuBMAP common coordinate framework (CCF) is under active development. It aims to semantically annotate and          spatially index HuBMAP data for efficient spatial and semantic search, browsing, and filtering. The CCF v1.0.0          became available in June 2020. The CCF Ontology is available as an OWL file,          on GitHub, and          on BioPortal. For          documentation, see CCF Portal and preprint of CCF          Ontology publication on arxiv.                CCF Exploration User Interface (EUI)                  The CCF Exploration User Interface (EUI) represents data across multiple scales, supporting navigation by          multiple coordinate systems, including spatial, physiologic, and organ-based browsing. The first          proof-of-concept user interface for the CCF v1.0.0 became available in June 2020. The EUI continues to evolve          as more data becomes available. The CCF EUI code is available          on GitHub.          A demo video is on YouTube.                Acknowledgements                  The CCF work is under active development by the Indiana University Mapping Component as part of the HuBMAP          HIVE effort with expert input by the HuBMAP team. Data was provided by the HuBMAP Tissue Mapping Centers. This          research is funded by the NIH Common Fund through the Office of Strategic Coordination/Office of the NIH          Director under award OT2OD026671, by the NIDDK Kidney Precision Medicine Project grant U2CDK114886, and the          NIH National Institute of Allergy and Infectious Diseases (NIAID), Department of Health and Human Services          under BCBB Support Services Contract HHSN316201300006W/HHSN27200002.                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deferred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Promise(resolve => this.resolve = resolve)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                            \n                        \n\n                \n                    \n                        Promise used to await on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:33\n                            \n                        \n\n                \n                    \n                        Whether this state is true or false. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                            \n                        \n\n                \n                    \n                        Resolve function for the promise. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:42\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueOf\n                        \n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:59\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:52\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => this.resolve = resolve);\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise { return this.deferred; }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean { return this.initialized; }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(`open, open-instant`, style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('1.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('1.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// tslint:disable-line: no-unsafe-any\n  get position(): 'start' | 'end' { return this._position; }\n  set position(value: 'start' | 'end') { this._position = value || 'start'; }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-opened') // tslint:disable-line: no-unsafe-any\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { this.toggle(coerceBooleanProperty(value)); }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-expanded') // tslint:disable-line: no-unsafe-any\n  get expanded(): boolean { return this._expanded; }\n  set expanded(value: boolean) { this.toggleExpanded(coerceBooleanProperty(value)); }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // tslint:disable-line: no-unsafe-any\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    }};\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) { return this._measuredWidth; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) { return 0; }\n\n    return this._measuredWidth = width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) { return this._measuredMargin; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    return this._measuredMargin = margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void { this.toggle(true); }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void { this.toggle(false); }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) { return; }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void { this.toggleExpanded(true); }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void { this.toggleExpanded(false); }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) { return; }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // tslint:disable-line: no-unsafe-any\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // tslint:disable-line: no-unsafe-any\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled':\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_position: '' | 'start' | 'end'; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_opened: BooleanInput; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_expanded: BooleanInput; // tslint:disable-line: variable-name member-ordering\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState-1.html":{"url":"classes/InitializationState-1.html","title":"class - InitializationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deferred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Promise(resolve => this.resolve = resolve)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                            \n                        \n\n                \n                    \n                        Promise used to await on. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:33\n                            \n                        \n\n                \n                    \n                        Whether this state is true or false. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolve\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                            \n                        \n\n                \n                    \n                        Resolve function for the promise. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:42\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueOf\n                        \n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:59\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            wait\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:52\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => this.resolve = resolve);\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise { return this.deferred; }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean { return this.initialized; }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(`open, open-instant`, style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('1.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('1.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// tslint:disable-line: no-unsafe-any\n  get position(): 'start' | 'end' { return this._position; }\n  set position(value: 'start' | 'end') { this._position = value || 'start'; }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-opened') // tslint:disable-line: no-unsafe-any\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { this.toggle(coerceBooleanProperty(value)); }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // tslint:disable-line: no-unsafe-any\n  @HostBinding('class.ccf-drawer-expanded') // tslint:disable-line: no-unsafe-any\n  get expanded(): boolean { return this._expanded; }\n  set expanded(value: boolean) { this.toggleExpanded(coerceBooleanProperty(value)); }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // tslint:disable-line: no-unsafe-any\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    }};\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) { return this._measuredWidth; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) { return 0; }\n\n    return this._measuredWidth = width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) { return this._measuredMargin; }\n\n    const element = this.element.nativeElement;\n    if (!element) { return 0; }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    return this._measuredMargin = margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void { this.toggle(true); }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void { this.toggle(false); }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) { return; }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void { this.toggleExpanded(true); }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void { this.toggleExpanded(false); }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) { return; }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // tslint:disable-line: no-unsafe-any\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // tslint:disable-line: no-unsafe-any\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled':\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_position: '' | 'start' | 'end'; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_opened: BooleanInput; // tslint:disable-line: variable-name member-ordering\n  /** Workaround for getter/setter pair not accepting different types. */\n  static ngAcceptInputType_expanded: BooleanInput; // tslint:disable-line: variable-name member-ordering\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JsonOntologyNode.html":{"url":"interfaces/JsonOntologyNode.html","title":"interface - JsonOntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JsonOntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Structure of a single json ontology node.\n\n            \n\n            \n                Extends\n            \n            \n                        IdObject\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                \n                                \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                \n                                \n                                        parent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym\n                                    \n                                \n                                \n                                    \n                                        http://www.geneontology.org/formats/oboInOwl#hasExactSynonym:         ValueObject[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValueObject[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Json synonyms property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        http://www.w3.org/2000/01/rdf-schema#label\n                                    \n                                \n                                \n                                    \n                                        http://www.w3.org/2000/01/rdf-schema#label:         [ValueObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [ValueObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json label property \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         [IdObject]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [IdObject]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json parent property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-left-sidebar\n            \n\n            \n                styleUrls\n                ./left-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./left-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ccf-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LeftSidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        left-sidebar works!\n\n    \n\n    \n                \n                    ./left-sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'left-sidebar works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeftSidebarModule.html":{"url":"modules/LeftSidebarModule.html","title":"module - LeftSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    LeftSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { LeftSidebarComponent } from './left-sidebar.component';\n\n\n@NgModule({\n  declarations: [LeftSidebarComponent],\n  imports: [CommonModule],\n  exports: [LeftSidebarComponent]\n})\nexport class LeftSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResult.html":{"url":"interfaces/ListResult.html","title":"interface - ListResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Result for list of tissues. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        downloadTooltip\n                                \n                                \n                                            Optional\n                                        downloadUrl\n                                \n                                \n                                            Optional\n                                        highlighted\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        resultType\n                                \n                                \n                                            Optional\n                                        resultUrl\n                                \n                                \n                                            Optional\n                                        shortInfo\n                                \n                                \n                                            Optional\n                                        thumbnailUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadTooltip\n                                    \n                                \n                                \n                                    \n                                        downloadTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of data download. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downloadUrl\n                                    \n                                \n                                \n                                    \n                                        downloadUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url for data download. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlighted\n                                    \n                                \n                                \n                                    \n                                        highlighted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the result should be highlighted \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultType\n                                    \n                                \n                                \n                                    \n                                        resultType:     \"external_link\" | \"local_link\" | \"image_viewer\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"external_link\" | \"local_link\" | \"image_viewer\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of result url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultUrl\n                                    \n                                \n                                \n                                    \n                                        resultUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Result url. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortInfo\n                                    \n                                \n                                \n                                    \n                                        shortInfo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Short description. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnailUrl\n                                    \n                                \n                                \n                                    \n                                        thumbnailUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Small icon url. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        payload\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sender of the message. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message-1.html":{"url":"interfaces/Message-1.html","title":"interface - Message-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        payload\n                                \n                                \n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sender of the message. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: unknown, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                    Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                    Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                        Counter used to give each message a unique id. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:81\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:91\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSources\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:101\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            nextMessageId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel-1.html":{"url":"classes/MessageChannel-1.html","title":"class - MessageChannel-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source: unknown, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                    Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                    Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:48\n                            \n                        \n\n                \n                    \n                        Counter used to give each message a unique id. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessages\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:81\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:91\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessagesFromSources\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:101\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            nextMessageId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:110\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:68\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:161\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:151\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:126\n                            \n                        \n\n                \n                    \n                        The message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                        The message listener. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService-1.html":{"url":"injectables/MessageService-1.html","title":"injectable - MessageService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(source: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:161\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:151\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            channel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject>()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:126\n                            \n                        \n\n                \n                    \n                        The message channel. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:128\n                            \n                        \n\n                \n                    \n                        The message listener. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isolated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig-1.html":{"url":"interfaces/MessageServiceConfig-1.html","title":"interface - MessageServiceConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isolated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OMEZarrInfo.html":{"url":"interfaces/OMEZarrInfo.html","title":"interface - OMEZarrInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OMEZarrInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Loader, createZarrLoader, OMEZarrReader, createOMETiffLoader } from '@hubmap/vitessce-image-viewer';\n\nexport enum LoaderType {\n  Zarr = 'zarr',\n  OMEZarr = 'ome-zarr',\n  StaticZarr = 'static',\n\n  Tiff = 'tiff',\n  Tiff2 = 'tiff 2',\n  BFTiff = 'bf tiff',\n  CovidTiff = 'covid tiff',\n  StaticTiff = 'static tiff'\n}\n\n// createLoader info argument types\nexport type ZarrInfo = Parameters[0];\nexport interface OMEZarrInfo {\n  url: string;\n}\nexport interface TiffInfo {\n  url: string;\n  offsets?: string | number[];\n}\n\n// Copied from vitessce-image-viewer demo source\nexport async function createLoader(\n  type: LoaderType,\n  info: ZarrInfo | OMEZarrInfo | TiffInfo\n): Promise {\n  switch (type) {\n    case LoaderType.Zarr:\n    case LoaderType.StaticZarr:\n      return createZarrLoader(info as ZarrInfo);\n\n    case LoaderType.OMEZarr: {\n      const { url } = info as OMEZarrInfo;\n      const reader = await OMEZarrReader.fromUrl(url);\n      const { loader } = await reader.loadOMEZarr();\n      return loader;\n    }\n\n    case LoaderType.Tiff:\n    case LoaderType.Tiff2:\n    case LoaderType.BFTiff:\n    case LoaderType.CovidTiff:\n    case LoaderType.StaticTiff: {\n      const { url, offsets = [] } = info as TiffInfo;\n      return createOMETiffLoader({ url, offsets: await loadOffsets(offsets) });\n    }\n\n    default:\n      throw Error(`Pyramid type (${type}) is not supported`);\n  }\n}\n\nasync function loadOffsets(url: string | number[]): Promise {\n  if (typeof url !== 'string') { return url; }\n  const res = await fetch(url);\n  return res.status !== 404 ? await res.json() as number[] : [];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OldRuiData.html":{"url":"interfaces/OldRuiData.html","title":"interface - OldRuiData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OldRuiData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/hubmap/old-rui-utils.ts\n        \n\n            \n                Description\n            \n            \n                RUI v0.5.0 format \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alignment_datetime\n                                \n                                \n                                        alignment_id\n                                \n                                \n                                        alignment_operator_first_name\n                                \n                                \n                                        alignment_operator_last_name\n                                \n                                \n                                        reference_organ_id\n                                \n                                \n                                        tissue_object_rotation\n                                \n                                \n                                        tissue_object_size\n                                \n                                \n                                        tissue_position_mass_point\n                                \n                                \n                                        tissue_position_vertices\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_datetime\n                                    \n                                \n                                \n                                    \n                                        alignment_datetime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creation time. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_id\n                                    \n                                \n                                \n                                    \n                                        alignment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_operator_first_name\n                                    \n                                \n                                \n                                    \n                                        alignment_operator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creator first name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        alignment_operator_last_name\n                                    \n                                \n                                \n                                    \n                                        alignment_operator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Creator last name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ_id\n                                    \n                                \n                                \n                                    \n                                        reference_organ_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organ reference identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_object_rotation\n                                    \n                                \n                                \n                                    \n                                        tissue_object_rotation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue object rotation. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_object_size\n                                    \n                                \n                                \n                                    \n                                        tissue_object_size:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue object size. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_position_mass_point\n                                    \n                                \n                                \n                                    \n                                        tissue_position_mass_point:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tissue point of mass. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissue_position_vertices\n                                    \n                                \n                                \n                                    \n                                        tissue_position_vertices:     unknown[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Position vertices. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ccf } from '../util/prefixes';\n\n/** RUI v0.5.0 format */\nexport interface OldRuiData {\n  /** Identifier. */\n  alignment_id: string;\n  /** Creator first name. */\n  alignment_operator_first_name: string;\n  /** Creator last name. */\n  alignment_operator_last_name: string;\n  /** Creation time. */\n  alignment_datetime: string;\n  /** Organ reference identifier. */\n  reference_organ_id: string;\n  /** Position vertices. */\n  tissue_position_vertices: unknown[];\n  /** Tissue point of mass. */\n  tissue_position_mass_point: {\n    x: number,\n    y: number,\n    z: number\n  };\n  /** Tissue object rotation. */\n  tissue_object_rotation: {\n    x: number,\n    y: number,\n    z: number\n  };\n  /** Tissue object size. */\n  tissue_object_size: {\n    x: number,\n    y: number,\n    z: number\n  };\n}\n\n/**\n * Fixes old RUI data from VU.\n *\n * @param data The original RUI data\n * @returns The fixed RUI data\n */\nfunction fixOldRuiKidneyData(data: OldRuiData): OldRuiData {\n  return {\n    ...data,\n    tissue_position_mass_point: {\n      x: data.tissue_position_mass_point.x - 60 / 2,\n      y: data.tissue_position_mass_point.y - 100 / 2,\n      z: data.tissue_position_mass_point.z - 60 / 2\n    }\n  };\n}\n\n/**\n * Converts version 0.5.0 RUI data to new JSONLD format.\n * @param data The old data.\n * @param [externalId] An optional label.\n * @param [refOrganId] The organ id.\n * @returns The translated JSONLD data.\n */\nexport function convertOldRuiToJsonLd(data: OldRuiData, label?: string, refOrganId?: string): object {\n  let placementTarget: string | undefined;\n  if (refOrganId) {\n    placementTarget = refOrganId;\n  } else if (data.reference_organ_id === 'uuid-1234-5678') {\n    placementTarget = ccf.x('VHKidney').id;\n  } else if(data.reference_organ_id) {\n    placementTarget = data.reference_organ_id;\n  }\n\n  if (placementTarget?.endsWith('Kidney')) {\n    data = fixOldRuiKidneyData(data);\n  }\n\n  const D = data.tissue_object_size;\n  const R = data.tissue_object_rotation;\n  const T = data.tissue_position_mass_point;\n\n  return {\n    '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n    '@id': 'http://purl.org/ccf/0.5/' + data.alignment_id,\n    '@type': 'SpatialEntity',\n    label: label || undefined,\n    creator: `${data.alignment_operator_first_name} ${data.alignment_operator_last_name}`,\n    creator_first_name: data.alignment_operator_first_name,\n    creator_last_name: data.alignment_operator_last_name,\n    // creator_orcid: data.alignment_operator_orcid,\n    creation_date: data.alignment_datetime,\n    ccf_annotations: [],\n    x_dimension: D.x, y_dimension: D.y, z_dimension: D.z, dimension_units: 'millimeter',\n\n    placement: {\n      '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n      '@id': 'http://purl.org/ccf/0.5/' + data.alignment_id + '_placement',\n      '@type': 'SpatialPlacement',\n      target: placementTarget,\n      placement_date: data.alignment_datetime,\n\n      x_scaling: 1, y_scaling: 1, z_scaling: 1, scaling_units: 'ratio',\n      x_rotation: R.x, y_rotation: R.y, z_rotation: R.z, rotation_order: 'XYZ', rotation_units: 'degree',\n      x_translation: T.x, y_translation: T.y, z_translation: T.z, translation_units: 'millimeter'\n    }\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyExplorationModule.html":{"url":"modules/OntologyExplorationModule.html","title":"module - OntologyExplorationModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyExplorationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-exploration.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from './ontology-search/ontology-search.module';\nimport { OntologySelectionModule } from './ontology-selection/ontology-selection.module';\nimport { OntologyTreeModule } from './ontology-tree/ontology-tree.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule,\n    OntologySelectionModule\n  ],\n  exports: [OntologySearchModule, OntologyTreeModule, OntologySelectionModule]\n})\nexport class OntologyExplorationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyNode.html":{"url":"interfaces/OntologyNode.html","title":"interface - OntologyNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/ontology-node.ts\n        \n\n            \n                Description\n            \n            \n                A node in the ontology tree.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        parent\n                                \n                                \n                                        synonymLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of child identifiers.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier of this node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for this ontology node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The identifier of the parent node. undefined if this is the root node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        synonymLabels\n                                    \n                                \n                                \n                                    \n                                        synonymLabels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Labels for the synonyms of the label of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface OntologyNode {\n  /**\n   * The unique identifier of this node.\n   */\n  id: string;\n\n  /**\n   * Label for this ontology node.\n   */\n  label: string;\n\n  /**\n   * The identifier of the parent node. `undefined` if this is the root node.\n   */\n  parent: string;\n\n  /**\n   * An array of child identifiers.\n   */\n  children: string[];\n\n  /**\n   * Labels for the synonyms of the label of this node.\n   */\n  synonymLabels: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySearchComponent.html":{"url":"components/OntologySearchComponent.html","title":"component - OntologySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n\n\n    \n        Description\n    \n    \n        Componenet for searching the Ontology nodes.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-search\n            \n\n            \n                styleUrls\n                ./ontology-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleteOpen\n                            \n                            \n                                filteredResults$\n                            \n                            \n                                formControl\n                            \n                            \n                                    Public\n                                ontologyService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFormatter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                sortBySynonymResult\n                            \n                            \n                                sortLexically\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologyService: OntologySearchService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologyService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of searchService which provides all the search functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:25\n                            \n                        \n                \n                    \n                        Output event-emitter which emits the id of the OntologyNode whose label was\nselected by the user in the search-results\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFormatter\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFormatter(option?: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:72\n                \n            \n\n\n            \n                \n                    A formatter function to enable different display and selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a part of the search result entry to be displayed as a display value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:54\n                \n            \n\n\n            \n                \n                    on-init lifecycle hook for this component -\ngets the searched value from the view, sends it to the filter function in the OntologyService,\nand gets the search results from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:98\n                \n            \n\n\n            \n                \n                    Callback function triggered when the user selects a value from search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of MatAutocompleteSelectedEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortBySynonymResult\n                        \n                        \n                    \n                \n            \n            \n                \nsortBySynonymResult(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:81\n                \n            \n\n\n            \n                \n                    Sorts by results which have synonyms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 or -1\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortLexically\n                        \n                        \n                    \n                \n            \n            \n                \nsortLexically(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:90\n                \n            \n\n\n            \n                \n                    Sorts lexically\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        lower case value of node label\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoCompleteOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:36\n                            \n                        \n\n                \n                    \n                        Determines if autocomplete is open or close.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredResults$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:41\n                            \n                        \n\n                \n                    \n                        Observable which provides the filtered search results\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('')\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:30\n                            \n                        \n\n                \n                    \n                        Instance of FormControl - tracks the value and validation status of an individual form control\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ontologyService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologySearchService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:47\n                            \n                        \n\n                \n                    \n                        instance of searchService which provides all the search functionality\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { get, sortBy } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../../core/models/ontology-node';\nimport { OntologySearchService, SearchResult } from '../../../core/services/ontology-search/ontology-search.service';\n\n\n/**\n * Componenet for searching the Ontology nodes.\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss']\n})\nexport class OntologySearchComponent implements OnInit {\n  /**\n   * Output event-emitter which emits the id of the OntologyNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() selected = new EventEmitter();\n\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new FormControl('');\n\n\n  /**\n   * Determines if autocomplete is open or close.\n   */\n  autoCompleteOpen = false;\n\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$: Observable;\n\n  /**\n   * Creates an instance of ontology search component.\n   * @param ontologyService instance of searchService which provides all the search functionality\n   */\n  constructor(public ontologyService: OntologySearchService) { }\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit(): void {\n    this.ontologyService.loadOntology();\n    const valueChanges = this.formControl.valueChanges as Observable;\n    this.filteredResults$ = valueChanges.pipe(\n      filter(value => typeof value === 'string'),\n      startWith(''),\n      switchMap(value => this.ontologyService.filter(value)),\n      map(searchResults => sortBy(searchResults, [\n        this.sortBySynonymResult, 'index', this.sortLexically\n      ]))\n    );\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option?: SearchResult): string {\n    return (option?.displayLabel ?? []).join('');\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Sorts lexically\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, ['option', 'value', 'node']) as OntologyNode;\n    if (node) {\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        \n          {{option.displayLabel[0]}}\n          {{option.displayLabel[1]}}\n          {{option.displayLabel[2]}}\n        \n      \n    \n\n    search\n  \n\n\n    \n\n    \n                \n                    ./ontology-search.component.scss\n                \n                .ccf-ontology-search {\n  width: 25rem;\n  margin-top: 1.5rem;\n\n  .field {\n    margin-left: 1.5rem;\n    width: 100%;\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-end {\n      border-radius: 0 500px 500px 0;\n      margin: 0;\n    }\n\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n          height: 3rem;\n\n          input {\n            margin-left: .4rem;\n          }\n        }\n        .mat-form-field-suffix {\n          top: .5rem;\n          border: none;\n        }\n      }\n    }\n\n    .mat-form-field-outline-start {\n      border-radius: 500px 0 0 500px;\n      min-width: 40px;\n\t  }\n  }\n}\n\n::ng-deep .ccf-ontology-search.detached {\n  border: 2px solid;\n  border-top: none;\n  border-radius: 0 0 1rem 1rem;\n  max-height: 18rem;\n\n  .results-container {\n    width: 380px;\n    margin-bottom: 1rem;\n    overflow: auto;\n    max-height: 15rem;\n    scrollbar-width: thin;\n\n    mat-option {\n      height: 1.5rem;\n      width: 380px;\n      \n      .search-term {\n        text-decoration: underline;\n      }\n    }\n  }\n\n}\n\n.autocomplete-open {\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-start {\n      border-radius: 50% 0 0 0;\n      border-bottom: none;\n    }\n\n    .mat-form-field-outline-end {\n      border-radius: 0 1rem 0 0;\n      border-bottom: none;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{option.displayLabel[0]}}          {{option.displayLabel[1]}}          {{option.displayLabel[2]}}                      search  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySearchModule.html":{"url":"modules/OntologySearchModule.html","title":"module - OntologySearchModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OntologySearchComponent } from './ontology-search.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  declarations: [OntologySearchComponent],\n  exports: [OntologySearchComponent]\n})\nexport class OntologySearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologySearchService.html":{"url":"injectables/OntologySearchService.html","title":"injectable - OntologySearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologySearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Injectable OntologySearchService responsible for search result computations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootNode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                formatLabel\n                            \n                            \n                                getChildren\n                            \n                            \n                                getIndexOfMatch\n                            \n                            \n                                loadOntology\n                            \n                            \n                                    Private\n                                lookup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, store: Store, ontologyState: OntologyState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:107\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The http requests service.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global data store.\n\n                                                        \n                                                \n                                                \n                                                        ontologyState\n                                                  \n                                                        \n                                                                        OntologyState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global ontology state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:142\n                \n            \n\n\n            \n                \n                    Searches the ontology with the search-term\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an array of search-results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatLabel\n                        \n                        \n                    \n                \n            \n            \n                \nformatLabel(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:200\n                \n            \n\n\n            \n                \n                    Formats label based on where the search-term was found in the OntologyNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        label or first synonym-label of OntologyNode which has the search-term\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search-term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        an array in the form of [prefix, search-term, suffix]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChildren\n                        \n                        \n                    \n                \n            \n            \n                \ngetChildren(node: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:216\n                \n            \n\n\n            \n                \n                    Fetches the children of an ontology node.\nNote: This can be called without a reference to this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node for which to get children.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OntologyNode[]\n\n                    \n                    \n                        An array of children, empty if the node has no children.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIndexOfMatch\n                        \n                        \n                    \n                \n            \n            \n                \ngetIndexOfMatch(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:190\n                \n            \n\n\n            \n                \n                    Gets index of match in the ontology label\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the provided ontology node label or synonym label\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the searched text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the index of the match in the label\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadOntology\n                        \n                        \n                    \n                \n            \n            \n                \nloadOntology()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:124\n                \n            \n\n\n            \n                \n                    Loads ontology.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lookup(nodes: Immutable[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:154\n                \n            \n\n\n            \n                \n                    looks up ontology nodes and composes search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                Immutable[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ontology nodes\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SearchResult[]\n\n                    \n                    \n                        search results\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootNode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:107\n                            \n                        \n\n                \n                    \n                        Root node in ontology. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Immutable } from '@ngxs-labs/data/typings';\nimport { Store } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { JsonOntologyNode, jsonToOntologyNode } from '../../models/json-ontology';\nimport { OntologyNode } from '../../models/ontology-node';\nimport { OntologyState, OntologyStateModel } from '../../store/ontology/ontology.state';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/** Type of function for getting child nodes from a parent node. */\nexport type GetChildrenFunc = (o: OntologyNode) => OntologyNode[];\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[''] = { parent: '', children: [] } as unknown as OntologyNode;\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[''].children) as string;\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[''];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = {\n    id: 'http://purl.obolibrary.org/obo/UBERON_0013702',\n    label: 'body',\n    parent: '',\n    children: organIds,\n    synonymLabels: []\n  };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /** Root node in ontology. */\n  rootNode: Observable>;\n\n  /**\n   * Creates an instance of ontology search service.\n   *\n   * @param http The http requests service.\n   * @param store The global data store.\n   * @param ontologyState The global ontology state.\n   */\n  constructor(private http: HttpClient, private store: Store, private ontologyState: OntologyState) {\n    this.rootNode = this.ontologyState.rootNode$;\n    this.getChildren = this.getChildren.bind(this) as GetChildrenFunc;\n  }\n\n  /**\n   * Loads ontology.\n   */\n  loadOntology(): void {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => this.ontologyState.setOntology(ontology));\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.ontologyState.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologySelection.html":{"url":"interfaces/OntologySelection.html","title":"interface - OntologySelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologySelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/ontology-selection.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        location\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         OntologyNode | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OntologyNode } from './ontology-node';\n\nexport interface OntologySelection {\n  location: OntologyNode | undefined;\n  id: string;\n  label: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySelectionComponent.html":{"url":"components/OntologySelectionComponent.html","title":"component - OntologySelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OntologySelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n\n\n    \n        Description\n    \n    \n        Ontology selection component that encapsulates ontology search and tree components.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-selection\n            \n\n            \n                styleUrls\n                ./ontology-selection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ontologySearchService\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                occurenceData\n                            \n                            \n                                ontologyFilter\n                            \n                            \n                                termData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologySearchService: OntologySearchService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology selection component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologySearchService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for searching the ontology.\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global state store.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        occurenceData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:28\n                            \n                        \n                \n                    \n                        A record of terms within the current filter.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ontologyFilter\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:40\n                            \n                        \n                \n                    \n                        Input list of selected ontology terms passed down to ontology-tree.\nUsed to change display of ontology tree when selection is made from\noutside the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        termData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:33\n                            \n                        \n                \n                    \n                        A record of terms the app currently has data for.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ontologySelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n                \n                    \n                        Captures and passes along the change in ontologySelections.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(ontologyNode: OntologyNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:61\n                \n            \n\n\n            \n                \n                    Ontology selection event when node is selected from the search results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontologyNode\n                                    \n                                                OntologyNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected ontology node.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ontologySearchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologySearchService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n\n                \n                    \n                        Service for searching the ontology.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tree\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OntologyTreeComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(OntologyTreeComponent, {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:23\n                            \n                        \n\n                \n                    \n                        View child of search component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Output, EventEmitter, Input } from '@angular/core';\nimport { Store } from '@ngxs/store';\n\nimport { OntologyNode } from '../../../core/models/ontology-node';\nimport { OntologySearchService } from '../../../core/services/ontology-search/ontology-search.service';\nimport { OntologyState, OntologyStateModel } from '../../../core/store/ontology/ontology.state';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\nimport { OntologySelection } from '../../../core/models/ontology-selection';\n\n\n/**\n * Ontology selection component that encapsulates ontology search and tree components.\n */\n@Component({\n  selector: 'ccf-ontology-selection',\n  templateUrl: './ontology-selection.component.html',\n  styleUrls: ['./ontology-selection.component.scss']\n})\nexport class OntologySelectionComponent {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree: OntologyTreeComponent;\n\n  /**\n   * A record of terms within the current filter.  To be passed on to ontology-tree\n   */\n  @Input() occurenceData: Record;\n\n  /**\n   * A record of terms the app currently has data for.  To be passed on to ontology-tree\n   */\n  @Input() termData: Record;\n\n  /**\n   * Input list of selected ontology terms passed down to ontology-tree.\n   * Used to change display of ontology tree when selection is made from\n   * outside the component.\n   */\n  @Input() ontologyFilter: string[];\n\n  /**\n   * Captures and passes along the change in ontologySelections.\n   */\n  @Output() ontologySelection = new EventEmitter();\n\n  /**\n   * Creates an instance of ontology selection component.\n   * @param ontologySearchService Service for searching the ontology.\n   * @param store The global state store.\n   */\n  constructor(\n    public ontologySearchService: OntologySearchService,\n    private readonly store: Store\n  ) { }\n\n  /**\n   * Ontology selection event when node is selected from the search results.\n   * @param ontologyNode selected ontology node.\n   */\n  selected(ontologyNode: OntologyNode): void {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    this.tree.expandAndSelect(ontologyNode, node => nodes[node.parent]);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ontology-selection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySelectionModule.html":{"url":"modules/OntologySelectionModule.html","title":"module - OntologySelectionModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySelectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_imports\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { OntologySelectionComponent } from './ontology-selection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule\n  ],\n  declarations: [OntologySelectionComponent],\n  exports: [OntologySelectionComponent],\n})\nexport class OntologySelectionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologyState.html":{"url":"injectables/OntologyState.html","title":"injectable - OntologyState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologyState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Ontology tree state.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                nodes$\n                            \n                            \n                                    Public\n                                    Readonly\n                                rootNode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setOntology\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOntology\n                        \n                        \n                    \n                \n            \n            \n                \nsetOntology(ontology: OntologyStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts:50\n                \n            \n\n\n            \n                \n                    Sets the ontology state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontology\n                                    \n                                                OntologyStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new state.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            nodes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(map(state => Object.values(state.nodes)))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts:39\n                            \n                        \n\n                \n                    \n                        All nodes in the ontology tree. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            rootNode$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(map(state => state.nodes[state.root]))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts:42\n                            \n                        \n\n                \n                    \n                        Root node of the ontology tree. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../models/ontology-node';\n\n\n/**\n * Data model for the ontology state.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n/**\n * Ontology tree state.\n */\n@StateRepository()\n@State({\n  name: 'ontology',\n  defaults: {\n    root: '',\n    nodes: {}\n  }\n})\n@Injectable()\nexport class OntologyState extends NgxsDataRepository {\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.state$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.state$.pipe(map(state => state.nodes[state.root]));\n\n  /**\n   * Sets the ontology state.\n   *\n   * @param ontology The new state.\n   */\n  @DataAction()\n  setOntology(ontology: OntologyStateModel): void {\n    this.ctx.setState(ontology);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologyStateModel.html":{"url":"interfaces/OntologyStateModel.html","title":"interface - OntologyStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OntologyStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/ontology/ontology.state.ts\n        \n\n            \n                Description\n            \n            \n                Data model for the ontology state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        nodes\n                                \n                                \n                                        root\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hash table of nodes.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier of the root node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { OntologyNode } from '../../models/ontology-node';\n\n\n/**\n * Data model for the ontology state.\n */\nexport interface OntologyStateModel {\n  /**\n   * Identifier of the root node.\n   */\n  root: string;\n\n  /**\n   * Hash table of nodes.\n   */\n  nodes: { [id: string]: OntologyNode };\n}\n\n/**\n * Ontology tree state.\n */\n@StateRepository()\n@State({\n  name: 'ontology',\n  defaults: {\n    root: '',\n    nodes: {}\n  }\n})\n@Injectable()\nexport class OntologyState extends NgxsDataRepository {\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.state$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.state$.pipe(map(state => state.nodes[state.root]));\n\n  /**\n   * Sets the ontology state.\n   *\n   * @param ontology The new state.\n   */\n  @DataAction()\n  setOntology(ontology: OntologyStateModel): void {\n    this.ctx.setState(ontology);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyTreeModule.html":{"url":"modules/OntologyTreeModule.html","title":"module - OntologyTreeModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyTreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageState.html":{"url":"injectables/PageState.html","title":"injectable - PageState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                embedded$\n                            \n                            \n                                    Readonly\n                                homeUrl$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            embedded$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('embedded'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            homeUrl$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.state$.pipe(pluck('homeUrl'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { pluck } from 'rxjs/operators';\n\n\n\nexport interface PageStateModel {\n  embedded: boolean;\n  homeUrl: string;\n}\n\n\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    embedded: false,\n    homeUrl: ''\n  }\n})\n@Injectable()\nexport class PageState extends NgxsDataRepository {\n  readonly embedded$ = this.state$.pipe(pluck('embedded'));\n  readonly homeUrl$ = this.state$.pipe(pluck('homeUrl'));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageStateModel.html":{"url":"interfaces/PageStateModel.html","title":"interface - PageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        embedded\n                                \n                                \n                                        homeUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        embedded\n                                    \n                                \n                                \n                                    \n                                        embedded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { pluck } from 'rxjs/operators';\n\n\n\nexport interface PageStateModel {\n  embedded: boolean;\n  homeUrl: string;\n}\n\n\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    embedded: false,\n    homeUrl: ''\n  }\n})\n@Injectable()\nexport class PageState extends NgxsDataRepository {\n  readonly embedded$ = this.state$.pipe(pluck('embedded'));\n  readonly homeUrl$ = this.state$.pipe(pluck('homeUrl'));\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PictureInPictureViewer.html":{"url":"classes/PictureInPictureViewer.html","title":"class - PictureInPictureViewer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PictureInPictureViewer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ImageViewer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _channelConfigs\n                            \n                            \n                                    Private\n                                _height\n                            \n                            \n                                    Private\n                                _loaders\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                deck\n                            \n                            \n                                    Protected\n                                layerConfigs\n                            \n                            \n                                    Protected\n                                layers\n                            \n                            \n                                    Readonly\n                                props\n                            \n                            \n                                    Protected\n                                states\n                            \n                            \n                                    Protected\n                                views\n                            \n                            \n                                    Protected\n                                vivViews\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Async\n                                createVivViews\n                            \n                            \n                                clear\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createLayerConfigs\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                createVivViews\n                            \n                            \n                                finalize\n                            \n                            \n                                    Private\n                                initializeDeck\n                            \n                            \n                                    Private\n                                layerFilter\n                            \n                            \n                                    Private\n                                onViewStateChange\n                            \n                            \n                                    Private\n                                resetChannelConfigs\n                            \n                            \n                                    Async\n                                setSize\n                            \n                            \n                                    Async\n                                setSources\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Async\n                                updateChannelConfigs\n                            \n                            \n                                    Protected\n                                updateDeckProps\n                            \n                            \n                                    Protected\n                                updateLayers\n                            \n                            \n                                    Protected\n                                updateState\n                            \n                            \n                                    Protected\n                                updateViews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: PictureInPictureViewerProps)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        PictureInPictureViewerProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _channelConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:78\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:69\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _loaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Loader[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:74\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:73\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:68\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            deck\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Deck\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:86\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layerConfigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LayerConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:83\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Layer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:82\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            props\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            states\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Record\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:84\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     View[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:81\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            vivViews\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     VivView[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         ImageViewer\n\n                                \n                            \n                        \n                            \n                                    Defined in         ImageViewer:80\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createLayerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLayerConfigs()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:169\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            Async\n                            createVivViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createVivViews()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:168\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finalize\n                        \n                        \n                    \n                \n            \n            \n                \nfinalize()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:110\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeDeck\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeDeck(props)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:212\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Deck\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            layerFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerFilter(undefined: LayerFilterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:244\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LayerFilterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onViewStateChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onViewStateChange(undefined: OnViewStateChangeArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:250\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OnViewStateChangeArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetChannelConfigs()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:231\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize(width: number, height: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:114\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSources(sources: DataSource[])\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:133\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            DataSource[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:171\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateChannelConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChannelConfigs(configs: Record>)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:148\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Record>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateDeckProps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDeckProps(props: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:208\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:185\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(args: ValueOrGenerator | >)\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:195\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                ValueOrGenerator | >\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateViews\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateViews()\n                \n            \n\n\n            \n                \n                    Inherited from         ImageViewer\n\n                \n            \n            \n                \n                        Defined in         ImageViewer:181\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DetailView, OverviewView, OverviewViewNewArgs, VivView } from '@hubmap/vitessce-image-viewer';\n\nimport { ImageViewer, ImageViewerProps, LayerConfig } from './image-viewer';\n\nexport type OverviewArgs = Omit;\nexport interface PictureInPictureViewerProps extends ImageViewerProps {\n  overview: OverviewArgs;\n}\n\nconst OVERVIEW_DEFAULTS: Partial = {\n  margin: 25,\n  scale: 0.15,\n  position: 'bottom-left'\n};\n\nexport class PictureInPictureViewer extends ImageViewer {\n  constructor(props: PictureInPictureViewerProps) {\n    super({\n      ...props,\n      overview: { ...OVERVIEW_DEFAULTS, ...props.overview }\n    });\n  }\n\n  protected async createVivViews(): Promise {\n    const { loaders, width, height, props: { initialViewState, overview } } = this;\n    if (loaders.length === 0) { return []; }\n\n    const detailView = new DetailView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'detail',\n        width,\n        height\n      }\n    });\n\n    const overviewView = new OverviewView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'overview',\n        width,\n        height\n      },\n      loader: loaders[0],\n      ...overview\n    });\n\n    return [detailView, overviewView];\n  }\n\n  protected async createLayerConfigs(): Promise {\n    const { loaders, channelConfigs } = this;\n    if (loaders.length === 0) { return []; }\n\n    const loaderSelection: { channel: string }[] = [];\n    const channelIsOn: boolean[] = [];\n    const colorValues: [number, number, number][] = [];\n    const sliderValues: [number, number][] = [];\n    for (const [key, { active, color, slider }] of Object.entries(channelConfigs)) {\n      loaderSelection.push({ channel: key });\n      channelIsOn.push(active);\n      colorValues.push(color);\n      sliderValues.push(slider);\n    }\n\n    const isRgb = loaders[0].isRgb;\n    return [\n      {\n        loader: this.loaders[0],\n        loaderSelection,\n        channelIsOn: isRgb ? [true, true, true] : channelIsOn,\n        colorValues: isRgb ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]] : colorValues,\n        sliderValues: isRgb ? [[0, 255], [0, 255], [0, 255]] : sliderValues\n      }\n    ];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PictureInPictureViewerProps.html":{"url":"interfaces/PictureInPictureViewerProps.html","title":"interface - PictureInPictureViewerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PictureInPictureViewerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ImageViewerProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        overview\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        overview\n                                    \n                                \n                                \n                                    \n                                        overview:         OverviewArgs\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OverviewArgs\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DetailView, OverviewView, OverviewViewNewArgs, VivView } from '@hubmap/vitessce-image-viewer';\n\nimport { ImageViewer, ImageViewerProps, LayerConfig } from './image-viewer';\n\nexport type OverviewArgs = Omit;\nexport interface PictureInPictureViewerProps extends ImageViewerProps {\n  overview: OverviewArgs;\n}\n\nconst OVERVIEW_DEFAULTS: Partial = {\n  margin: 25,\n  scale: 0.15,\n  position: 'bottom-left'\n};\n\nexport class PictureInPictureViewer extends ImageViewer {\n  constructor(props: PictureInPictureViewerProps) {\n    super({\n      ...props,\n      overview: { ...OVERVIEW_DEFAULTS, ...props.overview }\n    });\n  }\n\n  protected async createVivViews(): Promise {\n    const { loaders, width, height, props: { initialViewState, overview } } = this;\n    if (loaders.length === 0) { return []; }\n\n    const detailView = new DetailView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'detail',\n        width,\n        height\n      }\n    });\n\n    const overviewView = new OverviewView({\n      initialViewState: {\n        ...initialViewState,\n        id: 'overview',\n        width,\n        height\n      },\n      loader: loaders[0],\n      ...overview\n    });\n\n    return [detailView, overviewView];\n  }\n\n  protected async createLayerConfigs(): Promise {\n    const { loaders, channelConfigs } = this;\n    if (loaders.length === 0) { return []; }\n\n    const loaderSelection: { channel: string }[] = [];\n    const channelIsOn: boolean[] = [];\n    const colorValues: [number, number, number][] = [];\n    const sliderValues: [number, number][] = [];\n    for (const [key, { active, color, slider }] of Object.entries(channelConfigs)) {\n      loaderSelection.push({ channel: key });\n      channelIsOn.push(active);\n      colorValues.push(color);\n      sliderValues.push(slider);\n    }\n\n    const isRgb = loaders[0].isRgb;\n    return [\n      {\n        loader: this.loaders[0],\n        loaderSelection,\n        channelIsOn: isRgb ? [true, true, true] : channelIsOn,\n        colorValues: isRgb ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]] : colorValues,\n        sliderValues: isRgb ? [[0, 255], [0, 255], [0, 255]] : sliderValues\n      }\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PureImageViewerLayer.html":{"url":"interfaces/PureImageViewerLayer.html","title":"interface - PureImageViewerLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PureImageViewerLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/image-viewer-layer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        brightness\n                                \n                                \n                                        color\n                                \n                                \n                                        colorScheme\n                                \n                                \n                                        customizedColor\n                                \n                                \n                                        defaultOrder\n                                \n                                \n                                        id\n                                \n                                \n                                        label\n                                \n                                \n                                        selected\n                                \n                                \n                                        selectionOrder\n                                \n                                \n                                        transparency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brightness\n                                    \n                                \n                                \n                                    \n                                        brightness:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                    \n                                \n                                \n                                    \n                                        colorScheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customizedColor\n                                    \n                                \n                                \n                                    \n                                        customizedColor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOrder\n                                    \n                                \n                                \n                                    \n                                        defaultOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionOrder\n                                    \n                                \n                                \n                                    \n                                        selectionOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transparency\n                                    \n                                \n                                \n                                    \n                                        transparency:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ColorScheme } from './color-scheme';\n\nexport interface PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number];\n  transparency: number;\n\n  selected: boolean;\n  customizedColor: boolean;\n  selectionOrder: number;\n  defaultOrder: number;\n}\n\nexport type ImageViewerLayerRequiredArgNames = 'id' | 'colorScheme';\nexport type ImageViewerLayerArgs =\n  Pick &\n  Partial>;\n\nexport class ImageViewerLayer implements PureImageViewerLayer {\n  id: string;\n  label: string;\n\n  colorScheme: ColorScheme;\n  color: string;\n  brightness: [number, number] = [20, 60];\n  transparency = 100;\n\n  selected = false;\n  customizedColor = false;\n  selectionOrder = 0;\n  defaultOrder = -1;\n\n  constructor(data: ImageViewerLayerArgs) {\n    Object.assign(this, {\n      label: data.id,\n      color: data.colorScheme.colors[0]\n    }, data);\n  }\n\n  /**\n   * Dynamically creates a background style based on the layer's color or color scheme\n   */\n  get background(): string {\n    if (this.colorScheme.type === 'discrete') {\n      return this.color;\n    }\n\n    const colors = this.colorScheme.colors;\n    const positions = this.colorScheme.positions;\n\n    let gradient = 'linear-gradient(to right, ';\n    colors.forEach((color, index) => {\n      gradient += `${color} ${positions[index] * 100}%`;\n      if (index  225 ? true : false;\n  }\n\n  /**\n   * Determines whether the color icon is dark enough to require a border (dark mode only)\n   */\n  isDark(): boolean {\n    return this.getBrightness() \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserComponent.html":{"url":"components/ResultsBrowserComponent.html","title":"component - ResultsBrowserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsBrowserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n\n\n    \n        Description\n    \n    \n        ResultsBrowser is the container component in charge of rendering the label and stats of\nthe results as well as handling the virtual scrolling and click emitters of\nResultsBrowserItems.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser\n            \n\n            \n                styleUrls\n                ./results-browser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atScrollBottom\n                            \n                            \n                                selectedResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aggregateData\n                            \n                            \n                                data\n                            \n                            \n                                dataLoading\n                            \n                            \n                                resultLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resultClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aggregateData\n                    \n                \n                \n                    \n                        Type :         AggregateResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:25\n                            \n                        \n                \n                    \n                        Input used to add a list of stats at the top the results browser.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ListResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:20\n                            \n                        \n                \n                    \n                        Input array of items used to generate the list of results in the results browser.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dataLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:35\n                            \n                        \n                \n                    \n                        Whether or not the state is currently loading in data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resultLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:30\n                            \n                        \n                \n                    \n                        Input allowing the title of the result browser to be set outside of the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resultClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:41\n                            \n                        \n                \n                    \n                        Output emitting the result that was clicked on and its relevant information.\nUsed for opening and rendering the result viewer.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onScroll\n                        \n                        \n                    \n                \n            \n            \n                \nonScroll(event: UIEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:59\n                \n            \n\n\n            \n                \n                    Handles the scroll event to detect when scroll is at the bottom.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            UIEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scroll event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            atScrollBottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:47\n                            \n                        \n\n                \n                    \n                        Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\nUsed to determine whether or not to render the gradient at the bottom.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ListResult\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:52\n                            \n                        \n\n                \n                    \n                        Keeps track of the selected result for highlighting\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AggregateResult, ListResult } from 'ccf-database';\n\n\n/**\n * ResultsBrowser is the container component in charge of rendering the label and stats of\n * the results as well as handling the virtual scrolling and click emitters of\n * ResultsBrowserItems.\n */\n@Component({\n  selector: 'ccf-results-browser',\n  templateUrl: './results-browser.component.html',\n  styleUrls: ['./results-browser.component.scss']\n})\nexport class ResultsBrowserComponent {\n\n  /**\n   * Input array of items used to generate the list of results in the results browser.\n   */\n  @Input() data: ListResult[];\n\n  /**\n   * Input used to add a list of stats at the top the results browser.\n   */\n  @Input() aggregateData: AggregateResult[];\n\n  /**\n   * Input allowing the title of the result browser to be set outside of the component.\n   */\n  @Input() resultLabel: string;\n\n  /**\n   * Whether or not the state is currently loading in data.\n   */\n  @Input() dataLoading: boolean;\n\n  /**\n   * Output emitting the result that was clicked on and its relevant information.\n   * Used for opening and rendering the result viewer.\n   */\n  @Output() resultClicked = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\n   * Used to determine whether or not to render the gradient at the bottom.\n   */\n  atScrollBottom = false;\n\n  /**\n   * Keeps track of the selected result for highlighting\n   */\n  selectedResult: ListResult;\n\n  /**\n   * Handles the scroll event to detect when scroll is at the bottom.\n   *\n   * @param event The scroll event.\n   */\n  onScroll(event: UIEvent): void {\n    if (!event.target) {\n      return;\n    }\n\n    const { clientHeight, scrollHeight, scrollTop } = event.target as Element;\n    const diff = scrollHeight - scrollTop - clientHeight;\n    this.atScrollBottom = diff \n    \n\n    \n        \n  \n    {{ resultLabel }}\n    \n      {{stat.count}}\n      {{stat.label}}\n    \n  \n\n  \n    \n      \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./results-browser.component.scss\n                \n                .results-browser-container {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 7rem);\n  padding: 0.75rem 1.5rem 1.5rem 1.5rem;\n\n  .stat-box {\n    margin-bottom: 1.5rem;\n    line-height: 1.25;\n\n    #title {\n      margin-bottom: 0.75rem;\n      font-weight: bold;\n    }\n\n    .stat-row {\n      display: flex;\n      flex-direction: row;\n\n      .stat-value {\n        margin-right: 1rem;\n        width: 5.5rem;\n        text-align: right;\n      }\n    }\n  }\n\n  .results-browser-list {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    overflow-y: scroll;\n    scrollbar-width: thin;\n  }\n\n  .scroll-gradient {\n    position: absolute;\n    height: 9rem;\n    width: 95%;\n    bottom: 0;\n    pointer-events: none;\n\n    &.hidden {\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ resultLabel }}          {{stat.count}}      {{stat.label}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserItemComponent.html":{"url":"components/ResultsBrowserItemComponent.html","title":"component - ResultsBrowserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsBrowserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts\n\n\n    \n        Description\n    \n    \n        Component in charge of rendering the individual result browser items that are\nused in the ResultsBrowserComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser-item\n            \n\n            \n                styleUrls\n                ./results-browser-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openResult\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                openImageViewer\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ListResult\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:19\n                            \n                        \n                \n                    \n                        Input object containing the label, download, click action,\nand image information for the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        openImageViewer\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:24\n                            \n                        \n                \n                    \n                        Output used to pass up the intent to open the ImageViewer\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openResult\n                        \n                        \n                    \n                \n            \n            \n                \nopenResult()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.component.ts:30\n                \n            \n\n\n            \n                \n                    Decided which action to take based on the result's resultType property\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ListResult } from 'ccf-database';\n\n\n/**\n * Component in charge of rendering the individual result browser items that are\n * used in the ResultsBrowserComponent.\n */\n@Component({\n  selector: 'ccf-results-browser-item',\n  templateUrl: './results-browser-item.component.html',\n  styleUrls: ['./results-browser-item.component.scss']\n})\nexport class ResultsBrowserItemComponent {\n  /**\n   * Input object containing the label, download, click action,\n   * and image information for the component.\n   */\n  @Input() data: ListResult;\n\n  /**\n   * Output used to pass up the intent to open the ImageViewer\n   */\n  @Output() openImageViewer = new EventEmitter();\n\n  /**\n   * Decided which action to take based on the result's resultType property\n   * @param result the result which was clicked on\n   */\n  openResult(): void {\n    switch (this.data.resultType) {\n      case ('image_viewer'): {\n        // Open the image-viewer\n        this.openImageViewer.emit();\n        break;\n      }\n      case ('external_link'): {\n        // Open link in new tab\n        window.open(this.data.resultUrl, '_blank');\n        break;\n      }\n      case ('local_link'): {\n        // Open link in current tab\n        window.open(this.data.resultUrl, '_self');\n        break;\n      }\n      default: {\n        // When no resultType is set, image viewer is the default\n        this.openImageViewer.emit();\n        break;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n\n    \n      {{ data.label }}\n      {{ info }}\n    \n  \n\n  \n    \n      cloud_download\n    \n  \n  \n    \n      cloud_download\n    \n  \n\n\n    \n\n    \n                \n                    ./results-browser-item.component.scss\n                \n                @use '~@angular/material/theming' as *;\n\n.result-item {\n    border-top: 1px solid;\n    padding: .5rem;\n    display: flex;\n    flex-direction: row;\n    height: 4rem;\n\n    .result-item-click-area {\n        display: flex;\n        cursor: pointer;\n\n        .result-image {\n            width: 5rem;\n            height: 100%;\n            object-fit: cover;\n        }\n\n        .result-image-placeholder {\n            width: 5rem;\n        }\n\n        .result-description {\n            width: 15rem;\n            font-size: .625rem;\n            margin-left: 1rem;\n            margin-right: 1rem;\n            line-height: 1.25;\n\n            div {\n                width: 10rem;\n            }\n\n            .description-label {\n                font-weight: bold !important;\n            }\n\n            .description-data {\n                text-overflow: ellipsis;\n                overflow: hidden;\n                white-space: nowrap;\n                font-weight: lighter;\n            }\n        }\n    }\n\n    .result-download {\n        width: 1.5rem;\n\n        .download {\n            cursor: pointer;\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ data.label }}      {{ info }}                  cloud_download                  cloud_download      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserItemModule.html":{"url":"modules/ResultsBrowserItemModule.html","title":"module - ResultsBrowserItemModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResultsBrowserItemModule\n\n\n\ncluster_ResultsBrowserItemModule_declarations\n\n\n\ncluster_ResultsBrowserItemModule_exports\n\n\n\n\nResultsBrowserItemComponent\n\nResultsBrowserItemComponent\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule -->\n\nResultsBrowserItemComponent->ResultsBrowserItemModule\n\n\n\n\n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent  -->\n\nResultsBrowserItemModule->ResultsBrowserItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/results-browser-item/results-browser-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResultsBrowserItemComponent } from './results-browser-item.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [ResultsBrowserItemComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [ResultsBrowserItemComponent]\n})\nexport class ResultsBrowserItemModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserModule.html":{"url":"modules/ResultsBrowserModule.html","title":"module - ResultsBrowserModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_imports\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserModule -->\n\nResultsBrowserItemModule->ResultsBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResultsBrowserItemModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResultsBrowserItemModule } from '../results-browser-item/results-browser-item.module';\nimport { ResultsBrowserComponent } from './results-browser.component';\n\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\n\n@NgModule({\n  declarations: [ResultsBrowserComponent],\n  imports: [\n    CommonModule,\n    ResultsBrowserItemModule,\n    ScrollingModule\n  ],\n  exports: [ResultsBrowserComponent]\n})\nexport class ResultsBrowserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RightSidebarComponent.html":{"url":"components/RightSidebarComponent.html","title":"component - RightSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RightSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-right-sidebar\n            \n\n            \n                styleUrls\n                ./right-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./right-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'ccf-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RightSidebarComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./right-sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RightSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RightSidebarModule.html":{"url":"modules/RightSidebarModule.html","title":"module - RightSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    RightSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockSizeInputModule\n                        \n                        \n                            RotationSliderModule\n                        \n                        \n                            SlicesInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BlockSizeInputModule } from '../../shared/components/block-size-input/block-size-input.module';\nimport { RotationSliderModule } from '../../shared/components/rotation-slider/rotation-slider.module';\nimport { SlicesInputModule } from '../../shared/components/slices-input/slices-input.module';\nimport { RightSidebarComponent } from './right-sidebar.component';\n\n\n@NgModule({\n  imports: [CommonModule, BlockSizeInputModule, RotationSliderModule, SlicesInputModule],\n  declarations: [RightSidebarComponent],\n  exports: [RightSidebarComponent]\n})\nexport class RightSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rotation.html":{"url":"interfaces/Rotation.html","title":"interface - Rotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                                \n                                        z\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Output, EventEmitter, Input } from '@angular/core';\n\nexport interface Rotation {\n  x: number;\n  y: number;\n  z: number;\n}\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss']\n})\nexport class RotationSliderComponent {\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation: Rotation = { x: 0, y: 0, z: 0 };\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() rotationChanged = new EventEmitter();\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    const rotationClone = {...this.rotation};\n    rotationClone[axis] = +newRotation;\n    this.rotation = rotationClone;\n    this.rotationChanged.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(): void {\n    const clearedRotation: Rotation = { x: 0, y: 0, z: 0 };\n    this.rotation = clearedRotation;\n    this.rotationChanged.emit(this.rotation);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RotationSliderComponent.html":{"url":"components/RotationSliderComponent.html","title":"component - RotationSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RotationSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n\n\n    \n        Description\n    \n    \n        Component that enables the setting of a Rotation object via either 3 draggable sliders\nor through an Input method.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-rotation-slider\n            \n\n            \n                styleUrls\n                ./rotation-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rotation-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRotation\n                            \n                            \n                                resetRotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotationChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotation\n                    \n                \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : { x: 0, y: 0, z: 0 }\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:22\n                            \n                        \n                \n                    \n                        Input that allows the rotation to be changed from outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rotationChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:27\n                            \n                        \n                \n                    \n                        Output that emits the new rotation whenever it is changed from within the component\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeRotation\n                        \n                        \n                    \n                \n            \n            \n                \nchangeRotation(newRotation: number | string, axis: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:34\n                \n            \n\n\n            \n                \n                    Function that handles updating the rotation and emitting the new value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newRotation\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new value for one of the axis to be set to\n\n                                    \n                                \n                                \n                                    axis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        which axis to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetRotation\n                        \n                        \n                    \n                \n            \n            \n                \nresetRotation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:44\n                \n            \n\n\n            \n                \n                    Function to easily reset the rotations to 0 and emit this change.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Input } from '@angular/core';\n\nexport interface Rotation {\n  x: number;\n  y: number;\n  z: number;\n}\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss']\n})\nexport class RotationSliderComponent {\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation: Rotation = { x: 0, y: 0, z: 0 };\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() rotationChanged = new EventEmitter();\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    const rotationClone = {...this.rotation};\n    rotationClone[axis] = +newRotation;\n    this.rotation = rotationClone;\n    this.rotationChanged.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(): void {\n    const clearedRotation: Rotation = { x: 0, y: 0, z: 0 };\n    this.rotation = clearedRotation;\n    this.rotationChanged.emit(this.rotation);\n  }\n}\n\n    \n\n    \n        \n    \n        Tissue Block Rotation\n        refresh\n    \n\n    \n        \n            X\n            \n                \n            \n            {{ rotation.x }}\n        \n\n        \n            Y\n            \n                \n            \n            {{ rotation.y }}\n        \n\n        \n            Z\n            \n                \n            \n            {{ rotation.z }}\n        \n    \n\n    \n\n    \n                \n                    ./rotation-slider.component.scss\n                \n                .container {\n    padding-bottom: 1.5rem;\n\n    .header {\n        display: flex;\n        justify-content: space-between;\n        margin-top: .75rem;\n        height: 1.5rem;\n\n        .title {\n            font-weight: bold;\n        }\n\n        .reset {\n            color: #9E9E9E;\n\n            &:hover {\n                cursor: pointer;\n            }\n        }\n    }\n\n    .sliders {\n        padding: 0.75rem;\n\n        .slider-row {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            height: 4rem;\n\n            .slider-container {\n                width: 100%;\n                padding-left: 3rem;\n                padding-right: 3rem;\n                padding-bottom: .5rem;\n\n                .slider {\n                    -webkit-appearance: none;\n                    width: 100%;\n                    height: 2px;\n                    border-radius: 5px;\n                    background: #d3d3d3;\n                    outline: none;\n                    opacity: 0.7;\n                    -webkit-transition: .2s;\n                    transition: opacity .2s;\n                }\n\n                .slider:hover {\n                    opacity: 1;\n                }\n\n                .slider::-webkit-slider-thumb {\n                    -webkit-appearance: none;\n                    appearance: none;\n                    width: 15px;\n                    height: 15px;\n                    border-radius: 50%;\n                    background: #4CAF50;\n                    cursor: pointer;\n                }\n\n                .slider::-moz-range-thumb {\n                    width: 15x;\n                    height: 15px;\n                    border-radius: 50%;\n                    background: #4CAF50;\n                    cursor: pointer;\n                }\n            }\n\n            .slider-display {\n                width: 3rem;\n            }\n        }\n    }\n}\n\n.red {\n    color: #D50000;\n\n    .slider {\n        background: #D50000 !important;\n    }\n\n    .slider::-webkit-slider-thumb {\n        background: #D50000 !important;\n    }\n\n    .slider::-moz-range-thumb {\n        background: #D50000 !important;\n    }\n}\n\n.green {\n    color: #00C853;\n\n    .slider {\n        background: #00C853 !important;\n    }\n\n    .slider::-webkit-slider-thumb {\n        background: #00C853 !important;\n    }\n\n    .slider::-moz-range-thumb {\n        background: #00C853 !important;\n    }\n}\n\n.blue {\n    color: #2979ff;\n\n    .slider {\n        background: #2979ff !important;\n    }\n\n    .slider::-webkit-slider-thumb {\n        background: #2979ff !important;\n    }\n\n    .slider::-moz-range-thumb {\n        background: #2979ff !important;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Tissue Block Rotation        refresh                            X                                                    {{ rotation.x }}                            Y                                                    {{ rotation.y }}                            Z                                                    {{ rotation.z }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RotationSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RotationSliderModule.html":{"url":"modules/RotationSliderModule.html","title":"module - RotationSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    RotationSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RotationSliderComponent } from './rotation-slider.component';\n\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [RotationSliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [RotationSliderComponent]\n})\nexport class RotationSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchemeDropdownComponent.html":{"url":"components/SchemeDropdownComponent.html","title":"component - SchemeDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SchemeDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts\n\n\n    \n        Description\n    \n    \n        Scheme dropdown menu (for the Layers section)\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-scheme-dropdown\n            \n\n            \n                styleUrls\n                ./scheme-dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./scheme-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                schemeIdx\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                schemeChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colorScheme\n                            \n                            \n                                schemeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                schemeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colorScheme\n                    \n                \n                \n                    \n                        Type :         ColorScheme\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES[0]\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Current color scheme\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schemeOptions\n                    \n                \n                \n                    \n                        Type :     ColorScheme[]\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_COLOR_SCHEMES\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:18\n                            \n                        \n                \n                    \n                        All scheme options available\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        schemeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Emits ColorSchemeSelection of a selected scheme\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:38\n                \n            \n\n\n            \n                \n                    Filters out scheme options to include only discrete schemes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            schemeChanged\n                        \n                        \n                    \n                \n            \n            \n                \nschemeChanged(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:46\n                \n            \n\n\n            \n                \n                    Updates the current scheme index and emits the currently selected scheme\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemeIdx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.component.ts:33\n                            \n                        \n\n                \n                    \n                        Index of the currently selected scheme\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ColorScheme, DEFAULT_COLOR_SCHEMES } from '../../modules/color-scheme/color-schemes';\n\n/**\n * Scheme dropdown menu (for the Layers section)\n */\n@Component({\n  selector: 'ccf-scheme-dropdown',\n  templateUrl: './scheme-dropdown.component.html',\n  styleUrls: ['./scheme-dropdown.component.scss']\n})\nexport class SchemeDropdownComponent implements OnInit {\n\n  /**\n   * All scheme options available\n   */\n  @Input() schemeOptions: ColorScheme[] = DEFAULT_COLOR_SCHEMES;\n\n  /**\n   * Current color scheme\n   */\n  @Input() colorScheme: ColorScheme = DEFAULT_COLOR_SCHEMES[0];\n\n  /**\n   * Emits ColorSchemeSelection of a selected scheme\n   */\n  @Output() schemeChange = new EventEmitter();\n\n  /**\n   * Index of the currently selected scheme\n   */\n  schemeIdx = 0;\n\n  /**\n   * Filters out scheme options to include only discrete schemes\n   */\n  ngOnInit(): void {\n    this.schemeOptions = this.schemeOptions.filter(scheme => scheme.type === 'discrete');\n    this.schemeChanged(0);\n  }\n\n  /**\n   * Updates the current scheme index and emits the currently selected scheme\n   */\n  schemeChanged(idx: number): void {\n    this.colorScheme = this.schemeOptions[idx];\n    this.schemeIdx = idx;\n    this.schemeChange.emit(this.colorScheme);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./scheme-dropdown.component.scss\n                \n                .container {\n  display: flex;\n  justify-content: flex-end;\n  width: 104%;\n  height: 3rem;\n\n  mat-form-field {\n    width: 9rem;\n\n    ::ng-deep .mat-form-field-wrapper {\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n// Disable label resizing effect\n::ng-deep .mat-form-field-label {\n  transform: none !important;\n}\n\n::ng-deep .scheme-option-panel {\n  box-shadow: 0.4rem 0.4rem 0.8rem 0rem #000000;\n  border-width: 1px;\n  border-style: solid;\n  position: absolute;\n  right: -10rem;\n  top: -1rem;\n  display: flex;\n  flex-direction: column;\n  width: 12rem;\n  height: 9rem;\n\n  mat-option:first-child {\n    margin-top: 0.75rem;\n  }\n  mat-option:last-of-type {\n    margin-bottom: 0.75rem;\n  }\n\n  mat-option {\n    .mat-option-text {\n      display: flex;\n      justify-content: center;\n\n      .mat-radio-checked {\n        .mat-radio-label {\n          .mat-radio-container {\n            .mat-radio-outer-circle {\n              border-width: 0 !important;\n            }\n          }\n        }\n      }\n\n      .scheme-radio-button {\n        .mat-radio-label {\n          .mat-radio-container {\n            width: 1rem;\n            height: 1rem;\n            .mat-radio-outer-circle {\n              width: 1rem;\n              height: 1rem;\n              border-width: 1px; \n              border-style: solid;\n            }\n            .mat-radio-inner-circle {\n              width: 1rem;\n              height: 1rem;\n            }\n          }\n          .mat-radio-label-content {\n            padding-left: 1rem;\n          }\n        }\n\n        .swatch {\n          display: flex;\n          width: 7rem;\n          height: 1rem;\n\n          :hover {\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SchemeDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchemeDropdownModule.html":{"url":"modules/SchemeDropdownModule.html","title":"module - SchemeDropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    SchemeDropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchemeDropdownModule\n\n\n\ncluster_SchemeDropdownModule_declarations\n\n\n\ncluster_SchemeDropdownModule_imports\n\n\n\ncluster_SchemeDropdownModule_exports\n\n\n\n\nSchemeDropdownComponent\n\nSchemeDropdownComponent\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nSchemeDropdownModule -->\n\nSchemeDropdownComponent->SchemeDropdownModule\n\n\n\n\n\nSchemeDropdownComponent \n\nSchemeDropdownComponent \n\nSchemeDropdownComponent  -->\n\nSchemeDropdownModule->SchemeDropdownComponent \n\n\n\n\n\nColorBarModule\n\nColorBarModule\n\nSchemeDropdownModule -->\n\nColorBarModule->SchemeDropdownModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/scheme-dropdown/scheme-dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SchemeDropdownComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ColorBarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SchemeDropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ColorBarModule } from '../../modules/color-scheme/color-bar/color-bar.module';\nimport { SchemeDropdownComponent } from './scheme-dropdown.component';\n\n@NgModule({\n  declarations: [SchemeDropdownComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRadioModule,\n    ColorBarModule\n  ],\n  exports: [SchemeDropdownComponent]\n})\nexport class SchemeDropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n            \n                Description\n            \n            \n                Search result interface type for the search results\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayLabel\n                                \n                                \n                                        index\n                                \n                                \n                                        node\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayLabel\n                                    \n                                \n                                \n                                    \n                                        displayLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label to be displayed in the view \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ensures order of search-results \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:         OntologyNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OntologyNode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    instance of OntologyNode, provides data associated with a search result \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Immutable } from '@ngxs-labs/data/typings';\nimport { Store } from '@ngxs/store';\nimport { at, find, forEach, keyBy, map as loMap, partial } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { JsonOntologyNode, jsonToOntologyNode } from '../../models/json-ontology';\nimport { OntologyNode } from '../../models/ontology-node';\nimport { OntologyState, OntologyStateModel } from '../../store/ontology/ontology.state';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyNode, provides data associated with a search result */\n  node: OntologyNode;\n}\n\n/** Type of function for getting child nodes from a parent node. */\nexport type GetChildrenFunc = (o: OntologyNode) => OntologyNode[];\n\n/**\n * Links all nodes to their parents.\n *\n * @param nodeMap The hash table of nodes.\n */\nexport function linkChildren(nodeMap: { [id: string]: OntologyNode }): void {\n  // Add temporary fake node to simplify logic as root won't need a special case\n  // This is also used later to find the root node\n  nodeMap[''] = { parent: '', children: [] } as unknown as OntologyNode;\n  forEach(nodeMap, ({ id, parent }) => nodeMap[parent].children.push(id));\n}\n\n/**\n * Creates an ontology state.\n *\n * @param nodeMap The node hash table.\n * @returns The ontology state model.\n */\nexport function createModel(nodeMap: { [id: string]: OntologyNode }): OntologyStateModel {\n  const root = find(nodeMap[''].children) as string;\n\n  // Remove fake node inserted in linkChildren\n  delete nodeMap[''];\n\n  return { root, nodes: nodeMap };\n}\n\n/**\n * Creates a new tree with only the specified organs and their subtrees.\n *\n * @param model The full ontology tree.\n * @param organIds The identifiers of the organs to keep.\n * @returns A new ontology tree.\n */\nfunction pruneModel(model: OntologyStateModel, organIds: string[]): OntologyStateModel {\n  const body: OntologyNode = {\n    id: 'http://purl.obolibrary.org/obo/UBERON_0013702',\n    label: 'body',\n    parent: '',\n    children: organIds,\n    synonymLabels: []\n  };\n  const organNodes = at(model.nodes, organIds);\n  const prunedNodes = { [body.id]: body };\n\n  forEach(organNodes, node => node.parent = body.id);\n  forEach(organNodes, node => addSubtree(model.nodes, prunedNodes, node));\n\n  return { root: body.id, nodes: prunedNodes };\n}\n\n/**\n * Adds all subtree nodes to an accumulator object.\n *\n * @param nodes The original tree of nodes.\n * @param acc The accumulated tree of nodes.\n * @param current The node whose subtree should be added.\n */\nexport function addSubtree(\n  nodes: { [id: string]: OntologyNode },\n  acc: { [id: string]: OntologyNode },\n  current: OntologyNode\n): void {\n  acc[current.id] = current;\n  forEach(current.children, id => addSubtree(nodes, acc, nodes[id]));\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OntologySearchService {\n  /** Root node in ontology. */\n  rootNode: Observable>;\n\n  /**\n   * Creates an instance of ontology search service.\n   *\n   * @param http The http requests service.\n   * @param store The global data store.\n   * @param ontologyState The global ontology state.\n   */\n  constructor(private http: HttpClient, private store: Store, private ontologyState: OntologyState) {\n    this.rootNode = this.ontologyState.rootNode$;\n    this.getChildren = this.getChildren.bind(this) as GetChildrenFunc;\n  }\n\n  /**\n   * Loads ontology.\n   */\n  loadOntology(): void {\n    const jsonOntology = this.http.get(environment.ontologyUrl, { responseType: 'json' });\n    const model = jsonOntology.pipe(\n      map(ontology => loMap(ontology, jsonToOntologyNode)),\n      map(nodes => keyBy(nodes, 'id')),\n      tap(linkChildren),\n      map(createModel),\n      map(partial(pruneModel, partial.placeholder, environment.organNodes))\n    );\n\n    model.subscribe(ontology => this.ontologyState.setOntology(ontology));\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.ontologyState.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyNode\n   * @param label label or first synonym-label of OntologyNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.substr(0, index),\n      label.substr(index, searchValue.length),\n      label.substr(index + searchValue.length, label.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  getChildren(node: OntologyNode): OntologyNode[] {\n    const { nodes } = this.store.selectSnapshot(OntologyState);\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchableItem.html":{"url":"interfaces/SearchableItem.html","title":"interface - SearchableItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchableItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/interfaces.ts\n        \n\n            \n                Description\n            \n            \n                Item that can be searched for. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        age\n                                \n                                \n                                            Optional\n                                        bmi\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        ontologyTerms\n                                \n                                \n                                            Optional\n                                        sex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Age. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                    \n                                \n                                \n                                    \n                                        bmi:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    BMI. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ontology terms. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Gender. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AggregateResult {\n  /** Queried field. */\n  label: string;\n  /** Aggregate value. */\n  count: string | number;\n}\n\n/** Result for list of tissues. */\nexport interface ListResult {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ListResult';\n  /** Identifier. */\n  id: string;\n  /** Tissue label. */\n  label: string;\n  /** Short description. */\n  shortInfo?: string[];\n  /** Small icon url. */\n  thumbnailUrl?: string;\n  /** Url for data download. */\n  downloadUrl?: string;\n  /** Description of data download. */\n  downloadTooltip?: string;\n  /** Result url. */\n  resultUrl?: string;\n  /** Type of result url. */\n  resultType?: 'external_link' | 'local_link' | 'image_viewer';\n  /** If the result should be highlighted */\n  highlighted?: boolean;\n}\n\n/** Data for image viewer display. */\nexport interface ImageViewerData {\n  /** Identifier. */\n  '@id': string;\n  /** Type string. */\n  '@type': 'ImageViewerData';\n  /** Identifier. */\n  id: string;\n  /** Image label. */\n  label: string;\n  /** Containing organ name. */\n  organName: string;\n  /** Other metadata. */\n  metadata: { label: string, value: string }[];\n}\n\n/** Item that can be searched for. */\nexport interface SearchableItem {\n  /** Identifier. */\n  id: string;\n  /** Gender. */\n  sex?: 'Male' | 'Female';\n  /** Age. */\n  age?: number;\n  /** BMI. */\n  bmi?: number;\n  /** Ontology terms. */\n  ontologyTerms?: Set;\n}\n\n/** Options applied during queries. */\nexport interface Filter {\n  /** Gender. */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range. */\n  ageRange: [number, number];\n  /** BMI range. */\n  bmiRange: [number, number];\n  /** TMC. */\n  tmc: string[];\n  /** Technologies. */\n  technologies: string[];\n  /** Ontology terms. */\n  ontologyTerms: string[];\n  /** Entities to be highlighted */\n  highlightedEntities?: string[];\n  /** Whether it has a spatial entity. */\n  hasSpatialEntity?: boolean;\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** Backend query interface. */\nexport interface DataSource {\n  /** Query list items. */\n  getListResults(filter?: Filter): Promise;\n  /** Query aggregate items. */\n  getAggregateResults(filter?: Filter): Promise;\n  /** Query a specific image. */\n  getImageViewerData(iri: string): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesData.html":{"url":"interfaces/SlicesData.html","title":"interface - SlicesData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SlicesData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing slices data of the tissue block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        numSlices\n                                \n                                \n                                        thickness\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices in the block \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of each tissue slice \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, EventEmitter, HostListener, Output, ViewChild } from '@angular/core';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesData {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss']\n})\nexport class SlicesInputComponent {\n  /**\n   * Determine if the units are visible on the thickness input\n   */\n  unitsVisible = false;\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  slicesData: SlicesData = {\n    thickness: NaN,\n    numSlices: NaN\n  };\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() valuesChange = new EventEmitter();\n\n  /**\n   * The input element\n   */\n  @ViewChild('thicknessInput', { static: true, read: ElementRef }) inputElement: ElementRef;\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    const inputValue = inputTarget.value;\n    const max = 999;\n    const maxLength = max.toString().length - 1;\n    const newVal = parseInt(inputValue, 10) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlicesInputComponent.html":{"url":"components/SlicesInputComponent.html","title":"component - SlicesInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SlicesInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n\n\n    \n        Description\n    \n    \n        Component for entering data on block slices\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-slices-input\n            \n\n            \n                styleUrls\n                ./slices-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slices-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inputElement\n                            \n                            \n                                slicesData\n                            \n                            \n                                unitsVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshSlices\n                            \n                            \n                                updateSlicesData\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valuesChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valuesChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:38\n                            \n                        \n                \n                    \n                        Emitter for slice data values\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:77\n                \n            \n\n\n            \n                \n                    Listens to document click event\nShows the thickness units when data is entered into the form or when input element is clicked\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshSlices\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshSlices()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:64\n                \n            \n\n\n            \n                \n                    Refreshes all slice data values to empty values\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSlicesData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSlicesData(input: InputEvent, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:50\n                \n            \n\n\n            \n                \n                    Limits the length of the input if needed and updates values when an input changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        InputEvent from the input element which contains the new value\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the dimension to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('thicknessInput', {static: true, read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:43\n                            \n                        \n\n                \n                    \n                        The input element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slicesData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SlicesData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    thickness: NaN,\n    numSlices: NaN\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:30\n                            \n                        \n\n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unitsVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:25\n                            \n                        \n\n                \n                    \n                        Determine if the units are visible on the thickness input\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, HostListener, Output, ViewChild } from '@angular/core';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesData {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss']\n})\nexport class SlicesInputComponent {\n  /**\n   * Determine if the units are visible on the thickness input\n   */\n  unitsVisible = false;\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  slicesData: SlicesData = {\n    thickness: NaN,\n    numSlices: NaN\n  };\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() valuesChange = new EventEmitter();\n\n  /**\n   * The input element\n   */\n  @ViewChild('thicknessInput', { static: true, read: ElementRef }) inputElement: ElementRef;\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    const inputValue = inputTarget.value;\n    const max = 999;\n    const maxLength = max.toString().length - 1;\n    const newVal = parseInt(inputValue, 10) \n    \n\n    \n        \n  \n    Tissue Slices\n    refresh\n  \n  \n    \n      \n        Thickness\n        \n          \n          μm\n        \n      \n    \n    \n      \n        # Slices\n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./slices-input.component.scss\n                \n                \n.slices-input {\n  width: 25rem;\n  margin: 0 1.5rem;\n  display: flex;\n  flex-direction: column;\n\n  .slices-header {\n    font-weight: bold;\n    display: flex;\n    justify-content: space-between;\n    height: 3rem;\n    align-items: center;\n  \n    .slices-refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n    }\n  }\n\n  .slices-input-form {\n    display: flex;\n    margin-bottom: 1.5rem;\n    \n    .form-entry {\n      display: flex;\n      margin-right: 1rem;\n      flex-direction: column;\n      width: 30%;\n\n      .input-container {\n        display: flex;\n        height: 1rem;\n        justify-content: center;\n        \n        &.slices {\n          .form-input {\n            text-align: center;\n            margin-top: 0;\n          }\n        }\n\n        &.thickness {\n          .form-input {\n            text-align: right;\n            width: 2rem;\n            margin-right: .3rem;\n            margin-top: 0;\n          }\n          .input-units {\n            &.hidden {\n              display: none\n            }\n          }\n        }\n      }\n\n      \n      ::ng-deep .mat-form-field-label-wrapper {\n        .mat-form-field-label {\n          display: flex;\n          .form-label {\n            margin: 0 auto;\n          }\n        }\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tissue Slices    refresh                      Thickness                            μm                                    # Slices                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlicesInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SlicesInputModule.html":{"url":"modules/SlicesInputModule.html","title":"module - SlicesInputModule","body":"\n                   \n\n\n\n\n    Modules\n    SlicesInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { SlicesInputComponent } from './slices-input.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatInputModule, MatIconModule],\n  declarations: [SlicesInputComponent],\n  exports: [SlicesInputComponent]\n})\nexport class SlicesInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntity.html":{"url":"interfaces/SpatialEntity.html","title":"interface - SpatialEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                A spatial entity. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        creation_date\n                                \n                                \n                                            Optional\n                                        creator\n                                \n                                \n                                            Optional\n                                        creator_first_name\n                                \n                                \n                                            Optional\n                                        creator_last_name\n                                \n                                \n                                            Optional\n                                        creator_orcid\n                                \n                                \n                                        dimension_units\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        object\n                                \n                                \n                                        x_dimension\n                                \n                                \n                                        y_dimension\n                                \n                                \n                                        z_dimension\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Coloring. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creation date. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator first name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator last name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_orcid\n                                    \n                                \n                                \n                                    \n                                        creator_orcid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units dimensions are in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    IRI of the Entity this Spatial Entity represents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Entity label. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Data references. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z-dimension. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReference.html":{"url":"interfaces/SpatialObjectReference.html","title":"interface - SpatialObjectReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialObjectReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                A reference to a spatial object. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        file\n                                \n                                \n                                        file_format\n                                \n                                \n                                            Optional\n                                        file_subpath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data file name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data format. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_subpath\n                                    \n                                \n                                \n                                    \n                                        file_subpath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    File subpath. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacement.html":{"url":"interfaces/SpatialPlacement.html","title":"interface - SpatialPlacement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialPlacement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/spatial-types.ts\n        \n\n            \n                Description\n            \n            \n                Object describing the placement of an entity. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                        placement_date\n                                \n                                \n                                            Optional\n                                        rotation_order\n                                \n                                \n                                        rotation_units\n                                \n                                \n                                        scaling_units\n                                \n                                \n                                        source\n                                \n                                \n                                        target\n                                \n                                \n                                        translation_units\n                                \n                                \n                                            Optional\n                                        w_rotation\n                                \n                                \n                                        x_rotation\n                                \n                                \n                                        x_scaling\n                                \n                                \n                                        x_translation\n                                \n                                \n                                        y_rotation\n                                \n                                \n                                        y_scaling\n                                \n                                \n                                        y_translation\n                                \n                                \n                                        z_rotation\n                                \n                                \n                                        z_scaling\n                                \n                                \n                                        z_translation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifier. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Type name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Date placement was made. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_order\n                                    \n                                \n                                \n                                    \n                                        rotation_order:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Order rotations should be applied in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units rotation is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units scaling is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     SpatialEntity | SpatialObjectReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialEntity | SpatialObjectReference\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Source entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         SpatialEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialEntity\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Target entity. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Units translation is expressed in. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        w_rotation\n                                    \n                                \n                                \n                                    \n                                        w_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Rotation in w-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in x-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in y-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rotation in z-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scaling in z-dimension. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Translation in z-dimension. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SpatialObjectReference {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialObjectReference';\n  /** Data file name. */\n  file: string;\n  /** Data format. */\n  file_format: string;\n  /** File subpath. */\n  file_subpath?: string;\n}\n\n/** A spatial entity. */\nexport interface SpatialEntity {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label. */\n  label?: string;\n  /** Creator. */\n  creator?: string;\n  /** Creator first name. */\n  creator_first_name?: string;\n  /** Creator last name. */\n  creator_last_name?: string;\n  /** Creator identifier. */\n  creator_orcid?: string;\n  /** Creation date. */\n  creation_date?: string;\n  /** X-dimension. */\n  x_dimension: number;\n  /** Y-dimension. */\n  y_dimension: number;\n  /** Z-dimension. */\n  z_dimension: number;\n  /** Units dimensions are in. */\n  dimension_units: string;\n  /** Data references. */\n  object?: SpatialObjectReference;\n\n  /** Coloring. */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity. */\nexport interface SpatialPlacement {\n  /** Identifier. */\n  '@id': string;\n  /** Type name. */\n  '@type': 'SpatialPlacement';\n  /** Source entity. */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity. */\n  target: SpatialEntity;\n\n  /** Date placement was made. */\n  placement_date: string;\n  /** Scaling in x-dimension. */\n  x_scaling: number;\n  /** Scaling in y-dimension. */\n  y_scaling: number;\n  /** Scaling in z-dimension. */\n  z_scaling: number;\n  /** Units scaling is expressed in. */\n  scaling_units: string;\n\n  /** Rotation in x-dimension. */\n  x_rotation: number;\n  /** Rotation in y-dimension. */\n  y_rotation: number;\n  /** Rotation in z-dimension. */\n  z_rotation: number;\n  /** Rotation in w-dimension. */\n  w_rotation?: number;\n  /** Order rotations should be applied in. */\n  rotation_order?: string;\n  /** Units rotation is expressed in. */\n  rotation_units: string;\n\n  /** Translation in x-dimension. */\n  x_translation: number;\n  /** Translation in y-dimension. */\n  y_translation: number;\n  /** Translation in z-dimension. */\n  z_translation: number;\n  /** Units translation is expressed in. */\n  translation_units: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _lighting\n                                \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        scenegraph\n                                \n                                \n                                            Optional\n                                        scenegraphNode\n                                \n                                \n                                        tooltip\n                                \n                                \n                                        transformMatrix\n                                \n                                \n                                            Optional\n                                        unpickable\n                                \n                                \n                                            Optional\n                                        wireframe\n                                \n                                \n                                            Optional\n                                        zoomBasedOpacity\n                                \n                                \n                                            Optional\n                                        zoomToOnLoad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { load, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { CubeGeometry } from '@luma.gl/core';\nimport { ScenegraphNode } from '@luma.gl/experimental';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { doCollisions } from './spatial-scene-collider';\n\n\n// Programmers Note: had to disable tslint in a few places due to deficient typings.\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\n// tslint:disable: no-unsafe-any\nasync function loadGLTF(model: SpatialSceneNode): Promise {\n  const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n\n  const scenegraphNode = model.scenegraphNode ? gltf.nodes?.find((n) => n.name === model.scenegraphNode) : undefined;\n  if (scenegraphNode) {\n    if (!scenegraphNode.rotation && gltf.scene?.nodes?.length > 0) {\n      scenegraphNode.rotation = gltf.scene.nodes[gltf.scene.nodes.length-1].rotation;\n    }\n    gltf.scene = {\n      id: 'scene-1',\n      name: 'Scene',\n      nodes: [scenegraphNode]\n    };\n    gltf.scenes = [gltf.scene, ...gltf.scenes];\n  }\n  return gltf;\n}\n// tslint:enable: no-unsafe-any\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: {[key: string]: unknown}): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: true,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // tslint:disable-next-line: no-unsafe-any\n        mesh: new CubeGeometry(),\n        wireframe: false,\n        getTransformMatrix: (d) => (d as {transformMatrix: number[][]}).transformMatrix,\n        getColor: (d) => (d as {color: [number, number, number, number]}).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({data: data || [], zoomOpacity: 0.8, doCollisions: false});\n\n    // tslint:disable-next-line: no-unsafe-any\n    registerLoaders([DracoWorkerLoader, GLTFLoader]);\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as {data: SpatialSceneNode[], zoomOpacity: number, doCollisions: boolean};\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return [\n      meshLayer('cubes', cubes, {wireframe: false}),\n      meshLayer('wireframes', wireframes, {wireframe: true, pickable: false}),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          id: 'models-' + model['@id'],\n          opacity: model.zoomBasedOpacity ? state.zoomOpacity : 1.0,\n          pickable: !model.unpickable,\n          coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n          data: [model],\n          scenegraph: model.scenegraphNode ?\n            loadGLTF(model) as Promise :\n            model.scenegraph as unknown as ScenegraphNode,\n          _lighting: model._lighting,  // 'pbr' | undefined\n          getTransformMatrix: model.transformMatrix as unknown as number[][],\n          getColor: model.color || [0, 255, 0, 0.5*255],\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(e: {info: object}): unknown {\n    return e.info;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode-1.html":{"url":"interfaces/SpatialSceneNode-1.html","title":"interface - SpatialSceneNode-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-database/src/lib/ccf-spatial-scene.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _lighting\n                                \n                                \n                                        @id\n                                \n                                \n                                        @type\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                            Optional\n                                        entityId\n                                \n                                \n                                            Optional\n                                        scenegraph\n                                \n                                \n                                            Optional\n                                        scenegraphNode\n                                \n                                \n                                        tooltip\n                                \n                                \n                                        transformMatrix\n                                \n                                \n                                            Optional\n                                        unpickable\n                                \n                                \n                                            Optional\n                                        wireframe\n                                \n                                \n                                            Optional\n                                        zoomBasedOpacity\n                                \n                                \n                                            Optional\n                                        zoomToOnLoad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                    \n                                \n                                \n                                    \n                                        @type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport { getSpatialEntity } from './queries/spatial-result-n3';\nimport { SpatialEntity } from './spatial-types';\nimport { ccf, rui } from './util/prefixes';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': 'SpatialSceneNode';\n  entityId?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  transformMatrix: Matrix4;\n  tooltip: string;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return getSpatialEntity(this.db.store, bodyId);\n  }\n\n  getReferenceOrgans(filter?: Filter): SpatialEntity[] {\n    let organsId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        organsId = ccf.spatial.MaleOrgans.id;\n        break;\n      case 'Female':\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n      case 'Both':\n      default:\n        organsId = ccf.spatial.FemaleOrgans.id;\n        break;\n    }\n    return [getSpatialEntity(this.db.store, organsId)];\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const wholeBody = getSpatialEntity(this.db.store, ccf.spatial.Body.id);\n    const body = this.getReferenceBody(filter);\n    const organs = getSpatialEntity(this.db.store, ccf.spatial.MaleOrgans.id);\n    const store = this.db.store;\n    const terms = filter?.ontologyTerms || [];\n    const hasTerm = {\n      body: terms.indexOf(rui.body.id) === 0,\n      kidney: terms.indexOf(rui.kidney.id) === 0,\n      right_kidney: terms.indexOf(rui.right_kidney.id) === 0,\n      left_kidney: terms.indexOf(rui.left_kidney.id) === 0,\n      spleen: terms.indexOf(rui.spleen.id) === 0,\n    };\n\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      this.getSceneNode(body, wholeBody, {unpickable: true, color: [255, 255, 255, 1*255]}),\n      ...this.getReferenceOrgans(filter).map((organ) =>\n        this.getSceneNode(organ, body, {unpickable: true, _lighting: 'pbr', zoomBasedOpacity: true,  color: [255, 0, 0, 1*255]})\n      ),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.right_kidney, zoomToOnLoad: hasTerm.right_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.kidney || hasTerm.left_kidney, zoomToOnLoad: hasTerm.left_kidney}),\n      this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleen').id), body, {color: [255, 255, 255, 1],\n        unpickable: hasTerm.spleen, zoomToOnLoad: hasTerm.spleen})\n    ];\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHRightKidney').id), wholeBody, {color: [0, 0, 255, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHLeftKidney').id), wholeBody, {color: [255, 0, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC1').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC2').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true}),\n        this.getSceneNode(getSpatialEntity(store, ccf.x('VHSpleenCC3').id), wholeBody, {color: [0, 255, 0, 0.5*255], wireframe: true})\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const highlighted = new Set(filter?.highlightedEntities);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, {\n        color: highlighted.has(entity.entityId as string) ? [10, 10, 229, 0.9*255] : [255, 255, 255, 0.9*255]\n      })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial = {}): SpatialSceneNode | undefined {\n    const has3dObject = source.object && source.object.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4().rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId || undefined,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      } as SpatialSceneNode;\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerOverlayComponent.html":{"url":"components/SpinnerOverlayComponent.html","title":"component - SpinnerOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n\n\n    \n        Description\n    \n    \n        Overlay component that displays a progress spinner and\nan optional text description.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spinner-overlay\n            \n\n            \n                styleUrls\n                ./spinner-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:19\n                            \n                        \n                \n                    \n                        Whether the overlay is active/showing. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:22\n                            \n                        \n                \n                    \n                        Optional text description displayed alongside the spinner. \n\n                    \n                \n            \n        \n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-spinner-overlay'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Overlay component that displays a progress spinner and\n * an optional text description.\n */\n@Component({\n  selector: 'ccf-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerOverlayComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spinner-overlay';\n\n  /** Whether the overlay is active/showing. */\n  @Input() @HostBinding('class.active') active = false;\n\n  /** Optional text description displayed alongside the spinner. */\n  @Input() text: string;\n}\n\n    \n\n    \n        \n{{ text }}\n\n    \n\n    \n                \n                    ./spinner-overlay.component.scss\n                \n                :host {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 4rem);\n  top: 4rem;\n  z-index: 100;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.6s, opacity 0.4s ease-in-out;\n\n  mat-spinner {\n    margin-bottom: 1rem;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out 0.3s;\n  }\n\n  &.active {\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n\n    mat-spinner {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpinnerOverlayModule.html":{"url":"modules/SpinnerOverlayModule.html","title":"module - SpinnerOverlayModule","body":"\n                   \n\n\n\n\n    Modules\n    SpinnerOverlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerOverlayComponent],\n  exports: [SpinnerOverlayComponent]\n})\nexport class SpinnerOverlayModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StageNavComponent.html":{"url":"components/StageNavComponent.html","title":"component - StageNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StageNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n\n\n    \n        Description\n    \n    \n        Component that allows the user to change the viewing angle and rendering mode of the stage.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-stage-nav\n            \n\n            \n                styleUrls\n                ./stage-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stage-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateSide\n                            \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                view3D\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sideChanged\n                            \n                            \n                                view3DChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :         Side\n\n                    \n                \n                \n                    \n                        Default value : 'anterior'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:19\n                            \n                        \n                \n                    \n                        Input that allows changing the current side from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3D\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:24\n                            \n                        \n                \n                    \n                        Input that allows toggling of 3D view on / off from outside the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sideChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:29\n                            \n                        \n                \n                    \n                        Output that emits whenever the current side selection changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3DChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:34\n                            \n                        \n                \n                    \n                        Output that emits whenever the 3D view is toggled on / off\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSide\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSide(selection: Side)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:40\n                \n            \n\n\n            \n                \n                    Handles the updating of the side selection and calling the event emitter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                Side\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new selected side\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateView\n                        \n                        \n                    \n                \n            \n            \n                \nupdateView(selection: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:51\n                \n            \n\n\n            \n                \n                    Handles updating of the boolean that keeps track of current view\nand calling the event emitter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        3D (true) or Register (false)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n\n/** Valid values for side. */\nexport type Side = 'left' | 'right' | 'anterior' | 'posterior';\n\n/**\n * Component that allows the user to change the viewing angle and rendering mode of the stage.\n */\n@Component({\n  selector: 'ccf-stage-nav',\n  templateUrl: './stage-nav.component.html',\n  styleUrls: ['./stage-nav.component.scss']\n})\nexport class StageNavComponent {\n  /**\n   * Input that allows changing the current side from outside the component\n   */\n  @Input() side: Side = 'anterior';\n\n  /**\n   * Input that allows toggling of 3D view on / off from outside the component\n   */\n  @Input() view3D = false;\n\n  /**\n   * Output that emits whenever the current side selection changes\n   */\n  @Output() sideChanged = new EventEmitter();\n\n  /**\n   * Output that emits whenever the 3D view is toggled on / off\n   */\n  @Output() view3DChanged = new EventEmitter();\n\n  /**\n   * Handles the updating of the side selection and calling the event emitter\n   * @param selection the new selected side\n   */\n  updateSide(selection: Side): void {\n    this.side = selection;\n    this.sideChanged.emit(this.side);\n  }\n\n\n  /**\n   * Handles updating of the boolean that keeps track of current view\n   * and calling the event emitter.\n   * @param selection 3D (true) or Register (false)\n   */\n  updateView(selection: boolean): void {\n    this.view3D = selection;\n    this.view3DChanged.emit(this.view3D);\n  }\n}\n\n    \n\n    \n        \n  \n    Left\n    Right\n    Anterior\n    Posterior\n  \n\n  \n    Register\n    \n    \n    3D Preview\n  \n\n\n    \n\n    \n                \n                    ./stage-nav.component.scss\n                \n                .nav-container {\n  height: 4.5rem;\n  margin-right: 1.5rem;\n  padding-left: 1.5rem;\n  display: flex;\n  align-items: center;\n\n  .input-group {\n    height: 1.5rem;\n\n    .nav-input {\n      margin-right: 1.5rem;\n    }\n  }\n\n  .slider-container {\n    padding-bottom: 1.8rem;\n\n    .view-slider {\n      margin-left: 0.75rem;\n      margin-right: 0.75rem;\n    }\n  }\n}\n\n.highlighted {\n  color: #3542b8;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Left    Right    Anterior    Posterior        Register            3D Preview  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StageNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StageNavModule.html":{"url":"modules/StageNavModule.html","title":"module - StageNavModule","body":"\n                   \n\n\n\n\n    Modules\n    StageNavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_exports\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\n\n\nStageNavModule\n\nStageNavModule\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { StageNavComponent } from './stage-nav.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatRadioModule, MatSlideToggleModule],\n  declarations: [StageNavComponent],\n  exports: [StageNavComponent]\n})\nexport class StageNavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { environment } from '../../../environments/environment';\nimport { DataState } from './data/data.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { OntologyState } from './ontology/ontology.state';\nimport { ViewerState } from './viewer/viewer.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  IconRegistryState,\n  DataState,\n  OntologyState,\n  ViewerState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                component\n                            \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                    Private\n                                initializeImpl\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyThemeClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:82\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:37\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:20\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeImpl(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:67\n                \n            \n\n\n            \n                \n                    Implementation of initialize.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The top level component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetTheme\n                        \n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:56\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:46\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:13\n                            \n                        \n\n                \n                    \n                        Top level component on which themes are applied. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:15\n                            \n                        \n\n                \n                    \n                        Default theme class. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:17\n                            \n                        \n\n                \n                    \n                        Currently active theme class. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, Inject, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  /** Top level component on which themes are applied. */\n  private component?: ComponentRef;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const service = component.injector.get(ThemingService);\n    service.initializeImpl(component);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme || '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) { return; }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Implementation of initialize.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  private initializeImpl(component: ComponentRef): void {\n    if (this.component) {\n      throw new Error('Theming service has already been initialized!');\n    }\n\n    this.component = component;\n    this.applyThemeClass(this.theme);\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const component = this.component;\n    if (!cls || !component) { return; }\n\n    const renderer = component.injector.get(Renderer2, null);\n    if (!renderer) { return; }\n\n    const root = component.location.nativeElement as HTMLElement;\n    const overlay = component.injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) { renderer[methodName](overlay, cls); }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService-1.html":{"url":"injectables/ThemingService-1.html","title":"injectable - ThemingService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                component\n                            \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                    Private\n                                initializeImpl\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:23\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyThemeClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:82\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:37\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:20\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeImpl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeImpl(component: ComponentRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:67\n                \n            \n\n\n            \n                \n                    Implementation of initialize.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The top level component.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetTheme\n                        \n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:56\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:46\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:13\n                            \n                        \n\n                \n                    \n                        Top level component on which themes are applied. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:15\n                            \n                        \n\n                \n                    \n                        Default theme class. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:17\n                            \n                        \n\n                \n                    \n                        Currently active theme class. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, Inject, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  /** Top level component on which themes are applied. */\n  private component?: ComponentRef;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const service = component.injector.get(ThemingService);\n    service.initializeImpl(component);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme || '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) { return; }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Implementation of initialize.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  private initializeImpl(component: ComponentRef): void {\n    if (this.component) {\n      throw new Error('Theming service has already been initialized!');\n    }\n\n    this.component = component;\n    this.applyThemeClass(this.theme);\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const component = this.component;\n    if (!cls || !component) { return; }\n\n    const renderer = component.injector.get(Renderer2, null);\n    if (!renderer) { return; }\n\n    const root = component.location.nativeElement as HTMLElement;\n    const overlay = component.injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) { renderer[methodName](overlay, cls); }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TiffInfo.html":{"url":"interfaces/TiffInfo.html","title":"interface - TiffInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TiffInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-image-viewer/src/lib/loader.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        offsets\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offsets\n                                    \n                                \n                                \n                                    \n                                        offsets:     string | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Loader, createZarrLoader, OMEZarrReader, createOMETiffLoader } from '@hubmap/vitessce-image-viewer';\n\nexport enum LoaderType {\n  Zarr = 'zarr',\n  OMEZarr = 'ome-zarr',\n  StaticZarr = 'static',\n\n  Tiff = 'tiff',\n  Tiff2 = 'tiff 2',\n  BFTiff = 'bf tiff',\n  CovidTiff = 'covid tiff',\n  StaticTiff = 'static tiff'\n}\n\n// createLoader info argument types\nexport type ZarrInfo = Parameters[0];\nexport interface OMEZarrInfo {\n  url: string;\n}\nexport interface TiffInfo {\n  url: string;\n  offsets?: string | number[];\n}\n\n// Copied from vitessce-image-viewer demo source\nexport async function createLoader(\n  type: LoaderType,\n  info: ZarrInfo | OMEZarrInfo | TiffInfo\n): Promise {\n  switch (type) {\n    case LoaderType.Zarr:\n    case LoaderType.StaticZarr:\n      return createZarrLoader(info as ZarrInfo);\n\n    case LoaderType.OMEZarr: {\n      const { url } = info as OMEZarrInfo;\n      const reader = await OMEZarrReader.fromUrl(url);\n      const { loader } = await reader.loadOMEZarr();\n      return loader;\n    }\n\n    case LoaderType.Tiff:\n    case LoaderType.Tiff2:\n    case LoaderType.BFTiff:\n    case LoaderType.CovidTiff:\n    case LoaderType.StaticTiff: {\n      const { url, offsets = [] } = info as TiffInfo;\n      return createOMETiffLoader({ url, offsets: await loadOffsets(offsets) });\n    }\n\n    default:\n      throw Error(`Pyramid type (${type}) is not supported`);\n  }\n}\n\nasync function loadOffsets(url: string | number[]): Promise {\n  if (typeof url !== 'string') { return url; }\n  const res = await fetch(url);\n  return res.status !== 404 ? await res.json() as number[] : [];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueData.html":{"url":"interfaces/TissueData.html","title":"interface - TissueData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TissueData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for objects containing tissue block dimensions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                                \n                                        z\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of block \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Height of block \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Depth of block \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface TissueData {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss']\n})\nexport class BlockSizeInputComponent {\n  /**\n   * Values of block dimensions to be emitted\n   */\n  tissueData: TissueData = {\n    x: 10,\n    y: 10,\n    z: 10,\n  };\n\n  /**\n   * Emitter for values\n   */\n  @Output() valuesChange = new EventEmitter();\n\n  /**\n   * Updates values when an input changes\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateTissueData(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    const inputValue = inputTarget.value;\n    this.tissueData = { ...this.tissueData, [key]: +inputValue };\n    this.valuesChange.emit(this.tissueData);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.tissueData = { x: 10, y: 10, z: 10 };\n    this.valuesChange.emit(this.tissueData);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-toggle-button'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether this button is attach to a drawer in position 'end'. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:79\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:59\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:69\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:91\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the owning drawer is opened. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"start\" | \"end\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'start'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:34\n                            \n                        \n\n                \n                    \n                        Position of the owning side drawer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:25\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'keyboard_arrow_right';\n    let collapse = 'keyboard_arrow_left';\n    if (this.position === 'end') { ([expand, collapse] = [collapse, expand]); }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0px 4px 4px 0px;\n  cursor: pointer;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 4px 0px 0px 4px;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  transform: scale(1,2);\n  top: .6rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent-1.html":{"url":"components/ToggleButtonComponent-1.html","title":"component - ToggleButtonComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'ccf-drawer-toggle-button'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                            \n                        \n\n                \n                    \n                        HTML class \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether this button is attach to a drawer in position 'end'. \n\n                    \n                \n\n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMessage\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:79\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:59\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:69\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:91\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            opened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the owning drawer is opened. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"start\" | \"end\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'start'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:34\n                            \n                        \n\n                \n                    \n                        Position of the owning side drawer. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                            \n                        \n\n                \n                    \n                        Subscriptions managed by this component. \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:25\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // tslint:disable-line: no-unsafe-any\n  get classEnd(): boolean { return this.position === 'end'; }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'keyboard_arrow_right';\n    let collapse = 'keyboard_arrow_left';\n    if (this.position === 'end') { ([expand, collapse] = [collapse, expand]); }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) { cdr.markForCheck(); }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0px 4px 4px 0px;\n  cursor: pointer;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 4px 0px 0px 4px;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  transform: scale(1,2);\n  top: .6rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValueObject.html":{"url":"interfaces/ValueObject.html","title":"interface - ValueObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValueObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/json-ontology.ts\n        \n\n            \n                Description\n            \n            \n                Interface containing the single json property '@value' \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        @value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @value\n                                    \n                                \n                                \n                                    \n                                        @value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Json '@value' property \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { flow, map, partial, property } from 'lodash';\n\nimport { OntologyNode } from './ontology-node';\n\n\n/** Interface containing the single json property '@id' */\nexport interface IdObject {\n  /** Json '@id' property */\n  '@id': string;\n}\n\n/** Interface containing the single json property '@value' */\nexport interface ValueObject {\n  /** Json '@value' property */\n  '@value': string;\n}\n\n/**\n * Structure of a single json ontology node.\n */\nexport interface JsonOntologyNode extends IdObject {\n  /** Json parent property */\n  'parent': [IdObject];\n\n  /** Json label property */\n  'http://www.w3.org/2000/01/rdf-schema#label': [ValueObject];\n\n  /** Json synonyms property */\n  'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'?: ValueObject[];\n}\n\n/** Property name of json id field. */\nconst idProperty = '@id';\n/** Function for extracting json id fields. */\nconst idExtractor = property(idProperty);\n\n/** Property name of json value field. */\nconst valueProperty = '@value';\n/** Function for extracting json value fields. */\nconst valueExtractor = property(valueProperty);\n\n/** Property name of json parent field. */\nconst parentProperty = 'parent';\n/** Function for extracting json parent fields. */\nconst parentExtractor = flow(\n  property(parentProperty),\n  property(0),\n  idExtractor\n);\n\n/** Property name of json label field. */\nconst labelProperty = 'http://www.w3.org/2000/01/rdf-schema#label';\n/** Function for extracting json label fields. */\nconst labelExtractor = flow(\n  property(labelProperty),\n  property(0),\n  valueExtractor\n);\n\n/** Property name of json synonyms field. */\nconst synonymsProperty = 'http://www.geneontology.org/formats/oboInOwl#hasExactSynonym';\n/** Function for extracting json synonyms fields. */\nconst synonymsExtractor = flow(\n  property(synonymsProperty),\n  partial string, string[]>(map, partial.placeholder, valueExtractor)\n);\n\n/**\n * Converts a json encoded ontology node to an ontology node.\n *\n * @param json The json encoded node.\n * @returns The resulting ontology node.\n */\nexport function jsonToOntologyNode(json: JsonOntologyNode): OntologyNode {\n  return {\n    id: idExtractor(json),\n    parent: parentExtractor(json) ?? '',\n    children: [],\n    label: labelExtractor(json),\n    synonymLabels: synonymsExtractor(json)\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerComponent.html":{"url":"components/ViewerComponent.html","title":"component - ViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-viewer\n            \n\n            \n                styleUrls\n                ./viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _layers\n                            \n                            \n                                    Private\n                                _sources\n                            \n                            \n                                canvas\n                            \n                            \n                                isDemo\n                            \n                            \n                                    Private\n                                sensor\n                            \n                            \n                                    Private\n                                viewer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                sourcesFromUrls\n                            \n                            \n                                    Private\n                                    Async\n                                updateLayers\n                            \n                            \n                                    Private\n                                    Async\n                                updateSources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layers\n                            \n                            \n                                sources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                channelsChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sources\n                                \n                                \n                                    layers\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(container: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        channelsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:76\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sourcesFromUrls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sourcesFromUrls(urls: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urls\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DataSource[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            updateLayers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            updateSources\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSources()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ImageViewerLayer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _sources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataSource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {read: ElementRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDemo\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sensor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResizeSensor\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageViewer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:81\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sources\n                    \n                \n\n                \n                    \n                        getsources()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:63\n                                \n                            \n\n                \n                    \n                        setsources(urls: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            urls\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        layers\n                    \n                \n\n                \n                    \n                        getlayers()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:73\n                                \n                            \n\n                \n                    \n                        setlayers(layers: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.component.ts:69\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            layers\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { ChannelConfig, DataSource, ImageViewer, LoaderType, PictureInPictureViewer, TiffInfo } from 'ccf-image-viewer';\nimport { ResizeSensor } from 'css-element-queries';\n\nimport { ImageViewerLayer } from '../../../core/models/image-viewer-layer';\n\n\nconst DEMO_SOURCE: DataSource = {\n  type: LoaderType.Tiff,\n  info: {\n    url: 'https://vitessce-demo-data.storage.googleapis.com/test-data/hubmap/pyramid_0.0.2/spraggins.ome.tif'\n  }\n};\n\nfunction hexToRgbTriple(hex: string): [number, number, number] {\n  // tslint:disable: no-bitwise\n  if (hex === undefined || hex.length !== 7) {\n    return [255, 255, 255];\n  }\n\n  const value = Number.parseInt(hex.slice(1), 16) | 0;\n  if (Number.isNaN(value)) {\n    return [255, 255, 255];\n  }\n\n  const red = (value >> 16) & 0xff;\n  const green = (value >> 8) & 0xff;\n  const blue = value & 0xff;\n\n  return [red, green, blue];\n  // tslint:enable: no-bitwise\n}\n\nfunction brightnessToSlider(brightness: [number, number]): [number, number] {\n  const SLIDER_MAX = 2 ** 16 - 1;\n  return [\n    Math.trunc(SLIDER_MAX * brightness[0] / 100),\n    Math.trunc(SLIDER_MAX * brightness[1] / 100)\n  ];\n}\n\n@Component({\n  selector: 'ccf-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewerComponent implements AfterViewInit, OnDestroy {\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set sources(urls: string[]) {\n    this._sources = this.sourcesFromUrls(urls);\n    this.isDemo = false;\n    if (this._sources.length === 0) {\n      this._sources = []; // Disabled showing demo image via [DEMO_SOURCE]\n      this.isDemo = true;\n    }\n\n    this.clear();\n    this.updateSources();\n  }\n  get sources(): string[] {\n    return this._sources.map(source => (source.info as TiffInfo).url);\n  }\n  private _sources: DataSource[] = []; // Disabled showing demo image via [DEMO_SOURCE]\n\n  // tslint:disable-next-line: no-unsafe-any\n  @Input() set layers(layers: ImageViewerLayer[]) {\n    this._layers = layers;\n    this.updateLayers();\n  }\n  get layers(): ImageViewerLayer[] { return this._layers; }\n  private _layers: ImageViewerLayer[] = [];\n\n  @Output() channelsChange = new EventEmitter();\n\n  @ViewChild('canvas', { read: ElementRef }) canvas: ElementRef;\n\n  isDemo = true;\n  private viewer: ImageViewer;\n  private sensor: ResizeSensor;\n\n  constructor(private readonly container: ElementRef) { }\n\n  ngAfterViewInit(): void {\n    const {\n      container: { nativeElement: container },\n      canvas: { nativeElement: element }\n    } = this;\n    const { clientWidth, clientHeight } = element;\n\n    this.viewer = new PictureInPictureViewer({\n      id: 'image-viewer',\n      initialViewState: {\n        zoom: -6,\n        target: [25000, 10000, 0]\n      },\n      canvas: element,\n      width: clientWidth,\n      height: clientHeight,\n      overview: {\n        detailWidth: clientWidth,\n        detailHeight: clientHeight\n      },\n      defaultChannelConfig: {\n        active: false\n      }\n    });\n\n    this.sensor = new ResizeSensor(container, ({ width, height }) => {\n      this.viewer.setSize(width, height);\n    });\n\n    (async () => {\n      await this.updateSources();\n      await this.updateLayers();\n    })();\n  }\n\n  ngOnDestroy(): void {\n    this.sensor.detach();\n    this.viewer.finalize();\n  }\n\n  private async updateSources(): Promise {\n    const { _sources: sources, viewer, channelsChange } = this;\n    if (!viewer) {\n      return;\n    }\n\n    await viewer.setSources(sources);\n\n    const isRgb = viewer.loaders.some((loader: { isRgb: boolean }) => loader.isRgb);\n    channelsChange.emit(!isRgb ? viewer.channelNames : []);\n  }\n\n  private async updateLayers(): Promise {\n    const { layers, viewer } = this;\n    if (!viewer || layers.length === 0) {\n      return;\n    }\n\n    const configs: Record> = layers.reduce((result, layer) => ({\n      ...result,\n      [layer.id]: {\n        active: layer.selected,\n        color: hexToRgbTriple(layer.color),\n        slider: brightnessToSlider(layer.brightness)\n      }\n    }), {});\n\n    await viewer.updateChannelConfigs(configs);\n  }\n\n  private clear(): void {\n    this.viewer?.clear();\n  }\n\n  private sourcesFromUrls(urls: string[]): DataSource[] {\n    return urls.filter(url => !!url).map(url => ({\n      type: LoaderType.Tiff,\n      info: { url }\n    }));\n  }\n}\n\n    \n\n    \n        \n  warning\n  This is a demo image\n\n\n\n    \n\n    \n                \n                    ./viewer.component.scss\n                \n                :host {\n  .demo-warning {\n    position: absolute;\n    left: 0;\n    right: 0;\n    z-index: 1;\n    text-align: center;\n\n    .text {\n      vertical-align: top;\n    }\n  }\n\n  canvas {\n    position: relative !important;\n    width: 100%;\n    height: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  warning  This is a demo image'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ColorBarComponent', 'selector': 'ccf-color-bar'},{'name': 'ColorPickerLauncherComponent', 'selector': 'ccf-color-picker-launcher'},{'name': 'ColorSchemeContentsComponent', 'selector': 'ccf-color-scheme-contents'},{'name': 'ColorSchemePopupComponent', 'selector': 'ccf-color-scheme-popup'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'ImageViewerAccordionComponent', 'selector': 'ccf-image-viewer-accordion'},{'name': 'ImageViewerContentComponent', 'selector': 'ccf-image-viewer-content'},{'name': 'ImageViewerLayersComponent', 'selector': 'ccf-image-viewer-layers'},{'name': 'ImageViewerLegendComponent', 'selector': 'ccf-image-viewer-legend'},{'name': 'ImageViewerPopoverComponent', 'selector': 'ccf-image-viewer-popover'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'ResultsBrowserItemComponent', 'selector': 'ccf-results-browser-item'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SchemeDropdownComponent', 'selector': 'ccf-scheme-dropdown'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewerModule.html":{"url":"modules/ViewerModule.html","title":"module - ViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nViewerComponent\n\nViewerComponent\n\n\n\nViewerModule\n\nViewerModule\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/image-viewer/viewer/viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ViewerComponent } from './viewer.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [ViewerComponent],\n  exports: [ViewerComponent]\n})\nexport class ViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewerState.html":{"url":"injectables/ViewerState.html","title":"injectable - ViewerState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ViewerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsDataEntityCollectionsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                activeLayers$\n                            \n                            \n                                    Readonly\n                                layers$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLayers\n                            \n                            \n                                    Private\n                                getAutoColor\n                            \n                            \n                                setDefaultScheme\n                            \n                            \n                                updateLayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createLayers\n                        \n                        \n                    \n                \n            \n            \n                \ncreateLayers(ids: string[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAutoColor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAutoColor(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDefaultScheme\n                        \n                        \n                    \n                \n            \n            \n                \nsetDefaultScheme(scheme: ColorScheme)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scheme\n                                    \n                                                ColorScheme\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLayer\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLayer(id: string, changes: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changes\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            activeLayers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            layers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts:40\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { EntityUpdate, NgxsEntityCollections } from '@ngxs-labs/data/typings';\nimport { createEntityCollections } from '@ngxs-labs/data/utils';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { DEFAULT_COLOR_SCHEMES } from '../../../modules/color-scheme/color-schemes';\nimport { ColorScheme } from '../../models/color-scheme';\nimport { ImageViewerLayer, PureImageViewerLayer } from '../../models/image-viewer-layer';\n\n\nconst NUM_LAYERS_SELECTED_ON_CREATION = 3;\nconst IMAGE_VIEWER_LAYER_DEFAULTS = {\n  brightness: [2, 31] as [number, number],\n  transparency: 100,\n  customizedColor: false,\n  defaultOrder: -1\n};\n\nexport interface ViewerStateModel extends NgxsEntityCollections {\n  defaultScheme: ColorScheme;\n  autoColorIndex: number;\n  selectionCounter: number;\n}\n\n@StateRepository()\n@State({\n  name: 'viewer',\n  defaults: {\n    ...createEntityCollections(),\n    defaultScheme: DEFAULT_COLOR_SCHEMES[0],\n    autoColorIndex: 0,\n    selectionCounter: 0\n  }\n})\n@Injectable()\nexport class ViewerState extends NgxsDataEntityCollectionsRepository {\n  readonly layers$ = this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  );\n  readonly activeLayers$ = this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  );\n\n  @DataAction()\n  createLayers(ids: string[]): void {\n    const maxSelected = NUM_LAYERS_SELECTED_ON_CREATION;\n    const { defaultScheme } = this.snapshot;\n    const length = ids.length;\n\n    this.removeEntitiesMany(this.ids);\n    this.addEntitiesMany(ids.map((id, index) => ({\n      id,\n      label: id,\n      colorScheme: defaultScheme,\n      color: index ): void {\n    const { autoColorIndex, selectionCounter } = this.snapshot;\n    const layer = this.entities[id];\n    let color = changes.color || layer.color;\n    let defaultOrder = layer.defaultOrder;\n    if (!layer.customizedColor && !changes.customizedColor &&\n        changes.selected && layer.defaultOrder === -1) {\n      color = this.getAutoColor(autoColorIndex);\n      defaultOrder = autoColorIndex;\n      this.ctx.patchState({ autoColorIndex: autoColorIndex + 1 });\n    }\n\n    this.updateEntitiesMany([{\n      id,\n      changes: {\n        ...changes,\n        color,\n        selectionOrder: selectionCounter,\n        defaultOrder\n      }\n    }]);\n    this.ctx.patchState({ selectionCounter: selectionCounter + 1 });\n  }\n\n  @DataAction()\n  setDefaultScheme(scheme: ColorScheme): void {\n    const { entities } = this;\n    const changes: EntityUpdate[] = [];\n    for (const [id, layer] of Object.entries(entities)) {\n      if (!layer.customizedColor) {\n        const index = layer.colorScheme.colors.indexOf(layer.color);\n        changes.push({\n          id,\n          changes: {\n            colorScheme: scheme,\n            color: scheme.colors[index]\n          }\n        });\n      }\n    }\n\n    this.updateEntitiesMany(changes);\n    this.ctx.patchState({ defaultScheme: scheme });\n  }\n\n  private getAutoColor(index: number): string {\n    const { defaultScheme: { colors } } = this.snapshot;\n    const order = [0, 6, 3, 1, 5, 2, 4];\n    return colors[order[index % order.length]];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewerStateModel.html":{"url":"interfaces/ViewerStateModel.html","title":"interface - ViewerStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ViewerStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/viewer/viewer.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgxsEntityCollections\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        autoColorIndex\n                                \n                                \n                                        defaultScheme\n                                \n                                \n                                        selectionCounter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoColorIndex\n                                    \n                                \n                                \n                                    \n                                        autoColorIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultScheme\n                                    \n                                \n                                \n                                    \n                                        defaultScheme:         ColorScheme\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColorScheme\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectionCounter\n                                    \n                                \n                                \n                                    \n                                        selectionCounter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { EntityUpdate, NgxsEntityCollections } from '@ngxs-labs/data/typings';\nimport { createEntityCollections } from '@ngxs-labs/data/utils';\nimport { State } from '@ngxs/store';\nimport { map } from 'rxjs/operators';\n\nimport { DEFAULT_COLOR_SCHEMES } from '../../../modules/color-scheme/color-schemes';\nimport { ColorScheme } from '../../models/color-scheme';\nimport { ImageViewerLayer, PureImageViewerLayer } from '../../models/image-viewer-layer';\n\n\nconst NUM_LAYERS_SELECTED_ON_CREATION = 3;\nconst IMAGE_VIEWER_LAYER_DEFAULTS = {\n  brightness: [2, 31] as [number, number],\n  transparency: 100,\n  customizedColor: false,\n  defaultOrder: -1\n};\n\nexport interface ViewerStateModel extends NgxsEntityCollections {\n  defaultScheme: ColorScheme;\n  autoColorIndex: number;\n  selectionCounter: number;\n}\n\n@StateRepository()\n@State({\n  name: 'viewer',\n  defaults: {\n    ...createEntityCollections(),\n    defaultScheme: DEFAULT_COLOR_SCHEMES[0],\n    autoColorIndex: 0,\n    selectionCounter: 0\n  }\n})\n@Injectable()\nexport class ViewerState extends NgxsDataEntityCollectionsRepository {\n  readonly layers$ = this.entities$.pipe(\n    map(entities => Object.values(entities)),\n    map(layers => layers.map(layer => new ImageViewerLayer(layer)))\n  );\n  readonly activeLayers$ = this.layers$.pipe(\n    map(layers => layers.filter(layer => layer.selected))\n  );\n\n  @DataAction()\n  createLayers(ids: string[]): void {\n    const maxSelected = NUM_LAYERS_SELECTED_ON_CREATION;\n    const { defaultScheme } = this.snapshot;\n    const length = ids.length;\n\n    this.removeEntitiesMany(this.ids);\n    this.addEntitiesMany(ids.map((id, index) => ({\n      id,\n      label: id,\n      colorScheme: defaultScheme,\n      color: index ): void {\n    const { autoColorIndex, selectionCounter } = this.snapshot;\n    const layer = this.entities[id];\n    let color = changes.color || layer.color;\n    let defaultOrder = layer.defaultOrder;\n    if (!layer.customizedColor && !changes.customizedColor &&\n        changes.selected && layer.defaultOrder === -1) {\n      color = this.getAutoColor(autoColorIndex);\n      defaultOrder = autoColorIndex;\n      this.ctx.patchState({ autoColorIndex: autoColorIndex + 1 });\n    }\n\n    this.updateEntitiesMany([{\n      id,\n      changes: {\n        ...changes,\n        color,\n        selectionOrder: selectionCounter,\n        defaultOrder\n      }\n    }]);\n    this.ctx.patchState({ selectionCounter: selectionCounter + 1 });\n  }\n\n  @DataAction()\n  setDefaultScheme(scheme: ColorScheme): void {\n    const { entities } = this;\n    const changes: EntityUpdate[] = [];\n    for (const [id, layer] of Object.entries(entities)) {\n      if (!layer.customizedColor) {\n        const index = layer.colorScheme.colors.indexOf(layer.color);\n        changes.push({\n          id,\n          changes: {\n            colorScheme: scheme,\n            color: scheme.colors[index]\n          }\n        });\n      }\n    }\n\n    this.updateEntitiesMany(changes);\n    this.ctx.patchState({ defaultScheme: scheme });\n  }\n\n  private getAutoColor(index: number): string {\n    const { defaultScheme: { colors } } = this.snapshot;\n    const order = [0, 6, 3, 1, 5, 2, 4];\n    return colors[order[index % order.length]];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) - Exploration User Interface (EUI).\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, gender, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.7\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.7\n        \n            @angular/compiler : ^10.0.7\n        \n            @angular/core : ^10.0.7\n        \n            @angular/forms : ^10.0.7\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.7\n        \n            @angular/platform-browser-dynamic : ^10.0.7\n        \n            @angular/router : ^10.0.7\n        \n            @deck.gl/core : ^8.2.4\n        \n            @deck.gl/geo-layers : ^8.2.4\n        \n            @deck.gl/layers : ^8.2.4\n        \n            @deck.gl/mesh-layers : ^8.2.4\n        \n            @hubmap/vitessce-image-viewer : ^0.3.2\n        \n            @loaders.gl/core : ^2.2.8\n        \n            @loaders.gl/draco : ^2.2.8\n        \n            @loaders.gl/gltf : ^2.2.8\n        \n            @luma.gl/core : ^8.2.0\n        \n            @math.gl/core : ^3.2.2\n        \n            @ngxs-labs/data : ^3.0.6\n        \n            @ngxs/store : ^3.6.2\n        \n            @rdfjs/data-model : ^1.1.2\n        \n            bind-decorator : ^1.0.11\n        \n            cannon-es : ^0.15.1\n        \n            comlink : ^4.3.0\n        \n            css-element-queries : ^1.2.3\n        \n            graphology : ^0.17.1\n        \n            graphology-shortest-path : ^1.3.4\n        \n            jsonld : ^3.1.1\n        \n            lodash : ^4.17.19\n        \n            n3 : ^1.6.1\n        \n            ng5-slider : ^1.2.4\n        \n            quaternion : ^1.1.0\n        \n            quaternion-to-euler : ^0.5.0\n        \n            rdf-literal : ^1.1.1\n        \n            rdfxml-streaming-parser : ^1.3.6\n        \n            react : ^16.13.1\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataQueryState   (projects/.../data.state.ts)\n                        \n                        \n                            LoaderType   (projects/.../loader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n            \n                \n                    \n                        \n                        DataQueryState\n                    \n                \n                    \n                        \n                            Current state of data queries. \n\n                        \n                    \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : running\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    projects/ccf-image-viewer/src/lib/loader.ts\n    \n        \n            \n                \n                    \n                        \n                        LoaderType\n                    \n                \n                        \n                            \n                                 Zarr\n                            \n                        \n                        \n                            \n                                Value : zarr\n                            \n                        \n                        \n                            \n                                 OMEZarr\n                            \n                        \n                        \n                            \n                                Value : ome-zarr\n                            \n                        \n                        \n                            \n                                 StaticZarr\n                            \n                        \n                        \n                            \n                                Value : static\n                            \n                        \n                        \n                            \n                                 Tiff\n                            \n                        \n                        \n                            \n                                Value : tiff\n                            \n                        \n                        \n                            \n                                 Tiff2\n                            \n                        \n                        \n                            \n                                Value : tiff 2\n                            \n                        \n                        \n                            \n                                 BFTiff\n                            \n                        \n                        \n                            \n                                Value : bf tiff\n                            \n                        \n                        \n                            \n                                 CovidTiff\n                            \n                        \n                        \n                            \n                                Value : covid tiff\n                            \n                        \n                        \n                            \n                                 StaticTiff\n                            \n                        \n                        \n                            \n                                Value : static tiff\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - Exploration User Interface (EUI)\n\n\n\n\n\n\n\n\nCCF-EUI: Common Coordinate Framework (CCF) - Exploration User Interface (EUI)\nBackground and More Information\nFor more information, see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nCCF-EUI is developed at the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockSizeInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorBarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorPickerLauncherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorSchemeContentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ColorSchemePopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerAccordionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerLayersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerLegendModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImageViewerPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeftSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyExplorationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySelectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyTreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RightSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RotationSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchemeDropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SlicesInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpinnerOverlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StageNavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\ncluster_BodyModule\n\n\n\ncluster_BodyModule_imports\n\n\n\ncluster_BodyModule_exports\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\ncluster_ColorBarModule\n\n\n\ncluster_ColorBarModule_declarations\n\n\n\ncluster_ColorBarModule_exports\n\n\n\ncluster_ColorPickerLauncherModule\n\n\n\ncluster_ColorPickerLauncherModule_declarations\n\n\n\ncluster_ColorPickerLauncherModule_imports\n\n\n\ncluster_ColorPickerLauncherModule_exports\n\n\n\ncluster_ColorSchemeContentsModule\n\n\n\ncluster_ColorSchemeContentsModule_declarations\n\n\n\ncluster_ColorSchemeContentsModule_exports\n\n\n\ncluster_ColorSchemePopupModule\n\n\n\ncluster_ColorSchemePopupModule_declarations\n\n\n\ncluster_ColorSchemePopupModule_exports\n\n\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_ImageViewerAccordionModule\n\n\n\ncluster_ImageViewerAccordionModule_declarations\n\n\n\ncluster_ImageViewerAccordionModule_imports\n\n\n\ncluster_ImageViewerAccordionModule_exports\n\n\n\ncluster_ImageViewerContentModule\n\n\n\ncluster_ImageViewerContentModule_declarations\n\n\n\ncluster_ImageViewerContentModule_exports\n\n\n\ncluster_ImageViewerLayersModule\n\n\n\ncluster_ImageViewerLayersModule_declarations\n\n\n\ncluster_ImageViewerLayersModule_imports\n\n\n\ncluster_ImageViewerLayersModule_exports\n\n\n\ncluster_ImageViewerLegendModule\n\n\n\ncluster_ImageViewerLegendModule_declarations\n\n\n\ncluster_ImageViewerLegendModule_exports\n\n\n\ncluster_ImageViewerModule\n\n\n\ncluster_ImageViewerModule_imports\n\n\n\ncluster_ImageViewerModule_exports\n\n\n\ncluster_ImageViewerPopoverModule\n\n\n\ncluster_ImageViewerPopoverModule_declarations\n\n\n\ncluster_ImageViewerPopoverModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_ResultsBrowserItemModule\n\n\n\ncluster_ResultsBrowserItemModule_declarations\n\n\n\ncluster_ResultsBrowserItemModule_exports\n\n\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_SchemeDropdownModule\n\n\n\ncluster_SchemeDropdownModule_declarations\n\n\n\ncluster_SchemeDropdownModule_exports\n\n\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nBodyModule\n\nBodyModule\n\nAppModule -->\n\nBodyModule->AppModule\n\n\n\n\n\nBodyUiModule \n\nBodyUiModule \n\nBodyUiModule  -->\n\nBodyModule->BodyUiModule \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule\n\nImageViewerPopoverModule -->\n\nDrawerModule->ImageViewerPopoverModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule\n\nColorSchemeContentsModule -->\n\nDualSliderModule->ColorSchemeContentsModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nImageViewerModule\n\nImageViewerModule\n\nAppModule -->\n\nImageViewerModule->AppModule\n\n\n\n\n\nImageViewerContentModule \n\nImageViewerContentModule \n\nImageViewerContentModule  -->\n\nImageViewerModule->ImageViewerContentModule \n\n\n\n\n\nImageViewerLayersModule \n\nImageViewerLayersModule \n\nImageViewerLayersModule  -->\n\nImageViewerModule->ImageViewerLayersModule \n\n\n\n\n\nImageViewerPopoverModule \n\nImageViewerPopoverModule \n\nImageViewerPopoverModule  -->\n\nImageViewerModule->ImageViewerPopoverModule \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nAppModule -->\n\nInfoDialogModule->AppModule\n\n\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyModule -->\n\nBodyUiModule->BodyModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nColorBarComponent\n\nColorBarComponent\n\n\n\nColorBarModule\n\nColorBarModule\n\nColorBarModule -->\n\nColorBarComponent->ColorBarModule\n\n\n\n\n\nColorBarComponent \n\nColorBarComponent \n\nColorBarComponent  -->\n\nColorBarModule->ColorBarComponent \n\n\n\nColorSchemeContentsModule -->\n\nColorBarModule->ColorSchemeContentsModule\n\n\n\n\n\nSchemeDropdownModule\n\nSchemeDropdownModule\n\nSchemeDropdownModule -->\n\nColorBarModule->SchemeDropdownModule\n\n\n\n\n\nColorPickerLauncherComponent\n\nColorPickerLauncherComponent\n\n\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule\n\nColorPickerLauncherModule -->\n\nColorPickerLauncherComponent->ColorPickerLauncherModule\n\n\n\n\n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent \n\nColorPickerLauncherComponent  -->\n\nColorPickerLauncherModule->ColorPickerLauncherComponent \n\n\n\n\n\nImageViewerLayersModule\n\nImageViewerLayersModule\n\nImageViewerLayersModule -->\n\nColorPickerLauncherModule->ImageViewerLayersModule\n\n\n\n\n\nColorSchemePopupModule\n\nColorSchemePopupModule\n\nColorPickerLauncherModule -->\n\nColorSchemePopupModule->ColorPickerLauncherModule\n\n\n\n\n\nColorSchemePopupComponent \n\nColorSchemePopupComponent \n\nColorSchemePopupComponent  -->\n\nColorSchemePopupModule->ColorSchemePopupComponent \n\n\n\n\n\nColorSchemeContentsComponent\n\nColorSchemeContentsComponent\n\nColorSchemeContentsModule -->\n\nColorSchemeContentsComponent->ColorSchemeContentsModule\n\n\n\nColorSchemePopupModule -->\n\nColorSchemeContentsModule->ColorSchemePopupModule\n\n\n\n\n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent \n\nColorSchemeContentsComponent  -->\n\nColorSchemeContentsModule->ColorSchemeContentsComponent \n\n\n\n\n\nColorSchemePopupComponent\n\nColorSchemePopupComponent\n\nColorSchemePopupModule -->\n\nColorSchemePopupComponent->ColorSchemePopupModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nInfoButtonModule->HeaderModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nImageViewerAccordionComponent\n\nImageViewerAccordionComponent\n\n\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule\n\nImageViewerAccordionModule -->\n\nImageViewerAccordionComponent->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent \n\nImageViewerAccordionComponent  -->\n\nImageViewerAccordionModule->ImageViewerAccordionComponent \n\n\n\n\n\nImageViewerContentModule\n\nImageViewerContentModule\n\nImageViewerContentModule -->\n\nImageViewerAccordionModule->ImageViewerContentModule\n\n\n\nImageViewerModule -->\n\nImageViewerLayersModule->ImageViewerModule\n\n\n\nImageViewerAccordionModule -->\n\nImageViewerLayersModule->ImageViewerAccordionModule\n\n\n\n\n\nImageViewerLayersComponent \n\nImageViewerLayersComponent \n\nImageViewerLayersComponent  -->\n\nImageViewerLayersModule->ImageViewerLayersComponent \n\n\n\n\n\nImageViewerContentComponent\n\nImageViewerContentComponent\n\nImageViewerContentModule -->\n\nImageViewerContentComponent->ImageViewerContentModule\n\n\n\nImageViewerModule -->\n\nImageViewerContentModule->ImageViewerModule\n\n\n\n\n\nImageViewerContentComponent \n\nImageViewerContentComponent \n\nImageViewerContentComponent  -->\n\nImageViewerContentModule->ImageViewerContentComponent \n\n\n\nImageViewerPopoverModule -->\n\nImageViewerContentModule->ImageViewerPopoverModule\n\n\n\n\n\nImageViewerLayersComponent\n\nImageViewerLayersComponent\n\nImageViewerLayersModule -->\n\nImageViewerLayersComponent->ImageViewerLayersModule\n\n\n\nImageViewerLayersModule -->\n\nSchemeDropdownModule->ImageViewerLayersModule\n\n\n\n\n\nSchemeDropdownComponent \n\nSchemeDropdownComponent \n\nSchemeDropdownComponent  -->\n\nSchemeDropdownModule->SchemeDropdownComponent \n\n\n\n\n\nImageViewerLegendComponent\n\nImageViewerLegendComponent\n\n\n\nImageViewerLegendModule\n\nImageViewerLegendModule\n\nImageViewerLegendModule -->\n\nImageViewerLegendComponent->ImageViewerLegendModule\n\n\n\n\n\nImageViewerLegendComponent \n\nImageViewerLegendComponent \n\nImageViewerLegendComponent  -->\n\nImageViewerLegendModule->ImageViewerLegendComponent \n\n\n\nImageViewerPopoverModule -->\n\nImageViewerLegendModule->ImageViewerPopoverModule\n\n\n\nImageViewerModule -->\n\nImageViewerPopoverModule->ImageViewerModule\n\n\n\n\n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent \n\nImageViewerPopoverComponent  -->\n\nImageViewerPopoverModule->ImageViewerPopoverComponent \n\n\n\n\n\nViewerModule\n\nViewerModule\n\nImageViewerModule -->\n\nViewerModule->ImageViewerModule\n\n\n\nImageViewerPopoverModule -->\n\nViewerModule->ImageViewerPopoverModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\nImageViewerPopoverComponent\n\nImageViewerPopoverComponent\n\nImageViewerPopoverModule -->\n\nImageViewerPopoverComponent->ImageViewerPopoverModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nResultsBrowserItemComponent\n\nResultsBrowserItemComponent\n\n\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule\n\nResultsBrowserItemModule -->\n\nResultsBrowserItemComponent->ResultsBrowserItemModule\n\n\n\nResultsBrowserModule -->\n\nResultsBrowserItemModule->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent \n\nResultsBrowserItemComponent  -->\n\nResultsBrowserItemModule->ResultsBrowserItemComponent \n\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nSchemeDropdownComponent\n\nSchemeDropdownComponent\n\nSchemeDropdownModule -->\n\nSchemeDropdownComponent->SchemeDropdownModule\n\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        47 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    44 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    56 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DeckCallbackArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            DeckProps   (projects/.../image-viewer.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            GetChildrenFunc   (projects/.../ontology-search.service.ts)\n                        \n                        \n                            ImageViewerLayerArgs   (projects/.../image-viewer-layer.ts)\n                        \n                        \n                            ImageViewerLayerRequiredArgNames   (projects/.../image-viewer-layer.ts)\n                        \n                        \n                            JsonDict   (projects/.../hubmap-data.ts)\n                        \n                        \n                            LayerConfig   (projects/.../image-viewer.ts)\n                        \n                        \n                            LayerFilterArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            OnViewStateChangeArgs   (projects/.../image-viewer.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            OverviewArgs   (projects/.../picture-in-picture-viewer.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            Side   (projects/.../stage-nav.component.ts)\n                        \n                        \n                            State   (projects/.../image-viewer.ts)\n                        \n                        \n                            ValueOrGenerator   (projects/.../image-viewer.ts)\n                        \n                        \n                            ZarrInfo   (projects/.../loader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container. \n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers. \n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type. \n\n                \n            \n            \n                \n                        GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type. \n\n                \n            \n            \n                \n                        GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type. \n\n                \n            \n            \n                \n                        GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components. \n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container. \n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers. \n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type. \n\n                \n            \n            \n                \n                        GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type. \n\n                \n            \n            \n                \n                        GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type. \n\n                \n            \n            \n                \n                        GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components. \n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/image-viewer.ts\n    \n    \n        \n            \n                \n                    \n                    DeckCallbackArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeckProps\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerConfig\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LayerFilterArgs\n                \n            \n            \n                \n                            DeckCallbackArgs\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OnViewStateChangeArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    State\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValueOrGenerator\n                \n            \n            \n                \n                        T | \n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer. \n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer. \n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state. \n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n    \n    \n        \n            \n                \n                    \n                    GetChildrenFunc\n                \n            \n            \n                \n                    Type of function for getting child nodes from a parent node. \n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/core/models/image-viewer-layer.ts\n    \n    \n        \n            \n                \n                    \n                    ImageViewerLayerArgs\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ImageViewerLayerRequiredArgNames\n                \n            \n            \n                \n                        \"id\" | \"colorScheme\"\n\n                \n            \n        \n    \n    projects/ccf-database/src/lib/hubmap/hubmap-data.ts\n    \n    \n        \n            \n                \n                    \n                    JsonDict\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/picture-in-picture-viewer.ts\n    \n    \n        \n            \n                \n                    \n                    OverviewArgs\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n    \n    \n        \n            \n                \n                    \n                    Side\n                \n            \n            \n                \n                    Valid values for side. \n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\"\n\n                \n            \n        \n    \n    projects/ccf-image-viewer/src/lib/loader.ts\n    \n    \n        \n            \n                \n                    \n                    ZarrInfo\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
